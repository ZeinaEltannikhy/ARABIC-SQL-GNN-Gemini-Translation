{"question": "How many heads of the departments are older than 56 ?", "query": "SELECT count(*) FROM head WHERE age  >  56", "arabic": "كم عدد رؤساء الأقسام الذين تزيد أعمارهم عن 56 سنة؟", "db_id": "department_management"}
{"question": "List the name, born state and age of the heads of departments ordered by age.", "query": "SELECT name ,  born_state ,  age FROM head ORDER BY age", "arabic": "اعرض قائمة بأسماء رؤساء الأقسام، مكان ميلادهم، وأعمارهم مرتبة حسب العمر.", "db_id": "department_management"}
{"question": "List the creation year, name and budget of each department.", "query": "SELECT creation ,  name ,  budget_in_billions FROM department", "arabic": "اعرض قائمة بسنوات الإنشاء، وأسماء وميزانيات كل قسم.", "db_id": "department_management"}
{"question": "What are the maximum and minimum budget of the departments?", "query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department", "arabic": "ما هي أقصى وأدنى ميزانية للأقسام؟", "db_id": "department_management"}
{"question": "What is the average number of employees of the departments whose rank is between 10 and 15?", "query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15", "arabic": "ما هو المتوسط ​​لعدد الموظفين في الأقسام الذين يحتلون المرتبة بين 10 و 15؟", "db_id": "department_management"}
{"question": "What are the names of the heads who are born outside the California state?", "query": "SELECT name FROM head WHERE born_state != 'California'", "arabic": "ما هي أسماء رؤساء الأقسام الذين وُلدوا خارج ولاية كاليفورنيا؟", "db_id": "department_management"}
{"question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?", "query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'", "arabic": "ما هي سنوات الإنشاء المميزة للأقسام التي يديرها أمين وُلد في ولاية 'Alabama'؟", "db_id": "department_management"}
{"question": "What are the names of the states where at least 3 heads were born?", "query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3", "arabic": "ما هي أسماء الولايات حيث وُلد على الأقل 3 رؤساء؟", "db_id": "department_management"}
{"question": "In which year were most departments established?", "query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1", "arabic": "في أي عام تم إنشاء معظم الأقسام؟", "db_id": "department_management"}
{"question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?", "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'", "arabic": "عرض الاسم وعدد الموظفين للأقسام التي يديرها رؤساء تكنولوجيا المعلومات الذين يكون حالتهم التصرفية 'Yes'؟", "db_id": "department_management"}
{"question": "How many acting statuses are there?", "query": "SELECT count(DISTINCT temporary_acting) FROM management", "arabic": "كم عدد حالات التصرف التمثيلي؟", "db_id": "department_management"}
{"question": "How many departments are led by heads who are not mentioned?", "query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);", "arabic": "كم قسمًا يُديره رؤساء لم يُذكر اسماؤهم؟", "db_id": "department_management"}
{"question": "What are the distinct ages of the heads who are acting?", "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'", "arabic": "ما هي الأعمار المميزة لرؤساء الأقسام الذين يؤدون دورًا تمثيليًا؟", "db_id": "department_management"}
{"question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.", "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'", "arabic": "اعرض قائمة بالولايات التي وُلد فيها أمين 'Treasury' وأمين 'Homeland Security'.", "db_id": "department_management"}
{"question": "Which department has more than 1 head at a time? List the id, name and the number of heads.", "query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1", "arabic": "أي قسم لديه أكثر من رئيس في نفس الوقت؟ اعرض قائمة بالرقم التعريفي، الاسم، وعدد الرؤساء.", "db_id": "department_management"}
{"question": "Which head's name has the substring 'Ha'? List the id and name.", "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'", "arabic": "أي رئيس يحمل اسم يحتوي على متغير 'Ha'؟ اعرض قائمة بالرقم التعريفي والاسم.", "db_id": "department_management"}
{"question": "How many farms are there?", "query": "SELECT count(*) FROM farm", "arabic": "كم مزرعة هناك؟", "db_id": "farm"}
{"question": "Count the number of farms.", "query": "SELECT count(*) FROM farm", "arabic": "عد المزارع.", "db_id": "farm"}
{"question": "List the total number of horses on farms in ascending order.", "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC", "arabic": "اعرض قائمة بإجمالي عدد الخيول في المزارع بترتيب تصاعدي.", "db_id": "farm"}
{"question": "What is the total horses record for each farm, sorted ascending?", "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC", "arabic": "ما هو إجمالي سجل الخيول لكل مزرعة، مرتبًا تصاعديًا؟", "db_id": "farm"}
{"question": "What are the hosts of competitions whose theme is not \"Aliens\"?", "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'", "arabic": "ما هي المضيفات للمسابقات التي ليست موضوعها \"Aliens\"؟", "db_id": "farm"}
{"question": "Return the hosts of competitions for which the theme is not Aliens?", "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'", "arabic": "إرجاع مضيفي المسابقات التي ليست موضوعها \"الكائنات الفضائية\"؟", "db_id": "farm"}
{"question": "What are the themes of farm competitions sorted by year in ascending order?", "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC", "arabic": "ما هي المواضيع التي تم تنظيمها في مسابقات المزارع مرتبة حسب السنة بترتيب تصاعدي؟", "db_id": "farm"}
{"question": "Return the themes of farm competitions, sorted by year ascending.", "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC", "arabic": "إرجاع مواضيع مسابقات المزارع، مرتبة حسب السنة بترتيب تصاعدي.", "db_id": "farm"}
{"question": "What is the average number of working horses of farms with more than 5000 total number of horses?", "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000", "arabic": "ما هو المتوسط ​​لعدد الخيول العاملة في المزارع التي تحتوي على أكثر من 5000 خيل في المجموع؟", "db_id": "farm"}
{"question": "Give the average number of working horses on farms with more than 5000 total horses.", "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000", "arabic": "اعرض المتوسط ​​لعدد الخيول العاملة في المزارع التي تحتوي على أكثر من 5000 خيل في المجموع.", "db_id": "farm"}
{"question": "What are the maximum and minimum number of cows across all farms.", "query": "SELECT max(Cows) ,  min(Cows) FROM farm", "arabic": "ما هو الحد الأقصى والحد الأدنى لعدد الأبقار في جميع المزارع.", "db_id": "farm"}
{"question": "Return the maximum and minimum number of cows across all farms.", "query": "SELECT max(Cows) ,  min(Cows) FROM farm", "arabic": "إرجع الحد الأقصى والحد الأدنى لعدد الأبقار في جميع المزارع.", "db_id": "farm"}
{"question": "How many different statuses do cities have?", "query": "SELECT count(DISTINCT Status) FROM city", "arabic": "كم عدد الحالات المختلفة للمدن؟", "db_id": "farm"}
{"question": "Count the number of different statuses.", "query": "SELECT count(DISTINCT Status) FROM city", "arabic": "عدد الحالات المختلفة.", "db_id": "farm"}
{"question": "List official names of cities in descending order of population.", "query": "SELECT Official_Name FROM city ORDER BY Population DESC", "arabic": "اعرض قائمة بالأسماء الرسمية للمدن مرتبة تنازليًا حسب السكان.", "db_id": "farm"}
{"question": "What are the official names of cities, ordered descending by population?", "query": "SELECT Official_Name FROM city ORDER BY Population DESC", "arabic": "ما هي الأسماء الرسمية للمدن، مرتبة تنازليًا حسب السكان؟", "db_id": "farm"}
{"question": "List the official name and status of the city with the largest population.", "query": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1", "arabic": "اعرض قائمة بالاسم الرسمي والحالة للمدينة ذات أعلى سكان.", "db_id": "farm"}
{"question": "What is the official name and status of the city with the most residents?", "query": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1", "arabic": "ما هو الاسم الرسمي والحالة للمدينة ذات أكبر عدد سكان؟", "db_id": "farm"}
{"question": "Show the years and the official names of the host cities of competitions.", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID", "arabic": "اعرض السنوات والأسماء الرسمية لمدن المضيفة للمسابقات.", "db_id": "farm"}
{"question": "Give the years and official names of the cities of each competition.", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID", "arabic": "اعرض السنوات والأسماء الرسمية لمدن كل مسابقة.", "db_id": "farm"}
{"question": "Show the official names of the cities that have hosted more than one competition.", "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1", "arabic": "اعرض الأسماء الرسمية للمدن التي استضافت أكثر من مسابقة واحدة.", "db_id": "farm"}
{"question": "What are the official names of cities that have hosted more than one competition?", "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1", "arabic": "ما هي الأسماء الرسمية للمدن التي استضافت أكثر من مسابقة واحدة؟", "db_id": "farm"}
{"question": "Show the status of the city that has hosted the greatest number of competitions.", "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "اعرض حالة المدينة التي استضافت أكبر عدد من المسابقات.", "db_id": "farm"}
{"question": "What is the status of the city that has hosted the most competitions?", "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي حالة المدينة التي استضافت أكبر عدد من المسابقات؟", "db_id": "farm"}
{"question": "Please show the themes of competitions with host cities having populations larger than 1000.", "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000", "arabic": "اعرض مواضيع المسابقات التي تحمل مدن المضيفة عدد سكان أكبر من 1000.", "db_id": "farm"}
{"question": "What are the themes of competitions that have corresponding host cities with more than 1000 residents?", "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000", "arabic": "ما هي مواضيع المسابقات التي تحمل مدن المضيفة المقابلة لها أكثر من 1000 ساكن؟", "db_id": "farm"}
{"question": "Please show the different statuses of cities and the average population of cities with each status.", "query": "SELECT Status ,  avg(Population) FROM city GROUP BY Status", "arabic": "اعرض الحالات المختلفة للمدن والمتوسط ​​السكاني للمدن ذات كل حالة.", "db_id": "farm"}
{"question": "What are the statuses and average populations of each city?", "query": "SELECT Status ,  avg(Population) FROM city GROUP BY Status", "arabic": "ما هي الحالات والمتوسطات السكانية لكل مدينة؟", "db_id": "farm"}
{"question": "Please show the different statuses, ordered by the number of cities that have each.", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC", "arabic": "اعرض الحالات المختلفة، مرتبة حسب عدد المدن التي تحتل كل حالة.", "db_id": "farm"}
{"question": "Return the different statuses of cities, ascending by frequency.", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC", "arabic": "إرجع الحالات المختلفة للمدن، مرتبة تصاعديًا حسب التكرار.", "db_id": "farm"}
{"question": "List the most common type of Status across cities.", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "اعرض قائمة بأكثر نوع شائع للحالة عبر المدن.", "db_id": "farm"}
{"question": "What is the most common status across all cities?", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي الحالة الأكثر شيوعًا في جميع المدن؟", "db_id": "farm"}
{"question": "List the official names of cities that have not held any competition.", "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)", "arabic": "اعرض قائمة بالأسماء الرسمية للمدن التي لم تستضيف أي مسابقة.", "db_id": "farm"}
{"question": "What are the official names of cities that have not hosted a farm competition?", "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)", "arabic": "ما هي الأسماء الرسمية للمدن التي لم تستضف أي مسابقة زراعية؟", "db_id": "farm"}
{"question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.", "query": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500", "arabic": "اعرض الحالة المشتركة بين المدن التي يزيد عدد سكانها عن 1500 وأقل من 500.", "db_id": "farm"}
{"question": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?", "query": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500", "arabic": "[Translation] ما هي الحالات التي تتناسب مع المدن التي يبلغ سكانها أكثر من 1500 والتي يبلغ سكانها أقل من 500؟", "db_id": "farm"}
{"question": "Find the official names of cities with population bigger than 1500 or smaller than 500.", "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500", "arabic": "[Translation] ابحث عن الأسماء الرسمية للمدن التي يبلغ سكانها أكثر من 1500 أو أقل من 500.", "db_id": "farm"}
{"question": "What are the official names of cities that have population over 1500 or less than 500?", "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500", "arabic": "[Translation] ما هي الأسماء الرسمية للمدن التي يبلغ سكانها أكثر من 1500 أو أقل من 500؟", "db_id": "farm"}
{"question": "Show the census ranking of cities whose status are not \"Village\".", "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"", "arabic": "[Translation] أظهر ترتيب التعداد السكاني للمدن التي ليست حالتها \"Village\".", "db_id": "farm"}
{"question": "What are the census rankings of cities that do not have the status \"Village\"?", "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"", "arabic": "[Translation] ما هي ترتيبات التعداد السكاني للمدن التي ليست لديها حالة \"Village\"؟", "db_id": "farm"}
{"question": "which course has most number of registered students?", "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Translation] أي دورة لديها أكبر عدد من الطلاب المسجلين؟", "db_id": "student_assessment"}
{"question": "What is the name of the course with the most registered students?", "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Translation] ما هو اسم الدورة التي لديها أكبر عدد من الطلاب المسجلين؟", "db_id": "student_assessment"}
{"question": "what is id of students who registered some courses but the least number of courses in these students?", "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1", "arabic": "[Translation] ما هو رقم تعريفى الطلاب الذين سجلوا في بعض الدورات ولكن أقل عدد من الدورات بين هؤلاء الطلاب؟", "db_id": "student_assessment"}
{"question": "What are the ids of the students who registered for some courses but had the least number of courses for all students?", "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين سجلوا في بعض الدورات ولكن كان لديهم أقل عدد من الدورات بين جميع الطلاب؟", "db_id": "student_assessment"}
{"question": "what are the first name and last name of all candidates?", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "arabic": "[Translation] ما هي الأسماء الأولى والأخيرة لجميع المرشحين؟", "db_id": "student_assessment"}
{"question": "What are the first and last names of all the candidates?", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "arabic": "[Translation] ما هي الأسماء الأولى والأخيرة لجميع المرشحين؟", "db_id": "student_assessment"}
{"question": "List the id of students who never attends courses?", "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "arabic": "[Translation] اعرض قائمة بالارقام التعريفية للالطلاب الذين لم يحضروا أي دورات؟", "db_id": "student_assessment"}
{"question": "What are the  ids of every student who has never attended a course?", "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "arabic": "[Translation] ما هي الأرقام التعريفية لجميع الطلاب الذين لم يحضروا أي دورة؟", "db_id": "student_assessment"}
{"question": "List the id of students who attended some courses?", "query": "SELECT student_id FROM student_course_attendance", "arabic": "[Translation] اعرض قائمة بالارقام التعريفية للالطلاب الذين حضروا بعض الدورات؟", "db_id": "student_assessment"}
{"question": "What are the ids of all students who have attended at least one course?", "query": "SELECT student_id FROM student_course_attendance", "arabic": "[Translation] ما هي أرقام تعريفية جميع الطلاب الذين حضروا على الأقل دورة واحدة؟", "db_id": "student_assessment"}
{"question": "What are the ids of all students for courses and what are the names of those courses?", "query": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id", "arabic": "[Translation] ما هي أرقام تعريفية جميع الطلاب للدورات وما هي أسماء تلك الدورات؟", "db_id": "student_assessment"}
{"question": "What is detail of the student who most recently registered course?", "query": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1", "arabic": "[Translation] ما هي تفاصيل الطالب الذي سجل في آخر دورة؟", "db_id": "student_assessment"}
{"question": "What details do we have on the students who registered for courses most recently?", "query": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1", "arabic": "[Translation] ما هي التفاصيل التي لدينا عن الطلاب الذين سجلوا في الدورات مؤخرًا؟", "db_id": "student_assessment"}
{"question": "How many students attend course English?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"", "arabic": "[Translation] كم عدد الطلاب الذين يحضرون دورة اللغة الإنجليزية؟", "db_id": "student_assessment"}
{"question": "How many students are attending English courses?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"", "arabic": "[Translation] كم عدد الطلاب الذين يحضرون دورات اللغة الإنجليزية؟", "db_id": "student_assessment"}
{"question": "How many courses do the student whose id is 171 attend?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171", "arabic": "[Translation] كم عدد الدورات التي يحضرها الطالب الذي يحمل الرقم 171؟", "db_id": "student_assessment"}
{"question": "How many courses does the student with id 171 actually attend?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171", "arabic": "[Translation] كم عدد الدورات التي يحضرها الطالب الذي يحمل الرقم 171 فعليًا؟", "db_id": "student_assessment"}
{"question": "Find id of the candidate whose email is stanley.monahan@example.org?", "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\"", "arabic": "[Translation] ابحث عن رقم تعريفى المرشح الذي يحمل البريد الإلكتروني stanley.monahan@example.org؟", "db_id": "student_assessment"}
{"question": "What is the id of the candidate whose email is stanley.monahan@example.org?", "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\"", "arabic": "[Translation] ما هو رقم الرقم تعريفى للمرشح الذي يحمل البريد الإلكتروني stanley.monahan@example.org؟", "db_id": "student_assessment"}
{"question": "Find id of the candidate who most recently accessed the course?", "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1", "arabic": "[Translation] ابحث عن رقم تعريفى المرشح الذي قام بالوصول إلى الدورة مؤخرًا؟", "db_id": "student_assessment"}
{"question": "What is the id of the candidate who most recently accessed the course?", "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1", "arabic": "[Translation] ما هو رقم الرقم تعريفى للمرشح الذي قام بالوصول إلى الدورة مؤخرًا؟", "db_id": "student_assessment"}
{"question": "What is detail of the student who registered the most number of courses?", "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Translation] ما هي تفاصيل الطالب الذي سجل أكبر عدد من الدورات؟", "db_id": "student_assessment"}
{"question": "What are the details of the student who registered for the most number of courses?", "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Translation] ما هي تفاصيل الطالب الذي سجل لأكبر عدد من الدورات؟", "db_id": "student_assessment"}
{"question": "List the id of students who registered some courses and the number of their registered courses?", "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id", "arabic": "[Translation] قائمة بمعرف الطلاب الذين سجلوا في بعض الدورات وعدد الدورات المسجلة لديهم؟", "db_id": "student_assessment"}
{"question": "For every student who is registered for some course, how many courses are they registered for?", "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id", "arabic": "[Translation] لكل طالب مسجل في بعض الدورات، كم عدد الدورات التي قاموا بالتسجيل فيها؟", "db_id": "student_assessment"}
{"question": "How many registed students do each course have? List course name and the number of their registered students?", "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "arabic": "[Translation] كم عدد الطلاب المسجلين في كل دورة؟ قائمة بأسماء الدورات وعدد الطلاب المسجلين فيها؟", "db_id": "student_assessment"}
{"question": "For each course id, how many students are registered and what are the course names?", "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "arabic": "[Translation] لكل رقم تعريفى دورة، كم عدد الطلاب المسجلين وما هي أسماء الدورات؟", "db_id": "student_assessment"}
{"question": "Find id of candidates whose assessment code is \"Pass\"?", "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"", "arabic": "[Translation] ابحث عن أرقام تعريفية المرشحين الذين يحملون رمز التقييم \"Pass\"؟", "db_id": "student_assessment"}
{"question": "What are the ids of the candidates that have an outcome code of Pass?", "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"", "arabic": "[Translation] ما هي أرقام تعريفية المرشحين الذين لديهم رمز نتيجة \"Pass\"؟", "db_id": "student_assessment"}
{"question": "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?", "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"", "arabic": "[Translation] ابحث عن رقم الجوال للمرشحين الذين يحملون رمز التقييم \"Fail\"؟", "db_id": "student_assessment"}
{"question": "What are the cell phone numbers of the candidates that received an assessment code of \"Fail\"?", "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"", "arabic": "[Translation] ما هي أرقام هواتف المحمول للمرشحين الذين حصلوا على رمز تقييم \"Fail\"؟", "db_id": "student_assessment"}
{"question": "What are the id of students who registered course 301?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين سجلوا في الدورة 301؟", "db_id": "student_assessment"}
{"question": "What are the ids of the students who registered for course 301?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين سجلوا في الدورة 301؟", "db_id": "student_assessment"}
{"question": "What is the id of the student who most recently registered course 301?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1", "arabic": "[Translation] ما هو رقم رقم تعريفى الطالب الذي سجل في الدورة 301 مؤخرًا؟", "db_id": "student_assessment"}
{"question": "What are the ids of the students who registered for course 301 most recently?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين سجلوا في الدورة 301 مؤخرًا؟", "db_id": "student_assessment"}
{"question": "Find distinct cities of addresses of people?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "arabic": "[Translation] ابحث عن مدن مختلفة لعناوين الأشخاص؟", "db_id": "student_assessment"}
{"question": "What are the different cities where people live?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "arabic": "[Translation] ما هي المدن المختلفة التي يعيش فيها الأشخاص؟", "db_id": "student_assessment"}
{"question": "Find distinct cities of address of students?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id", "arabic": "[Translation] ابحث عن مدن مختلفة لعناوين الطلاب؟", "db_id": "student_assessment"}
{"question": "What are the different cities where students live?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id", "arabic": "[Translation] ما هي المدن المختلفة التي يعيش فيها الطلاب؟", "db_id": "student_assessment"}
{"question": "List the names of courses in alphabetical order?", "query": "SELECT course_name FROM courses ORDER BY course_name", "arabic": "[Translation] اعرض قائمة بأسماء الدورات بترتيب أبجدي؟", "db_id": "student_assessment"}
{"question": "What are the names of the courses in alphabetical order?", "query": "SELECT course_name FROM courses ORDER BY course_name", "arabic": "[Translation] ما هي أسماء الدورات بترتيب أبجدي؟", "db_id": "student_assessment"}
{"question": "List the first names of people in alphabetical order?", "query": "SELECT first_name FROM people ORDER BY first_name", "arabic": "[Translation] قائمة بأسماء الأشخاص الأولى بترتيب أبجدي؟", "db_id": "student_assessment"}
{"question": "What are the first names of the people in alphabetical order?", "query": "SELECT first_name FROM people ORDER BY first_name", "arabic": "[Translation] ما هي أسماء الأشخاص الأولى بترتيب أبجدي؟", "db_id": "student_assessment"}
{"question": "What are the id of students who registered courses or attended courses?", "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين قاموا بتسجيل دورات أو حضورها؟", "db_id": "student_assessment"}
{"question": "What are the ids of the students who either registered or attended a course?", "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين قاموا بتسجيل دورات أو حضورها؟", "db_id": "student_assessment"}
{"question": "Find the id of courses which are registered or attended by student whose id is 121?", "query": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121", "arabic": "[Translation] ابحث عن الرقم التعريفى للدورات التي تم التسجيل فيها أو حضورها من قبل الطالب الذي يحمل رقم تعريفى 121؟", "db_id": "student_assessment"}
{"question": "What are the ids of the courses that are registered or attended by the student whose id is 121?", "query": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121", "arabic": "[Translation] ما هي أرقام تعريفية الدورات التي تم التسجيل فيها أو حضورها من قبل الطالب الذي يحمل رقم تعريفى 121؟", "db_id": "student_assessment"}
{"question": "What are all info of students who registered courses but not attended courses?", "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "arabic": "[Translation] ما هي جميع المعلومات حول الطلاب الذين قاموا بتسجيل الدورات ولم يحضروها؟", "db_id": "student_assessment"}
{"question": "What are all details of the students who registered but did not attend any course?", "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "arabic": "[Translation] ما هي جميع التفاصيل حول الطلاب الذين قاموا بالتسجيل ولكن لم يحضروا أي دورة؟", "db_id": "student_assessment"}
{"question": "List the id of students who registered course statistics in the order of registration date.", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date", "arabic": "[Translation] قائمة بأرقام تعريفية الطلاب الذين قاموا بتسجيل دورة في إحدى قاعات الإحصاء بترتيب تاريخ التسجيل.", "db_id": "student_assessment"}
{"question": "What are the ids of the students who registered course statistics by order of registration date?", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين سجلوا في دورة إحصاء بترتيب تاريخ التسجيل؟", "db_id": "student_assessment"}
{"question": "List the id of students who attended  statistics courses in the order of attendance date.", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance", "arabic": "[Translation] قائمة بأرقام تعريفية الطلاب الذين حضروا دورات في إحصاء بترتيب تاريخ الحضور.", "db_id": "student_assessment"}
{"question": "What are the ids of the students who attended courses in the statistics department in order of attendance date.", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance", "arabic": "[Translation] ما هي أرقام تعريفية الطلاب الذين حضروا دورات في قسم الإحصاء بترتيب تاريخ الحضور.", "db_id": "student_assessment"}
{"question": "Give me the dates when the max temperature was higher than 85.", "query": "SELECT date FROM weather WHERE max_temperature_f  >  85", "arabic": "[Translation] أعطني التواريخ عندما كانت درجة الحرارة القصوى أعلى من 85.", "db_id": "bike_1"}
{"question": "What are the dates with a maximum temperature higher than 85?", "query": "SELECT date FROM weather WHERE max_temperature_f  >  85", "arabic": "[Translation] ما هي التواريخ التي كانت فيها درجة الحرارة القصوى أعلى من 85؟", "db_id": "bike_1"}
{"question": "What are the names of stations that have latitude lower than 37.5?", "query": "SELECT name FROM station WHERE lat  <  37.5", "arabic": "[Translation] ما هي أسماء المحطات التي تحمل خط العرض أقل من 37.5؟", "db_id": "bike_1"}
{"question": "What are the names of all stations with a latitude smaller than 37.5?", "query": "SELECT name FROM station WHERE lat  <  37.5", "arabic": "[Translation] ما هي أسماء جميع المحطات التي تحمل خط العرض أقل من 37.5؟", "db_id": "bike_1"}
{"question": "For each city, return the highest latitude among its stations.", "query": "SELECT city ,  max(lat) FROM station GROUP BY city", "arabic": "[Translation] لكل مدينة، ماهو أعلى خط عرض بين محطاتها؟", "db_id": "bike_1"}
{"question": "For each city, what is the highest latitude for its stations?", "query": "SELECT city ,  max(lat) FROM station GROUP BY city", "arabic": "[Translation] لكل مدينة، ما هو أعلى خط عرض بين محطاتها؟", "db_id": "bike_1"}
{"question": "Give me the start station and end station for the trips with the three oldest id.", "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3", "arabic": "[Translation] ماهى محطة البداية ومحطة النهاية للرحلات ذات أقدم ثلاثة أرقام تعريفية؟", "db_id": "bike_1"}
{"question": "What is the station station and end station for the trips with the three smallest ids?", "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3", "arabic": "[Translation] ما هي محطة البداية ومحطة النهاية للرحلات ذات أصغر ثلاثة معرفات؟", "db_id": "bike_1"}
{"question": "What is the average latitude and longitude of stations located in San Jose city?", "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"", "arabic": "[Translation] ما هو متوسط خط العرض وخط الطول للمحطات الموجودة في مدينة سان جوزيه؟", "db_id": "bike_1"}
{"question": "What is the average latitude and longitude in San Jose?", "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"", "arabic": "[Translation] ما هو متوسط خط العرض وخط الطول في سان جوزيه؟", "db_id": "bike_1"}
{"question": "What is the id of the trip that has the shortest duration?", "query": "SELECT id FROM trip ORDER BY duration LIMIT 1", "arabic": "[Translation] ما هو معرف الرحلة التي تمتلك أقصر مدة؟", "db_id": "bike_1"}
{"question": "What is the id of the shortest trip?", "query": "SELECT id FROM trip ORDER BY duration LIMIT 1", "arabic": "[Translation] ما هو الرقم التعريفى لرحلة الأقصر؟", "db_id": "bike_1"}
{"question": "What is the total and maximum duration of trips with bike id 636?", "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636", "arabic": "[Translation] ما هو إجمالي وأقصى مدة للرحلات برقم رقم تعريفى الدراجة 636؟", "db_id": "bike_1"}
{"question": "What is the total and maximum duration for all trips with the bike id 636?", "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636", "arabic": "[Translation] ما هو إجمالي وأقصى مدة لجميع الرحلات برقم رقم تعريفى الدراجة 636؟", "db_id": "bike_1"}
{"question": "For each zip code, return the average mean temperature of August there.", "query": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code", "arabic": "[Translation] لكل رمز بريدي، ماهو متوسط درجة الحرارة المتوسطة لشهر أغسطس هناك؟", "db_id": "bike_1"}
{"question": "For each zip code, what is the average mean temperature for all dates that start with '8'?", "query": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code", "arabic": "[Translation] لكل رمز بريدي، ما هو متوسط درجة الحرارة المتوسطة لجميع التواريخ التي تبدأ بالرقم '8'؟", "db_id": "bike_1"}
{"question": "From the trip record, find the number of unique bikes.", "query": "SELECT count(DISTINCT bike_id) FROM trip", "arabic": "[Translation] استنادًا إلى سجل الرحلات، ابحث عن عدد الدراجات الفريدة.", "db_id": "bike_1"}
{"question": "How many different bike ids are there?", "query": "SELECT count(DISTINCT bike_id) FROM trip", "arabic": "[Translation] كم عدد معرفات الدراجات المختلفة؟", "db_id": "bike_1"}
{"question": "What is the number of distinct cities the stations are located at?", "query": "SELECT count(DISTINCT city) FROM station", "arabic": "[Translation] ما هو عدد المدن المتميزة التي يتواجد فيها المحطات؟", "db_id": "bike_1"}
{"question": "How many different cities have these stations?", "query": "SELECT count(DISTINCT city) FROM station", "arabic": "[Translation] كم عدد المدن المختلفة التي تحتوي على هذه المحطات؟", "db_id": "bike_1"}
{"question": "How many stations does Mountain View city has?", "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"", "arabic": "[Translation] كم عدد المحطات التي تمتلكها مدينة ماونتن فيو؟", "db_id": "bike_1"}
{"question": "How many stations are in Mountain View?", "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"", "arabic": "[Translation] كم عدد المحطات في ماونتن فيو؟", "db_id": "bike_1"}
{"question": "Return the unique name for stations that have ever had 7 bikes available.", "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7", "arabic": "[Translation] أرجع الاسم الفريد للمحطات التي كانت لديها في أي وقت 7 دراجات متاحة.", "db_id": "bike_1"}
{"question": "What are the different names for each station that has ever had 7 bikes available?", "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7", "arabic": "[Translation] ما هي الأسماء المختلفة لكل محطة كانت لديها في أي وقت 7 دراجات متاحة؟", "db_id": "bike_1"}
{"question": "Which start station had the most trips starting from August? Give me the name and id of the station.", "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "[Translation] أي محطة بداية كانت لديها أكبر عدد من الرحلات بدءًا من شهر أغسطس؟ قدم لي اسم ورقم تعريف المحطة.", "db_id": "bike_1"}
{"question": "What are the start station's name and id for the one that had the most start trips in August?", "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "[Translation] ما هي أسماء ورقم تعريف محطة البداية التي كانت لديها أكبر عدد من رحلات البداية في أغسطس؟", "db_id": "bike_1"}
{"question": "Which bike traveled the most often in zip code 94002?", "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "[Translation] أي دراجة سفرت الأكثر كثافة في الرمز البريدي 94002؟", "db_id": "bike_1"}
{"question": "What is the id of the bike that traveled the most in 94002?", "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "[Translation] ما هو رقم التعريف الخاص بالدراجة التي سافرت الأكثر في 94002؟", "db_id": "bike_1"}
{"question": "How many days had both mean humidity above 50 and mean visibility above 8?", "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8", "arabic": "[Translation] كم عدد الأيام التي كان فيها كل من رطوبة الهواء المتوسطة أعلى من 50 ورؤية المتوسطة أعلى من 8؟", "db_id": "bike_1"}
{"question": "What is the number of days that had an average humity above 50 and an average visibility above 8?", "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8", "arabic": "[Translation] ما هو عدد الأيام التي كانت فيها الرطوبة المتوسطة أعلى من 50 وكانت الرؤية المتوسطة أعلى من 8؟", "db_id": "bike_1"}
{"question": "What is the latitude, longitude, city of the station from which the shortest trip started?", "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1", "arabic": "[Translation] ما هي خطوط العرض والطول والمدينة للمحطة التي بدأت فيها الرحلة الأقصر؟", "db_id": "bike_1"}
{"question": "What is the latitude, longitude, and city of the station from which the trip with smallest duration started?", "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1", "arabic": "[Translation] ما هي خطوط العرض والطول والمدينة للمحطة التي بدأت فيها الرحلة ذات أقل مدة؟", "db_id": "bike_1"}
{"question": "What are the ids of stations that are located in San Francisco and have average bike availability above 10.", "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10", "arabic": "[Translation] ما هي معرفات المحطات التي تقع في سان فرانسيسكو ولديها متوسط توفر الدراجات أكثر من 10.", "db_id": "bike_1"}
{"question": "What are the ids of the stations in San Francisco that normally have more than 10 bikes available?", "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10", "arabic": "[Translation] ما هي معرفات المحطات في سان فرانسيسكو التي عادةً ما تحتوي على أكثر من 10 دراجة متاحة؟", "db_id": "bike_1"}
{"question": "What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?", "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"", "arabic": "[Translation] ما هي الأسماء ومعرفات المحطات التي كانت لديها أكثر من 14 دراجة متاحة في المتوسط أو تم تثبيتها في ديسمبر؟", "db_id": "bike_1"}
{"question": "What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December?", "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"", "arabic": "[Translation] ما هي الأسماء ومعرفات جميع المحطات التي كان لديها أكثر من 14 دراجة متاحة في المتوسط أو كانت بها دراجات تم تثبيتها في ديسمبر؟", "db_id": "bike_1"}
{"question": "What is the 3 most common cloud cover rates in the region of zip code 94107?", "query": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3", "arabic": "[Translation] ما هي أكثر 3 معدلات للتغطية السحابية شيوعًا في منطقة الرمز البريدي 94107؟", "db_id": "bike_1"}
{"question": "What are the 3 most common cloud covers in the zip code of 94107?", "query": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3", "arabic": "[Translation] ما هي أكثر 3 تغطيات سحاب شيوعًا في رمز البريدي 94107؟", "db_id": "bike_1"}
{"question": "What is the zip code in which the average mean sea level pressure is the lowest?", "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1", "arabic": "[Translation] ما هو الرمز البريدي الذي يحتوي على أدنى متوسط لضغط مستوى سطح البحر؟", "db_id": "bike_1"}
{"question": "What is the zip code that has the lowest average mean sea level pressure?", "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1", "arabic": "[Translation] ما هو الرمز البريدي الذي يحتوي على أدنى متوسط لضغط مستوى سطح البحر؟", "db_id": "bike_1"}
{"question": "What is the average bike availability in stations that are not located in Palo Alto?", "query": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")", "arabic": "[Translation] ما هو متوسط توفر الدراجات في المحطات التي لا تقع في بالو ألتو؟", "db_id": "bike_1"}
{"question": "What is the average bike availablility for stations not in Palo Alto?", "query": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")", "arabic": "[Translation] ما هو متوسط توفر الدراجات للمحطات التي لا تقع في بالو ألتو؟", "db_id": "bike_1"}
{"question": "What is the average longitude of stations that never had bike availability more than 10?", "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)", "arabic": "[Translation] ما هو متوسط ​​خط الطول للمحطات التي لم تكن لديها توفر للدراجات أكثر من 10؟", "db_id": "bike_1"}
{"question": "What is the mean longitude for all stations that have never had more than 10 bikes available?", "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)", "arabic": "[Translation] ما هو المتوسط ​​لخط الطول لجميع المحطات التي لم تكن لديها أكثر من 10 دراجة متاحة؟", "db_id": "bike_1"}
{"question": "When and in what zip code did max temperature reach 80?", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80", "arabic": "[Translation] متى وفي أي رمز بريدي وصلت درجة الحرارة القصوى إلى 80؟", "db_id": "bike_1"}
{"question": "What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80", "arabic": "[Translation] ما هي رموز البريد التي تحتوي على محطة ودرجة حرارة قصوى تزيد عن أو تساوي 80، ومتى وصلت إلى تلك الحرارة؟", "db_id": "bike_1"}
{"question": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.", "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60", "arabic": "[Translation] أعطني معرفات لجميع الرحلات التي جرت في منطقة رمز بريدي بمتوسط ​​درجة حرارة متوسطة أعلى من 60.", "db_id": "bike_1"}
{"question": "For each zip code, find the ids of all trips that have a higher average mean temperature above 60?", "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60", "arabic": "[Translation] لكل رمز بريدي، ابحث عن معرفات جميع الرحلات التي لديها متوسط درجة حرارة متوسط أعلى من 60؟", "db_id": "bike_1"}
{"question": "For each zip code, return how many times max wind speed reached 25?", "query": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code", "arabic": "[Translation] لكل رمز بريدي، أعد كم مرة وصلت فيها أقصى سرعة رياح إلى 25؟", "db_id": "bike_1"}
{"question": "For each zip code, how many times has the maximum wind speed reached 25 mph?", "query": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code", "arabic": "[Translation] لكل رمز بريدي، كم مرة وصلت فيها السرعة القصوى للرياح إلى 25 ميلا في الساعة؟", "db_id": "bike_1"}
{"question": "On which day and in which zip code was the min dew point lower than any day in zip code 94107?", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "arabic": "[Translation] في أي يوم وفي أي رمز بريدي كانت نقطة الندى الدنيا أقل من أي يوم في رمز البريدي 94107؟", "db_id": "bike_1"}
{"question": "Which days had a minimum dew point smaller than any day in zip code 94107, and in which zip codes were those measurements taken?", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "arabic": "[Translation] أيام كانت نقطة الندى الدنيا فيها أقل من أي يوم في رمز البريدي 94107، وفي أي رموز بريد تم قياس تلك القراءات؟", "db_id": "bike_1"}
{"question": "For each trip, return its ending station's installation date.", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id", "arabic": "[Translation] لكل رحلة، أرجع تاريخ تثبيت محطتها النهائية.", "db_id": "bike_1"}
{"question": "What is the installation date for each ending station on all the trips?", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id", "arabic": "[Translation] ما هو تاريخ التثبيت لكل محطة نهاية على جميع الرحلات؟", "db_id": "bike_1"}
{"question": "Which trip started from the station with the largest dock count? Give me the trip id.", "query": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1", "arabic": "[Translation] أي رحلة بدأت من المحطة التي كانت لديها أكبر عدد من الأرصفة؟ قدم لي الرقم التعريفي للرحلة.", "db_id": "bike_1"}
{"question": "What is the id of the trip that started from the station with the highest dock count?", "query": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1", "arabic": "[Translation] ما هو معرف الرحلة التي بدأت من المحطة ذات العدد الأعلى للأرصفة؟", "db_id": "bike_1"}
{"question": "Count the number of trips that did not end in San Francisco city.", "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\"", "arabic": "[Translation] عدد الرحلات التي لم تنتهي في مدينة سان فرانسيسكو.", "db_id": "bike_1"}
{"question": "How many trips did not end in San Francisco?", "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != \"San Francisco\"", "arabic": "[Translation] كم عدد الرحلات التي لم تنتهي في سان فرانسيسكو؟", "db_id": "bike_1"}
{"question": "In zip code 94107, on which day neither Fog nor Rain was not observed?", "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"", "arabic": "[Translation] في رمز البريدي 94107، في أي يوم لم يتم فيه رصد الضباب أو المطر؟", "db_id": "bike_1"}
{"question": "On which day has it neither been foggy nor rained in the zip code of 94107?", "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"", "arabic": "[Translation] في أي يوم لم يكن هناك ضباب أو مطر في رمز البريدي 94107؟", "db_id": "bike_1"}
{"question": "What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?", "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7", "arabic": "[Translation] ما هي معرفات المحطات التي لديها خطوط عرض أعلى من 37.4 ولم تكن لديها توفر للدراجات أقل من 7؟", "db_id": "bike_1"}
{"question": "What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available?", "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7", "arabic": "[Translation] ما هي معرفات جميع المحطات التي لديها خطوط عرض أعلى من 37.4 ولم تكن لديها أقل من 7 دراجات متاحة؟", "db_id": "bike_1"}
{"question": "What are names of stations that have average bike availability above 10 and are not located in San Jose city?", "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"", "arabic": "[Translation] ما هي أسماء المحطات التي لديها توفر للدراجات فوق 10 في المتوسط وغير موجودة في مدينة سان خوسيه؟", "db_id": "bike_1"}
{"question": "What are the names of all stations that have more than 10 bikes available and are not located in San Jose?", "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"", "arabic": "[Translation] ما هي أسماء جميع المحطات التي تحتوي على أكثر من 10 دراجة متاحة وليست موجودة في سان خوسيه؟", "db_id": "bike_1"}
{"question": "What are the name, latitude, and city of the station with the lowest latitude?", "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1", "arabic": "[Translation] ما هو اسم المحطة وخط العرض والمدينة للمحطة التي تحتوي على أقل خط عرض؟", "db_id": "bike_1"}
{"question": "What is the name, latitude, and city of the station that is located the furthest South?", "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1", "arabic": "[Translation] ما هو اسم المحطة وخط العرض والمدينة للمحطة التي تقع إلى الجنوب بشكل أقصى؟", "db_id": "bike_1"}
{"question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?", "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3", "arabic": "[Translation] ما هي التاريخ ودرجة الحرارة المتوسطة ورطوبة الهواء المتوسطة لأعلى 3 أيام مع أكبر سرعات هبوب للرياح؟", "db_id": "bike_1"}
{"question": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?", "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3", "arabic": "[Translation] ما هو التاريخ ودرجة الحرارة المتوسطة ورطوبة الهواء المتوسطة للأيام التي تحتوي على أكبر 3 سرعات هبوب للرياح؟", "db_id": "bike_1"}
{"question": "List the name and the number of stations for all the cities that have at least 15 stations.", "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15", "arabic": "[Translation] اعطنى اسم المدينة وعدد المحطات لجميع المدن التي تحتوي على ما لا يقل عن 15 محطة.", "db_id": "bike_1"}
{"question": "What is the name of every city that has at least 15 stations and how many stations does it have?", "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15", "arabic": "[Translation] ما هو اسم كل مدينة تحتوي على ما لا يقل عن 15 محطة وكم عدد المحطات لديها؟", "db_id": "bike_1"}
{"question": "Find the ids and names of stations from which at least 200 trips started.", "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200", "arabic": "[Translation] اعرض على معرفات وأسماء المحطات التي بدأت منها ما لا يقل عن 200 رحلة.", "db_id": "bike_1"}
{"question": "What are the ids and names of all start stations that were the beginning of at least 200 trips?", "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200", "arabic": "[Translation] ما هي معرفات وأسماء جميع محطات البداية التي كانت بداية لما لا يقل عن 200 رحلة؟", "db_id": "bike_1"}
{"question": "Find the zip code in which the average mean visibility is lower than 10.", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10", "arabic": "[Translation] اعرض رمز البريدي الذي تكون فيه متوسط ​​وضوح الرؤية أقل من 10.", "db_id": "bike_1"}
{"question": "For each zip code, select all those that have an average mean visiblity below 10.", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10", "arabic": "[Translation] لكل رمز بريدي، حدد جميع تلك التي تحتوي على متوسط ​​وضوح رؤية أقل من 10.", "db_id": "bike_1"}
{"question": "List all the cities in a decreasing order of each city's stations' highest latitude.", "query": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC", "arabic": "[Translation] أعرض جميع المدن بترتيب تنازلي حسب أقصى خط عرض لمحطاتها.", "db_id": "bike_1"}
{"question": "For each city, list their names in decreasing order by their highest station latitude.", "query": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC", "arabic": "[Translation] لكل مدينة، أعرض أسماءها بترتيب تنازلي حسب أقصى خط عرض لمحطاتها.", "db_id": "bike_1"}
{"question": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.", "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5", "arabic": "[Translation] ما هي التواريخ التي حققت فيها أعلى 5 معدلات لتغطية السحب؟ وأيضا، قل لي معدل تغطية السحب.", "db_id": "bike_1"}
{"question": "What are the dates that have the 5 highest cloud cover rates and what are the rates?", "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5", "arabic": "[Translation] ما هي التواريخ التي حققت فيها 5 أعلى معدلات لتغطية السحب وما هي هذه المعدلات؟", "db_id": "bike_1"}
{"question": "What are the ids and durations of the trips with the top 3 durations?", "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3", "arabic": "[Translation] ما هي معرفات ومدد الرحلات مع أطول 3 مدد؟", "db_id": "bike_1"}
{"question": "What are the ids of the trips that lasted the longest and how long did they last?", "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3", "arabic": "[Translation] ما هي معرفات الرحلات التي استمرت لفترة أطول ومدى مدة استمرارها؟", "db_id": "bike_1"}
{"question": "For each station, return its longitude and the average duration of trips that started from the station.", "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id", "arabic": "[Translation] لكل محطة، أرجع خط الطول الخاص بها والمدة المتوسطة للرحلات التي بدأت من المحطة.", "db_id": "bike_1"}
{"question": "For each start station id, what is its name, longitude and average duration of trips started there?", "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id", "arabic": "[Translation] لكل معرف محطة البداية، ما هو اسمها وخط الطول والمدة المتوسطة للرحلات التي بدأت منها؟", "db_id": "bike_1"}
{"question": "For each station, find its latitude and the minimum duration of trips that ended at the station.", "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id", "arabic": "[Translation] لكل محطة، اعرض خط العرض الخاص بها والمدة الدنيا للرحلات التي انتهت في المحطة.", "db_id": "bike_1"}
{"question": "For each end station id, what is its name, latitude, and minimum duration for trips ended there?", "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id", "arabic": "[Translation] لكل معرف لمحطة الوصول، ما هو اسمها وخط العرض والمدة الدنيا للرحلات التي انتهت هناك؟", "db_id": "bike_1"}
{"question": "List all the distinct stations from which a trip of duration below 100 started.", "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100", "arabic": "[Translation] أعرض جميع المحطات المتميزة التي بدأت منها رحلة بمدة أقل من 100.", "db_id": "bike_1"}
{"question": "What are all the different start station names for a trip that lasted less than 100?", "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100", "arabic": "[Translation] ما هي جميع أسماء محطات البداية المختلفة لرحلة استمرت أقل من 100؟", "db_id": "bike_1"}
{"question": "Find all the zip codes in which the max dew point have never reached 70.", "query": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70", "arabic": "[Translation] اعرض جميع رموز البريد التي لم يصل فيها نقطة الندى القصوى إلى 70.", "db_id": "bike_1"}
{"question": "What are all the different zip codes that have a maximum dew point that was always below 70?", "query": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70", "arabic": "[Translation] ما هي جميع الرموز البريدية المختلفة التي تحتوي على نقطة الندى القصوى التي كانت دائمًا أقل من 70؟", "db_id": "bike_1"}
{"question": "Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.", "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)", "arabic": "[Translation] اعرض معرف الرحلات التي استمرت على الأقل مثل المدة المتوسطة للرحلات في رمز البريد 94103.", "db_id": "bike_1"}
{"question": "What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?", "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)", "arabic": "[Translation] ما هي معرفات جميع الرحلات التي كانت لها مدة مثل المدة المتوسطة للرحلات في رمز البريد 94103؟", "db_id": "bike_1"}
{"question": "What are the dates in which the mean sea level pressure was between 30.3 and 31?", "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31", "arabic": "[Translation] ما هي التواريخ التي كانت فيها ضغط مستوى البحر المتوسط ​​بين 30.3 و 31؟", "db_id": "bike_1"}
{"question": "What are the dates that have an average sea level pressure between 30.3 and 31?", "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31", "arabic": "[Translation] ما هي التواريخ التي كان فيها متوسط ​​ضغط مستوى البحر بين 30.3 و 31؟", "db_id": "bike_1"}
{"question": "Find the day in which the difference between the max temperature and min temperature was the smallest. Also report the difference.", "query": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1", "arabic": "[Translation] اعرض اليوم الذي كانت فيه الفارق بين درجة الحرارة القصوى والدرجة الحرارية الدنيا هو الأصغر. وأيضًا الإبلاغ عن هذا الفارق.", "db_id": "bike_1"}
{"question": "What are the days that had the smallest temperature range, and what was that range?", "query": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1", "arabic": "[Translation] ما هي الأيام التي كانت فيها نطاقات الحرارة الصغيرة، وما هي هذه النطاقات؟", "db_id": "bike_1"}
{"question": "What are the id and name of the stations that have ever had more than 12 bikes available?", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12", "arabic": "[Translation] ما هو الرقم التعريفى واسم المحطات التي كان لديها أكثر من 12 دراجة متاحة على الإطلاق؟", "db_id": "bike_1"}
{"question": "What are the different ids and names of the stations that have had more than 12 bikes available?", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12", "arabic": "[Translation] ما هي معرفات وأسماء المحطات المختلفة التي كانت لديها أكثر من 12 دراجة متاحة؟", "db_id": "bike_1"}
{"question": "Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place.", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100", "arabic": "[Translation] قدم لي رمز البريدي حيث يكون متوسط ​​رطوبة الهواء أدنى من 70 وشهدت على الأقل 100 رحلة.", "db_id": "bike_1"}
{"question": "What are the zip codes that have an average mean humidity below 70 and had at least 100 trips come through there?", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100", "arabic": "[Translation] ما هي رموز البريد التي تحتوي على متوسط ​​رطوبة الهواء أدنى من 70 وشهدت على الأقل 100 رحلة؟", "db_id": "bike_1"}
{"question": "What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?", "query": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100", "arabic": "[Translation] ما هي أسماء المحطات التي تقع في مدينة بالو ألتو ولكنها لم تكن نقطة الوصول لأكثر من 100 رحلة؟", "db_id": "bike_1"}
{"question": "What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips", "query": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100", "arabic": "[Translation] ما هي أسماء المحطات التي تقع في بالو ألتو ولكنها لم تكن نقطة الوصول للرحلات؟", "db_id": "bike_1"}
{"question": "How many trips started from Mountain View city and ended at Palo Alto city?", "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\"", "arabic": "كم عدد الرحلات التي بدأت من مدينة ماونتن فيو وانتهت في مدينة بالو ألتو؟", "db_id": "bike_1"}
{"question": "How many trips stated from  a station in Mountain View and ended at one in Palo Alto?", "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\"", "arabic": "كم عدد الرحلات التي بدأت من محطة في ماونتن فيو وانتهت في محطة في بالو ألتو؟", "db_id": "bike_1"}
{"question": "What is the average latitude and longitude of the starting points of all trips?", "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id", "arabic": "ما هي الدائرة العظمى وخط الطول المتوسطين لنقاط البداية لجميع الرحلات؟", "db_id": "bike_1"}
{"question": "What is the average latitude and longitude of all starting stations for the trips?", "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id", "arabic": "ما هي الدائرة العظمى وخط الطول المتوسطين لجميع محطات بداية الرحلات؟", "db_id": "bike_1"}
{"question": "How many books are there?", "query": "SELECT count(*) FROM book", "arabic": "كم عدد الكتب المتاحة؟", "db_id": "book_2"}
{"question": "List the writers of the books in ascending alphabetical order.", "query": "SELECT Writer FROM book ORDER BY Writer ASC", "arabic": "قائمة بكتَّاب الكتب بترتيب أبجدي تصاعدي.", "db_id": "book_2"}
{"question": "List the titles of the books in ascending order of issues.", "query": "SELECT Title FROM book ORDER BY Issues ASC", "arabic": "قائمة بعناوين الكتب بترتيب تصاعدي حسب الإصدارات.", "db_id": "book_2"}
{"question": "What are the titles of the books whose writer is not \"Elaine Lee\"?", "query": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\"", "arabic": "ما هي عناوين الكتب التي ليس كاتبها \"إيلين لي\"؟", "db_id": "book_2"}
{"question": "What are the title and issues of the books?", "query": "SELECT Title ,  Issues FROM book", "arabic": "ما هو عنوان وإصدارات الكتب؟", "db_id": "book_2"}
{"question": "What are the dates of publications in descending order of price?", "query": "SELECT Publication_Date FROM publication ORDER BY Price DESC", "arabic": "ما هي تواريخ النشر بترتيب تنازلي حسب السعر؟", "db_id": "book_2"}
{"question": "What are the distinct publishers of publications with price higher than 5000000?", "query": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000", "arabic": "ما هي الناشرين المتميزين للإصدارات ذات السعر الأعلى من 5000000؟", "db_id": "book_2"}
{"question": "List the publisher of the publication with the highest price.", "query": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1", "arabic": "قائمة بناشر الإصدار ذو أعلى سعر.", "db_id": "book_2"}
{"question": "List the publication dates of publications with 3 lowest prices.", "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3", "arabic": "ما هي تواريخ النشر للإصدارات ذات أقل 3 أسعار؟", "db_id": "book_2"}
{"question": "Show the title and publication dates of books.", "query": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID", "arabic": "أظهر عنوان وتواريخ النشر للكتب.", "db_id": "book_2"}
{"question": "Show writers who have published a book with price more than 4000000.", "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000", "arabic": "أظهر الكتَّاب الذين قاموا بنشر كتاب بسعر أكثر من 4000000.", "db_id": "book_2"}
{"question": "Show the titles of books in descending order of publication price.", "query": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC", "arabic": "أظهر عناوين الكتب بترتيب تنازلي حسب سعر النشر.", "db_id": "book_2"}
{"question": "Show publishers that have more than one publication.", "query": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1", "arabic": "أظهر الناشرين الذين لديهم أكثر من إصدار واحد.", "db_id": "book_2"}
{"question": "Show different publishers together with the number of publications they have.", "query": "SELECT Publisher ,  COUNT(*) FROM publication GROUP BY Publisher", "arabic": "أظهر الناشرين المختلفين مع عدد الإصدارات التي لديهم.", "db_id": "book_2"}
{"question": "Please show the most common publication date.", "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "الرجاء إظهار أكثر تاريخ نشر شائع.", "db_id": "book_2"}
{"question": "List the writers who have written more than one book.", "query": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1", "arabic": "قائمة بالكتَّاب الذين كتبوا أكثر من كتاب واحد.", "db_id": "book_2"}
{"question": "List the titles of books that are not published.", "query": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)", "arabic": "قائمة بعناوين الكتب التي لم يتم نشرها.", "db_id": "book_2"}
{"question": "Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.", "query": "SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000", "arabic": "أظهر الناشرين الذين لديهم إصدارات بسعر أعلى من 10000000 وإصدارات بسعر أقل من 5000000.", "db_id": "book_2"}
{"question": "What is the number of distinct publication dates?", "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication", "arabic": "ما هو عدد التواريخ المختلفة للنشر؟", "db_id": "book_2"}
{"question": "How many distinct publication dates are there in our record?", "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication", "arabic": "كم عدد التواريخ المختلفة للنشر في سجلنا؟", "db_id": "book_2"}
{"question": "Show the prices of publications whose publisher is either \"Person\" or \"Wiley\"", "query": "SELECT Price FROM publication WHERE Publisher  =  \"Person\" OR Publisher  =  \"Wiley\"", "arabic": "أظهر أسعار الإصدارات التي ناشرها إما \"Person\" أو \"Wiley\".", "db_id": "book_2"}
{"question": "How many actors are there?", "query": "SELECT count(*) FROM actor", "arabic": "كم عدد الفنانين؟", "db_id": "musical"}
{"question": "Count the number of actors.", "query": "SELECT count(*) FROM actor", "arabic": "عدد الفنانين.", "db_id": "musical"}
{"question": "List the name of actors in ascending alphabetical order.", "query": "SELECT Name FROM actor ORDER BY Name ASC", "arabic": "قائمة باسم الفنانين بترتيب أبجدي تصاعدي.", "db_id": "musical"}
{"question": "What are the names of actors, ordered alphabetically?", "query": "SELECT Name FROM actor ORDER BY Name ASC", "arabic": "ما هي أسماء الفنانين، مرتبة أبجدياً؟", "db_id": "musical"}
{"question": "What are the characters and duration of actors?", "query": "SELECT Character ,  Duration FROM actor", "arabic": "ما هي الشخصيات والمدة لدى الفنانين؟", "db_id": "musical"}
{"question": "Return the characters and durations for each actor.", "query": "SELECT Character ,  Duration FROM actor", "arabic": "رجاءً قدم الشخصيات والمدة لكل فنان.", "db_id": "musical"}
{"question": "List the name of actors whose age is not 20.", "query": "SELECT Name FROM actor WHERE Age != 20", "arabic": "قائمة باسم الفنانين الذين لا يبلغون من العمر 20 عامًا.", "db_id": "musical"}
{"question": "What are the names of actors who are not 20 years old?", "query": "SELECT Name FROM actor WHERE Age != 20", "arabic": "ما هي أسماء الفنانين الذين ليسوا في عمر 20 عامًا؟", "db_id": "musical"}
{"question": "What are the characters of actors in descending order of age?", "query": "SELECT Character FROM actor ORDER BY age DESC", "arabic": "ما هي الشخصيات للفنانين بترتيب تنازلي حسب العمر؟", "db_id": "musical"}
{"question": "Return the characters for actors, ordered by age descending.", "query": "SELECT Character FROM actor ORDER BY age DESC", "arabic": "قدم الشخصيات للفنانين، مرتبة حسب العمر تنازليًا.", "db_id": "musical"}
{"question": "What is the duration of the oldest actor?", "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1", "arabic": "ما هو مدى عمر أقدم فنان؟", "db_id": "musical"}
{"question": "Return the duration of the actor with the greatest age.", "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1", "arabic": "قدم مدى عمر الفنان الأكبر سنًا.", "db_id": "musical"}
{"question": "What are the names of musicals with nominee \"Bob Fosse\"?", "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"", "arabic": "ما هي أسماء المسرحيات الغنائية التي لديها المرشح \"Bob Fosse\"؟", "db_id": "musical"}
{"question": "Return the names of musicals who have the nominee Bob Fosse.", "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"", "arabic": "قدم أسماء المسرحيات الغنائية التي لديها المرشح \"Bob Fosse\".", "db_id": "musical"}
{"question": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?", "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"", "arabic": "ما هي المرشحين المميزين للمسرحيات الغنائية التي لديها جائزة غير \"جائزة توني\"؟", "db_id": "musical"}
{"question": "Return the different nominees of musicals that have an award that is not the Tony Award.", "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"", "arabic": "قدم المرشحين المختلفين للمسرحيات الغنائية التي لديها جائزة غير \"جائزة توني\".", "db_id": "musical"}
{"question": "Show names of actors and names of musicals they are in.", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID", "arabic": "أظهر أسماء الفنانين وأسماء المسرحيات التي يظهرون فيها.", "db_id": "musical"}
{"question": "What are the names of actors and the musicals that they are in?", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID", "arabic": "ما هي أسماء الفنانين والمسرحيات التي يظهرون فيها؟", "db_id": "musical"}
{"question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"", "arabic": "أظهر أسماء الفنانين الذين ظهروا في المسرحية بعنوان \"The Phantom of the Opera\".", "db_id": "musical"}
{"question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"", "arabic": "ما هي أسماء الفنانين الذين شاركوا في المسرحية بعنوان \"The Phantom of the Opera\"؟", "db_id": "musical"}
{"question": "Show names of actors in descending order of the year their musical is awarded.", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC", "arabic": "أظهر أسماء الفنانين بترتيب تنازلي حسب السنة التي حصلت فيها مسرحيتهم على جائزة.", "db_id": "musical"}
{"question": "What are the names of actors ordered descending by the year in which their musical was awarded?", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC", "arabic": "ما هي أسماء الفنانين مرتبة تنازليًا حسب السنة التي حصلت فيها مسرحيتهم على جائزة؟", "db_id": "musical"}
{"question": "Show names of musicals and the number of actors who have appeared in the musicals.", "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID", "arabic": "أظهر أسماء المسرحيات وعدد الفنانين الذين ظهروا فيها.", "db_id": "musical"}
{"question": "How many actors have appeared in each musical?", "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID", "arabic": "كم عدد الفنانين الذين ظهروا في كل مسرحية؟", "db_id": "musical"}
{"question": "Show names of musicals which have at least three actors.", "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3", "arabic": "أظهر أسماء المسرحيات التي لديها ما لا يقل عن ثلاثة فنانين.", "db_id": "musical"}
{"question": "What are the names of musicals who have at 3 or more actors?", "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3", "arabic": "ما هي أسماء المسرحيات التي لديها 3 أو أكثر من الفنانين؟", "db_id": "musical"}
{"question": "Show different nominees and the number of musicals they have been nominated.", "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee", "arabic": "أظهر المرشحين المختلفين وعدد المسرحيات التي تم ترشيحها.", "db_id": "musical"}
{"question": "How many musicals has each nominee been nominated for?", "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee", "arabic": "كم عدد المسرحيات التي تم ترشيح كل مرشح لها؟", "db_id": "musical"}
{"question": "Please show the nominee who has been nominated the greatest number of times.", "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "يرجى إظهار المرشح الذي تم ترشيحه أكبر عدد من المرات.", "db_id": "musical"}
{"question": "Who is the nominee who has been nominated for the most musicals?", "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "من هو المرشح الذي تم ترشيحه لأكبر عدد من المسرحيات؟", "db_id": "musical"}
{"question": "List the most common result of the musicals.", "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "قائمة أشهر نتيجة للمسرحيات.", "db_id": "musical"}
{"question": "Return the most frequent result across all musicals.", "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "إرجاع النتيجة الأكثر تكرارًا عبر جميع المسرحيات.", "db_id": "musical"}
{"question": "List the nominees that have been nominated more than two musicals.", "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2", "arabic": "قائمة المرشحين الذين تم ترشيحهم لأكثر من مرتين.", "db_id": "musical"}
{"question": "Who are the nominees who have been nominated more than two times?", "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2", "arabic": "من هم المرشحين الذين تم ترشيحهم أكثر من مرتين؟", "db_id": "musical"}
{"question": "List the name of musicals that do not have actors.", "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)", "arabic": "قائمة أسماء المسرحيات التي لا تحتوي على فنانين.", "db_id": "musical"}
{"question": "What are the names of musicals who have no actors?", "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)", "arabic": "ما هي أسماء المسرحيات التي ليس لديها فنانين؟", "db_id": "musical"}
{"question": "Show the nominees that have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\".", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"", "arabic": "أظهر المرشحين الذين تم ترشيح مسرحياتهم لجائزتي \"جائزة توني\" و\"جائزة دارما ديسك\".", "db_id": "musical"}
{"question": "Who are the nominees who have been nominated for both a Tony Award and a Drama Desk Award?", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"", "arabic": "من هم المرشحين الذين تم ترشيحهم لجائزة توني وجائزة دراما ديسك؟", "db_id": "musical"}
{"question": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"", "arabic": "أظهر مرشح المسرحية الذي فاز بجائزة \"بوب فوسي\" أو \"كليفانت ديريكس\".", "db_id": "musical"}
{"question": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"", "arabic": "من هم المرشحين الذين تم ترشيحهم لجوائز \"بوب فوسي\" أو \"كليفانت ديريكس\"؟", "db_id": "musical"}
{"question": "Find the emails of the user named \"Mary\".", "query": "SELECT email FROM user_profiles WHERE name  =  'Mary'", "arabic": "ابحث عن عناوين البريد الإلكتروني للمستخدم الذي يحمل اسم \"ماري\".", "db_id": "twitter_1"}
{"question": "What is the partition id of the user named \"Iron Man\".", "query": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'", "arabic": "ما هو رقم تعريفى التقسيم للمستخدم الذي يحمل اسم \"آيرون مان\".", "db_id": "twitter_1"}
{"question": "How many users are there?", "query": "SELECT count(*) FROM user_profiles", "arabic": "كم عدد المستخدمين؟", "db_id": "twitter_1"}
{"question": "How many followers does each user have?", "query": "SELECT count(*) FROM follows", "arabic": "كم عدد المتابعين لكل مستخدم؟", "db_id": "twitter_1"}
{"question": "Find the number of followers for each user.", "query": "SELECT count(*) FROM follows GROUP BY f1", "arabic": "ابحث عن عدد المتابعين لكل مستخدم.", "db_id": "twitter_1"}
{"question": "Find the number of tweets in record.", "query": "SELECT count(*) FROM tweets", "arabic": "ابحث عن عدد التغريدات في السجل.", "db_id": "twitter_1"}
{"question": "Find the number of users who posted some tweets.", "query": "SELECT count(DISTINCT UID) FROM tweets", "arabic": "ابحث عن عدد المستخدمين الذين قاموا بنشر بعض التغريدات.", "db_id": "twitter_1"}
{"question": "Find the name and email of the user whose name contains the word ‘Swift’.", "query": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'", "arabic": "ابحث عن اسم وعنوان البريد الإلكتروني للمستخدم الذي يحتوي اسمه على كلمة \"سويفت\".", "db_id": "twitter_1"}
{"question": "Find the names of users whose emails contain ‘superstar’ or ‘edu’.", "query": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'", "arabic": "ابحث عن أسماء المستخدمين الذين يحتوي عنوان بريدهم الإلكتروني على \"سوبرستار\" أو \"إيديو\".", "db_id": "twitter_1"}
{"question": "Return the text of tweets about the topic 'intern'.", "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'", "arabic": "ارجع نص التغريدات حول موضوع 'التدريب'.", "db_id": "twitter_1"}
{"question": "Find the name and email of the users who have more than 1000 followers.", "query": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000", "arabic": "ابحث عن اسم وعنوان البريد الإلكتروني للمستخدمين الذين لديهم أكثر من 1000 متابع.", "db_id": "twitter_1"}
{"question": "Find the names of the users whose number of followers is greater than that of the user named \"Tyler Swift\".", "query": "SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift')", "arabic": "ابحث عن أسماء المستخدمين الذين يكون عدد متابعيهم أكبر من تلك للمستخدم الذي يحمل اسم \"تايلر سويفت\".", "db_id": "twitter_1"}
{"question": "Find the name and email for the users who have more than one follower.", "query": "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1", "arabic": "ابحث عن اسم وعنوان البريد الإلكتروني للمستخدمين الذين لديهم أكثر من متابع واحد.", "db_id": "twitter_1"}
{"question": "Find the names of users who have more than one tweet.", "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1", "arabic": "ابحث عن أسماء المستخدمين الذين لديهم أكثر من تغريدة واحدة.", "db_id": "twitter_1"}
{"question": "Find the id of users who are followed by Mary and Susan.", "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Susan\"", "arabic": "ابحث عن رقم تعريفى المستخدمين الذين يتابعهم ماري وسوزان.", "db_id": "twitter_1"}
{"question": "Find the id of users who are followed by Mary or Susan.", "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\"", "arabic": "ابحث عن رقم تعريفى المستخدمين الذين يتابعهم ماري أو سوزان.", "db_id": "twitter_1"}
{"question": "Find the name of the user who has the largest number of followers.", "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1", "arabic": "ابحث عن اسم المستخدم الذي يمتلك أكبر عدد من المتابعين.", "db_id": "twitter_1"}
{"question": "Find the name and email of the user followed by the least number of people.", "query": "SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1", "arabic": "ابحث عن اسم وعنوان البريد الإلكتروني للمستخدم الذي يتابعه أقل عدد من الأشخاص.", "db_id": "twitter_1"}
{"question": "List the name and number of followers for each user, and sort the results by the number of followers in descending order.", "query": "SELECT name ,  followers FROM user_profiles ORDER BY followers DESC", "arabic": "قائمة باسم وعدد المتابعين لكل مستخدم، وقم بفرز النتائج حسب عدد المتابعين بترتيب تنازلي.", "db_id": "twitter_1"}
{"question": "List the names of 5 users followed by the largest number of other users.", "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5", "arabic": "قائمة باسماء 5 مستخدمين يتابعهم أكبر عدد من المستخدمين الآخرين.", "db_id": "twitter_1"}
{"question": "List the text of all tweets in the order of date.", "query": "SELECT text FROM tweets ORDER BY createdate", "arabic": "قائمة بنص جميع التغريدات بترتيب تاريخي.", "db_id": "twitter_1"}
{"question": "Find the name of each user and number of tweets tweeted by each of them.", "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid", "arabic": "ابحث عن اسم كل مستخدم وعدد التغريدات التي قام بنشرها.", "db_id": "twitter_1"}
{"question": "Find the name and partition id for users who tweeted less than twice.", "query": "SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2", "arabic": "ابحث عن اسم ورقم تعريفى التقسيم للمستخدمين الذين قاموا بنشر أقل من مرتين.", "db_id": "twitter_1"}
{"question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.", "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1", "arabic": "ابحث عن اسم المستخدم الذي قام بنشر أكثر من مرة، وعدد التغريدات التي نشرها.", "db_id": "twitter_1"}
{"question": "Find the average number of followers for the users who do not have any tweet.", "query": "SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)", "arabic": "ابحث عن المتوسط ​​لعدد المتابعين للمستخدمين الذين لا يمتلكون أي تغريدة.", "db_id": "twitter_1"}
{"question": "Find the average number of followers for the users who had some tweets.", "query": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)", "arabic": "ابحث عن المتوسط ​​لعدد المتابعين للمستخدمين الذين قاموا بنشر بعض التغريدات.", "db_id": "twitter_1"}
{"question": "Find the maximum and total number of followers of all users.", "query": "SELECT max(followers) ,  sum(followers) FROM user_profiles", "arabic": "ابحث عن الحد الأقصى والإجمالي لعدد المتابعين لجميع المستخدمين.", "db_id": "twitter_1"}
{"question": "Find the names of all the catalog entries.", "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents", "arabic": "ما هي أسماء جميع إدخالات الفهرس؟", "db_id": "product_catalog"}
{"question": "What are all the catalog entry names?", "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents", "arabic": "ما هي جميع أسماء إدخالات الفهرس؟", "db_id": "product_catalog"}
{"question": "Find the list of attribute data types possessed by more than 3 attribute definitions.", "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3", "arabic": "ابحث عن قائمة بأنواع بيانات السمات التي يمتلكها أكثر من 3 تعريفات للسمات.", "db_id": "product_catalog"}
{"question": "What are the attribute data types with more than 3 attribute definitions?", "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3", "arabic": "ما هي أنواع بيانات السمات التي يوجد بها أكثر من 3 تعريفات للسمات؟", "db_id": "product_catalog"}
{"question": "What is the attribute data type of the attribute with name \"Green\"?", "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"", "arabic": "ما هو نوع بيانات السمة التي تحمل اسم \"Green\"؟", "db_id": "product_catalog"}
{"question": "Find the attribute data type for the attribute named \"Green\".", "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"", "arabic": "ابحث عن نوع بيانات السمة التي تحمل اسم \"Green\".", "db_id": "product_catalog"}
{"question": "Find the name and level of catalog structure with level between 5 and 10.", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "arabic": "ابحث عن اسم ومستوى هيكل الفهرس الذي يتراوح مستواه بين 5 و 10.", "db_id": "product_catalog"}
{"question": "What are the name and level of catalog structure with level number between 5 and 10", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "arabic": "ما هي أسماء ومستويات هيكل الفهرس ذي المستوى بين 5 و 10؟", "db_id": "product_catalog"}
{"question": "Find all the catalog publishers whose name contains \"Murray\"", "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"", "arabic": "ابحث عن جميع ناشري الفهارس الذين يحتوي اسمهم على \"Murray\".", "db_id": "product_catalog"}
{"question": "Which catalog publishers have substring \"Murray\" in their names?", "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"", "arabic": "أي ناشري الفهارس يحتوون على مجموعة فرعية \"Murray\" في أسمائهم؟", "db_id": "product_catalog"}
{"question": "Which catalog publisher has published the most catalogs?", "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1", "arabic": "أي ناشري الفهارس قد نشروا أكبر عدد من الفهارس؟", "db_id": "product_catalog"}
{"question": "Find the catalog publisher that has the most catalogs.", "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن ناشر الفهارس الذي قام بنشر أكبر عدد من الفهارس.", "db_id": "product_catalog"}
{"question": "Find the names and publication dates of all catalogs that have catalog level number greater than 5.", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5", "arabic": "ابحث عن أسماء وتواريخ النشر لجميع الفهارس التي تحمل رقم مستوى الفهرس أكبر من 5.", "db_id": "product_catalog"}
{"question": "What are the name and publication date of the catalogs with catalog level number above 5?", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5", "arabic": "ما هي أسماء وتواريخ النشر للفهارس التي يكون رقم مستوى الفهرس الخاص بها أعلى من 5؟", "db_id": "product_catalog"}
{"question": "What are the entry names of catalog with the attribute possessed by most entries.", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي أسماء الإدخالات للفهرس الذي يحتوي على السمة المملوكة بواسطة معظم الإدخالات؟", "db_id": "product_catalog"}
{"question": "Find the entry names of the catalog with the attribute that have the most entries.", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي أسماء الإدخالات للفهرس الذي يحتوي على السمة التي تمتلك أكبر عدد من الإدخالات؟", "db_id": "product_catalog"}
{"question": "What is the entry name of the most expensive catalog (in USD)?", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1", "arabic": "ما هو اسم الإدخال لأغلى فهرس (بالدولار الأمريكي)؟", "db_id": "product_catalog"}
{"question": "Find the entry name of the catalog with the highest price (in USD).", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1", "arabic": "ما هو اسم الإدخال للفهرس ذي أعلى سعر (بالدولار الأمريكي)؟", "db_id": "product_catalog"}
{"question": "What is the level name of the cheapest catalog (in USD)?", "query": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1", "arabic": "ما هو اسم المستوى لأرخص فهرس (بالدولار الأمريكي)؟", "db_id": "product_catalog"}
{"question": "Find the level name of the catalog with the lowest price (in USD).", "query": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1", "arabic": "ما هو اسم المستوى للفهرس ذي أدنى سعر (بالدولار الأمريكي)؟", "db_id": "product_catalog"}
{"question": "What are the average and minimum price (in Euro) of all products?", "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents", "arabic": "ما هي المتوسطة والحد الأدنى للسعر (باليورو) لجميع المنتجات؟", "db_id": "product_catalog"}
{"question": "Give me the average and minimum price (in Euro) of the products.", "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents", "arabic": "أعطني المتوسط والحد الأدنى للسعر (باليورو) للمنتجات.", "db_id": "product_catalog"}
{"question": "What is the product with the highest height? Give me the catalog entry name.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1", "arabic": "ما هو المنتج ذو أعلى ارتفاع؟ قدم لي اسم إدخال الفهرس.", "db_id": "product_catalog"}
{"question": "Which catalog content has the highest height? Give me the catalog entry name.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1", "arabic": "أي منتج في محتوى الفهرس لديه أعلى ارتفاع؟ قدم لي اسم إدخال الفهرس.", "db_id": "product_catalog"}
{"question": "Find the name of the product that has the smallest capacity.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1", "arabic": "ابحث عن اسم المنتج الذي يحمل أقل قدرة.", "db_id": "product_catalog"}
{"question": "Which catalog content has the smallest capacity? Return the catalog entry name.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1", "arabic": "أي من محتوى الفهرس يحمل أقل قدرة؟ قم بإعادة اسم إدخال الفهرس.", "db_id": "product_catalog"}
{"question": "Find the names of all the products whose stock number starts with \"2\".", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"", "arabic": "ما هي أسماء جميع المنتجات التي يبدأ رقم المخزون الخاص بها بـ \"2\"؟", "db_id": "product_catalog"}
{"question": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"", "arabic": "أي من محتويات الفهرس لديها رقم مخزون المنتج الذي يبدأ من \"2\"؟ أظهر أسماء إدخال الفهرس.", "db_id": "product_catalog"}
{"question": "Find the names of catalog entries with level number 8.", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"", "arabic": "ابحث عن أسماء إدخالات الفهرس ذات مستوى رقم 8.", "db_id": "product_catalog"}
{"question": "What are the names of catalog entries with level number 8?", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"", "arabic": "ما هي أسماء إدخالات الفهرس ذات مستوى رقم 8؟", "db_id": "product_catalog"}
{"question": "Find the names of the products with length smaller than 3 or height greater than 5.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5", "arabic": "[Question] ابحث عن أسماء المنتجات التي يكون طولها أقل من 3 أو ارتفاعها أكثر من 5.", "db_id": "product_catalog"}
{"question": "Which catalog contents have length below 3 or above 5? Find the catalog entry names.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5", "arabic": "[Question] أي من محتويات الفهرس لديها طول أقل من 3 أو أعلى من 5؟ ابحث عن أسماء إدخال الفهرس.", "db_id": "product_catalog"}
{"question": "Find the name and attribute ID of the attribute definitions with attribute value 0.", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0", "arabic": "[Question] ابحث عن اسم ومعرف السمة لتعريفات السمات التي يكون قيمة السمة فيها تساوي 0.", "db_id": "product_catalog"}
{"question": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0", "arabic": "[Question] أي تعريفات للسمات تحتوي على قيمة سمة تساوي 0؟ قدم لي اسم السمة ومعرف السمة.", "db_id": "product_catalog"}
{"question": "Find the name and capacity of products with price greater than 700 (in USD).", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700", "arabic": "[Question] ابحث عن اسم وسعة المنتجات التي يكون سعرها أكثر من 700 (بالدولار الأمريكي).", "db_id": "product_catalog"}
{"question": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700", "arabic": "[Question] أي محتوى في الفهرس يحتوي على سعر يزيد عن 700 دولار؟ أظهر أسماء إدخال الفهرس والسعات.", "db_id": "product_catalog"}
{"question": "Find the dates on which more than one revisions were made.", "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1", "arabic": "[Question] ابحث عن التواريخ التي تم فيها عمل أكثر من مراجعة واحدة.", "db_id": "product_catalog"}
{"question": "On which days more than one revisions were made on catalogs.", "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1", "arabic": "[Question] في أي أيام تمت إجراء مراجعات أكثر من مراجعة واحدة على الفهارس.", "db_id": "product_catalog"}
{"question": "How many products are there in the records?", "query": "SELECT count(*) FROM catalog_contents", "arabic": "[Question] كم عدد المنتجات في السجلات؟", "db_id": "product_catalog"}
{"question": "Find the total number of catalog contents.", "query": "SELECT count(*) FROM catalog_contents", "arabic": "[Question] ابحث عن العدد الإجمالي لمحتويات الفهرس.", "db_id": "product_catalog"}
{"question": "Name all the products with next entry ID greater than 8.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8", "arabic": "[Question] اسم جميع المنتجات ذات معرف الإدخال التالي أكبر من 8.", "db_id": "product_catalog"}
{"question": "What are the catalog entry names of the products with next entry ID above 8?", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8", "arabic": "[Question] ما هي أسماء إدخالات الفهرس للمنتجات ذات معرف الإدخال التالي أعلى من 8.", "db_id": "product_catalog"}
{"question": "How many aircrafts do we have?", "query": "SELECT count(*) FROM Aircraft", "arabic": "[Question] كم عدد الطائرات لدينا؟", "db_id": "flight_1"}
{"question": "How many aircrafts exist in the database?", "query": "SELECT count(*) FROM Aircraft", "arabic": "[Question] كم عدد الطائرات الموجودة في قاعدة البيانات؟", "db_id": "flight_1"}
{"question": "Show name and distance for all aircrafts.", "query": "SELECT name ,  distance FROM Aircraft", "arabic": "[Question] أظهر الاسم والمسافة لجميع الطائرات.", "db_id": "flight_1"}
{"question": "What are the names and distances for all airplanes?", "query": "SELECT name ,  distance FROM Aircraft", "arabic": "[Question] ما هي الأسماء والمسافات لجميع الطائرات؟", "db_id": "flight_1"}
{"question": "Show ids for all aircrafts with more than 1000 distance.", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000", "arabic": "[Question] أظهر معرفات جميع الطائرات التي يكون مجموع المسافة فيها أكثر من 1000.", "db_id": "flight_1"}
{"question": "What are the ids of all aircrafts that can cover a distance of more than 1000?", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000", "arabic": "[Question] ما هي معرفات جميع الطائرات التي يمكنها قطع مسافة تزيد عن 1000؟", "db_id": "flight_1"}
{"question": "How many aircrafts have distance between 1000 and 5000?", "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000", "arabic": "[Question] كم عدد الطائرات التي يكون مجموع المسافة فيها بين 1000 و 5000؟", "db_id": "flight_1"}
{"question": "What is the count of aircrafts that have a distance between 1000 and 5000?", "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000", "arabic": "[Question] ما هو عدد الطائرات التي يكون مجموع المسافة فيها بين 1000 و 5000؟", "db_id": "flight_1"}
{"question": "What is the name and distance for aircraft with id 12?", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "arabic": "[Question] ما هو اسم ومسافة الطائرة ذات الرقم تعريفى 12؟", "db_id": "flight_1"}
{"question": "What is the name and distance for the aircraft that has an id of 12?", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "arabic": "[Question] ما هو اسم ومسافة الطائرة التي يكون لديها رقم تعريفى 12؟", "db_id": "flight_1"}
{"question": "What is the minimum, average, and maximum distance of all aircrafts.", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "arabic": "[Question] ما هي الحد الأدنى والمتوسط ​​والحد الأقصى للمسافة لجميع الطائرات.", "db_id": "flight_1"}
{"question": "Return the minimum, average and maximum distances traveled across all aircrafts.", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "arabic": "[Question] قدم الحد الأدنى والمتوسط ​​والحد الأقصى للمسافات المسافة عبر جميع الطائرات.", "db_id": "flight_1"}
{"question": "Show the id and name of the aircraft with the maximum distance.", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "arabic": "[Question] أظهر معرفة واسم الطائرة ذات المسافة القصوى.", "db_id": "flight_1"}
{"question": "What is the id and name of the aircraft that can cover the maximum distance?", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "arabic": "[Question] ما هي معرفة واسم الطائرة التي يمكنها قطع المسافة القصوى؟", "db_id": "flight_1"}
{"question": "Show the name of aircrafts with top three lowest distances.", "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3", "arabic": "[Question] أظهر أسماء الطائرات ذات أقل ثلاث مسافات.", "db_id": "flight_1"}
{"question": "What are the aircrafts with top 3 shortest lengthes? List their names.", "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3", "arabic": "[Question] ما هي الطائرات ذات أقصر ثلاث مسافات؟ قائمة بأسمائها.", "db_id": "flight_1"}
{"question": "Show names for all aircrafts with distances more than the average.", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "arabic": "[Question] أظهر الأسماء لجميع الطائرات التي يكون مجموع المسافة فيها أكثر من المتوسط.", "db_id": "flight_1"}
{"question": "What are the names of all aircrafts that can cover more distances than average?", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "arabic": "[Question] ما هي أسماء جميع الطائرات التي يمكن أن تقطع مسافات أكبر من المتوسط؟", "db_id": "flight_1"}
{"question": "How many employees do we have?", "query": "SELECT count(*) FROM Employee", "arabic": "[Question] كم عدد الموظفين لدينا؟", "db_id": "flight_1"}
{"question": "What is the number of employees?", "query": "SELECT count(*) FROM Employee", "arabic": "[Question] ما هو عدد الموظفين؟", "db_id": "flight_1"}
{"question": "Show name and salary for all employees sorted by salary.", "query": "SELECT name ,  salary FROM Employee ORDER BY salary", "arabic": "[Question] أظهر الاسم والراتب لجميع الموظفين مرتبة حسب الراتب.", "db_id": "flight_1"}
{"question": "What is the name and salary of all employees in order of salary?", "query": "SELECT name ,  salary FROM Employee ORDER BY salary", "arabic": "[Question] ما هو الاسم والراتب لجميع الموظفين مرتبة حسب الراتب؟", "db_id": "flight_1"}
{"question": "Show ids for all employees with at least 100000 salary.", "query": "SELECT eid FROM Employee WHERE salary  >  100000", "arabic": "[Question] أظهر معرفات جميع الموظفين الذين يحصلون على راتب على الأقل 100000.", "db_id": "flight_1"}
{"question": "What is the id of every employee who has at least a salary of  100000?", "query": "SELECT eid FROM Employee WHERE salary  >  100000", "arabic": "[Question] ما هو معرف كل موظف لديه راتب على الأقل 100000؟", "db_id": "flight_1"}
{"question": "How many employees have salary between 100000 and 200000?", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "arabic": "[Question] كم عدد الموظفين الذين لديهم راتب بين 100000 و 200000؟", "db_id": "flight_1"}
{"question": "What is the number of employees that have a salary between 100000 and 200000?", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "arabic": "[Question] ما هو عدد الموظفين الذين لديهم راتب بين 100000 و 200000؟", "db_id": "flight_1"}
{"question": "What is the name and salary for employee with id 242518965?", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "arabic": "[Question] ما هو الاسم والراتب للموظف ذي الرقم تعريفى 242518965؟", "db_id": "flight_1"}
{"question": "What is the name and salary of the employee with the id 242518965?", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "arabic": "[Question] ما هو الاسم والراتب للموظف ذي الرقم تعريفى 242518965؟", "db_id": "flight_1"}
{"question": "What is average and maximum salary of all employees.", "query": "SELECT avg(salary) ,  max(salary) FROM Employee", "arabic": "[Question] ما هو المتوسط ​​والحد الأقصى للراتب لجميع الموظفين.", "db_id": "flight_1"}
{"question": "What is the average and largest salary of all employees?", "query": "SELECT avg(salary) ,  max(salary) FROM Employee", "arabic": "[Question] ما هو المتوسط ​​وأكبر راتب لجميع الموظفين؟", "db_id": "flight_1"}
{"question": "Show the id and name of the employee with maximum salary.", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "arabic": "[Question] أظهر معرفة واسم الموظف ذي الراتب الأقصى.", "db_id": "flight_1"}
{"question": "What is the id and name of the employee with the highest salary?", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "arabic": "[Question] ما هو معرفة واسم الموظف ذي الراتب الأعلى؟", "db_id": "flight_1"}
{"question": "Show the name of employees with three lowest salaries.", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "arabic": "[Question] أظهر أسماء الموظفين ذوي أدنى ثلاث رواتب.", "db_id": "flight_1"}
{"question": "What is the name of the 3 employees who get paid the least?", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "arabic": "[Question] ما هو اسم الثلاثة موظفين الذين يحصلون على أقل أجر؟", "db_id": "flight_1"}
{"question": "Show names for all employees with salary more than the average.", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "arabic": "[Question] أظهر الأسماء لجميع الموظفين الذين لديهم راتب أعلى من المتوسط.", "db_id": "flight_1"}
{"question": "What are the names of all employees who have a salary higher than average?", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "arabic": "[Question] ما هي أسماء جميع الموظفين الذين لديهم راتب أعلى من المتوسط؟", "db_id": "flight_1"}
{"question": "Show the id and salary of Mark Young.", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "arabic": "[Question] أظهر معرف وراتب مارك يونج.", "db_id": "flight_1"}
{"question": "What is the id and salary of the employee named Mark Young?", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "arabic": "[Question] ما هو معرف وراتب الموظف المسمى مارك يونج؟", "db_id": "flight_1"}
{"question": "How many flights do we have?", "query": "SELECT count(*) FROM Flight", "arabic": "[Question] كم عدد الرحلات لدينا؟", "db_id": "flight_1"}
{"question": "What is the number of flights?", "query": "SELECT count(*) FROM Flight", "arabic": "[Question] ما هو عدد الرحلات؟", "db_id": "flight_1"}
{"question": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "arabic": "[Question] أظهر رقم الرحلة والمدينة المنشأ والوجهة لجميع الرحلات مرتبة ترتيباً أبجدياً حسب مدن المغادرة.", "db_id": "flight_1"}
{"question": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "arabic": "[Question] ما هو رقم الرحلة والمدينة المنشأ والوجهة لجميع الرحلات مرتبة أبجدياً حسب مدن المغادرة؟", "db_id": "flight_1"}
{"question": "Show all flight number from Los Angeles.", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "arabic": "[Question] أظهر جميع أرقام الرحلات من لوس أنجلوس.", "db_id": "flight_1"}
{"question": "What are the numbers of all flights coming from Los Angeles?", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "arabic": "[Question] ما هي أرقام جميع الرحلات القادمة من لوس أنجلوس؟", "db_id": "flight_1"}
{"question": "Show origins of all flights with destination Honolulu.", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "arabic": "[Question] أظهر مناشأ جميع الرحلات مع وجهة هونولولو.", "db_id": "flight_1"}
{"question": "What are the origins of all flights that are headed to Honolulu?", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "arabic": "[Question] ما هي مناشأ جميع الرحلات التي تتجه إلى هونولولو؟", "db_id": "flight_1"}
{"question": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "arabic": "[Question] أظهر لي تاريخ المغادرة وتاريخ الوصول لجميع الرحلات من لوس أنجلوس إلى هونولولو.", "db_id": "flight_1"}
{"question": "What are the departure and arrival dates of all flights from LA to Honolulu?", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "arabic": "[Question] ما هي تواريخ المغادرة والوصول لجميع الرحلات من لوس أنجلوس إلى هونولولو؟", "db_id": "flight_1"}
{"question": "Show flight number for all flights with more than 2000 distance.", "query": "SELECT flno FROM Flight WHERE distance  >  2000", "arabic": "[Question] أظهر رقم الرحلة لجميع الرحلات التي تزيد مسافتها عن 2000.", "db_id": "flight_1"}
{"question": "What are the numbers of all flights that can cover a distance of more than 2000?", "query": "SELECT flno FROM Flight WHERE distance  >  2000", "arabic": "[Question] ما هي أرقام جميع الرحلات التي يمكنها التغلب على مسافة أكثر من 2000؟", "db_id": "flight_1"}
{"question": "What is the average price for flights from Los Angeles to Honolulu.", "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "arabic": "[Question] ما هو السعر المتوسط للرحلات من لوس أنجلوس إلى هونولولو.", "db_id": "flight_1"}
{"question": "What is the average price for flights from LA to Honolulu?", "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "arabic": "[Question] ما هو السعر المتوسط للرحلات من لوس أنجلوس إلى هونولولو؟", "db_id": "flight_1"}
{"question": "Show origin and destination for flights with price higher than 300.", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "arabic": "[Question] أظهر المدينة المنشأ والوجهة للرحلات بسعر أعلى من 300.", "db_id": "flight_1"}
{"question": "What is the origin and destination for all flights whose price is higher than 300?", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "arabic": "[Question] ما هي المدينة المنشأ والوجهة لجميع الرحلات التي يكون سعرها أعلى من 300؟", "db_id": "flight_1"}
{"question": "Show the flight number and distance of the flight with maximum price.", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "arabic": "[Question] أظهر رقم الرحلة والمسافة للرحلة ذات السعر الأعلى.", "db_id": "flight_1"}
{"question": "What is the flight number and its distance for the one with the maximum price?", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "arabic": "[Question] ما هو رقم الرحلة ومسافتها لتلك ذات السعر الأعلى؟", "db_id": "flight_1"}
{"question": "Show the flight number of flights with three lowest distances.", "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3", "arabic": "[Question] أظهر رقم الرحلة للرحلات ذات الأميال الثلاثة الأقل.", "db_id": "flight_1"}
{"question": "What are the numbers of the shortest flights?", "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3", "arabic": "[Question] ما هي أرقام الرحلات الأقصر؟", "db_id": "flight_1"}
{"question": "What is the average distance and average price for flights from Los Angeles.", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "arabic": "[Question] ما هي المسافة والسعر المتوسطين للرحلات من لوس أنجلوس؟", "db_id": "flight_1"}
{"question": "What is the average distance and price for all flights from LA?", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "arabic": "[Question] ما هي المسافة والسعر المتوسطين لجميع الرحلات من لوس أنجلوس؟", "db_id": "flight_1"}
{"question": "Show all origins and the number of flights from each origin.", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "arabic": "[Question] أظهر جميع المدن المنشأ وعدد الرحلات من كل مدينة.", "db_id": "flight_1"}
{"question": "For each origin, how many flights came from there?", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "arabic": "[Question] لكل مدينة منشأ، كم عدد الرحلات التي أتت منها؟", "db_id": "flight_1"}
{"question": "Show all destinations and the number of flights to each destination.", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "arabic": "[Question] أظهر جميع الوجهات وعدد الرحلات إلى كل وجهة.", "db_id": "flight_1"}
{"question": "What are the destinations and number of flights to each one?", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "arabic": "[Question] ما هي الوجهات وعدد الرحلات إلى كل واحدة؟", "db_id": "flight_1"}
{"question": "Which origin has most number of flights?", "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أي منشأ لديه أكبر عدد من الرحلات؟", "db_id": "flight_1"}
{"question": "What place has the most flights coming from there?", "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو المكان الذي يحتوي على أكبر عدد من الرحلات القادمة منه؟", "db_id": "flight_1"}
{"question": "Which destination has least number of flights?", "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "arabic": "[Question] أي وجهة لديها أقل عدد من الرحلات؟", "db_id": "flight_1"}
{"question": "What destination has the fewest number of flights?", "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "arabic": "[Question] ما هي الوجهة التي تحتوي على أقل عدد من الرحلات؟", "db_id": "flight_1"}
{"question": "What is the aircraft name for the flight with number 99", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "arabic": "[Question] ما هو اسم الطائرة للرحلة ذات الرقم 99؟", "db_id": "flight_1"}
{"question": "What is the name of the aircraft that was on flight number 99?", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "arabic": "[Question] ما هو اسم الطائرة التي كانت في رحلة رقم 99؟", "db_id": "flight_1"}
{"question": "Show all flight numbers with aircraft Airbus A340-300.", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "arabic": "[Question] أظهر جميع أرقام الرحلات مع الطائرة Airbus A340-300.", "db_id": "flight_1"}
{"question": "What are the flight numbers for the aircraft Airbus A340-300?", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "arabic": "[Question] ما هي أرقام الرحلات للطائرة Airbus A340-300؟", "db_id": "flight_1"}
{"question": "Show aircraft names and number of flights for each aircraft.", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "arabic": "[Question] أظهر أسماء الطائرات وعدد الرحلات لكل طائرة.", "db_id": "flight_1"}
{"question": "What is the name of each aircraft and how many flights does each one complete?", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "arabic": "[Question] ما هو اسم كل طائرة وكم عدد الرحلات التي تقوم بها كل واحدة؟", "db_id": "flight_1"}
{"question": "Show names for all aircraft with at least two flights.", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "arabic": "[Question] أظهر الأسماء لجميع الطائرات التي تقوم بما لا يقل عن رحلتين.", "db_id": "flight_1"}
{"question": "What are the names for all aircrafts with at least 2 flights?", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "arabic": "[Question] ما هي أسماء جميع الطائرات التي تقوم بما لا يقل عن 2 رحلة؟", "db_id": "flight_1"}
{"question": "How many employees have certificate.", "query": "SELECT count(DISTINCT eid) FROM Certificate", "arabic": "[Question] كم عدد الموظفين الذين لديهم شهادة.", "db_id": "flight_1"}
{"question": "What is the count of distinct employees with certificates?", "query": "SELECT count(DISTINCT eid) FROM Certificate", "arabic": "[Question] ما هو عدد الموظفين المميزين الذين لديهم شهادات؟", "db_id": "flight_1"}
{"question": "Show ids for all employees who don't have a certificate.", "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate", "arabic": "[Question] أظهر الأرقام تعريفية لجميع الموظفين الذين ليس لديهم شهادة.", "db_id": "flight_1"}
{"question": "What are the ids of all employees that don't have certificates?", "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate", "arabic": "[Question] ما هي الأرقام تعريفية لجميع الموظفين الذين ليس لديهم شهادات؟", "db_id": "flight_1"}
{"question": "Show names for all aircrafts of which John Williams has certificates.", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "arabic": "[Question] أظهر الأسماء لجميع الطائرات التي يحمل جون ويليامز شهادات عليها.", "db_id": "flight_1"}
{"question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "arabic": "[Question] ما هي أسماء جميع الطائرات التي يحمل جون ويليامز شهادات لتكون قادرًا على الطيران بها؟", "db_id": "flight_1"}
{"question": "Show names for all employees who have certificate of Boeing 737-800.", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "arabic": "[Question] أظهر الأسماء لجميع الموظفين الذين لديهم شهادة للطائرة Boeing 737-800.", "db_id": "flight_1"}
{"question": "What are the names of all employees who have a certificate to fly Boeing 737-800?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "arabic": "[Question] ما هي أسماء جميع الموظفين الذين لديهم شهادة للطيران على Boeing 737-800؟", "db_id": "flight_1"}
{"question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "arabic": "[Question] أظهر الأسماء لجميع الموظفين الذين لديهم شهادات على كل من Boeing 737-800 و Airbus A340-300.", "db_id": "flight_1"}
{"question": "What are the names of all employees who can fly both the Boeing 737-800 and the Airbus A340-300?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "arabic": "[Question] ما هي أسماء جميع الموظفين الذين يستطيعون الطيران بكل من Boeing 737-800 و Airbus A340-300؟", "db_id": "flight_1"}
{"question": "Show names for all employees who do not have certificate of Boeing 737-800.", "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "arabic": "[Question] أظهر الأسماء لجميع الموظفين الذين ليس لديهم شهادة للطائرة Boeing 737-800.", "db_id": "flight_1"}
{"question": "What are the names of all employees who are not certified to fly Boeing 737-800s?", "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "arabic": "[Question] ما هي أسماء جميع الموظفين الذين لا يحملون شهادة للطيران على طائرات Boeing 737-800؟", "db_id": "flight_1"}
{"question": "Show the name of aircraft which fewest people have its certificate.", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أظهر اسم الطائرة التي يملك أقل عدد من الأشخاص شهادتها.", "db_id": "flight_1"}
{"question": "What are the names of the aircraft that the least people are certified to fly?", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هي أسماء الطائرات التي يحملها أقل عدد من الأشخاص شهادات للطيران بها؟", "db_id": "flight_1"}
{"question": "Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "arabic": "[Question] أظهر الاسم والمسافة للطائرات التي تمتلك مسافة أكثر من 5000 والتي يمتلكها على الأقل 5 أشخاص شهادات للطيران بها.", "db_id": "flight_1"}
{"question": "What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "arabic": "[Question] ما هو اسم ومسافة كل طائرة يمكنها التغطية لمسافة أكثر من 5000 والتي يمتلكها على الأقل 5 أشخاص شهادات للطيران بها؟", "db_id": "flight_1"}
{"question": "what is the salary and name of the employee who has the most number of aircraft certificates?", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هي الراتب واسم الموظف الذي يمتلك أكبر عدد من شهادات الطائرات؟", "db_id": "flight_1"}
{"question": "What is the salaray and name of the employee that is certified to fly the most planes?", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو الراتب واسم الموظف الذي يحمل شهادات لطيارة الطائرات الأكثر؟", "db_id": "flight_1"}
{"question": "What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو الراتب واسم الموظف الذي يحمل أكبر عدد من الشهادات على الطائرات التي تتجاوز مسافتها 5000؟", "db_id": "flight_1"}
{"question": "What is the salaray and name of the employee with the most certificates to fly planes more than 5000?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو الراتب واسم الموظف الذي يحمل أكبر عدد من الشهادات للطيران على الطائرات التي تتجاوز 5000؟", "db_id": "flight_1"}
{"question": "How many allergies are there?", "query": "SELECT count(DISTINCT allergy) FROM Allergy_type", "arabic": "[Question] كم عدد حساسيات الطعام؟", "db_id": "allergy_1"}
{"question": "How many allergy entries are there?", "query": "SELECT count(DISTINCT allergy) FROM Allergy_type", "arabic": "[Question] كم عدد إدخالات الحساسيات؟", "db_id": "allergy_1"}
{"question": "How many different allergy types exist?", "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type", "arabic": "[Question] كم عدد أنواع الحساسيات المختلفة؟", "db_id": "allergy_1"}
{"question": "How many distinct allergies are there?", "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type", "arabic": "[Question] كم عدد الحساسيات المتميزة؟", "db_id": "allergy_1"}
{"question": "Show all allergy types.", "query": "SELECT DISTINCT allergytype FROM Allergy_type", "arabic": "[Question] أظهر جميع أنواع الحساسيات.", "db_id": "allergy_1"}
{"question": "What are the different allergy types?", "query": "SELECT DISTINCT allergytype FROM Allergy_type", "arabic": "[Question] ما هي أنواع الحساسيات المختلفة؟", "db_id": "allergy_1"}
{"question": "Show all allergies and their types.", "query": "SELECT allergy ,  allergytype FROM Allergy_type", "arabic": "[Question] أظهر جميع الحساسيات وأنواعها.", "db_id": "allergy_1"}
{"question": "What are the allergies and their types?", "query": "SELECT allergy ,  allergytype FROM Allergy_type", "arabic": "[Question] ما هي الحساسيات وأنواعها؟", "db_id": "allergy_1"}
{"question": "Show all allergies with type food.", "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"", "arabic": "[Question] أظهر جميع الحساسيات بنوع الطعام.", "db_id": "allergy_1"}
{"question": "What are all the different food allergies?", "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"", "arabic": "[Question] ما هي جميع أنواع حساسيات الطعام؟", "db_id": "allergy_1"}
{"question": "What is the type of allergy Cat?", "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"", "arabic": "[Question] ما هو نوع حساسية القط؟", "db_id": "allergy_1"}
{"question": "What is allergy type of a cat allergy?", "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"", "arabic": "[Question] ما هو نوع حساسية القطة؟", "db_id": "allergy_1"}
{"question": "How many allergies have type animal?", "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"", "arabic": "[Question] كم عدد الحساسيات التي تحمل نوع \"حيوان\"؟", "db_id": "allergy_1"}
{"question": "How many animal type allergies exist?", "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"", "arabic": "[Question] كم عدد حساسيات نوع الحيوان الموجودة؟", "db_id": "allergy_1"}
{"question": "Show all allergy types and the number of allergies in each type.", "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype", "arabic": "[Question] أظهر جميع أنواع الحساسيات وعدد الحساسيات في كل نوع.", "db_id": "allergy_1"}
{"question": "What are the allergy types and how many allergies correspond to each one?", "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype", "arabic": "[Question] ما هي أنواع الحساسيات وكم عدد الحساسيات المتوافقة مع كل نوع؟", "db_id": "allergy_1"}
{"question": "Which allergy type has most number of allergies?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أي نوع من أنواع الحساسيات يحتوي على أكبر عدد من الحساسيات؟", "db_id": "allergy_1"}
{"question": "Which allergy type is most common?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أي نوع من أنواع الحساسيات هو الأكثر شيوعًا؟", "db_id": "allergy_1"}
{"question": "Which allergy type has least number of allergies?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1", "arabic": "[Question] أي نوع من أنواع الحساسيات يحتوي على أقل عدد من الحساسيات؟", "db_id": "allergy_1"}
{"question": "Which allergy type is the least common?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1", "arabic": "[Question] أي نوع من أنواع الحساسيات هو الأقل شيوعًا؟", "db_id": "allergy_1"}
{"question": "How many students are there?", "query": "SELECT count(*) FROM Student", "arabic": "[Question] كم عدد الطلاب؟", "db_id": "allergy_1"}
{"question": "What is the total number of students?", "query": "SELECT count(*) FROM Student", "arabic": "[Question] ما هو العدد الإجمالي للطلاب؟", "db_id": "allergy_1"}
{"question": "Show first name and last name for all students.", "query": "SELECT Fname ,  Lname FROM Student", "arabic": "[Question] أظهر الاسم الأول والاسم الأخير لجميع الطلاب.", "db_id": "allergy_1"}
{"question": "What are the full names of all students", "query": "SELECT Fname ,  Lname FROM Student", "arabic": "[Question] ما هي الأسماء الكاملة لجميع الطلاب؟", "db_id": "allergy_1"}
{"question": "How many different advisors are listed?", "query": "SELECT count(DISTINCT advisor) FROM Student", "arabic": "[Question] كم عدد المستشارين المختلفين المدرجين؟", "db_id": "allergy_1"}
{"question": "How many advisors are there?", "query": "SELECT count(DISTINCT advisor) FROM Student", "arabic": "[Question] كم عدد المستشارين؟", "db_id": "allergy_1"}
{"question": "Show all majors.", "query": "SELECT DISTINCT Major FROM Student", "arabic": "[Question] أظهر جميع التخصصات.", "db_id": "allergy_1"}
{"question": "What are the different majors?", "query": "SELECT DISTINCT Major FROM Student", "arabic": "[Question] ما هي التخصصات المختلفة؟", "db_id": "allergy_1"}
{"question": "Show all cities where students live.", "query": "SELECT DISTINCT city_code FROM Student", "arabic": "[Question] أظهر جميع المدن التي يعيش فيها الطلاب.", "db_id": "allergy_1"}
{"question": "What cities do students live in?", "query": "SELECT DISTINCT city_code FROM Student", "arabic": "[Question] في أي مدن يعيش الطلاب؟", "db_id": "allergy_1"}
{"question": "Show first name, last name, age for all female students. Their sex is F.", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'", "arabic": "[Question] أظهر الاسم الأول، الاسم الأخير، العمر لجميع الطالبات. جنسهن هو \"أنثى\".", "db_id": "allergy_1"}
{"question": "What are the full names and ages for all female students whose sex is F?", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'", "arabic": "[Question] ما هي الأسماء الكاملة والأعمار لجميع الطالبات اللواتي يكون جنسهن \"أنثى\"؟", "db_id": "allergy_1"}
{"question": "Show student ids for all male students.", "query": "SELECT StuID FROM Student WHERE Sex  =  'M'", "arabic": "[Question] أظهر معرف الطالب لجميع الطلاب الذكور.", "db_id": "allergy_1"}
{"question": "What are the student ids for all male students?", "query": "SELECT StuID FROM Student WHERE Sex  =  'M'", "arabic": "[Question] ما هي معرف الطالب لجميع الطلاب الذكور؟", "db_id": "allergy_1"}
{"question": "How many students are age 18?", "query": "SELECT count(*) FROM Student WHERE age  =  18", "arabic": "[Question] كم عدد الطلاب البالغين من العمر 18 عامًا؟", "db_id": "allergy_1"}
{"question": "How many students are 18 years old?", "query": "SELECT count(*) FROM Student WHERE age  =  18", "arabic": "[Question] كم عدد الطلاب البالغين من العمر 18 عامًا؟", "db_id": "allergy_1"}
{"question": "Show all student ids who are older than 20.", "query": "SELECT StuID FROM Student WHERE age  >  20", "arabic": "[Question] أظهر جميع معرف الطالب الذين تتجاوز أعمارهم 20 عامًا.", "db_id": "allergy_1"}
{"question": "What are the student ids for students over 20 years old?", "query": "SELECT StuID FROM Student WHERE age  >  20", "arabic": "[Question] ما هي معرف الطالب للطلاب الذين تجاوزوا سن 20 عامًا؟", "db_id": "allergy_1"}
{"question": "Which city does the student whose last name is \"Kim\" live in?", "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"", "arabic": "[Question] في أي مدينة يعيش الطالب الذي يحمل اللقب \"Kim\"؟", "db_id": "allergy_1"}
{"question": "Give the city that the student whose family name is Kim lives in.", "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"", "arabic": "[Question] أعط المدينة التي يعيش فيها الطالب الذي يحمل اسم العائلة Kim.", "db_id": "allergy_1"}
{"question": "Who is the advisor of student with ID 1004?", "query": "SELECT Advisor FROM Student WHERE StuID  =  1004", "arabic": "[Question] من هو مستشار الطالب ذو المعرف 1004؟", "db_id": "allergy_1"}
{"question": "Who advises student 1004?", "query": "SELECT Advisor FROM Student WHERE StuID  =  1004", "arabic": "[Question] من يُقدم الاستشارة للطالب 1004؟", "db_id": "allergy_1"}
{"question": "How many students live in HKG or CHI?", "query": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\"", "arabic": "[Question] كم عدد الطلاب الذين يعيشون في HKG أو CHI؟", "db_id": "allergy_1"}
{"question": "Give the number of students living in either HKG or CHI.", "query": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\"", "arabic": "[Question] قدم عدد الطلاب الذين يعيشون في إما HKG أو CHI.", "db_id": "allergy_1"}
{"question": "Show the minimum, average, and maximum age of all students.", "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student", "arabic": "[Question] أظهر أدنى، وسط، وأعلى عمر لجميع الطلاب.", "db_id": "allergy_1"}
{"question": "What is the minimum, mean, and maximum age across all students?", "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student", "arabic": "[Question] ما هو الحد الأدنى، المتوسط، والحد الأقصى للعمر عبر جميع الطلاب؟", "db_id": "allergy_1"}
{"question": "What is the last name of the youngest student?", "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)", "arabic": "[Question] ما هو اسم العائلة لأصغر طالب؟", "db_id": "allergy_1"}
{"question": "Provide the last name of the youngest student.", "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)", "arabic": "[Question] قدم اسم العائلة لأصغر طالب.", "db_id": "allergy_1"}
{"question": "Show the student id of the oldest student.", "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)", "arabic": "[Question] أظهر معرف الطالب لأكبر طالب.", "db_id": "allergy_1"}
{"question": "What student id corresponds to the oldest student?", "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)", "arabic": "[Question] ما هو معرف الطالب الذي يتوافق مع أكبر طالب؟", "db_id": "allergy_1"}
{"question": "Show all majors and corresponding number of students.", "query": "SELECT major ,  count(*) FROM Student GROUP BY major", "arabic": "[Question] أظهر جميع التخصصات وعدد الطلاب المقابل.", "db_id": "allergy_1"}
{"question": "How many students are there for each major?", "query": "SELECT major ,  count(*) FROM Student GROUP BY major", "arabic": "[Question] كم عدد الطلاب هناك لكل تخصص؟", "db_id": "allergy_1"}
{"question": "Which major has most number of students?", "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أي تخصص يحتوي على أكبر عدد من الطلاب؟", "db_id": "allergy_1"}
{"question": "What is the largest major?", "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو أكبر تخصص؟", "db_id": "allergy_1"}
{"question": "Show all ages and corresponding number of students.", "query": "SELECT age ,  count(*) FROM Student GROUP BY age", "arabic": "[Question] أظهر جميع الأعمار وعدد الطلاب المقابل.", "db_id": "allergy_1"}
{"question": "How old is each student and how many students are each age?", "query": "SELECT age ,  count(*) FROM Student GROUP BY age", "arabic": "[Question] كم يبلغ عمر كل طالب وكم عدد الطلاب في كل فئة عمرية؟", "db_id": "allergy_1"}
{"question": "Show the average age for male and female students.", "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex", "arabic": "[Question] أظهر العمر المتوسط للطلاب الذكور والإناث.", "db_id": "allergy_1"}
{"question": "What are the average ages for male and female students?", "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex", "arabic": "[Question] ما هي الأعمار المتوسطة للطلاب الذكور والإناث؟", "db_id": "allergy_1"}
{"question": "Show all cities and corresponding number of students.", "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code", "arabic": "[Question] أظهر جميع المدن وعدد الطلاب المقابل.", "db_id": "allergy_1"}
{"question": "How many students live in each city?", "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code", "arabic": "[Question] كم عدد الطلاب الذين يعيشون في كل مدينة؟", "db_id": "allergy_1"}
{"question": "Show all advisors and corresponding number of students.", "query": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor", "arabic": "[Question] أظهر جميع المستشارين وعدد الطلاب المقابل.", "db_id": "allergy_1"}
{"question": "How many students does each advisor have?", "query": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor", "arabic": "[Question] كم عدد الطلاب الذين يتابعون كل مستشار؟", "db_id": "allergy_1"}
{"question": "Which advisor has most number of students?", "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أي مستشار لديه أكبر عدد من الطلاب؟", "db_id": "allergy_1"}
{"question": "Give the advisor with the most students.", "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] قدم المستشار الذي لديه أكبر عدد من الطلاب.", "db_id": "allergy_1"}
{"question": "How many students have cat allergies?", "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\"", "arabic": "[Question] كم عدد الطلاب الذين يعانون من حساسية تجاه القطط؟", "db_id": "allergy_1"}
{"question": "How many students are affected by cat allergies?", "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\"", "arabic": "[Question] كم عدد الطلاب الذين يتأثرون بحساسية تجاه القطط؟", "db_id": "allergy_1"}
{"question": "Show all student IDs who have at least two allergies.", "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2", "arabic": "[Question] أظهر جميع معرف الطلاب الذين يمتلكون ما لا يقل عن حساسيةين.", "db_id": "allergy_1"}
{"question": "What are the students ids of students who have more than one allergy?", "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2", "arabic": "[Question] ما هي معرف الطلاب الذين يمتلكون أكثر من حساسية واحدة؟", "db_id": "allergy_1"}
{"question": "What are the student ids of students who don't have any allergies?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy", "arabic": "[Question] ما هي معرف الطلاب الذين ليس لديهم أي حساسيات؟", "db_id": "allergy_1"}
{"question": "Which students are unaffected by allergies?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy", "arabic": "[Question] أي الطلاب لا تؤثر بهم الحساسيات؟", "db_id": "allergy_1"}
{"question": "How many female students have milk or egg allergies?", "query": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\"", "arabic": "[Question] كم عدد الطالبات اللاتي يعانين من حساسية تجاه الحليب أو البيض؟", "db_id": "allergy_1"}
{"question": "How many students who are female are allergic to milk or eggs?", "query": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\"", "arabic": "[Question] كم عدد الطلاب اللواتي هن إناث واللاتي يعانين من حساسية تجاه الحليب أو البيض؟", "db_id": "allergy_1"}
{"question": "How many students have a food allergy?", "query": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\"", "arabic": "[Question] كم عدد الطلاب الذين يعانون من حساسية غذائية؟", "db_id": "allergy_1"}
{"question": "How many students are affected by food related allergies?", "query": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\"", "arabic": "[Question] كم عدد الطلاب الذين يتأثرون بالحساسية المتعلقة بالطعام؟", "db_id": "allergy_1"}
{"question": "Which allergy has most number of students affected?", "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أي حساسية لديها أكبر عدد من الطلاب المتأثرين؟", "db_id": "allergy_1"}
{"question": "Which allergy is the most common?", "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أي حساسية هي الأكثر شيوعًا؟", "db_id": "allergy_1"}
{"question": "Show all allergies with number of students affected.", "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy", "arabic": "[Question] أظهر جميع الحساسيات مع عدد الطلاب المتأثرين.", "db_id": "allergy_1"}
{"question": "How many students have each different allergy?", "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy", "arabic": "[Question] كم عدد الطلاب الذين يعانون من كل حساسية مختلفة؟", "db_id": "allergy_1"}
{"question": "Show all allergy type with number of students affected.", "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype", "arabic": "[Question] أظهر جميع أنواع الحساسيات مع عدد الطلاب المتأثرين.", "db_id": "allergy_1"}
{"question": "How many students are affected by each allergy type?", "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype", "arabic": "[Question] كم عدد الطلاب الذين يتأثرون بكل نوع من أنواع الحساسيات؟", "db_id": "allergy_1"}
{"question": "Find the last name and age of the student who has allergy to both milk and cat.", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "arabic": "[Question] ابحث عن اسم العائلة والعمر للطالب الذي لديه حساسية تجاه الحليب والقطط.", "db_id": "allergy_1"}
{"question": "What are the last names and ages of the students who are allergic to milk and cat?", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "arabic": "[Question] ما هي أسماء العائلة والأعمار للطلاب الذين يعانون من حساسية تجاه الحليب والقطط؟", "db_id": "allergy_1"}
{"question": "What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies.", "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy", "arabic": "[Question] ما هي الحساسيات وأنواعها التي يعاني منها الطالب بالاسم ليزا؟ وقم بترتيب النتيجة حسب اسم الحساسيات.", "db_id": "allergy_1"}
{"question": "What are the allergies the girl named Lisa has? And what are the types of them? Order the result by allergy names.", "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy", "arabic": "[Question] ما هي الحساسيات التي تعاني منها الفتاة بالاسم ليزا؟ وما هي أنواعها؟ قم بترتيب النتيجة حسب أسماء الحساسيات.", "db_id": "allergy_1"}
{"question": "Find the first name and gender of the student who has allergy to milk but not cat.", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "arabic": "[Question] ابحث عن الاسم الأول والجنس للطالب الذي يعاني من حساسية تجاه الحليب ولكن ليس القطط.", "db_id": "allergy_1"}
{"question": "What are the first name and gender of the students who have allergy to milk but can put up with cats?", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "arabic": "[Question] ما هي الأسماء الأولى والأجناس للطلاب الذين يعانون من حساسية تجاه الحليب ولكن يمكنهم التحمل من القطط؟", "db_id": "allergy_1"}
{"question": "Find the average age of the students who have allergies with food and animal types.", "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")", "arabic": "[Question] ما هو متوسط العمر للطلاب الذين يعانون من حساسيات ذات أنواع الطعام والحيوانات؟", "db_id": "allergy_1"}
{"question": "How old are the students with allergies to food and animal types on average?", "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")", "arabic": "[Question] ما هو عمر الطلاب الذين يعانون من حساسيات ذات أنواع الطعام والحيوانات بشكل متوسط؟", "db_id": "allergy_1"}
{"question": "List the first and last name of the students who do not have any food type allergy.", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "arabic": "[Question] قم بأعرض الاسم الأول واسم العائلة للطلاب الذين ليس لديهم أي حساسية من نوع الطعام.", "db_id": "allergy_1"}
{"question": "What is the full name of each student who is not allergic to any type of food.", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "arabic": "[Question] ما هو الاسم الكامل لكل طالب ليس لديه حساسية من أي نوع من أنواع الطعام.", "db_id": "allergy_1"}
{"question": "Find the number of male (sex is 'M') students who have some food type allery.", "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "arabic": "[Question] اعثر على عدد الطلاب الذكور (الجنس 'M') الذين يعانون من حساسية من نوع ما للطعام.", "db_id": "allergy_1"}
{"question": "How many male students (sex is 'M') are allergic to any type of food?", "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "arabic": "[Question] كم عدد الطلاب الذكور (الجنس 'M') الذين يعانون من حساسية من أي نوع من الأطعمة؟", "db_id": "allergy_1"}
{"question": "Find the different first names and cities of the students who have allergy to milk or cat.", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"", "arabic": "[Question] اعثر على الأسماء الأولى المختلفة ومدن الطلاب الذين يعانون من حساسية تجاه الحليب أو القط.", "db_id": "allergy_1"}
{"question": "What are the distinct first names and cities of the students who have allergy either to milk or to cat?", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"", "arabic": "[Question] ما هي الأسماء الأولى المميزة ومدن الطلاب الذين يعانون من حساسية إما تجاه الحليب أو تجاه القط؟", "db_id": "allergy_1"}
{"question": "Find the number of students who are older than 18 and do not have allergy to either food or animal.", "query": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")", "arabic": "[Question] اعثر على عدد الطلاب الذين يتجاوزون سن الثامنة عشرة وليس لديهم حساسية إما للطعام أو للحيوانات.", "db_id": "allergy_1"}
{"question": "How many students are over 18 and do not have allergy to food type or animal type?", "query": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")", "arabic": "[Question] كم عدد الطلاب الذين تتجاوز أعمارهم الثامنة عشرة وليس لديهم حساسية إما للطعام أو للحيوانات؟", "db_id": "allergy_1"}
{"question": "Find the first name and major of the students who are not allegry to soy.", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "arabic": "[Question] اعثر على الاسم الأول والتخصص للطلاب الذين ليسوا مصابين بحساسية تجاه فول الصويا.", "db_id": "allergy_1"}
{"question": "What are the first name and major of the students who are able to consume soy?", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "arabic": "[Question] ما هي الأسماء الأولى والتخصصات للطلاب الذين يستطيعون تناول فول الصويا؟", "db_id": "allergy_1"}
{"question": "A list of the top 5 countries by number of invoices. List country name and number of invoices.", "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;", "arabic": "[Question] قائمة بأعلى 5 دول من حيث عدد الفواتير. عرض اسم الدولة وعدد الفواتير.", "db_id": "store_1"}
{"question": "What are the top 5 countries by number of invoices and how many do they have?", "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;", "arabic": "[Question] ما هي أسماء أعلى 5 دول من حيث عدد الفواتير وكم عددها؟", "db_id": "store_1"}
{"question": "A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.", "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;", "arabic": "[Question] قائمة بأعلى 8 دول من حيث حجم الفواتير الإجمالي. عرض اسم الدولة وحجم الفاتورة الإجمالي.", "db_id": "store_1"}
{"question": "What are the names of the top 8 countries by total invoice size and what are those sizes?", "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;", "arabic": "[Question] ما هي أسماء أعلى 8 دول من حيث حجم الفواتير الإجمالي وما هي تلك الأحجام؟", "db_id": "store_1"}
{"question": "A list of the top 10 countries by average invoice size. List country name and average invoice size.", "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;", "arabic": "[Question] قائمة بأعلى 10 دول من حيث حجم الفواتير المتوسط. عرض اسم الدولة وحجم الفاتورة المتوسط.", "db_id": "store_1"}
{"question": "What are the names of the countries and average invoice size of the top countries by size?", "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;", "arabic": "[Question] ما هي أسماء الدول وحجم الفاتورة المتوسط لأكبر الدول من حيث الحجم؟", "db_id": "store_1"}
{"question": "Find out 5 customers who most recently purchased something. List customers' first and last name.", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;", "arabic": "[Question] اعثر على 5 عملاء قاموا بشراء شيء مؤخرًا. عرض أسماء العملاء الأول والأخير.", "db_id": "store_1"}
{"question": "What are the first and last names of the 5 customers who purchased something most recently?", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;", "arabic": "[Question] ما هي أسماء العملاء الخمسة الذين قاموا بشراء شيء مؤخرًا؟", "db_id": "store_1"}
{"question": "Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders.", "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;", "arabic": "[Question] اعثر على أعلى 10 عملاء من حيث العدد الإجمالي للطلبات. عرض أسماء العملاء الأول والأخير وإجمالي عدد الطلبات.", "db_id": "store_1"}
{"question": "What are the top 10 customers' first and last names by total number of orders and how many orders did they make?", "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;", "arabic": "[Question] ما هي أسماء العملاء العشرة الأوائل من حيث إجمالي عدد الطلبات وكم كان عدد الطلبات الخاصة بهم؟", "db_id": "store_1"}
{"question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.", "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;", "arabic": "[Question] قائمة بأعلى 10 عملاء من حيث إجمالي المبيعات الإجمالية. عرض أسماء العملاء الأول والأخير وإجمالي المبيعات الإجمالية.", "db_id": "store_1"}
{"question": "What are the top 10 customers' first and last names with the highest gross sales, and also what are the sales?", "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;", "arabic": "[Question] ما هي أسماء العملاء العشرة الأوائل من حيث أعلى إجمالي مبيعات، وكذلك ما هي المبيعات؟", "db_id": "store_1"}
{"question": "List the top 5 genres by number of tracks. List genres name and total tracks.", "query": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;", "arabic": "[Question] قائمة بأعلى 5 أنواع موسيقية من حيث عدد المسارات. عرض اسم الأنواع وإجمالي المسارات.", "db_id": "store_1"}
{"question": "How many tracks does each genre have and what are the names of the top 5?", "query": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;", "arabic": "[Question] كم عدد المسارات لكل نوع موسيقي وما هي أسماء أعلى 5 أنواع؟", "db_id": "store_1"}
{"question": "List every album's title.", "query": "SELECT title FROM albums;", "arabic": "[Question] قائمة بعناوين جميع الألبومات.", "db_id": "store_1"}
{"question": "What are the titles of all the albums?", "query": "SELECT title FROM albums;", "arabic": "[Question] ما هي عناوين جميع الألبومات؟", "db_id": "store_1"}
{"question": "List every album ordered by album title in ascending order.", "query": "SELECT title FROM albums ORDER BY title;", "arabic": "[Question] قائمة بعناوين كل الألبومات مرتبة حسب عنوان الألبوم بترتيب تصاعدي.", "db_id": "store_1"}
{"question": "What are the titles of all the albums alphabetically ascending?", "query": "SELECT title FROM albums ORDER BY title;", "arabic": "[Question] ما هي عناوين جميع الألبومات ترتيبًا ألفبائيًا بالتصاعدي؟", "db_id": "store_1"}
{"question": "List every album whose title starts with A in alphabetical order.", "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;", "arabic": "[Question] قائمة بكل الألبومات التي يبدأ عنوانها بحرف A بترتيب ألفبائي.", "db_id": "store_1"}
{"question": "What are the titles of all albums that start with A in alphabetical order?", "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;", "arabic": "[Question] ما هي عناوين جميع الألبومات التي تبدأ بحرف A بترتيب ألفبائي؟", "db_id": "store_1"}
{"question": "List the customers first and last name of 10 least expensive invoices.", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;", "arabic": "[Question] قائمة بأسماء العملاء الأول والأخير لأقل 10 فواتير مكلفة.", "db_id": "store_1"}
{"question": "What are the first and last names of the customers with the 10 cheapest invoices?", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;", "arabic": "[Question] ما هي أسماء العملاء الأول والأخير للفواتير العشر الأقل تكلفة؟", "db_id": "store_1"}
{"question": "List total amount of  invoice from Chicago, IL.", "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "arabic": "[Question] قائمة بإجمالي المبلغ في الفاتورة من شيكاغو، إلينوي.", "db_id": "store_1"}
{"question": "What are the total amount of money in the invoices billed from Chicago, Illinois?", "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "arabic": "[Question] ما هو إجمالي المبلغ في الفواتير المكلفة من شيكاغو، إلينوي؟", "db_id": "store_1"}
{"question": "List the number of invoices from Chicago, IL.", "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "arabic": "[Question] قائمة بعدد الفواتير من شيكاغو، إلينوي.", "db_id": "store_1"}
{"question": "How many invoices were billed from Chicago, IL?", "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "arabic": "[Question] كم عدد الفواتير التي تم تكليفها من شيكاغو، إلينوي؟", "db_id": "store_1"}
{"question": "List the number of invoices from the US, grouped by state.", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;", "arabic": "[Question] قائمة بعدد الفواتير من الولايات المتحدة، مجمعة حسب الولاية.", "db_id": "store_1"}
{"question": "How many invoices were billed from each state?", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;", "arabic": "[Question] كم عدد الفواتير التي تم تكليفها من كل ولاية؟", "db_id": "store_1"}
{"question": "List the state in the US with the most invoices.", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;", "arabic": "[Question] قائمة بالولاية في الولايات المتحدة التي بها أكبر عدد من الفواتير.", "db_id": "store_1"}
{"question": "What are the states with the most invoices?", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;", "arabic": "[Question] ما هي الولايات التي بها أكبر عدد من الفواتير؟", "db_id": "store_1"}
{"question": "List the number of invoices and the invoice total from California.", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";", "arabic": "[Question] قائمة بعدد الفواتير وإجمالي الفاتورة من كاليفورنيا.", "db_id": "store_1"}
{"question": "What is the number of invoices and total money billed in them from CA?", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";", "arabic": "[Question] ما هو عدد الفواتير والمال الإجمالي المكلف فيها من كاليفورنيا؟", "db_id": "store_1"}
{"question": "List Aerosmith's albums.", "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";", "arabic": "[Question] قائمة بألبومات آيروسميث.", "db_id": "store_1"}
{"question": "What are the titles of all the Aerosmith albums?", "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";", "arabic": "[Question] ما هي عناوين جميع ألبومات آيروسميث؟", "db_id": "store_1"}
{"question": "How many albums does Billy Cobham has?", "query": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";", "arabic": "[Question] كم عدد الألبومات التي يمتلكها Billy Cobham؟", "db_id": "store_1"}
{"question": "How many albums has Billy Cobam released?", "query": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";", "arabic": "[Question] كم عدد الألبومات التي أصدرها Billy Cobham؟", "db_id": "store_1"}
{"question": "Eduardo Martins is a customer at which company?", "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";", "arabic": "[Question] Eduardo Martins هو عميل في أي شركة؟", "db_id": "store_1"}
{"question": "What is the company where Eduardo Martins is a customer?", "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";", "arabic": "[Question] ما هي الشركة التي يعمل فيها Eduardo Martins كعميل؟", "db_id": "store_1"}
{"question": "What is Astrid Gruber's email and phone number?", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "arabic": "[Question] ما هو البريد الإلكتروني ورقم الهاتف لـ Astrid Gruber؟", "db_id": "store_1"}
{"question": "What is the email and phone number of Astrid Gruber the customer?", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "arabic": "[Question] ما هو البريد الإلكتروني ورقم الهاتف لعميلة Astrid Gruber؟", "db_id": "store_1"}
{"question": "How many customers live in Prague city?", "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";", "arabic": "[Question] كم عدد العملاء الذين يعيشون في مدينة براغ؟", "db_id": "store_1"}
{"question": "How many customers live in the city of Prague?", "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";", "arabic": "[Question] كم عدد العملاء الذين يعيشون في مدينة براغ؟", "db_id": "store_1"}
{"question": "How many customers in state of CA?", "query": "SELECT count(*) FROM customers WHERE state = \"CA\";", "arabic": "[Question] كم عدد العملاء في ولاية كاليفورنيا؟", "db_id": "store_1"}
{"question": "How many customers are from California?", "query": "SELECT count(*) FROM customers WHERE state = \"CA\";", "arabic": "[Question] كم عدد العملاء الذين هم من ولاية كاليفورنيا؟", "db_id": "store_1"}
{"question": "What country does Roberto Almeida live?", "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";", "arabic": "[Question] في أي بلد يعيش Roberto Almeida؟", "db_id": "store_1"}
{"question": "In which country does Roberto Almeida?", "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";", "arabic": "[Question] في أي بلد يعيش Roberto Almeida؟", "db_id": "store_1"}
{"question": "List the name of albums that are released by aritist whose name has 'Led'", "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'", "arabic": "[Question] قائمة بأسماء الألبومات التي تم إصدارها بواسطة فنان يحمل في اسمه كلمة 'Led'.", "db_id": "store_1"}
{"question": "What is the title of the album that was released by the artist whose name has the phrase 'Led'?", "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'", "arabic": "[Question] ما هو عنوان الألبوم الذي تم إصداره بواسطة الفنان الذي يحمل في اسمه عبارة 'Led'؟", "db_id": "store_1"}
{"question": "How many customers does Steve Johnson support?", "query": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";", "arabic": "[Question] كم عدد العملاء الذين يدعمهم Steve Johnson؟", "db_id": "store_1"}
{"question": "What is the count of customers that Steve Johnson supports?", "query": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";", "arabic": "[Question] ما هو عدد العملاء الذي يدعمهم ستيف جونسون؟", "db_id": "store_1"}
{"question": "What is the title, phone and hire date of Nancy Edwards?", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "arabic": "[Question] ما هو عنوان الوظيفة، ورقم الهاتف، وتاريخ التوظيف لنانسي إدواردز؟", "db_id": "store_1"}
{"question": "What is the title, phone number and hire date for the employee named Nancy Edwards?", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "arabic": "[Question] ما هو عنوان الوظيفة، ورقم الهاتف، وتاريخ التوظيف للموظفة بإسم نانسي إدواردز؟", "db_id": "store_1"}
{"question": "find the full name of employees who report to Nancy Edwards?", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";", "arabic": "[Question] اعثر على الاسم الكامل للموظفين الذين يُبلغون إلى نانسي إدواردز؟", "db_id": "store_1"}
{"question": "What is the first and last name of the employee who reports to Nancy Edwards?", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";", "arabic": "[Question] ما هي أسماء الموظفين الأول والأخير الذين يُبلغون إلى نانسي إدواردز؟", "db_id": "store_1"}
{"question": "What is the address of employee Nancy Edwards?", "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "arabic": "[Question] ما هو عنوان الموظف نانسي إدواردز؟", "db_id": "store_1"}
{"question": "What is Nancy Edwards's address?", "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "arabic": "[Question] ما هو عنوان نانسي إدواردز؟", "db_id": "store_1"}
{"question": "Find the full name of employee who supported the most number of customers.", "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] اعثر على الاسم الكامل للموظف الذي دعم أكبر عدد من العملاء؟", "db_id": "store_1"}
{"question": "What is the full name of the employee who has the most customers?", "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو الاسم الكامل للموظف الذي لديه أكبر عدد من العملاء؟", "db_id": "store_1"}
{"question": "How many employees are living in Canada?", "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";", "arabic": "[Question] كم عدد الموظفين الذين يعيشون في كندا؟", "db_id": "store_1"}
{"question": "How many employees live in Canada?", "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";", "arabic": "[Question] كم عدد الموظفين الذين يعيشون في كندا؟", "db_id": "store_1"}
{"question": "What is employee Nancy Edwards's phone number?", "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "arabic": "[Question] ما هو رقم هاتف الموظف نانسي إدواردز؟", "db_id": "store_1"}
{"question": "What is the the phone number of Nancy Edwards?", "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "arabic": "[Question] ما هو رقم هاتف نانسي إدواردز؟", "db_id": "store_1"}
{"question": "Who is the youngest employee in the company? List employee's first and last name.", "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;", "arabic": "[Question] من هو أصغر موظف في الشركة؟ قائمة بالاسم الأول والأخير للموظف.", "db_id": "store_1"}
{"question": "What si the youngest employee's first and last name?", "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;", "arabic": "[Question] ما هو اسم أصغر موظف والأخير في الشركة؟", "db_id": "store_1"}
{"question": "List top 10 employee work longest in the company. List employee's first and last name.", "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;", "arabic": "[Question] قائمة بأعلى 10 موظفين عملوا لأطول فترة في الشركة. قائمة بالاسم الأول والأخير للموظف.", "db_id": "store_1"}
{"question": "What are the first and last names of the top 10 longest-serving employees?", "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;", "arabic": "[Question] ما هي الأسماء الأولى والأخيرة لأعلى 10 موظفين خدموا لأطول فترة؟", "db_id": "store_1"}
{"question": "Find the number of employees whose title is IT Staff from each city?", "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city", "arabic": "[Question] اعثر على عدد الموظفين الذين يحملون اللقب \"IT Staff\" من كل مدينة؟", "db_id": "store_1"}
{"question": "How many employees who are IT staff are from each city?", "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city", "arabic": "[Question] كم عدد الموظفين الذين يحملون اللقب \"IT Staff\" من كل مدينة؟", "db_id": "store_1"}
{"question": "Which employee manage most number of peoples? List employee's first and last name, and number of people report to that employee.", "query": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;", "arabic": "[Question] أي موظف يدير أكبر عدد من الأشخاص؟ قائمة بالاسم الأول والأخير للموظف، وعدد الأشخاص الذين يُبلغون إلى ذلك الموظف.", "db_id": "store_1"}
{"question": "What are the first and last names of all the employees and how many people report to them?", "query": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;", "arabic": "[Question] ما هي الأسماء الأولى والأخيرة لجميع الموظفين وكم عدد الأشخاص الذين يُبلغون إليهم؟", "db_id": "store_1"}
{"question": "How many orders does Lucas Mancini has?", "query": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";", "arabic": "[Question] كم عدد الطلبيات التي تديرها لوكاس مانشيني؟", "db_id": "store_1"}
{"question": "How many orders does Luca Mancini have in his invoices?", "query": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";", "arabic": "[Question] كم عدد الطلبيات التي يحملها لوكا مانشيني في فواتيره؟", "db_id": "store_1"}
{"question": "What is the total amount of money spent by Lucas Mancini?", "query": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";", "arabic": "[Question] ما هو إجمالي المبلغ المالي الذي أنفقه لوكاس مانشيني؟", "db_id": "store_1"}
{"question": "How much money did Lucas Mancini spend?", "query": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";", "arabic": "[Question] كم من المال أنفق لوكاس مانشيني؟", "db_id": "store_1"}
{"question": "List all media types.", "query": "SELECT name FROM media_types;", "arabic": "[Question] قائمة بجميع أنواع الوسائط.", "db_id": "store_1"}
{"question": "What are the names of all the media types?", "query": "SELECT name FROM media_types;", "arabic": "[Question] ما هي أسماء جميع أنواع الوسائط؟", "db_id": "store_1"}
{"question": "List all different genre types.", "query": "SELECT DISTINCT name FROM genres;", "arabic": "[Question] قائمة بجميع أنواع الأنواع المختلفة.", "db_id": "store_1"}
{"question": "What are the different names of the genres?", "query": "SELECT DISTINCT name FROM genres;", "arabic": "[Question] ما هي الأسماء المختلفة للأنواع؟", "db_id": "store_1"}
{"question": "List the name of all playlist.", "query": "SELECT name FROM playlists;", "arabic": "[Question] قائمة بأسماء جميع قوائم التشغيل.", "db_id": "store_1"}
{"question": "What are the names of all the playlists?", "query": "SELECT name FROM playlists;", "arabic": "[Question] ما هي أسماء جميع قوائم التشغيل؟", "db_id": "store_1"}
{"question": "Who is the composer of track Fast As a Shark?", "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";", "arabic": "[Question] من هو مؤلف المقطوعة \"Fast As a Shark\"؟", "db_id": "store_1"}
{"question": "What is the composer who created the track \"Fast As a Shark\"?", "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";", "arabic": "[Question] ما هو اسم المؤلف الذي أنشأ المقطوعة \"Fast As a Shark\"؟", "db_id": "store_1"}
{"question": "How long does track Fast As a Shark has?", "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";", "arabic": "[Question] كم تدوم مقطوعة \"Fast As a Shark\"؟", "db_id": "store_1"}
{"question": "How many milliseconds long is Fast As a Shark?", "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";", "arabic": "[Question] كم عدد ميلي ثانية يدوم مقطوعة \"Fast As a Shark\"؟", "db_id": "store_1"}
{"question": "What is the name of tracks whose genre is Rock?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";", "arabic": "[Question] ما هو اسم المقطوعات التي يكون نوعها Rock؟", "db_id": "store_1"}
{"question": "What is the name of all tracks in the Rock genre?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";", "arabic": "[Question] ما هو اسم جميع المقطوعات في نوع الـ Rock؟", "db_id": "store_1"}
{"question": "What is title of album which track Balls to the Wall belongs to?", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";", "arabic": "[Question] ما هو عنوان الألبوم الذي تنتمي إليه المقطوعة \"Balls to the Wall\"؟", "db_id": "store_1"}
{"question": "What is the name of the album that has the track Ball to the Wall?", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";", "arabic": "[Question] ما هو اسم الألبوم الذي يحتوي على المقطوعة \"Balls to the Wall\"؟", "db_id": "store_1"}
{"question": "List name of all tracks in Balls to the Wall.", "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";", "arabic": "[Question] قائمة بأسماء جميع المقطوعات في \"Balls to the Wall\".", "db_id": "store_1"}
{"question": "What is the name of all tracks in the album named Balls to the Wall?", "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";", "arabic": "[Question] ما هي أسماء جميع المقطوعات في الألبوم المسمى \"Balls to the Wall\"؟", "db_id": "store_1"}
{"question": "List title of albums have the number of tracks greater than 10.", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;", "arabic": "[Question] قائمة بألقاب الألبومات التي تحتوي على عدد من المقطوعات أكبر من 10.", "db_id": "store_1"}
{"question": "What are the names of the albums that have more than 10 tracks?", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;", "arabic": "[Question] ما هي أسماء الألبومات التي تحتوي على أكثر من 10 مقطوعة؟", "db_id": "store_1"}
{"question": "List the name of tracks belongs to genre Rock and whose media type is MPEG audio file.", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";", "arabic": "[Question] قائمة بأسماء المقطوعات التي تنتمي إلى نوع الـ Rock ونوع الوسائط هو ملف صوتي MPEG.", "db_id": "store_1"}
{"question": "What are the names of all Rock tracks that are stored on MPEG audio files?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";", "arabic": "[Question] ما هي أسماء جميع المقطوعات في النوع Rock والتي يتم تخزينها كملفات صوتية MPEG؟", "db_id": "store_1"}
{"question": "List the name of tracks belongs to genre Rock or media type is MPEG audio file.", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";", "arabic": "[Question] قائمة بأسماء المقطوعات التي تنتمي إلى نوع الـ Rock أو نوع الوسائط هو ملف صوتي MPEG.", "db_id": "store_1"}
{"question": "What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";", "arabic": "[Question] ما هي أسماء جميع المقطوعات التي تنتمي إلى نوع الـ Rock ونوع الوسائط هو MPEG؟", "db_id": "store_1"}
{"question": "List the name of tracks belongs to genre Rock or genre Jazz.", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\"", "arabic": "[Question] قائمة بأسماء المقطوعات التي تنتمي إلى نوع الـ Rock أو نوع الـ Jazz.", "db_id": "store_1"}
{"question": "What are the names of the tracks that are Rock or Jazz songs?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\"", "arabic": "[Question] ما هي أسماء المقطوعات التي هي Rock أو Jazz؟", "db_id": "store_1"}
{"question": "List the name of all tracks in the playlists of Movies.", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";", "arabic": "[Question] قائمة بأسماء جميع المقطوعات في قوائم التشغيل للأفلام.", "db_id": "store_1"}
{"question": "What are the names of all tracks that are on playlists titled Movies?", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";", "arabic": "[Question] ما هي أسماء جميع المقطوعات التي تظهر في قوائم التشغيل بعنوان الأفلام؟", "db_id": "store_1"}
{"question": "List the name of playlist which has number of tracks greater than 100.", "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;", "arabic": "[Question] قائمة بأسماء القوائم التي تحتوي على عدد من المقطوعات أكبر من 100.", "db_id": "store_1"}
{"question": "What are the names of all playlists that have more than 100 tracks?", "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;", "arabic": "[Question] ما هي أسماء جميع قوائم التشغيل التي تحتوي على أكثر من 100 مقطوعة؟", "db_id": "store_1"}
{"question": "List all tracks bought by customer Daan Peeters.", "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";", "arabic": "[Question] قائمة بجميع المقطوعات التي اشتراها العميل Daan Peeters.", "db_id": "store_1"}
{"question": "What are the tracks that Dean Peeters bought?", "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";", "arabic": "[Question] ما هي المقطوعات التي اشتراها Dean Peeters؟", "db_id": "store_1"}
{"question": "How much is the track Fast As a Shark?", "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";", "arabic": "[Question] كم يبلغ سعر المقطوعة \"Fast As a Shark\"؟", "db_id": "store_1"}
{"question": "What is the unit price of the tune \"Fast As a Shark\"?", "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";", "arabic": "[Question] ما هو سعر الوحدة للأغنية \"Fast As a Shark\"؟", "db_id": "store_1"}
{"question": "Find the name of tracks which are in Movies playlist but not in music playlist.", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'", "arabic": "[Question] ابحث عن أسماء المقطوعات التي تظهر في قائمة التشغيل للأفلام وليست في قائمة التشغيل للموسيقى.", "db_id": "store_1"}
{"question": "What are the names of all tracks that are on the Movies playlist but not in the music playlist?", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'", "arabic": "[Question] ما هي أسماء جميع المقطوعات التي تظهر في قائمة التشغيل للأفلام وليست في قائمة التشغيل للموسيقى؟", "db_id": "store_1"}
{"question": "Find the name of tracks which are in both Movies and music playlists.", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'", "arabic": "[Question] ابحث عن أسماء المقطوعات التي تظهر في قوائم التشغيل للأفلام والموسيقى.", "db_id": "store_1"}
{"question": "What are the names of all the tracks that are in both the Movies and music playlists?", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'", "arabic": "[Question] ما هي أسماء جميع المقطوعات التي تظهر في قوائم التشغيل للأفلام والموسيقى؟", "db_id": "store_1"}
{"question": "Find number of tracks in each genre?", "query": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;", "arabic": "[Question] ابحث عن عدد المقطوعات في كل نوع؟", "db_id": "store_1"}
{"question": "How many tracks are in each genre?", "query": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;", "arabic": "[Question] كم عدد المقطوعات في كل نوع؟", "db_id": "store_1"}
{"question": "How many editors are there?", "query": "SELECT count(*) FROM editor", "arabic": "[Question] كم عدد المحررين؟", "db_id": "journal_committee"}
{"question": "List the names of editors in ascending order of age.", "query": "SELECT Name FROM editor ORDER BY Age ASC", "arabic": "[Question] قائمة بأسماء المحررين بترتيب تصاعدي حسب العمر.", "db_id": "journal_committee"}
{"question": "What are the names and ages of editors?", "query": "SELECT Name ,  Age FROM editor", "arabic": "[Question] ما هي أسماء وأعمار المحررين؟", "db_id": "journal_committee"}
{"question": "List the names of editors who are older than 25.", "query": "SELECT Name FROM editor WHERE Age  >  25", "arabic": "[Question] قائمة بأسماء المحررين الذين تتجاوز أعمارهم 25 عامًا.", "db_id": "journal_committee"}
{"question": "Show the names of editors of age either 24 or 25.", "query": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25", "arabic": "[Question] عرض أسماء المحررين الذين يبلغون من العمر 24 أو 25 عامًا.", "db_id": "journal_committee"}
{"question": "What is the name of the youngest editor?", "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1", "arabic": "[Question] ما هو اسم أصغر محرر؟", "db_id": "journal_committee"}
{"question": "What are the different ages of editors? Show each age along with the number of editors of that age.", "query": "SELECT Age ,  COUNT(*) FROM editor GROUP BY Age", "arabic": "[Question] ما هي الأعمار المختلفة للمحررين؟ أظهر كل عمر مع عدد المحررين من هذا العمر.", "db_id": "journal_committee"}
{"question": "Please show the most common age of editors.", "query": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "[Question] يرجى إظهار العمر الأكثر شيوعًا بين المحررين.", "db_id": "journal_committee"}
{"question": "Show the distinct themes of journals.", "query": "SELECT DISTINCT Theme FROM journal", "arabic": "[Question] إظهار مواضيع السجلات المتميزة.", "db_id": "journal_committee"}
{"question": "Show the names of editors and the theme of journals for which they serve on committees.", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID", "arabic": "[Question] إظهار أسماء المحررين وموضوعات السجلات التي يخدمون في لجانها.", "db_id": "journal_committee"}
{"question": "For each journal_committee, find the editor name and the journal theme.", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID", "arabic": "[Question] لكل لجنة سجل، ابحث عن اسم المحرر وموضوع السجل.", "db_id": "journal_committee"}
{"question": "Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme.", "query": "SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC", "arabic": "[Question] إظهار أسماء وأعمار المحررين وموضوعات السجلات التي يخدمون في لجانها، مرتبة تصاعديًا تبعًا للترتيب الأبجدي للموضوع.", "db_id": "journal_committee"}
{"question": "Show the names of editors that are on the committee of journals with sales bigger than 3000.", "query": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000", "arabic": "ما هي أسماء المحررين الذين هم في مجلسي تحكيم على الأقل؟", "db_id": "journal_committee"}
{"question": "Show the id, name of each editor and the number of journal committees they are on.", "query": "SELECT T1.editor_id ,  T1.Name ,  COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.editor_id", "arabic": "أورد أسماء المحررين الذين ليسوا في أي لجنة تحكيم في المجلات؟", "db_id": "journal_committee"}
{"question": "Show the names of editors that are on at least two journal committees.", "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2", "arabic": "أورد التاريخ والموضوع والمبيعات للمجلة التي لم تكن بها أيًا من المحررين المدرجة يخدمون في اللجنة.", "db_id": "journal_committee"}
{"question": "List the names of editors that are not on any journal committee.", "query": "SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)", "arabic": "ما هي أسماء المحررين الذين ليسوا في أي لجنة تحكيم في المجلات؟", "db_id": "journal_committee"}
{"question": "List the date, theme and sales of the journal which did not have any of the listed editors serving on committee.", "query": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID", "arabic": "اعرض التاريخ والموضوع والمبيعات للمجلة التي لم تكن بها أيًا من المحررين المدرجة يخدمون في اللجنة؟", "db_id": "journal_committee"}
{"question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?", "query": "SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  'Photo'", "arabic": "ما هو متوسط المبيعات للمجلات التي لديها محرر يعمل من نوع 'الصورة'؟", "db_id": "journal_committee"}
{"question": "How many accounts do we have?", "query": "SELECT count(*) FROM Accounts", "arabic": "كم حساب لدينا؟", "db_id": "customers_card_transactions"}
{"question": "Count the number of accounts.", "query": "SELECT count(*) FROM Accounts", "arabic": "عدد الحسابات؟", "db_id": "customers_card_transactions"}
{"question": "Show ids, customer ids, names for all accounts.", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts", "arabic": "أورد معرفات الحسابات ومعرفات العملاء والأسماء لجميع الحسابات.", "db_id": "customers_card_transactions"}
{"question": "What are the account ids, customer ids, and account names for all the accounts?", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts", "arabic": "ما هي معرفات الحسابات ومعرفات العملاء وأسماء الحسابات لجميع الحسابات؟", "db_id": "customers_card_transactions"}
{"question": "Show other account details for account with name 338.", "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"", "arabic": "أورد تفاصيل الحساب الأخرى للحساب بالاسم 338؟", "db_id": "customers_card_transactions"}
{"question": "What are the other account details for the account with the name 338?", "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"", "arabic": "ما هي التفاصيل الأخرى للحساب بالاسم 338؟", "db_id": "customers_card_transactions"}
{"question": "What is the first name, last name, and phone of the customer with account name 162?", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"", "arabic": "ما هو الاسم الأول، الاسم الأخير، ورقم الهاتف للعميل بالاسم الحسابي 162؟", "db_id": "customers_card_transactions"}
{"question": "Give the full name and phone of the customer who has the account name 162.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"", "arabic": "أعط الاسم الكامل ورقم الهاتف للعميل الذي لديه اسم الحساب 162؟\r\n\r\n", "db_id": "customers_card_transactions"}
{"question": "How many accounts does the customer with first name Art and last name Turcotte have?", "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"", "arabic": "كم عدد الحسابات التي يمتلكها العميل الذي له الاسم الأول Art والاسم الأخير Turcotte؟", "db_id": "customers_card_transactions"}
{"question": "Return the number of accounts that the customer with the first name Art and last name Turcotte has.", "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"", "arabic": "كم عدد الحسابات التي يمتلكها العميل الذي يحمل الاسم الأول Art والاسم الأخير Turcotte؟", "db_id": "customers_card_transactions"}
{"question": "Show all customer ids and the number of accounts for each customer.", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id", "arabic": "أورد جميع معرّفات العملاء وعدد الحسابات لكل عميل؟", "db_id": "customers_card_transactions"}
{"question": "How many accounts are there for each customer id?", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id", "arabic": "كم عدد الحسابات الموجودة لكل معرّف عميل؟", "db_id": "customers_card_transactions"}
{"question": "Show the customer id and number of accounts with most accounts.", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أورد معرّف العميل وعدد الحسابات مع أكبر عدد من الحسابات؟", "db_id": "customers_card_transactions"}
{"question": "What is the customer id of the customer with the most accounts, and how many accounts does this person have?", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرف العميل الذي لديه أكبر عدد من الحسابات، وكم عدد الحسابات التي يمتلكها هذا الشخص؟", "db_id": "customers_card_transactions"}
{"question": "What is the customer first, last name and id with least number of accounts.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو الاسم الأول والاسم الأخير والمعرّف للعميل الذي يمتلك أقل عدد من الحسابات؟", "db_id": "customers_card_transactions"}
{"question": "Give the full name and customer id of the customer with the fewest accounts.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "arabic": "أعط الاسم الكامل ومعرّف العميل للشخص الذي يمتلك أقل عدد من الحسابات؟", "db_id": "customers_card_transactions"}
{"question": "Show the number of all customers without an account.", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)", "arabic": "أورد عدد جميع العملاء بدون حساب؟", "db_id": "customers_card_transactions"}
{"question": "How many customers do not have an account?", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)", "arabic": "كم عدد العملاء الذين ليس لديهم حساب؟", "db_id": "customers_card_transactions"}
{"question": "Show the first names and last names of customers without any account.", "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "أورد أسماء العملاء وأسماء العائلة للعملاء الذين ليس لديهم أي حساب؟", "db_id": "customers_card_transactions"}
{"question": "What are the full names of customers who do not have any accounts?", "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "ما هي الأسماء الكاملة للعملاء الذين لديهم حساب؟", "db_id": "customers_card_transactions"}
{"question": "Show distinct first and last names for all customers with an account.", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "أورد الأسماء الأولى والأسماء الأخيرة المميزة لجميع العملاء الذين لديهم حساب.", "db_id": "customers_card_transactions"}
{"question": "What are the full names of customers who have accounts?", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "ما هي الأسماء الكاملة للعملاء الذين لديهم حساب؟", "db_id": "customers_card_transactions"}
{"question": "How many customers have an account?", "query": "SELECT count(DISTINCT customer_id) FROM Accounts", "arabic": "كم عدد العملاء الذين لديهم حساب؟", "db_id": "customers_card_transactions"}
{"question": "Count the number of customers who hold an account.", "query": "SELECT count(DISTINCT customer_id) FROM Accounts", "arabic": "عدد العملاء الذين يحملون حسابًا؟", "db_id": "customers_card_transactions"}
{"question": "How many customers do we have?", "query": "SELECT count(*) FROM Customers", "arabic": "كم عدد العملاء؟", "db_id": "customers_card_transactions"}
{"question": "Count the number of customers.", "query": "SELECT count(*) FROM Customers", "arabic": "عدد العملاء؟", "db_id": "customers_card_transactions"}
{"question": "Show ids, first names, last names, and phones for all customers.", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "arabic": "أورد معرفات العملاء وأسماءهم الأولى وأسماءهم الأخيرة وأرقام هواتفهم لكل العملاء؟", "db_id": "customers_card_transactions"}
{"question": "What are the ids, full names, and phones of each customer?", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "arabic": "ما هي معرفات العملاء وأسماؤهم الكاملة وأرقام هواتفهم لكل عميل؟", "db_id": "customers_card_transactions"}
{"question": "What is the phone and email for customer with first name Aniyah and last name Feest?", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"", "arabic": "ما هو رقم الهاتف والبريد الإلكتروني للعميل الذي يحمل الاسم الأول Aniyah والاسم الأخير Feest؟", "db_id": "customers_card_transactions"}
{"question": "Return the phone and email of the customer with the first name Aniyah and last name Feest.", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"", "arabic": "أعد رقم الهاتف والبريد الإلكتروني للعميل الذي يحمل الاسم الأول Aniyah والاسم الأخير Feest.", "db_id": "customers_card_transactions"}
{"question": "Show the number of customer cards.", "query": "SELECT count(*) FROM Customers_cards", "arabic": "أورد عدد بطاقات العميل.", "db_id": "customers_card_transactions"}
{"question": "How many customer cards are there?", "query": "SELECT count(*) FROM Customers_cards", "arabic": "كم عدد بطاقات العميل؟", "db_id": "customers_card_transactions"}
{"question": "Show ids, customer ids, card type codes, card numbers for all cards.", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards", "arabic": "أورد معرفات البطاقات ومعرفات العملاء ورموز أنواع البطاقات وأرقام البطاقات لكل البطاقات.", "db_id": "customers_card_transactions"}
{"question": "What are card ids, customer ids, card types, and card numbers for each customer card?", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards", "arabic": "ما هي معرفات البطاقات ومعرفات العملاء وأنواع البطاقات وأرقام البطاقات لكل بطاقة عميل؟", "db_id": "customers_card_transactions"}
{"question": "Show the date valid from and the date valid to for the card with card number '4560596484842'.", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"", "arabic": "أورد تاريخ الصلاحية من وتاريخ الصلاحية إلى للبطاقة ذات الرقم \"4560596484842\".", "db_id": "customers_card_transactions"}
{"question": "What are the valid from and valid to dates for the card with the number 4560596484842?", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"", "arabic": "ما هي تواريخ الصلاحية من والى للبطاقة ذات الرقم \"4560596484842\"؟", "db_id": "customers_card_transactions"}
{"question": "What is the first name, last name, and phone of the customer with card 4560596484842.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "arabic": "ما هو الاسم الأول، الاسم الأخير، ورقم الهاتف للعميل الذي يحمل بطاقة رقم \"4560596484842\".", "db_id": "customers_card_transactions"}
{"question": "Return the full name and phone of the customer who has card number 4560596484842.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "arabic": "أعد الاسم الكامل ورقم الهاتف للعميل الذي يمتلك بطاقة رقم \"4560596484842\".", "db_id": "customers_card_transactions"}
{"question": "How many cards does customer Art Turcotte have?", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"", "arabic": "كم عدد البطاقات التي يمتلكها العميل Art Turcotte؟", "db_id": "customers_card_transactions"}
{"question": "Count the number of cards the customer with the first name Art and last name Turcotte has.", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"", "arabic": "كم عدد البطاقات التي يمتلكها العميل الذي يحمل الاسم الأول Art والاسم الأخير Turcotte؟", "db_id": "customers_card_transactions"}
{"question": "How many debit cards do we have?", "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\"", "arabic": "كم عدد بطاقات الخصم التي لدينا؟", "db_id": "customers_card_transactions"}
{"question": "Count the number of customer cards of the type Debit.", "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\"", "arabic": "ما هو عدد بطاقات العميل من نوع الخصم؟", "db_id": "customers_card_transactions"}
{"question": "How many credit cards does customer Blanche Huels have?", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Blanche\" AND T2.customer_last_name  =  \"Huels\" AND T1.card_type_code  =  \"Credit\"", "arabic": "كم عدد بطاقات الائتمان التي يمتلكها العميل Blanche Huels؟", "db_id": "customers_card_transactions"}
{"question": "Count the number of credit cards that the customer with first name Blanche and last name Huels has.", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Blanche\" AND T2.customer_last_name  =  \"Huels\" AND T1.card_type_code  =  \"Credit\"", "arabic": "ما هو عدد بطاقات الائتمان التي يمتلكها العميل الذي يحمل الاسم الأول Blanche والاسم الأخير Huels؟", "db_id": "customers_card_transactions"}
{"question": "Show all customer ids and the number of cards owned by each customer.", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id", "arabic": "أورد جميع معرّفات العملاء وعدد البطاقات التي يمتلكها كل عميل؟", "db_id": "customers_card_transactions"}
{"question": "What are the different customer ids, and how many cards does each one hold?", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id", "arabic": "ما هي معرفات العملاء المختلفة، وكم عدد البطاقات التي يمتلك كل واحد؟", "db_id": "customers_card_transactions"}
{"question": "What is the customer id with most number of cards, and how many does he have?", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرف العميل الذي لديه أكبر عدد من البطاقات، وكم عدد البطاقات التي يمتلكها؟", "db_id": "customers_card_transactions"}
{"question": "Return the id of the customer who has the most cards, as well as the number of cards.", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أعد معرف العميل الذي لديه أكبر عدد من البطاقات، بالإضافة إلى عدد البطاقات.", "db_id": "customers_card_transactions"}
{"question": "Show id, first and last names for all customers with at least two cards.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "arabic": "اعرض المعرف، والأسماء الأولى والأخيرة لجميع العملاء الذين يمتلكون ما لا يقل عن بطاقتين.", "db_id": "customers_card_transactions"}
{"question": "What are the ids and full names of customers who hold two or more cards?", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "arabic": "ما هي المعرفات والأسماء الكاملة للعملاء الذين يمتلكون بطاقتين أو أكثر؟", "db_id": "customers_card_transactions"}
{"question": "What is the customer id, first and last name with least number of accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو معرف العميل، والاسم الأول والأخير مع أقل عدد من الحسابات.", "db_id": "customers_card_transactions"}
{"question": "Return the id and full name of the customer who has the fewest accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "arabic": "أعد معرف العميل والاسم الكامل للعميل الذي لديه أقل عدد من الحسابات.", "db_id": "customers_card_transactions"}
{"question": "Show all card type codes and the number of cards in each type.", "query": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code", "arabic": "أورد جميع رموز أنواع البطاقات وعدد البطاقات في كل نوع.", "db_id": "customers_card_transactions"}
{"question": "What are the different card types, and how many cards are there of each?", "query": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code", "arabic": "ما هي أنواع البطاقات المختلفة، وكم عدد البطاقات في كل نوع؟", "db_id": "customers_card_transactions"}
{"question": "What is the card type code with most number of cards?", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو رمز نوع البطاقة الذي يحتوي على أكبر عدد من البطاقات؟", "db_id": "customers_card_transactions"}
{"question": "Return the code of the card type that is most common.", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أعد رمز نوع البطاقة الأكثر شيوعًا.", "db_id": "customers_card_transactions"}
{"question": "Show card type codes with at least 5 cards.", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5", "arabic": "اعرض رموز أنواع البطاقات التي تحتوي على ما لا يقل عن 5 بطاقات.", "db_id": "customers_card_transactions"}
{"question": "What are the codes of card types that have 5 or more cards?", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5", "arabic": "ما هي رموز أنواع البطاقات التي تحتوي على 5 بطاقات أو أكثر؟", "db_id": "customers_card_transactions"}
{"question": "Show all card type codes and the number of customers holding cards in each type.", "query": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code", "arabic": "أظهر جميع رموز أنواع البطاقات وعدد العملاء الذين يحملون بطاقات في كل نوع.", "db_id": "customers_card_transactions"}
{"question": "What are the different card type codes, and how many different customers hold each type?", "query": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code", "arabic": "ما هي الرموز المختلفة لأنواع البطاقات، وكم عدد العملاء المختلفين الذين يحملون كل نوع؟", "db_id": "customers_card_transactions"}
{"question": "Show the customer ids and firstname without a credit card.", "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"", "arabic": "أظهر معرّفات العملاء والأسماء الأولى بدون بطاقة ائتمان.", "db_id": "customers_card_transactions"}
{"question": "What are the ids and first names of customers who do not hold a credit card?", "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"", "arabic": "ما هي المعرفات والأسماء الأولى للعملاء الذين لا يحملون بطاقة ائتمان؟", "db_id": "customers_card_transactions"}
{"question": "Show all card type codes.", "query": "SELECT DISTINCT card_type_code FROM Customers_Cards", "arabic": "أظهر جميع رموز أنواع البطاقات.", "db_id": "customers_card_transactions"}
{"question": "What are the different card type codes?", "query": "SELECT DISTINCT card_type_code FROM Customers_Cards", "arabic": "ما هي الرموز المختلفة لأنواع البطاقات؟", "db_id": "customers_card_transactions"}
{"question": "Show the number of card types.", "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards", "arabic": "أظهر عدد أنواع البطاقات.", "db_id": "customers_card_transactions"}
{"question": "How many different card types are there?", "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards", "arabic": "كم هو عدد أنواع البطاقات المختلفة؟", "db_id": "customers_card_transactions"}
{"question": "Show all transaction types.", "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions", "arabic": "أظهر جميع أنواع المعاملات.", "db_id": "customers_card_transactions"}
{"question": "What are the different types of transactions?", "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions", "arabic": "ما هي الأنواع المختلفة للمعاملات؟", "db_id": "customers_card_transactions"}
{"question": "Show the number of transaction types.", "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions", "arabic": "أظهر عدد أنواع المعاملات.", "db_id": "customers_card_transactions"}
{"question": "How many different types of transactions are there?", "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions", "arabic": "كم عدد أنواع المعاملات المختلفة؟", "db_id": "customers_card_transactions"}
{"question": "What is the average and total transaction amount?", "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions", "arabic": "ما هو المبلغ المتوسط والإجمالي للمعاملات؟", "db_id": "customers_card_transactions"}
{"question": "Return the average transaction amount, as well as the total amount of all transactions.", "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions", "arabic": "أعد مبلغ المعاملة المتوسط، وكذلك المبلغ الإجمالي لجميع المعاملات.", "db_id": "customers_card_transactions"}
{"question": "Show the card type codes and the number of transactions.", "query": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code", "arabic": "أظهر رموز أنواع البطاقات وعدد المعاملات.", "db_id": "customers_card_transactions"}
{"question": "What are the different card types, and how many transactions have been made with each?", "query": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code", "arabic": "ما هي الأنواع المختلفة للبطاقات، وكم عدد المعاملات التي تمت مع كل نوع؟", "db_id": "customers_card_transactions"}
{"question": "Show the transaction type and the number of transactions.", "query": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type", "arabic": "أظهر نوع المعاملة وعدد المعاملات.", "db_id": "customers_card_transactions"}
{"question": "What are the different transaction types, and how many transactions of each have taken place?", "query": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type", "arabic": "ما هي الأنواع المختلفة للمعاملات، وكم عدد كل منها من المعاملات؟", "db_id": "customers_card_transactions"}
{"question": "What is the transaction type that has processed the greatest total amount in transactions?", "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1", "arabic": "ما هو نوع المعاملة الذي قدم أعلى مبلغ إجمالي في المعاملات؟", "db_id": "customers_card_transactions"}
{"question": "Return the type of transaction with the highest total amount.", "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1", "arabic": "أعد نوع المعاملة الذي يحمل أعلى مبلغ إجمالي.", "db_id": "customers_card_transactions"}
{"question": "Show the account id and the number of transactions for each account", "query": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id", "arabic": "أظهر معرف الحساب وعدد المعاملات لكل حساب.", "db_id": "customers_card_transactions"}
{"question": "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?", "query": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id", "arabic": "ما هي المعرفات المختلفة للحسابات التي قامت بمعاملات مالية، وكم عدد المعاملات التي تتوافق مع كل منها؟", "db_id": "customers_card_transactions"}
{"question": "How many tracks do we have?", "query": "SELECT count(*) FROM track", "arabic": "كم عدد المضامير لدينا؟", "db_id": "race_track"}
{"question": "Count the number of tracks.", "query": "SELECT count(*) FROM track", "arabic": "احسب عدد المضامير.", "db_id": "race_track"}
{"question": "Show the name and location for all tracks.", "query": "SELECT name ,  LOCATION FROM track", "arabic": "أظهر الاسم والموقع لجميع المضامير.", "db_id": "race_track"}
{"question": "What are the names and locations of all tracks?", "query": "SELECT name ,  LOCATION FROM track", "arabic": "ما هي الأسماء والمواقع لجميع المضامير؟", "db_id": "race_track"}
{"question": "Show names and seatings, ordered by seating for all tracks opened after 2000.", "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating", "arabic": "ما هي الأسماء والمقاعد، مرتبة حسب المقاعد، لجميع المضامير المفتوحة بعد عام 2000؟", "db_id": "race_track"}
{"question": "What are the names and seatings for all tracks opened after 2000, ordered by seating?", "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating", "arabic": "ما هي الأسماء والمقاعد لجميع المضامير المفتوحة بعد عام 2000، مرتبة حسب المقاعد؟", "db_id": "race_track"}
{"question": "What is the name, location and seating for the most recently opened track?", "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1", "arabic": "ما هو الاسم، والموقع، والمقعد لأحدث مضمار تم فتحه؟", "db_id": "race_track"}
{"question": "Return the name, location, and seating of the track that was opened in the most recent year.", "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1", "arabic": "أعد اسم، وموقع، ومقعد المضمار الذي تم فتحه في أحدث عام.", "db_id": "race_track"}
{"question": "What is the minimum, maximum, and average seating for all tracks.", "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track", "arabic": "ما هو الحد الأدنى، والحد الأقصى، والمتوسط للمقاعد لجميع المضامير؟", "db_id": "race_track"}
{"question": "Return the minimum, maximum, and average seating across all tracks.", "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track", "arabic": "أعد الحد الأدنى، والحد الأقصى، والمتوسط للمقاعد عبر جميع المضامير.", "db_id": "race_track"}
{"question": "Show the name, location, open year for all tracks with a seating higher than the average.", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)", "arabic": "أظهر الاسم، والموقع، والعام المفتوح لجميع المضامير التي تحتوي على عدد مقاعد أكبر من المتوسط.", "db_id": "race_track"}
{"question": "What are the names, locations, and years of opening for tracks with seating higher than average?", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)", "arabic": "ما هي الأسماء، والمواقع، وسنوات الافتتاح للمضامير التي تحتوي على عدد مقاعد أعلى من المتوسط؟", "db_id": "race_track"}
{"question": "What are distinct locations where tracks are located?", "query": "SELECT DISTINCT LOCATION FROM track", "arabic": "ما هي المواقع المميزة حيث تقع المضامير؟", "db_id": "race_track"}
{"question": "Give the different locations of tracks.", "query": "SELECT DISTINCT LOCATION FROM track", "arabic": "أعطني المواقع المختلفة للمضامير.", "db_id": "race_track"}
{"question": "How many races are there?", "query": "SELECT count(*) FROM race", "arabic": "كم عدد السباقات؟", "db_id": "race_track"}
{"question": "Count the number of races.", "query": "SELECT count(*) FROM race", "arabic": "احسب عدد السباقات.", "db_id": "race_track"}
{"question": "What are the distinct classes that races can have?", "query": "SELECT DISTINCT CLASS FROM race", "arabic": "ما هي الفئات المختلفة التي يمكن أن تكون عليها السباقات؟", "db_id": "race_track"}
{"question": "Return the different classes of races.", "query": "SELECT DISTINCT CLASS FROM race", "arabic": "أعد فئات السباقات المختلفة.", "db_id": "race_track"}
{"question": "Show name, class, and date for all races.", "query": "SELECT name ,  CLASS ,  date FROM race", "arabic": "أظهر الاسم، والفئة، والتاريخ لجميع السباقات.", "db_id": "race_track"}
{"question": "What are the names, classes, and dates for all races?", "query": "SELECT name ,  CLASS ,  date FROM race", "arabic": "ما هي الأسماء، الفئات، والتواريخ لجميع السباقات؟", "db_id": "race_track"}
{"question": "Show the race class and number of races in each class.", "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS", "arabic": "أظهر فئة السباق وعدد السباقات في كل فئة.", "db_id": "race_track"}
{"question": "What are the different classes of races, and how many races correspond to each?", "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS", "arabic": "ما هي الفئات المختلفة للسباقات، وكم عدد السباقات التي تتوافق مع كل فئة؟", "db_id": "race_track"}
{"question": "What is the race class with most number of races.", "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي فئة السباق ذات أكبر عدد من السباقات؟", "db_id": "race_track"}
{"question": "Give the class of races that is most common.", "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1", "arabic": "أعط الفئة التي يكثر فيها عدد السباقات.", "db_id": "race_track"}
{"question": "List the race class with at least two races.", "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2", "arabic": "قائمة فئة السباق مع عدد السباقات المتواجدة في كل فئة بما لا يقل عن سباقين.", "db_id": "race_track"}
{"question": "What are the classes of races that have two or more corresponding races?", "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2", "arabic": "ما هي فئات السباقات التي لديها سباقان أو أكثر يتوافق مع كل منهما؟", "db_id": "race_track"}
{"question": "What are the names for tracks without a race in class 'GT'.", "query": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'", "arabic": "ما هي الأسماء للمضامير بدون سباق في فئة 'GT'؟", "db_id": "race_track"}
{"question": "Give the names of tracks that do not have a race in the class 'GT'.", "query": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'", "arabic": "أعط أسماء المضامير التي لا تحتوي على سباق في فئة 'GT'.", "db_id": "race_track"}
{"question": "Show all track names that have had no races.", "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)", "arabic": "أظهر جميع أسماء المضامير التي لم تكن لها سباقات.", "db_id": "race_track"}
{"question": "Return the names of tracks that have no had any races.", "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)", "arabic": "أعط أسماء المضامير التي لم تكن لها أي سباقات.", "db_id": "race_track"}
{"question": "Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened.", "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000", "arabic": "أظهر العام حيث تم فتح مضمار بمقاعد تزيد عن 5000 ومضمار بمقاعد لا تتجاوز 4000.", "db_id": "race_track"}
{"question": "What are the years of opening for tracks with seating between 4000 and 5000?", "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000", "arabic": "ما هي سنوات الافتتاح للمضامير بمقاعد بين 4000 و 5000؟", "db_id": "race_track"}
{"question": "Show the name of track and the number of races in each track.", "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id", "arabic": "أظهر اسم المضمار وعدد السباقات في كل مضمار.", "db_id": "race_track"}
{"question": "What are the names of different tracks, and how many races has each had?", "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id", "arabic": "ما هي أسماء المضامير المختلفة، وكم عدد السباقات التي كل منها قامت به؟", "db_id": "race_track"}
{"question": "Show the name of track with most number of races.", "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر اسم المضمار الذي يحتوي على أكبر عدد من السباقات.", "db_id": "race_track"}
{"question": "What is the name of the track that has had the greatest number of races?", "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم المضمار الذي أقيم فيه أكبر عدد من السباقات؟", "db_id": "race_track"}
{"question": "Show the name and date for each race and its track name.", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id", "arabic": "أظهر الاسم والتاريخ لكل سباق واسم مضماره.", "db_id": "race_track"}
{"question": "What are the names and dates of races, and the names of the tracks where they are held?", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id", "arabic": "ما هي الأسماء والتواريخ للسباقات، وأسماء المضامير التي أُقيمت فيها؟", "db_id": "race_track"}
{"question": "Show the name and location of track with 1 race.", "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1", "arabic": "أظهر اسم وموقع المضمار الذي أُقيم فيه سباق واحد.", "db_id": "race_track"}
{"question": "What are the names and locations of tracks that have had exactly 1 race?", "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1", "arabic": "ما هي الأسماء والمواقع للمضامير التي أُقيم فيها سباق واحد فقط؟", "db_id": "race_track"}
{"question": "Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.", "query": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000", "arabic": "ابحث عن المواقع التي بها مضامير تحتوي على أكثر من 90000 مقعد ومضامير تحتوي على أقل من 70000 مقعد.", "db_id": "race_track"}
{"question": "What are the locations that have both tracks with more than 90000 seats, and tracks with fewer than 70000 seats?", "query": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000", "arabic": "ما هي المواقع التي بها مضامير تحتوي على أكثر من 90000 مقعد، ومضامير تحتوي على أقل من 70000 مقعد؟", "db_id": "race_track"}
{"question": "How many members have the black membership card?", "query": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'", "arabic": "كم عدد الأعضاء الذين يمتلكون بطاقة العضوية السوداء؟", "db_id": "coffee_shop"}
{"question": "Find the number of members living in each address.", "query": "SELECT count(*) ,  address FROM member GROUP BY address", "arabic": "اعثر على عدد الأعضاء الذين يعيشون في كل عنوان.", "db_id": "coffee_shop"}
{"question": "Give me the names of members whose address is in Harford or Waterbury.", "query": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'", "arabic": "أعطني أسماء الأعضاء الذين عنوانهم في هارفورد أو ووتربري.", "db_id": "coffee_shop"}
{"question": "Find the ids and names of members who are under age 30 or with black membership card.", "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30", "arabic": "ابحث عن معرفات وأسماء الأعضاء الذين تقل أعمارهم عن 30 عامًا أو لديهم بطاقة عضوية سوداء.", "db_id": "coffee_shop"}
{"question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "query": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase", "arabic": "ابحث عن وقت الشراء، والعمر، والعنوان لكل عضو، وأظهر النتائج بترتيب وقت الشراء.", "db_id": "coffee_shop"}
{"question": "Which membership card has more than 5 members?", "query": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5", "arabic": "أي بطاقة عضوية تمتلك أكثر من 5 أعضاء؟", "db_id": "coffee_shop"}
{"question": "Which address has both members younger than 30 and members older than 40?", "query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40", "arabic": "أي عنوان به أعضاء أصغر من 30 عامًا وأعضاء أكبر من 40 عامًا؟", "db_id": "coffee_shop"}
{"question": "What is the membership card held by both members living in Hartford and ones living in Waterbury address?", "query": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'", "arabic": "ما هو بطاقة العضوية التي يحملها الأعضاء الذين يعيشون في عنوان هارتفورد والذين يعيشون في عنوان ووتربري؟", "db_id": "coffee_shop"}
{"question": "How many members are not living in Hartford?", "query": "SELECT count(*) FROM member WHERE address != 'Hartford'", "arabic": "كم عدد الأعضاء الذين لا يعيشون في هارتفورد؟", "db_id": "coffee_shop"}
{"question": "Which address do not have any member with the black membership card?", "query": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'", "arabic": "أي عنوان ليس لديه أي عضو يمتلك بطاقة عضوية سوداء؟", "db_id": "coffee_shop"}
{"question": "Show the shop addresses ordered by their opening year.", "query": "SELECT address FROM shop ORDER BY open_year", "arabic": "أظهر عناوين المتاجر مرتبة حسب سنة افتتاحها.", "db_id": "coffee_shop"}
{"question": "What are the average score and average staff number of all shops?", "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop", "arabic": "ما هي النقاط المتوسطة ومتوسط عدد الموظفين في جميع المتاجر؟", "db_id": "coffee_shop"}
{"question": "Find the id and address of the shops whose score is below the average score.", "query": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)", "arabic": "اعثر على معرفات وعناوين المتاجر التي تكون درجة تقييمها أقل من النقطة المتوسطة.", "db_id": "coffee_shop"}
{"question": "Find the address and staff number of the shops that do not have any happy hour.", "query": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)", "arabic": "اعثر على عنوان وعدد الموظفين في المتاجر التي لا تملك أي ساعة سعيدة.", "db_id": "coffee_shop"}
{"question": "What are the id and address of the shops which have a happy hour in May?", "query": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'", "arabic": "ما هي معرفات وعناوين المتاجر التي تحتوي على ساعة سعيدة في شهر مايو؟", "db_id": "coffee_shop"}
{"question": "which shop has happy hour most frequently? List its id and number of happy hours.", "query": "SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي متجر يحتوي على ساعة سعيدة بشكل متكرر؟ اذكر معرفه وعدد ساعات السعادة.", "db_id": "coffee_shop"}
{"question": "Which month has the most happy hours?", "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1", "arabic": "أي شهر يحتوي على أكبر عدد من ساعات السعادة؟", "db_id": "coffee_shop"}
{"question": "Which months have more than 2 happy hours?", "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2", "arabic": "أي شهور تحتوي على أكثر من 2 ساعة سعيدة؟", "db_id": "coffee_shop"}
{"question": "How many albums are there?", "query": "SELECT count(*) FROM ALBUM", "arabic": "كم عدد الألبومات؟", "db_id": "chinook_1"}
{"question": "Find the number of albums.", "query": "SELECT count(*) FROM ALBUM", "arabic": "ما هو عدد الألبومات؟", "db_id": "chinook_1"}
{"question": "List the names of all music genres.", "query": "SELECT Name FROM GENRE", "arabic": "عرّف أسماء جميع الأنواع الموسيقية؟", "db_id": "chinook_1"}
{"question": "What are the names of different music genres?", "query": "SELECT Name FROM GENRE", "arabic": "ما هي أسماء الأنواع الموسيقية المختلفة؟", "db_id": "chinook_1"}
{"question": "Find all the customer information in state NY.", "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"", "arabic": "ما هي جميع معلومات العملاء في ولاية نيويورك؟", "db_id": "chinook_1"}
{"question": "What is all the customer information for customers in NY state?", "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"", "arabic": "ما هي جميع معلومات العملاء للعملاء في ولاية نيويورك؟", "db_id": "chinook_1"}
{"question": "What are the first names and last names of the employees who live in Calgary city.", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"", "arabic": "ما هي الأسماء الأولى والأسماء الأخيرة للموظفين الذين يعيشون في مدينة كالجاري؟", "db_id": "chinook_1"}
{"question": "Find the full names of employees living in the city of Calgary.", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"", "arabic": "اعثر على الأسماء الكاملة للموظفين الذين يعيشون في مدينة كالجاري؟", "db_id": "chinook_1"}
{"question": "What are the distinct billing countries of the invoices?", "query": "SELECT distinct(BillingCountry) FROM INVOICE", "arabic": "ما هي الدول الفوترة المتميزة في الفواتير؟", "db_id": "chinook_1"}
{"question": "Find the different billing countries for all invoices.", "query": "SELECT distinct(BillingCountry) FROM INVOICE", "arabic": "اعثر على الدول الفوترة المختلفة لجميع الفواتير؟", "db_id": "chinook_1"}
{"question": "Find the names of all artists that have \"a\" in their names.", "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"", "arabic": "ما هي أسماء جميع الفنانين الذين يحتوون على \"a\" في أسمائهم؟", "db_id": "chinook_1"}
{"question": "What are the names of artist who have the letter 'a' in their names?", "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"", "arabic": "ما هي أسماء الفنانين الذين يحتوون على الحرف 'a' في أسمائهم؟", "db_id": "chinook_1"}
{"question": "Find the title of all the albums of the artist \"AC/DC\".", "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"", "arabic": "ما هو عنوان جميع الألبومات للفنان \"AC/DC\"؟", "db_id": "chinook_1"}
{"question": "What are the titles of albums by the artist \"AC/DC\"?", "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"", "arabic": "ما هي عناوين الألبومات للفنان \"AC/DC\"؟", "db_id": "chinook_1"}
{"question": "Hom many albums does the artist \"Metallica\" have?", "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"", "arabic": "كم عدد الألبومات التي يمتلكها الفنان \"ميتاليكا\"؟", "db_id": "chinook_1"}
{"question": "Find the number of albums by the artist \"Metallica\".", "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"", "arabic": "اعثر على عدد الألبومات للفنان \"ميتاليكا\"؟", "db_id": "chinook_1"}
{"question": "Which artist does the album \"Balls to the Wall\" belong to?", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"", "arabic": "أي فنان يمتلك الألبوم \"Balls to the Wall\"؟", "db_id": "chinook_1"}
{"question": "Find the name of the artist who made the album \"Balls to the Wall\".", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"", "arabic": "اعثر على اسم الفنان الذي قام بصنع الألبوم \"Balls to the Wall\"؟", "db_id": "chinook_1"}
{"question": "Which artist has the most albums?", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي فنان لديه أكبر عدد من الألبومات؟", "db_id": "chinook_1"}
{"question": "What is the name of the artist with the greatest number of albums?", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو اسم الفنان الذي لديه أكبر عدد من الألبومات؟", "db_id": "chinook_1"}
{"question": "Find the names of all the tracks that contain the word \"you\".", "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'", "arabic": "اعثر على أسماء جميع المسارات التي تحتوي على كلمة \"you\".", "db_id": "chinook_1"}
{"question": "What are the names of tracks that contain the the word you in them?", "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'", "arabic": "ما هي أسماء المسارات التي تحتوي على كلمة \"you\" فيها؟", "db_id": "chinook_1"}
{"question": "What is the average unit price of all the tracks?", "query": "SELECT AVG(UnitPrice) FROM TRACK", "arabic": "ما هو السعر الوحدوي المتوسط لجميع المسارات؟", "db_id": "chinook_1"}
{"question": "Find the average unit price for a track.", "query": "SELECT AVG(UnitPrice) FROM TRACK", "arabic": "اعثر على السعر الوحدوي المتوسط للمسار الواحد.", "db_id": "chinook_1"}
{"question": "What are the durations of the longest and the shortest tracks in milliseconds?", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK", "arabic": "ما هي مدة المسارات الأطول والأقصر بالميلي ثانية؟", "db_id": "chinook_1"}
{"question": "Find the maximum and minimum durations of tracks in milliseconds.", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK", "arabic": "اعثر على الحد الأقصى والحد الأدنى لمدة المسارات بالميلي ثانية.", "db_id": "chinook_1"}
{"question": "Show the album names, ids and the number of tracks for each album.", "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID", "arabic": "أظهر أسماء الألبومات والمعرفات وعدد المسارات لكل ألبوم.", "db_id": "chinook_1"}
{"question": "What are the names and ids of the different albums, and how many tracks are on each?", "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID", "arabic": "ما هي أسماء ومعرفات الألبومات المختلفة، وكم عدد المسارات في كل واحد؟", "db_id": "chinook_1"}
{"question": "What is the name of the most common genre in all tracks?", "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو اسم النوع الأكثر شيوعاً في جميع المسارات؟", "db_id": "chinook_1"}
{"question": "Find the name of the genre that is most frequent across all tracks.", "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "اعثر على اسم النوع الذي هو الأكثر تكرارا عبر جميع المسارات.", "db_id": "chinook_1"}
{"question": "What is the least common media type in all tracks?", "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1", "arabic": "ما هو نوع الوسائط الأقل شيوعاً في جميع المسارات؟", "db_id": "chinook_1"}
{"question": "What is the name of the media type that is least common across all tracks?", "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1", "arabic": "ما هو اسم نوع الوسائط الأقل شيوعاً عبر جميع المسارات؟", "db_id": "chinook_1"}
{"question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.", "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID", "arabic": "أظهر أسماء الألبومات والمعرفات للألبومات التي تحتوي على مسارات بسعر وحدة أكبر من 1.", "db_id": "chinook_1"}
{"question": "What are the titles and ids for albums containing tracks with unit price greater than 1?", "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID", "arabic": "ما هي العناوين والمعرفات للألبومات التي تحتوي على مسارات بسعر وحدة أكبر من 1؟", "db_id": "chinook_1"}
{"question": "How many tracks belong to rock genre?", "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "arabic": "كم عدد المسارات التي تنتمي إلى نوع الموسيقى الروك؟", "db_id": "chinook_1"}
{"question": "Count the number of tracks that are part of the rock genre.", "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "arabic": "عدد المسارات التي تنتمي إلى نوع الموسيقى الروك؟", "db_id": "chinook_1"}
{"question": "What is the average unit price of tracks that belong to Jazz genre?", "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\"", "arabic": "ما هو السعر المتوسط للوحدة للمسارات التي تنتمي إلى نوع الموسيقى الجاز؟", "db_id": "chinook_1"}
{"question": "Find the average unit price of jazz tracks.", "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\"", "arabic": "اعثر على السعر المتوسط للوحدة للمسارات الجاز.", "db_id": "chinook_1"}
{"question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"", "arabic": "ما هو الاسم الأول والاسم الأخير للعميل الذي يمتلك البريد الإلكتروني \"luisg@embraer.com.br\"؟", "db_id": "chinook_1"}
{"question": "Find the full name of the customer with the email \"luisg@embraer.com.br\".", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"", "arabic": "اعثر على الاسم الكامل للعميل الذي يمتلك البريد الإلكتروني \"luisg@embraer.com.br\".", "db_id": "chinook_1"}
{"question": "How many customers have email that contains \"gmail.com\"?", "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"", "arabic": "كم عدد العملاء الذين لديهم بريد إلكتروني يحتوي على \"gmail.com\"؟", "db_id": "chinook_1"}
{"question": "Count the number of customers that have an email containing \"gmail.com\".", "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"", "arabic": "عدد العملاء الذين لديهم بريد إلكتروني يحتوي على \"gmail.com\".", "db_id": "chinook_1"}
{"question": "What is the first name and last name employee helps the customer with first name Leonie?", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"", "arabic": "ما هو الاسم الأول والاسم الأخير للموظف الذي يساعد العميل الذي يحمل الاسم الأول Leonie؟", "db_id": "chinook_1"}
{"question": "Find the full names of employees who help customers with the first name Leonie.", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"", "arabic": "اعثر على الأسماء الكاملة للموظفين الذين يساعدون العملاء الذين يحملون الاسم الأول Leonie.", "db_id": "chinook_1"}
{"question": "What city does the employee who helps the customer with postal code 70174 live in?", "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\"", "arabic": "في أي مدينة يعيش الموظف الذي يساعد العميل الذي لديه الرمز البريدي 70174؟", "db_id": "chinook_1"}
{"question": "Find the cities corresponding to employees who help customers with the postal code 70174.", "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\"", "arabic": "اعثر على المدن المقابلة للموظفين الذين يساعدون العملاء الذين لديهم الرمز البريدي 70174.", "db_id": "chinook_1"}
{"question": "How many distinct cities does the employees live in?", "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE", "arabic": "كم عدد المدن المميزة التي يعيش فيها الموظفون؟", "db_id": "chinook_1"}
{"question": "Find the number of different cities that employees live in.", "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE", "arabic": "اعثر على عدد المدن المختلفة التي يعيش فيها الموظفون.", "db_id": "chinook_1"}
{"question": "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber.", "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\"", "arabic": "اعثر على جميع تواريخ الفواتير المتعلقة بالعملاء الذين لديهم الاسم الأول Astrid والاسم الأخير Gruber.", "db_id": "chinook_1"}
{"question": "What are the invoice dates for customers with the first name Astrid and the last name Gruber?", "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\"", "arabic": "ما هي تواريخ الفاتورة للعملاء الذين لديهم الاسم الأول Astrid والاسم الأخير Gruber؟", "db_id": "chinook_1"}
{"question": "Find all the customer last names that do not have invoice totals larger than 20.", "query": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20", "arabic": "اعثر على أسماء العملاء الأخيرة التي ليست لديها مجموع فواتير يتجاوز 20.", "db_id": "chinook_1"}
{"question": "What are the last names of customers without invoice totals exceeding 20?", "query": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20", "arabic": "ما هي أسماء العملاء الأخيرة دون تجاوز مجموع الفواتير 20؟", "db_id": "chinook_1"}
{"question": "Find the first names of all customers that live in Brazil and have an invoice.", "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\"", "arabic": "اعثر على أسماء العملاء الأولى الذين يعيشون في البرازيل ولديهم فاتورة.", "db_id": "chinook_1"}
{"question": "What are the different first names for customers from Brazil who have also had an invoice?", "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\"", "arabic": "ما هي الأسماء الأولى المختلفة للعملاء من البرازيل الذين لديهم أيضًا فاتورة؟", "db_id": "chinook_1"}
{"question": "Find the address of all customers that live in Germany and have invoice.", "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"", "arabic": "اعثر على عناوين جميع العملاء الذين يعيشون في ألمانيا ولديهم فاتورة.", "db_id": "chinook_1"}
{"question": "What are the addresses of customers living in Germany who have had an invoice?", "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"", "arabic": "ما هي عناوين العملاء الذين يعيشون في ألمانيا ولديهم فاتورة؟", "db_id": "chinook_1"}
{"question": "List the phone numbers of all employees.", "query": "SELECT Phone FROM EMPLOYEE", "arabic": "قائمة أرقام الهواتف لجميع الموظفين.", "db_id": "chinook_1"}
{"question": "What are the phone numbers for each employee?", "query": "SELECT Phone FROM EMPLOYEE", "arabic": "ما هي أرقام الهواتف لكل موظف؟", "db_id": "chinook_1"}
{"question": "How many tracks are in the AAC audio file media type?", "query": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\"", "arabic": "كم عدد المسارات في نوع الوسائط \"ملف صوت AAC\"؟", "db_id": "chinook_1"}
{"question": "Count the number of tracks that are of the media type \"AAC audio file\".", "query": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\"", "arabic": "عدد المسارات التي تنتمي إلى نوع الوسائط \"ملف صوت AAC\".", "db_id": "chinook_1"}
{"question": "What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?", "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\"", "arabic": "ما هو المدة المتوسطة بالمللي ثانية للمسارات التي تنتمي إلى النوع اللاتيني أو البوب؟", "db_id": "chinook_1"}
{"question": "Find the average millisecond length of Latin and Pop tracks.", "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\"", "arabic": "اعثر على متوسط طول المللي ثانية للمسارات اللاتينية والبوب.", "db_id": "chinook_1"}
{"question": "Please show the employee first names and ids of employees who serve at least 10 customers.", "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10", "arabic": "الرجاء عرض أسماء الموظفين الأولى ومعرّفات الدعم للموظفين الذين يخدمون على الأقل 10 عملاء.", "db_id": "chinook_1"}
{"question": "What are the first names and support rep ids for employees serving 10 or more customers?", "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10", "arabic": "ما هي أسماء الموظفين الأولى ومعرفات مساعدي الدعم للموظفين الذين يخدمون 10 عملاء أو أكثر؟", "db_id": "chinook_1"}
{"question": "Please show the employee last names that serves no more than 20 customers.", "query": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20", "arabic": "الرجاء عرض أسماء الموظفين الأخيرة الذين يخدمون لا أكثر من 20 عميل.", "db_id": "chinook_1"}
{"question": "What are the last names of employees who serve at most 20 customers?", "query": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20", "arabic": "ما هي أسماء العائلة للموظفين الذين يخدمون على الأكثر 20 عميلاً؟", "db_id": "chinook_1"}
{"question": "Please list all album titles in alphabetical order.", "query": "SELECT Title FROM ALBUM ORDER BY Title", "arabic": "الرجاء سرد جميع عناوين الألبوم بترتيب أبجدي.", "db_id": "chinook_1"}
{"question": "What are all the album titles, in alphabetical order?", "query": "SELECT Title FROM ALBUM ORDER BY Title", "arabic": "ما هي جميع عناوين الألبوم، بترتيب أبجدي؟", "db_id": "chinook_1"}
{"question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order.", "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name", "arabic": "الرجاء سرد اسم ومعرف جميع الفنانين الذين لديهم على الأقل 3 ألبومات بترتيب أبجدي.", "db_id": "chinook_1"}
{"question": "What are the names and ids of artists with 3 or more albums, listed in alphabetical order?", "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name", "arabic": "ما هي أسماء ومعرفات الفنانين الذين لديهم 3 ألبومات أو أكثر، مرتبة بترتيب أبجدي؟", "db_id": "chinook_1"}
{"question": "Find the names of artists that do not have any albums.", "query": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId", "arabic": "اعثر على أسماء الفنانين الذين ليس لديهم أي ألبومات.", "db_id": "chinook_1"}
{"question": "What are the names of artists who have not released any albums?", "query": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId", "arabic": "ما هي أسماء الفنانين الذين لم يصدروا أي ألبومات؟", "db_id": "chinook_1"}
{"question": "What is the average unit price of rock tracks?", "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "arabic": "ما هو المتوسط السعري لمسارات الروك؟", "db_id": "chinook_1"}
{"question": "Find the average unit price of tracks from the Rock genre.", "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "arabic": "اعثر على المتوسط السعري للمسارات من نوع الروك.", "db_id": "chinook_1"}
{"question": "What are the duration of the longest and shortest pop tracks in milliseconds?", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\"", "arabic": "ما هي مدة أطول وأقصر مسارات البوب بالمللي ثانية؟", "db_id": "chinook_1"}
{"question": "Find the maximum and minimum millisecond lengths of pop tracks.", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\"", "arabic": "اعثر على الأطوال القصوى والدنيا لمسارات البوب بالمللي ثانية.", "db_id": "chinook_1"}
{"question": "What are the birth dates of employees living in Edmonton?", "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"", "arabic": "ما هي تواريخ الميلاد للموظفين الذين يعيشون في إدمونتون؟", "db_id": "chinook_1"}
{"question": "Find the birth dates corresponding to employees who live in the city of Edmonton.", "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"", "arabic": "اعثر على تواريخ الميلاد المتعلقة بالموظفين الذين يعيشون في مدينة إدمونتون.", "db_id": "chinook_1"}
{"question": "What are the distinct unit prices of all tracks?", "query": "SELECT distinct(UnitPrice) FROM TRACK", "arabic": "ما هي أسعار الوحدة المتميزة لجميع المسارات؟", "db_id": "chinook_1"}
{"question": "Find the distinct unit prices for tracks.", "query": "SELECT distinct(UnitPrice) FROM TRACK", "arabic": "ما هي أسعار الوحدة المتميزة للمسارات؟", "db_id": "chinook_1"}
{"question": "How many artists do not have any album?", "query": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)", "arabic": "كم عدد الفنانين الذين ليس لديهم أي ألبوم؟", "db_id": "chinook_1"}
{"question": "Cound the number of artists who have not released an album.", "query": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)", "arabic": "ما هو عدد الفنانين الذين لم يصدروا ألبومًا؟", "db_id": "chinook_1"}
{"question": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?", "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'", "arabic": "ما هي عناوين الألبومات للألبومات التي تحتوي على مسارات لكل من 'الريغي' و 'الروك' الأنواع؟", "db_id": "chinook_1"}
{"question": "Find the titles of albums that contain tracks of both the Reggae and Rock genres.", "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'", "arabic": "اعثر على عناوين الألبومات التي تحتوي على مسارات لكل من الأنواع 'الريغي' و 'الروك'.", "db_id": "chinook_1"}
{"question": "Find all the phone numbers.", "query": "SELECT customer_phone FROM available_policies", "arabic": "ما هي جميع أرقام الهاتف؟", "db_id": "insurance_fnol"}
{"question": "What are all the phone numbers?", "query": "SELECT customer_phone FROM available_policies", "arabic": "ما هي جميع أرقام الهاتف؟", "db_id": "insurance_fnol"}
{"question": "What are the customer phone numbers under the policy \"Life Insurance\"?", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"", "arabic": "ما هي أرقام هواتف العملاء تحت سياسة \"تأمين الحياة\"؟", "db_id": "insurance_fnol"}
{"question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"", "arabic": "ما هي أرقام هواتف العملاء الذين يستخدمون السياسة برمز \"تأمين الحياة\"؟", "db_id": "insurance_fnol"}
{"question": "Which policy type has the most records in the database?", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من السياسات يحتوي على أكبر عدد من السجلات في قاعدة البيانات؟", "db_id": "insurance_fnol"}
{"question": "Which policy type appears most frequently in the available policies?", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من السياسات يظهر بشكل متكرر بين السياسات المتاحة؟", "db_id": "insurance_fnol"}
{"question": "What are all the customer phone numbers under the most popular policy type?", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي جميع أرقام هواتف العملاء تحت نوع السياسة الأكثر شيوعًا؟", "db_id": "insurance_fnol"}
{"question": "Find the phone numbers of customers using the most common policy type among the available policies.", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)", "arabic": "اعثر على أرقام هواتف العملاء الذين يستخدمون نوع السياسة الأكثر شيوعًا بين السياسات المتاحة.", "db_id": "insurance_fnol"}
{"question": "Find the policy type used by more than 4 customers.", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4", "arabic": "اعثر على نوع السياسة الذي يستخدمه أكثر من 4 عملاء.", "db_id": "insurance_fnol"}
{"question": "Find the policy types more than 4 customers use. Show their type code.", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4", "arabic": "اعثر على أنواع السياسات التي يستخدمها أكثر من 4 عملاء. عرض رمز أنواعها.", "db_id": "insurance_fnol"}
{"question": "Find the total and average amount of settlements.", "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements", "arabic": "ما هو المبلغ الإجمالي والمتوسط للتسويات؟", "db_id": "insurance_fnol"}
{"question": "Return the sum and average of all settlement amounts.", "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements", "arabic": "ما هو مجموع ومتوسط جميع مبالغ التسوية؟", "db_id": "insurance_fnol"}
{"question": "Find the name of services that have been used for more than 2 times in first notification of loss.", "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2", "arabic": "ما هي أسماء الخدمات التي تم استخدامها أكثر من مرتين في أول إشعار عن الخسارة؟", "db_id": "insurance_fnol"}
{"question": "Which services have been used more than twice in first notification of loss? Return the service name.", "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2", "arabic": "أي الخدمات تم استخدامها أكثر من مرتين في أول إشعار عن الخسارة؟ عرض اسم الخدمة.", "db_id": "insurance_fnol"}
{"question": "What is the effective date of the claim that has the largest amount of total settlement?", "query": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1", "arabic": "ما هو تاريخ البيان المؤثر للمطالبة التي تحتوي على أكبر مبلغ من التسوية الإجمالي؟", "db_id": "insurance_fnol"}
{"question": "Find the claim that has the largest total settlement amount. Return the effective date of the claim.", "query": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1", "arabic": "ابحث عن المطالبة التي تحتوي على أكبر مبلغ إجمالي للتسوية. عرض تاريخ البيان المؤثر للمطالبة.", "db_id": "insurance_fnol"}
{"question": "How many policies are listed for the customer named \"Dayana Robel\"?", "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\"", "arabic": "كم عدد السياسات المدرجة للعميل بالاسم \"ديانا روبيل\"؟", "db_id": "insurance_fnol"}
{"question": "Count the total number of policies used by the customer named \"Dayana Robel\".", "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\"", "arabic": "عدد السياسات الإجمالي المستخدمة بواسطة العميل بالاسم \"ديانا روبيل\".", "db_id": "insurance_fnol"}
{"question": "What is the name of the customer who has the most policies listed?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العميل الذي لديه أكبر عدد من السياسات المدرجة؟", "db_id": "insurance_fnol"}
{"question": "Which customer uses the most policies? Give me the customer name.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1", "arabic": "أي عميل يستخدم أكبر عدد من السياسات؟ أعطني اسم العميل.", "db_id": "insurance_fnol"}
{"question": "What are all the policy types of the customer named \"Dayana Robel\"?", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"", "arabic": "ما هي جميع أنواع السياسات للعميل بالاسم \"ديانا روبيل\"؟", "db_id": "insurance_fnol"}
{"question": "Tell me the types of the policy used by the customer named \"Dayana Robel\".", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"", "arabic": "أخبرني بأنواع السياسة المستخدمة من قبل العميل بالاسم \"ديانا روبيل\".", "db_id": "insurance_fnol"}
{"question": "What are all the policy types of the customer that has the most policies listed?", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي جميع أنواع السياسات للعميل الذي لديه أكبر عدد من السياسات المدرجة؟", "db_id": "insurance_fnol"}
{"question": "List all the policy types used by the customer enrolled in the most policies.", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)", "arabic": "قائمة بجميع أنواع السياسات المستخدمة من قبل العميل المسجل في أكبر عدد من السياسات.", "db_id": "insurance_fnol"}
{"question": "List all the services in the alphabetical order.", "query": "SELECT service_name FROM services ORDER BY service_name", "arabic": "قائمة جميع الخدمات بالترتيب الأبجدي.", "db_id": "insurance_fnol"}
{"question": "Give me a list of all the service names sorted alphabetically.", "query": "SELECT service_name FROM services ORDER BY service_name", "arabic": "أعطني قائمة بأسماء جميع الخدمات مرتبة ترتيباً أبجدياً.", "db_id": "insurance_fnol"}
{"question": "How many services are there?", "query": "SELECT count(*) FROM services", "arabic": "كم عدد الخدمات؟", "db_id": "insurance_fnol"}
{"question": "Count the total number of available services.", "query": "SELECT count(*) FROM services", "arabic": "عدد الخدمات المتاحة بالكامل.", "db_id": "insurance_fnol"}
{"question": "Find the names of users who do not have a first notification of loss record.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id", "arabic": "ابحث عن أسماء المستخدمين الذين ليس لديهم سجل في أول إشعار عن الخسارة.", "db_id": "insurance_fnol"}
{"question": "Which customers do not have a first notification of loss record? Give me the customer names.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id", "arabic": "أي العملاء ليس لديهم سجل في أول إشعار عن الخسارة؟ أعطني أسماء العملاء.", "db_id": "insurance_fnol"}
{"question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\"", "arabic": "ابحث عن أسماء العملاء الذين استخدموا إما الخدمة \"إغلاق سياسة\" أو الخدمة \"ترقية سياسة\".", "db_id": "insurance_fnol"}
{"question": "Which customers have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the customer names.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\"", "arabic": "أي العملاء استخدموا الخدمة المسماة \"إغلاق سياسة\" أو \"ترقية سياسة\"؟ أعطني أسماء العملاء.", "db_id": "insurance_fnol"}
{"question": "Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\".", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\"", "arabic": "ابحث عن أسماء العملاء الذين استخدموا كل من الخدمة \"إغلاق سياسة\" والخدمة \"طلب سياسة جديدة\".", "db_id": "insurance_fnol"}
{"question": "Which customers have used both the service named \"Close a policy\" and the service named \"Upgrade a policy\"? Give me the customer names.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\"", "arabic": "أي العملاء استخدموا كل من الخدمة المسماة \"إغلاق سياسة\" والخدمة المسماة \"ترقية سياسة\"؟ أعطني أسماء العملاء.", "db_id": "insurance_fnol"}
{"question": "Find the IDs of customers whose name contains \"Diana\".", "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"", "arabic": "ابحث عن معرف العملاء الذين يحتوي اسمهم على \"ديانا\".", "db_id": "insurance_fnol"}
{"question": "What are the IDs of customers who have \"Diana\" in part of their names?", "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"", "arabic": "ما هي معرفات العملاء الذين يحتوون على \"ديانا\" في جزء من أسمائهم؟", "db_id": "insurance_fnol"}
{"question": "What are the maximum and minimum settlement amount on record?", "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements", "arabic": "ما هو أعلى وأقل مبلغ للتسوية في السجل؟", "db_id": "insurance_fnol"}
{"question": "Find the maximum and minimum settlement amount.", "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements", "arabic": "ابحث عن أعلى وأقل مبلغ للتسوية.", "db_id": "insurance_fnol"}
{"question": "List all the customers in increasing order of IDs.", "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC", "arabic": "قائمة بجميع العملاء بترتيب متزايد حسب المعرفات.", "db_id": "insurance_fnol"}
{"question": "What is the ordered list of customer ids?", "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC", "arabic": "ما هي القائمة المرتبة من معرفات العملاء؟", "db_id": "insurance_fnol"}
{"question": "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\"", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"", "arabic": "[Question] استرجاع تواريخ الفتح والإغلاق لجميع السياسات المرتبطة بالعميل الذي يحتوي اسمه على \"ديانا\".", "db_id": "insurance_fnol"}
{"question": "What are the open and close dates of all the policies used by the customer who have \"Diana\" in part of their names?", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"", "arabic": "[Question] ما هي تواريخ الفتح والإغلاق لجميع السياسات المستخدمة من قبل العملاء الذين يحتوون على \"ديانا\" في جزء من أسمائهم؟", "db_id": "insurance_fnol"}
{"question": "How many kinds of enzymes are there?", "query": "SELECT count(*) FROM enzyme", "arabic": "[Question] كم نوعًا من الإنزيمات موجودة؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the total count of enzymes?", "query": "SELECT count(*) FROM enzyme", "arabic": "[Question] ما هو العدد الإجمالي للإنزيمات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "List the name of enzymes in descending lexicographical order.", "query": "SELECT name FROM enzyme ORDER BY name DESC", "arabic": "[Question] قائمة أسماء الإنزيمات بترتيب أبجدي تنازلي.", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names of enzymes in descending order?", "query": "SELECT name FROM enzyme ORDER BY name DESC", "arabic": "[Question] ما هي أسماء الإنزيمات بترتيب تنازلي؟", "db_id": "medicine_enzyme_interaction"}
{"question": "List the names and the locations that the enzymes can make an effect.", "query": "SELECT name ,  LOCATION FROM enzyme", "arabic": "[Question] سرد أسماء والمواقع التي يمكن للإنزيمات أن تؤثر فيها.", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names and locations of all enzymes listed?", "query": "SELECT name ,  LOCATION FROM enzyme", "arabic": "[Question] ما هي أسماء والمواقع لجميع الإنزيمات المدرجة؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?", "query": "SELECT max(OMIM) FROM enzyme", "arabic": "[Question] ما هو الحد الأقصى لقيمة OMIM (Online Mendelian Inheritance in Man) للإنزيمات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the maximum OMIM value in the database?", "query": "SELECT max(OMIM) FROM enzyme", "arabic": "[Question] ما هي القيمة القصوى لـ OMIM في قاعدة البيانات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", "arabic": "[Question] ما هو المنتج والكروموسوم والبرفيريا المتعلقة بالإنزيمات التي تأثر في الموقع 'السيتوزول'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", "arabic": "[Question] ما هو المنتج والكروموسوم والبرفيريا للإنزيمات الموجودة في 'السيتوزول'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names of enzymes who does not produce 'Heme'?", "query": "SELECT name FROM enzyme WHERE product != 'Heme'", "arabic": "[Question] ما هي أسماء الإنزيمات التي لا تنتج 'الهيم'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names of enzymes whose product is not 'Heme'?", "query": "SELECT name FROM enzyme WHERE product != 'Heme'", "arabic": "[Question] ما هي أسماء الإنزيمات التي منتجها ليس 'الهيم'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'", "arabic": "[Question] ما هي أسماء وأسماء التجارية للأدوية التي لها قيمة 'نعم' في سجل إدارة الغذاء والدواء (FDA)؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names and trade names of the medcines that are FDA approved?", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'", "arabic": "[Question] ما هي أسماء وأسماء التجارية للأدوية التي تمت الموافقة عليها من قبل إدارة الغذاء والدواء (FDA)؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?", "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'", "arabic": "[Question] ما هي أسماء الإنزيمات في الدواء المسمى 'Amisulpride' التي يمكن أن تعمل كـ 'مثبط'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names of the enzymes used in the medicine  Amisulpride that acts as inhibitors?", "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'", "arabic": "[Question] ما هي أسماء الإنزيمات المستخدمة في الدواء Amisulpride التي تعمل كمثبطات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the ids and names of the medicine that can interact with two or more enzymes?", "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "arabic": "[Question] ما هي الهويات والأسماء للأدوية التي يمكن أن تتفاعل مع إنزيمين أو أكثر؟", "db_id": "medicine_enzyme_interaction"}
{"question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?", "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "arabic": "[Question] لكل هوية دواء، ما هي أسماء الأدوية التي يمكن أن تتفاعل مع أكثر من إنزيم واحد؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.", "query": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC", "arabic": "[Question] ما هي الهويات والأسماء وحالة الموافقة من إدارة الغذاء والدواء للأدوية بترتيب تنازلي حسب عدد الإنزيمات التي يمكن أن تتفاعل معها.", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?", "query": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC", "arabic": "[Question] ما هي الهويات والأسماء وحالة الموافقة من إدارة الغذاء والدواء للأدوية بترتيب تنازلي حسب عدد التفاعلات المحتملة مع الإنزيمات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?", "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو الهوية والاسم للإنزيم الذي لديه أكبر عدد من الأدوية التي يمكن أن تتفاعل معها كـ 'منشط'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the id and name of the enzyme that can interact with the most medicines as an activator?", "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو الهوية والاسم للإنزيم الذي يمكن أن يتفاعل مع أكبر عدد من الأدوية كمنشط؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?", "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'", "arabic": "[Question] ما هو نوع التفاعل بين الإنزيم المسمى 'ALA synthase' والدواء المسمى 'Aripiprazole'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?", "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'", "arabic": "[Question] ما هو نوع التفاعل للإنزيم المسمى 'ALA synthase' والدواء المسمى 'Aripiprazole'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the most common interaction type between enzymes and medicine? And how many are there?", "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو النوع الأكثر شيوعًا للتفاعل بين الإنزيمات والأدوية؟ وكم عددها؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the most common types of interactions between enzymes and medicine, and how many types are there?", "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هي الأنواع الأكثر شيوعًا للتفاعلات بين الإنزيمات والأدوية، وكم عددها؟", "db_id": "medicine_enzyme_interaction"}
{"question": "How many medicines have the FDA approval status 'No' ?", "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'", "arabic": "[Question] كم عدد الأدوية التي لديها حالة موافقة من إدارة الغذاء والدواء (FDA) 'لا'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "How many medicines were not approved by the FDA?", "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'", "arabic": "[Question] كم عدد الأدوية التي لم تتم الموافقة عليها من قبل إدارة الغذاء والدواء (FDA)؟", "db_id": "medicine_enzyme_interaction"}
{"question": "How many enzymes do not have any interactions?", "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );", "arabic": "[Question] كم عدد الإنزيمات التي لا تتفاعل مع أي مركبات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the count of enzymes without any interactions?", "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );", "arabic": "[Question] ما هو عدد الإنزيمات التي لا تتفاعل مع أي مركبات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?", "query": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3", "arabic": "[Question] ما هو الهوية واسم التجاري للأدوية التي يمكن أن تتفاعل مع ما لا يقل عن 3 إنزيمات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?", "query": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3", "arabic": "[Question] ما هي الهويات وأسماء التجارية للأدوية التي يمكن أن تتفاعل مع ما لا يقل عن 3 إنزيمات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the distinct name, location and products of the enzymes which has any 'inhibitor' interaction?", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'", "arabic": "[Question] ما هي الأسماء المميزة، والمواقع، والمنتجات للإنزيمات التي لها أي تفاعل 'مثبط'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the different names, locations, and products of the enzymes that are capable inhibitor interactions?", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'", "arabic": "[Question] ما هي الأسماء المختلفة، والمواقع، والمنتجات للإنزيمات التي يمكنها تفاعل مثبطات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes.", "query": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'", "arabic": "[Question] قائمة بأسماء الأدوية وأسماء التجارية التي يمكن أن تتفاعل كـ 'مثبط' و 'منشط' مع الإنزيمات.", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the medicine and trade names that can interact as an inhibitor and activitor with enzymes?", "query": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'", "arabic": "[Question] ما هي أسماء الأدوية وأسماء التجارية التي يمكن أن تتفاعل كمثبط ومنشط مع الإنزيمات؟", "db_id": "medicine_enzyme_interaction"}
{"question": "Show the medicine names and trade names that cannot interact with the enzyme with product 'Heme'.", "query": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'", "arabic": "[Question] عرض أسماء الأدوية وأسماء التجارية التي لا يمكن أن تتفاعل مع الإنزيم الذي يحتوي على منتج 'هيم'.", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the medicine and trade names that cannot interact with the enzyme with the product 'Heme'?", "query": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'", "arabic": "[Question] ما هي أسماء الأدوية وأسماء التجارية التي لا يمكن أن تتفاعل مع الإنزيم الذي يحتوي على المنتج 'هيم'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "How many distinct FDA approval statuses are there for the medicines?", "query": "SELECT count(DISTINCT FDA_approved) FROM medicine", "arabic": "[Question] كم عدد حالات الموافقة من إدارة الغذاء والدواء (FDA) المميزة للأدوية؟", "db_id": "medicine_enzyme_interaction"}
{"question": "How many different FDA approval statuses exist for medicines?", "query": "SELECT count(DISTINCT FDA_approved) FROM medicine", "arabic": "[Question] كم عدد الحالات المختلفة للموافقة من إدارة الغذاء والدواء (FDA) للأدوية؟", "db_id": "medicine_enzyme_interaction"}
{"question": "Which enzyme names have the substring \"ALA\"?", "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"", "arabic": "[Question] أي أسماء الإنزيمات تحتوي على الجزء \"ALA\"؟", "db_id": "medicine_enzyme_interaction"}
{"question": "What are the names of enzymes that include the string 'ALA'?", "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"", "arabic": "[Question] ما هي أسماء الإنزيمات التي تشمل سلسلة 'ALA'؟", "db_id": "medicine_enzyme_interaction"}
{"question": "find the number of medicines offered by each trade.", "query": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name", "arabic": "[Question] اعثر على عدد الأدوية المقدمة من كل تجارة.", "db_id": "medicine_enzyme_interaction"}
{"question": "How many medicines are offered by each trade name?", "query": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name", "arabic": "[Question] كم عدد الأدوية التي يتم تقديمها بواسطة كل اسم تجاري؟", "db_id": "medicine_enzyme_interaction"}
{"question": "List all schools and their nicknames in the order of founded year.", "query": "SELECT school ,  nickname FROM university ORDER BY founded", "arabic": "[Question] قائمة بجميع المدارس وأسمائها اللقبية بترتيب سنة التأسيس.", "db_id": "university_basketball"}
{"question": "What are the different schools and their nicknames, ordered by their founding years?", "query": "SELECT school ,  nickname FROM university ORDER BY founded", "arabic": "[Question] ما هي المدارس المختلفة وأسماؤها اللقبية، مرتبة حسب سنوات تأسيسها؟", "db_id": "university_basketball"}
{"question": "List all public schools and their locations.", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'", "arabic": "[Question] قائمة بجميع المدارس العامة ومواقعها.", "db_id": "university_basketball"}
{"question": "What are the public schools and what are their locations?", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'", "arabic": "[Question] ما هي المدارس العامة ومواقعها؟", "db_id": "university_basketball"}
{"question": "When was the school with the largest enrollment founded?", "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1", "arabic": "[Question] متى تأسست المدرسة ذات أكبر عدد من الطلاب؟", "db_id": "university_basketball"}
{"question": "Return the founded year for the school with the largest enrollment.", "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1", "arabic": "[Question] ما هي سنة التأسيس للمدرسة التي تتمتع بأكبر عدد من الطلاب؟", "db_id": "university_basketball"}
{"question": "Find the founded year of the newest non public school.", "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1", "arabic": "[Question] اعثر على سنة تأسيس أحدث مدرسة غير عامة.", "db_id": "university_basketball"}
{"question": "What is the founded year of the non public school that was founded most recently?", "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1", "arabic": "[Question] ما هي سنة تأسيس المدرسة غير العامة التي تم تأسيسها مؤخرًا بشكل أكبر؟", "db_id": "university_basketball"}
{"question": "How many schools are in the basketball match?", "query": "SELECT count(DISTINCT school_id) FROM basketball_match", "arabic": "[Question] كم عدد المدارس في مباراة كرة السلة؟", "db_id": "university_basketball"}
{"question": "Count the number of schools that have had basketball matches.", "query": "SELECT count(DISTINCT school_id) FROM basketball_match", "arabic": "[Question] احسب عدد المدارس التي شاركت في مباريات كرة السلة.", "db_id": "university_basketball"}
{"question": "What is the highest acc percent score in the competition?", "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1", "arabic": "[Question] ما هي أعلى نسبة انتصارات لمؤسسة كرة السلة؟", "db_id": "university_basketball"}
{"question": "Return the highest acc percent across all basketball matches.", "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1", "arabic": "[Question] أعد أعلى نسبة انتصارات عبر جميع مباريات كرة السلة.", "db_id": "university_basketball"}
{"question": "What is the primary conference of the school that has the lowest acc percent score in the competition?", "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1", "arabic": "[Question] ما هي الندوة الأساسية للمدرسة التي حصلت على أقل نسبة انتصارات في المسابقة؟", "db_id": "university_basketball"}
{"question": "Return the primary conference of the school with the lowest acc percentage score.", "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1", "arabic": "[Question] أرجع الندوة الأساسية للمدرسة التي حصلت على أقل نسبة انتصارات في المسابقة.", "db_id": "university_basketball"}
{"question": "What is the team name and acc regular season score of the school that was founded for the longest time?", "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1", "arabic": "[Question] ما هو اسم الفريق ونقاط الفريق خلال موسم الدوري العادي للمدرسة التي تم تأسيسها منذ أطول فترة؟", "db_id": "university_basketball"}
{"question": "Return the name of the team and the acc during the regular season for the school that was founded the earliest.", "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1", "arabic": "[Question] أرجع اسم الفريق ونقاط المؤتمر الأطلسي الساحلي خلال الموسم العادي للمدرسة التي تأسست في أقرب وقت.", "db_id": "university_basketball"}
{"question": "Find the location and all games score of the school that has Clemson as its team name.", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'", "arabic": "[Question] اعثر على الموقع ونقاط جميع المباريات للمدرسة التي لديها اسم Clemson كاسم فريق.", "db_id": "university_basketball"}
{"question": "What are the all games score and location of the school called Clemson?", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'", "arabic": "[Question] ما هي نقاط جميع المباريات والموقع للمدرسة المعروفة باسم Clemson؟", "db_id": "university_basketball"}
{"question": "What are the average enrollment size of the universities that are founded before 1850?", "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850", "arabic": "[Question] ما هي متوسط حجم التسجيل للجامعات التي تم تأسيسها قبل عام 1850؟", "db_id": "university_basketball"}
{"question": "Return the average enrollment of universities founded before 1850.", "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850", "arabic": "[Question] أرجع متوسط التسجيل للجامعات التي تم تأسيسها قبل عام 1850.", "db_id": "university_basketball"}
{"question": "Show the enrollment and primary_conference of the oldest college.", "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1", "arabic": "[Question] عرض التسجيل والمؤتمر الرئيسي لأقدم كلية.", "db_id": "university_basketball"}
{"question": "What are the enrollment and primary conference for the university which was founded the earliest?", "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1", "arabic": "[Question] ما هي التسجيل والمؤتمر الرئيسي للجامعة التي تم تأسيسها أقرب وقت؟", "db_id": "university_basketball"}
{"question": "What is the total and minimum enrollment of all schools?", "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university", "arabic": "[Question] ما هي إجمالي والحد الأدنى للتسجيل لجميع المدارس؟", "db_id": "university_basketball"}
{"question": "Return the total and minimum enrollments across all schools.", "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university", "arabic": "[Question] أرجع التسجيل الإجمالي والحد الأدنى عبر جميع المدارس.", "db_id": "university_basketball"}
{"question": "Find the total student enrollment for different affiliation type schools.", "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation", "arabic": "[Question] اعثر على التسجيل الطلابي الإجمالي لمختلف أنواع الانتماءات للمدارس.", "db_id": "university_basketball"}
{"question": "What are the total enrollments of universities of each affiliation type?", "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation", "arabic": "[Question] ما هي التسجيلات الإجمالية للجامعات من كل نوع انتماء؟", "db_id": "university_basketball"}
{"question": "How many schools do not participate in the basketball match?", "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)", "arabic": "[Question] كم عدد المدارس التي لا تشارك في مباراة كرة السلة؟", "db_id": "university_basketball"}
{"question": "Count the number of universities that do not participate in the baketball match.", "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)", "arabic": "[Question] احسب عدد الجامعات التي لا تشارك في مباريات كرة السلة.", "db_id": "university_basketball"}
{"question": "Find the schools that were either founded after 1850 or public.", "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'", "arabic": "[Question] اعثر على المدارس التي تم تأسيسها بعد عام 1850 أو هي عامة.", "db_id": "university_basketball"}
{"question": "What are the schools that were either founded before 1850 or are public?", "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'", "arabic": "[Question] ما هي المدارس التي تم تأسيسها إما قبل عام 1850 أو هي عامة؟", "db_id": "university_basketball"}
{"question": "Find how many different affiliation types there are.", "query": "SELECT count(DISTINCT affiliation) FROM university", "arabic": "[Question] ابحث عن عدد أنواع الانتماء المختلفة.", "db_id": "university_basketball"}
{"question": "Count the number of different affiliation types.", "query": "SELECT count(DISTINCT affiliation) FROM university", "arabic": "[Question] احسب عدد أنواع الانتماء المختلفة.", "db_id": "university_basketball"}
{"question": "Find how many school locations have the word 'NY'.", "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"", "arabic": "[Question] كم عدد مواقع المدارس التي تحتوي على كلمة 'NY'؟", "db_id": "university_basketball"}
{"question": "How many universities have a location that contains NY?", "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"", "arabic": "[Question] كم عدد الجامعات التي تحتوي على موقع يحتوي على NY؟", "db_id": "university_basketball"}
{"question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.", "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)", "arabic": "[Question] ابحث عن أسماء الفرق في الجامعات التي تكون تسجيلاتها أقل من حجم التسجيل المتوسط.", "db_id": "university_basketball"}
{"question": "What are the names of teams from universities that have a below average enrollment?", "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)", "arabic": "[Question] ما هي أسماء الفرق من الجامعات التي لديها تسجيلات أقل من متوسط التسجيل؟", "db_id": "university_basketball"}
{"question": "Find the number of universities that have over a 20000 enrollment size for each affiliation type.", "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation", "arabic": "[Question] ابحث عن عدد الجامعات التي لديها أكثر من 20000 طالب لكل نوع انتماء.", "db_id": "university_basketball"}
{"question": "What are the different affiliations, and how many schools with each have an enrollment size of above 20000?", "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation", "arabic": "[Question] ما هي الانتماءات المختلفة، وكم عدد المدارس التي لديها تسجيلات أعلى من 20000 لكل منها؟", "db_id": "university_basketball"}
{"question": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.", "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation", "arabic": "[Question] ابحث عن العدد الإجمالي للطلاب المسجلين في الكليات التي تم تأسيسها بعد عام 1850 لكل نوع انتماء.", "db_id": "university_basketball"}
{"question": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation", "arabic": "[Question] ما هي الانتماءات المختلفة، وما هي إجمالي التسجيل للمدارس التي تم تأسيسها بعد عام 1850 لكل نوع تسجيل؟", "db_id": "university_basketball"}
{"question": "What is the maximum enrollment across all schools?", "query": "SELECT max(Enrollment) FROM university", "arabic": "[Question] ما هو أقصى حجم تسجيل عبر جميع المدارس؟", "db_id": "university_basketball"}
{"question": "Return the maximum enrollment across all schools.", "query": "SELECT max(Enrollment) FROM university", "arabic": "[Question] ارجع أقصى حجم تسجيل عبر جميع المدارس.", "db_id": "university_basketball"}
{"question": "List all information regarding the basketball match.", "query": "SELECT * FROM basketball_match", "arabic": "[Question] سرد جميع المعلومات المتعلقة بمباراة كرة السلة.", "db_id": "university_basketball"}
{"question": "What is all the information about the basketball match?", "query": "SELECT * FROM basketball_match", "arabic": "[Question] ما هي جميع المعلومات حول مباراة كرة السلة؟", "db_id": "university_basketball"}
{"question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.", "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC", "arabic": "[Question] قائمة أسماء جميع الفرق في مسابقة كرة السلة، مرتبة حسب درجات الأداء في المباريات المنزلية بترتيب تنازلي.", "db_id": "university_basketball"}
{"question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?", "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC", "arabic": "[Question] ما هي أسماء جميع الفرق في مسابقة كرة السلة، مرتبة حسب درجات الأداء في المباريات المنزلية بترتيب تنازلي؟", "db_id": "university_basketball"}
{"question": "the names of models that launched between 2002 and 2004.", "query": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;", "arabic": "[Question] أسماء النماذج التي تم إطلاقها بين عامي 2002 و 2004.", "db_id": "phone_1"}
{"question": "Which model has the least amount of RAM? List the model name and the amount of RAM.", "query": "SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1;", "arabic": "[Question] أي نموذج يحتوي على أقل كمية من ذاكرة الوصول العشوائي؟ قائمة اسم النموذج وكمية ذاكرة الوصول العشوائي.", "db_id": "phone_1"}
{"question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?", "query": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";", "arabic": "[Question] ما هي نموذج شريحة الرقاقة ونمط الشاشة للهاتف الذي يحمل اسم النموذج الأجهزة \"LG-P760\"", "db_id": "phone_1"}
{"question": "How many phone hardware models are produced by the company named \"Nokia Corporation\"?", "query": "SELECT count(*) FROM phone WHERE Company_name = \"Nokia Corporation\";", "arabic": "[Question] كم عدد نماذج الأجهزة الهاتفية التي تنتجها الشركة المسماة \"شركة نوكيا\"؟", "db_id": "phone_1"}
{"question": "What is maximum and minimum RAM size of phone produced by company named \"Nokia Corporation\"?", "query": "SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";", "arabic": "[Question] ما هو أقصى وأدنى حجم لذاكرة الوصول العشوائي للهواتف التي تنتجها الشركة المسماة \"شركة نوكيا\"؟", "db_id": "phone_1"}
{"question": "What is the average ROM size of phones produced by the company named \"Nokia Corporation\"?", "query": "SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";", "arabic": "[Question] ما هو متوسط حجم الذاكرة الداخلية للهواتف التي تنتجها الشركة المسماة \"شركة نوكيا\"؟", "db_id": "phone_1"}
{"question": "List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32.", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;", "arabic": "[Question] قائمة اسم نموذج الأجهزة واسم الشركة لجميع الهواتف التي تم إطلاقها في عام 2002 أو لديها حجم ذاكرة وصول عشوائي أكبر من 32.", "db_id": "phone_1"}
{"question": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.", "query": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';", "arabic": "[Question] ابحث عن جميع الهواتف التي تحتوي على كلمة 'كامل' في أنواع التصديق الخاصة بها. قائمة اسم نموذج الأجهزة واسم الشركة.", "db_id": "phone_1"}
{"question": "Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is \"LG-P760\".", "query": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";", "arabic": "[Question] ابحث عن خلايا Char، بيكسل وألوان الأجهزة لشاشة الهاتف التي يكون اسم نموذج الأجهزة الخاص بها هو \"LG-P760\".", "db_id": "phone_1"}
{"question": "List the hardware model name and company name for the phone whose screen mode type is \"Graphics.\"", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\";", "arabic": "[Question] قائمة اسم نموذج الأجهزة واسم الشركة للهاتف الذي يكون نوع وضع الشاشة الخاص به \"الرسومات\".", "db_id": "phone_1"}
{"question": "Find the name of the company that has the least number of phone models. List the company name and the number of phone model produced by that company.", "query": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;", "arabic": "[Question] ما هو اسم الشركة التي تحتوي على أقل عدد من نماذج الهواتف. قائمة اسم الشركة وعدد نماذج الهواتف التي تنتجها تلك الشركة.", "db_id": "phone_1"}
{"question": "List the name of the company that produced more than one phone model.", "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;", "arabic": "[Question] قائمة اسم الشركة التي أنتجت أكثر من نموذج هاتف واحد.", "db_id": "phone_1"}
{"question": "List the maximum, minimum and average number of used kb in screen mode.", "query": "SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;", "arabic": "[Question] قائمة الحد الأقصى والأدنى والمتوسط لعدد الكيلوبايت المستخدمة في وضع الشاشة.", "db_id": "phone_1"}
{"question": "List the name of the phone model launched in year 2002 and with the highest RAM size.", "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1;", "arabic": "[Question] قائمة اسم نموذج الهاتف الذي تم إطلاقه في عام 2002 والذي يحتوي على أعلى حجم من ذاكرة الوصول العشوائي.", "db_id": "phone_1"}
{"question": "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?", "query": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = \"LG-P760\";", "arabic": "[Question] ما هي واي فاي ونوع وضع الشاشة للنموذج الأجهزة المسمى \"LG-P760\"؟", "db_id": "phone_1"}
{"question": "List the hardware model name for the phones that have screen mode type \"Text\" or RAM size greater than 32.", "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"Text\" OR T1.RAM_MiB  >  32;", "arabic": "[Question] قائمة اسم نموذج الأجهزة للهواتف التي تحتوي على نوع وضع الشاشة \"نص\" أو حجم ذاكرة الوصول العشوائي أكبر من 32.", "db_id": "phone_1"}
{"question": "List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\"", "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\" OR t2.Company_name  =  \"Nokia Corporation\"", "arabic": "[Question] قائمة اسم نموذج الأجهزة للهواتف التي تم إنتاجها من قبل \"شركة نوكيا\" أو نوع وضع الشاشة لها هو \"الرسومات\".", "db_id": "phone_1"}
{"question": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.", "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";", "arabic": "[Question] قائمة اسم نموذج الأجهزة للهواتف التي تم إنتاجها من قبل \"شركة نوكيا\" ولكن نوع وضع الشاشة لها ليس \"نص\".", "db_id": "phone_1"}
{"question": "List the phone hardware model and company name for the phones whose screen usage in kb is between 10 and 15.", "query": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;", "arabic": "[Question] قائمة اسم نموذج الأجهزة الهاتفية واسم الشركة للهواتف التي يتراوح استخدام الشاشة فيها بين 10 و 15 كيلوبايت.", "db_id": "phone_1"}
{"question": "Find the number of phones for each accreditation type.", "query": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type", "arabic": "[Question] ابحث عن عدد الهواتف لكل نوع من أنواع التصديق.", "db_id": "phone_1"}
{"question": "How many phones belongs to each accreditation type?", "query": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type", "arabic": "[Question] كم عدد الهواتف التي تنتمي إلى كل نوع من أنواع التصديق؟", "db_id": "phone_1"}
{"question": "Find the accreditation level that more than 3 phones use.", "query": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3", "arabic": "[Question] ابحث عن مستوى التصديق الذي يستخدمه أكثر من 3 هواتف.", "db_id": "phone_1"}
{"question": "Find the details for all chip models.", "query": "SELECT * FROM chip_model", "arabic": "[Question] ابحث عن تفاصيل جميع نماذج الرقاقات.", "db_id": "phone_1"}
{"question": "How many models do not have the wifi function?", "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'", "arabic": "[Question] كم عدد النماذج التي لا تحتوي على وظيفة الواي فاي؟", "db_id": "phone_1"}
{"question": "Count the number of chip model that do not have wifi.", "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'", "arabic": "[Question] عدد نموذج الرقاقة التي لا تحتوي على واي فاي.", "db_id": "phone_1"}
{"question": "List all the model names sorted by their launch year.", "query": "SELECT model_name FROM chip_model ORDER BY launch_year", "arabic": "[Question] قائمة اسماء جميع النماذج مرتبة حسب سنة الإطلاق.", "db_id": "phone_1"}
{"question": "Find the average ram mib size of the chip models that are never used by any phone.", "query": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)", "arabic": "[Question] ابحث عن متوسط حجم ذاكرة الوصول العشوائي لنماذج الرقاقات التي لم يتم استخدامها في أي هاتف.", "db_id": "phone_1"}
{"question": "Find the names of the chip models that are not used by any phone with full accreditation type.", "query": "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  'Full'", "arabic": "[Question] ابحث عن أسماء نماذج الرقاقات التي لم يتم استخدامها في أي هاتف بنوع التصديق \"كامل\".", "db_id": "phone_1"}
{"question": "Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types.", "query": "SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full'", "arabic": "[Question] ابحث عن عدد البيكسل لأوضاع الشاشة التي يتم استخدامها من قبل الهواتف ذات أنواع التصديق الكاملة والهواتف ذات أنواع التصديق المؤقتة.", "db_id": "phone_1"}
{"question": "How many countries are there in total?", "query": "SELECT count(*) FROM country", "arabic": "[Question] كم عدد البلدان بشكل إجمالي؟", "db_id": "match_season"}
{"question": "Count the number of countries.", "query": "SELECT count(*) FROM country", "arabic": "[Question] عدد البلدان.", "db_id": "match_season"}
{"question": "Show the country name and capital of all countries.", "query": "SELECT Country_name ,  Capital FROM country", "arabic": "[Question] أظهر اسم البلد والعاصمة لجميع البلدان.", "db_id": "match_season"}
{"question": "What are the names and capitals of each country?", "query": "SELECT Country_name ,  Capital FROM country", "arabic": "[Question] ما هي الأسماء والعواصم لكل بلد؟", "db_id": "match_season"}
{"question": "Show all official native languages that contain the word \"English\".", "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"", "arabic": "[Question] أظهر جميع اللغات الأم الرسمية التي تحتوي على كلمة \"إنجليزية\".", "db_id": "match_season"}
{"question": "What are the official native languages that contain the string \"English\".", "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"", "arabic": "[Question] ما هي اللغات الأم الرسمية التي تحتوي على سلسلة \"إنجليزية\".", "db_id": "match_season"}
{"question": "Show all distinct positions of matches.", "query": "SELECT DISTINCT POSITION FROM match_season", "arabic": "[Question] أظهر جميع المواقع المميزة للمباريات.", "db_id": "match_season"}
{"question": "What are the different positions for match season?", "query": "SELECT DISTINCT POSITION FROM match_season", "arabic": "[Question] ما هي المواقع المختلفة لموسم المباراة؟", "db_id": "match_season"}
{"question": "Show the players from college UCLA.", "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"", "arabic": "[Question] أظهر اللاعبين من الكلية UCLA.", "db_id": "match_season"}
{"question": "Who are the players from UCLA?", "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"", "arabic": "[Question] من هم اللاعبين من UCLA؟", "db_id": "match_season"}
{"question": "Show the distinct position of players from college UCLA or Duke.", "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\"", "arabic": "[Question] أظهر الموقف المميز للاعبين من الكلية UCLA أو Duke.", "db_id": "match_season"}
{"question": "What are the different positions of players from UCLA or Duke colleges?", "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\"", "arabic": "[Question] ما هي المواقف المختلفة للاعبين من كليات UCLA أو Duke؟", "db_id": "match_season"}
{"question": "Show the draft pick numbers and draft classes of players whose positions are defenders.", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"", "arabic": "[Question] أظهر أرقام اختيارات الانضمام وفصول الانضمام للاعبين الذين يلعبون في مركز الدفاع.", "db_id": "match_season"}
{"question": "What are the draft pick numbers and draft classes for players who play the Defender position?", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"", "arabic": "[Question] ما هي أرقام اختيار الانضمام وفصول الانضمام للاعبين الذين يلعبون في مركز الدفاع؟", "db_id": "match_season"}
{"question": "How many distinct teams are involved in match seasons?", "query": "SELECT count(DISTINCT Team) FROM match_season", "arabic": "[Question] كم فريق متميز يشارك في مواسم المباريات؟", "db_id": "match_season"}
{"question": "Count the number of different teams involved in match season.", "query": "SELECT count(DISTINCT Team) FROM match_season", "arabic": "[Question] عدد الفرق المختلفة المشاركة في موسم المباراة.", "db_id": "match_season"}
{"question": "Show the players and the years played.", "query": "SELECT Player ,  Years_Played FROM player", "arabic": "[Question] أظهر اللاعبين والسنوات التي لعبوا فيها.", "db_id": "match_season"}
{"question": "Who are the different players and how many years has each played?", "query": "SELECT Player ,  Years_Played FROM player", "arabic": "[Question] من هم اللاعبون المختلفون وكم عدد السنوات التي لعب كل منهم؟", "db_id": "match_season"}
{"question": "Show all team names.", "query": "SELECT Name FROM Team", "arabic": "[Question] أظهر جميع أسماء الفرق.", "db_id": "match_season"}
{"question": "What are the names of all teams?", "query": "SELECT Name FROM Team", "arabic": "[Question] ما هي أسماء جميع الفرق؟", "db_id": "match_season"}
{"question": "Show the season, the player, and the name of the country that player belongs to.", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country", "arabic": "[Question] أظهر الموسم واللاعب، واسم البلد التابع لهذا اللاعب.", "db_id": "match_season"}
{"question": "For each player, what are their name, season, and country that they belong to?", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country", "arabic": "[Question] بالنسبة لكل لاعب، ما هي أسماؤهم والموسم والبلد الذي ينتمون إليه؟", "db_id": "match_season"}
{"question": "Which players are from Indonesia?", "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"", "arabic": "[Question] أي لاعبين هم من إندونيسيا؟", "db_id": "match_season"}
{"question": "Who are the players from Indonesia?", "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"", "arabic": "[Question] من هم اللاعبون من إندونيسيا؟", "db_id": "match_season"}
{"question": "What are the distinct positions of the players from a country whose capital is Dublin?", "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"", "arabic": "[Question] ما هي المواقف المميزة للاعبين من بلد يكون عاصمتها دبلن؟", "db_id": "match_season"}
{"question": "Give the different positions of players who play for the country with the capital Dublin.", "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"", "arabic": "[Question] أعطِ المواقف المختلفة للاعبين الذين يلعبون للبلد الذي يكون له عاصمة دبلن.", "db_id": "match_season"}
{"question": "What are the official languages of the countries of players from Maryland or Duke college?", "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\"", "arabic": "[Question] ما هي اللغات الرسمية لبلدان اللاعبين من كلية ميريلاند أو دوك؟", "db_id": "match_season"}
{"question": "Return the official native languages of countries who have players from Maryland or Duke colleges.", "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\"", "arabic": "[Question] قم بإعادة لغات البلدان الأم الرسمية التي تحتوي على لاعبين من كليات ميريلاند أو دوك.", "db_id": "match_season"}
{"question": "How many distinct official languages are there among countries of players whose positions are defenders.", "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"", "arabic": "[Question] كم عدد اللغات الرسمية المميزة بين بلدان اللاعبين الذين يلعبون في مراكز الدفاع؟", "db_id": "match_season"}
{"question": "Count the number of different official languages corresponding to countries that players who play Defender are from.", "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"", "arabic": "[Question] عدد اللغات الرسمية المختلفة المتعلقة بالدول التي ينتمي إليها اللاعبون الذين يلعبون في مركز الدفاع؟", "db_id": "match_season"}
{"question": "Show the season, the player, and the name of the team that players belong to.", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id", "arabic": "[Question] أظهر الموسم واللاعب، واسم الفريق الذي ينتمي إليه اللاعبون.", "db_id": "match_season"}
{"question": "Who are the different players, what season do they play in, and what is the name of the team they are on?", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id", "arabic": "[Question] من هم اللاعبون المختلفون، وفي أي موسم يلعبون، وما هو اسم الفريق الذي ينتمون إليه؟", "db_id": "match_season"}
{"question": "Show the positions of the players from the team with name \"Ryley Goldner\".", "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"", "arabic": "[Question] أظهر مواقف اللاعبين من الفريق الذي يحمل اسم \"رايلي غولدنر\".", "db_id": "match_season"}
{"question": "Return the positions of players on the team Ryley Goldner.", "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"", "arabic": "[Question] أعد مواقف اللاعبين في فريق رايلي غولدنر.", "db_id": "match_season"}
{"question": "How many distinct colleges are associated with players from the team with name \"Columbus Crew\".", "query": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "arabic": "[Question] كم عدد الكليات المميزة المرتبطة باللاعبين من الفريق الذي يحمل اسم \"كولومبوس كرو\"?", "db_id": "match_season"}
{"question": "Count the number of different colleges that players who play for Columbus Crew are from.", "query": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "arabic": "[Question] عدد الكليات المختلفة التي ينتمي إليها اللاعبون الذين يلعبون لفريق كولومبوس كرو.", "db_id": "match_season"}
{"question": "Show the players and years played for players from team \"Columbus Crew\".", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "arabic": "[Question] أظهر اللاعبين والسنوات التي لعبوا فيها للاعبين من الفريق \"كولومبوس كرو\".", "db_id": "match_season"}
{"question": "What are the players who played for Columbus Crew, and how many years did each play for?", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "arabic": "[Question] ما هم اللاعبون الذين لعبوا لفريق كولومبوس كرو، وكم عدد السنوات التي لعب كل منهم؟", "db_id": "match_season"}
{"question": "Show the position of players and the corresponding number of players.", "query": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION", "arabic": "[Question] أظهر مواقف اللاعبين وعدد اللاعبين المقابل لكل موقف.", "db_id": "match_season"}
{"question": "How many players played each position?", "query": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION", "arabic": "[Question] كم لاعباً لعب في كل موقف؟", "db_id": "match_season"}
{"question": "Show the country names and the corresponding number of players.", "query": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name", "arabic": "[Question] أظهر أسماء الدول وعدد اللاعبين المقابل لها.", "db_id": "match_season"}
{"question": "How many players are from each country?", "query": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name", "arabic": "[Question] كم لاعباً هم من كل دولة؟", "db_id": "match_season"}
{"question": "Return all players sorted by college in ascending alphabetical order.", "query": "SELECT player FROM match_season ORDER BY College ASC", "arabic": "[Question] أعد جميع اللاعبين مرتبة حسب الكلية بالترتيب الأبجدي التصاعدي.", "db_id": "match_season"}
{"question": "What are all the players who played in match season, sorted by college in ascending alphabetical order?", "query": "SELECT player FROM match_season ORDER BY College ASC", "arabic": "[Question] ما هم جميع اللاعبين الذين لعبوا في موسم المباريات، مرتبة حسب الكلية بالترتيب الأبجدي التصاعدي؟", "db_id": "match_season"}
{"question": "Show the most common position of players in match seasons.", "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] أظهر الموقع الأكثر شيوعًا بين اللاعبين في مواسم المباريات؟", "db_id": "match_season"}
{"question": "What is the position that is most common among players in match seasons?", "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1", "arabic": "[Question] ما هو الموقع الأكثر شيوعًا بين اللاعبين في مواسم المباريات؟", "db_id": "match_season"}
{"question": "Show the top 3 most common colleges of players in match seasons.", "query": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3", "arabic": "[Question] أظهر أعلى ثلاث كليات شيوعًا بين اللاعبين في مواسم المباريات؟", "db_id": "match_season"}
{"question": "What are the three colleges from which the most players are from?", "query": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3", "arabic": "[Question] ما هي الكليات الثلاث التي ينتمي منها أكبر عدد من اللاعبين؟", "db_id": "match_season"}
{"question": "Show the name of colleges that have at least two players.", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2", "arabic": "[Question] أظهر اسم الكليات التي يوجد فيها ما لا يقل عن لاعبين اثنين.", "db_id": "match_season"}
{"question": "What are the names of all colleges that have two or more players?", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2", "arabic": "[Question] ما هي أسماء جميع الكليات التي بها لاعبين اثنين أو أكثر؟", "db_id": "match_season"}
{"question": "Show the name of colleges that have at least two players in descending alphabetical order.", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC", "arabic": "[Question] أظهر اسم الكليات التي يوجد فيها ما لا يقل عن لاعبين اثنين بترتيب أبجدي تنازلي.", "db_id": "match_season"}
{"question": "What are the names of colleges that have two or more players, listed in descending alphabetical order?", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC", "arabic": "[Question] ما هي أسماء الكليات التي بها لاعبين اثنين أو أكثر، مرتبة بترتيب أبجدي تنازلي؟", "db_id": "match_season"}
{"question": "What are the names of teams that do no have match season record?", "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)", "arabic": "[Question] ما هي أسماء الفرق التي ليس لديها سجل في مواسم المباريات؟", "db_id": "match_season"}
{"question": "Return the names of teams that have no match season record.", "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)", "arabic": "[Question] أعد أسماء الفرق التي ليس لديها سجل في مواسم المباريات؟", "db_id": "match_season"}
{"question": "What are the names of countries that have both players with position forward and players with position defender?", "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"", "arabic": "[Question] ما هي أسماء الدول التي تحتوي على لاعبين يلعبون في مركز المهاجم ولاعبين يلعبون في مركز الدفاع؟", "db_id": "match_season"}
{"question": "Return the names of countries that have players that play the Forward position, as well as players who play the Defender position.", "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"", "arabic": "[Question] أعد أسماء الدول التي تحتوي على لاعبين يلعبون في موقع المهاجم، بالإضافة إلى اللاعبين الذين يلعبون في موقع المدافع.", "db_id": "match_season"}
{"question": "Which college have both players with position midfielder and players with position defender?", "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"", "arabic": "[Question] أي كلية تحتوي على لاعبين يلعبون في موقع لاعب وسط ولاعبين يلعبون في موقع الدفاع؟", "db_id": "match_season"}
{"question": "Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position.", "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"", "arabic": "[Question] أعد الكليات التي تحتوي على لاعبين يلعبون في موقع لاعب وسط، بالإضافة إلى اللاعبين الذين يلعبون في موقع الدفاع.", "db_id": "match_season"}
{"question": "How many climbers are there?", "query": "SELECT count(*) FROM climber", "arabic": "[Question] كم عدد المتسلقين؟", "db_id": "climbing"}
{"question": "Count the number of climbers.", "query": "SELECT count(*) FROM climber", "arabic": "كم عدد المتسلقين؟", "db_id": "climbing"}
{"question": "List the names of climbers in descending order of points.", "query": "SELECT Name FROM climber ORDER BY Points DESC", "arabic": "اسماء المتسلقين بترتيب تنازلي حسب النقاط؟", "db_id": "climbing"}
{"question": "What are the names of the climbers, ordered by points descending?", "query": "SELECT Name FROM climber ORDER BY Points DESC", "arabic": "ما هي أسماء المتسلقين، مرتبة حسب النقاط بترتيب تنازلي؟", "db_id": "climbing"}
{"question": "List the names of climbers whose country is not Switzerland.", "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"", "arabic": "اسماء المتسلقين الذين ليست جنسيتهم سويسرا؟", "db_id": "climbing"}
{"question": "What are the names of climbers who are not from the country of Switzerland?", "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"", "arabic": "ما هي أسماء المتسلقين الذين ليسوا من سويسرا؟", "db_id": "climbing"}
{"question": "What is the maximum point for climbers whose country is United Kingdom?", "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"", "arabic": "ما هو الحد الأقصى للنقاط للمتسلقين الذين جنسيتهم المملكة المتحدة؟", "db_id": "climbing"}
{"question": "Return the maximum number of points for climbers from the United Kingdom.", "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"", "arabic": "أعد الحد الأقصى لعدد النقاط للمتسلقين من المملكة المتحدة؟", "db_id": "climbing"}
{"question": "How many distinct countries are the climbers from?", "query": "SELECT COUNT(DISTINCT Country) FROM climber", "arabic": "كم عدد الدول المختلفة التي يأتي منها المتسلقون؟", "db_id": "climbing"}
{"question": "Count the number of different countries that climbers are from.", "query": "SELECT COUNT(DISTINCT Country) FROM climber", "arabic": "عد عدد الدول المختلفة التي يأتي منها المتسلقون؟", "db_id": "climbing"}
{"question": "What are the names of mountains in ascending alphabetical order?", "query": "SELECT Name FROM mountain ORDER BY Name ASC", "arabic": "ما هي أسماء الجبال بترتيب أبجدي تصاعدي؟", "db_id": "climbing"}
{"question": "Give the names of mountains in alphabetical order.", "query": "SELECT Name FROM mountain ORDER BY Name ASC", "arabic": "أعط أسماء الجبال بترتيب أبجدي؟", "db_id": "climbing"}
{"question": "What are the countries of mountains with height bigger than 5000?", "query": "SELECT Country FROM mountain WHERE Height  >  5000", "arabic": "ما هي بلدان الجبال التي يبلغ ارتفاعها أكثر من 5000؟", "db_id": "climbing"}
{"question": "Return the countries of the mountains that have a height larger than 5000.", "query": "SELECT Country FROM mountain WHERE Height  >  5000", "arabic": "أعد بلدان الجبال التي يبلغ ارتفاعها أكثر من 5000.", "db_id": "climbing"}
{"question": "What is the name of the highest mountain?", "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1", "arabic": "ما هو اسم أعلى جبل؟", "db_id": "climbing"}
{"question": "Return the name of the mountain with the greatest height.", "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1", "arabic": "أعد اسم الجبل ذو أعلى ارتفاع.", "db_id": "climbing"}
{"question": "List the distinct ranges of the mountains with the top 3 prominence.", "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3", "arabic": "ما هي النطاقات المختلفة للجبال ذات أعلى ثلاث بروز؟", "db_id": "climbing"}
{"question": "What are the different ranges of the 3 mountains with the highest prominence?", "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3", "arabic": "ما هي النطاقات المختلفة لثلاثة جبال ذات أعلى بروز؟", "db_id": "climbing"}
{"question": "Show names of climbers and the names of mountains they climb.", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "arabic": "أظهر أسماء المتسلقين وأسماء الجبال التي يتسلقونها؟", "db_id": "climbing"}
{"question": "What are the names of climbers and the corresponding names of mountains that they climb?", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "arabic": "ما هي أسماء المتسلقين وأسماء الجبال المتناغمة التي يتسلقونها؟", "db_id": "climbing"}
{"question": "Show the names of climbers and the heights of mountains they climb.", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "arabic": "أظهر أسماء المتسلقين وارتفاع الجبال التي يتسلقونها؟", "db_id": "climbing"}
{"question": "What are the names of climbers and the corresponding heights of the mountains that they climb?", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "arabic": "ما هي أسماء المتسلقين والارتفاعات المتناغمة للجبال التي يتسلقونها؟", "db_id": "climbing"}
{"question": "Show the height of the mountain climbed by the climber with the maximum points.", "query": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1", "arabic": "أظهر ارتفاع الجبل الذي تسلقه المتسلق ذو أعلى نقاط؟", "db_id": "climbing"}
{"question": "What is the height of the mountain climbined by the climbing who had the most points?", "query": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1", "arabic": "ما هو ارتفاع الجبل الذي تم تسلقه بواسطة المتسلق الذي حصل على أعلى نقاط؟", "db_id": "climbing"}
{"question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".", "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"", "arabic": "أظهر الأسماء المختلفة للجبال التي تم تسلقها من قبل المتسلقين من بلد \"ألمانيا الغربية\".", "db_id": "climbing"}
{"question": "What are the different names of mountains ascended by climbers from the country of West Germany?", "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"", "arabic": "ما هي الأسماء المختلفة للجبال التي تم تسلقها من قبل المتسلقين من بلد \"ألمانيا الغربية\"؟", "db_id": "climbing"}
{"question": "Show the times used by climbers to climb mountains in Country Uganda.", "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"", "arabic": "أظهر الأوقات المستخدمة من قبل المتسلقين لتسلق الجبال في بلد أوغندا؟", "db_id": "climbing"}
{"question": "What are the times used by climbers who climbed mountains in the country of Uganda?", "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"", "arabic": "ما هي الأوقات المستخدمة من قبل المتسلقين الذين قاموا بتسلق الجبال في بلد أوغندا؟", "db_id": "climbing"}
{"question": "Please show the countries and the number of climbers from each country.", "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country", "arabic": "من فضلك أظهر الدول وعدد المتسلقين من كل دولة؟", "db_id": "climbing"}
{"question": "How many climbers are from each country?", "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country", "arabic": "كم عدد المتسلقين من كل دولة؟", "db_id": "climbing"}
{"question": "List the countries that have more than one mountain.", "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1", "arabic": "أذكر الدول التي تحتوي على أكثر من جبل واحد.", "db_id": "climbing"}
{"question": "Which countries have more than one mountain?", "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1", "arabic": "أي الدول لديها أكثر من جبل واحد؟", "db_id": "climbing"}
{"question": "List the names of mountains that do not have any climber.", "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)", "arabic": "أذكر أسماء الجبال التي لا يوجد لها أي متسلق.", "db_id": "climbing"}
{"question": "What are the names of countains that no climber has climbed?", "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)", "arabic": "ما هي أسماء الجبال التي لم يتسلقها أي متسلق؟", "db_id": "climbing"}
{"question": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.", "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200", "arabic": "أظهر الدول التي تحتوي على جبال بارتفاع يزيد عن 5600 وجبال بارتفاع يقل عن 5200.", "db_id": "climbing"}
{"question": "What are the countries that have both mountains that are higher than 5600 and lower than 5200?", "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200", "arabic": "ما هي الدول التي تحتوي على جبال تفوق 5600 وتقل عن 5200؟", "db_id": "climbing"}
{"question": "Show the range that has the most number of mountains.", "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر النطاق الذي يحتوي على أكبر عدد من الجبال.", "db_id": "climbing"}
{"question": "Which range contains the most mountains?", "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي نطاق يحتوي على أكبر عدد من الجبال؟", "db_id": "climbing"}
{"question": "Show the names of mountains with height more than 5000 or prominence more than 1000.", "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000", "arabic": "أظهر أسماء الجبال التي يبلغ ارتفاعها أكثر من 5000 أو يزيد بروزها عن 1000.", "db_id": "climbing"}
{"question": "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?", "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000", "arabic": "ما هي أسماء الجبال التي يبلغ ارتفاعها أكثر من 5000 أو يزيد بروزها عن 1000؟", "db_id": "climbing"}
{"question": "How many body builders are there?", "query": "SELECT count(*) FROM body_builder", "arabic": "كم عدد بناة الأجسام؟", "db_id": "body_builder"}
{"question": "List the total scores of body builders in ascending order.", "query": "SELECT Total FROM body_builder ORDER BY Total ASC", "arabic": "أذكر النقاط الإجمالية لبناة الأجسام بترتيب تصاعدي.", "db_id": "body_builder"}
{"question": "List the snatch score and clean jerk score of body builders in ascending order of snatch score.", "query": "SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC", "arabic": "أذكر نقاط السناتش والكلين جيرك لبناة الأجسام بترتيب تصاعدي حسب نقاط السناتش.", "db_id": "body_builder"}
{"question": "What is the average snatch score of body builders?", "query": "SELECT avg(Snatch) FROM body_builder", "arabic": "ما هو متوسط نقاط السناتش لبناة الأجسام؟", "db_id": "body_builder"}
{"question": "What are the clean and jerk score of the body builder with the highest total score?", "query": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1", "arabic": "ما هي نقاط الكلين والجيرك لبناة الأجسام الذين يحملون أعلى درجة إجمالية؟", "db_id": "body_builder"}
{"question": "What are the birthdays of people in ascending order of height?", "query": "SELECT Birth_Date FROM People ORDER BY Height ASC", "arabic": "ما هي تواريخ ميلاد الأشخاص بترتيب تصاعدي حسب الارتفاع؟", "db_id": "body_builder"}
{"question": "What are the names of body builders?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID", "arabic": "ما هي أسماء بناة الأجسام؟", "db_id": "body_builder"}
{"question": "What are the names of body builders whose total score is higher than 300?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300", "arabic": "ما هي أسماء بناة الأجسام الذين يكون مجموع نقاطهم أعلى من 300؟", "db_id": "body_builder"}
{"question": "What is the name of the body builder with the greatest body weight?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1", "arabic": "ما هو اسم بناء الأجسام الذي يمتلك أكبر وزن جسم؟", "db_id": "body_builder"}
{"question": "What are the birth date and birth place of the body builder with the highest total points?", "query": "SELECT T2.Birth_Date ,  T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC LIMIT 1", "arabic": "ما هي تاريخ الميلاد ومكان الميلاد لبناء الأجسام الذي يمتلك أعلى نقاط إجمالية؟", "db_id": "body_builder"}
{"question": "What are the heights of body builders with total score smaller than 315?", "query": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315", "arabic": "ما هي الأطوال لبناة الأجسام الذين يكون مجموع نقاطهم أقل من 315؟", "db_id": "body_builder"}
{"question": "What is the average total score of body builders with height bigger than 200?", "query": "SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200", "arabic": "ما هو متوسط المجموع الإجمالي لبناة الأجسام الذين يكونون طولهم أكبر من 200؟", "db_id": "body_builder"}
{"question": "What are the names of body builders in descending order of total scores?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC", "arabic": "ما هي أسماء بناة الأجسام بترتيب تنازلي حسب النقاط الإجمالية؟", "db_id": "body_builder"}
{"question": "List each birth place along with the number of people from there.", "query": "SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place", "arabic": "أذكر كل مكان ميلاد بجانب عدد الأشخاص الذين يأتون منه.", "db_id": "body_builder"}
{"question": "What is the most common birth place of people?", "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو المكان الأكثر شيوعًا لميلاد الأشخاص؟", "db_id": "body_builder"}
{"question": "What are the birth places that are shared by at least two people?", "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2", "arabic": "ما هي أماكن الميلاد التي يتشاركها على الأقل شخصان؟", "db_id": "body_builder"}
{"question": "List the height and weight of people in descending order of height.", "query": "SELECT Height ,  Weight FROM people ORDER BY Height DESC", "arabic": "أذكر الطول والوزن للأشخاص بترتيب تنازلي حسب الطول.", "db_id": "body_builder"}
{"question": "Show all information about each body builder.", "query": "SELECT * FROM body_builder", "arabic": "أظهر جميع المعلومات حول كل بناء الأجسام.", "db_id": "body_builder"}
{"question": "List the names and origins of people who are not body builders.", "query": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id", "arabic": "أذكر أسماء وأصول الأشخاص الذين ليسوا بناة أجسام.", "db_id": "body_builder"}
{"question": "How many distinct birth places are there?", "query": "SELECT count(DISTINCT Birth_Place) FROM people", "arabic": "كم عدد أماكن الميلاد المختلفة؟", "db_id": "body_builder"}
{"question": "How many persons are not body builders?", "query": "SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)", "arabic": "كم عدد الأشخاص الذين ليسوا بناة أجسام؟", "db_id": "body_builder"}
{"question": "List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200.", "query": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;", "arabic": "ما هي أوزان بناة الأجسام الذين لديهم نقاط قرص السناتش أعلى من 140 أو لديهم طول أكبر من 200؟", "db_id": "body_builder"}
{"question": "What are the total scores of the body builders whose birthday contains the string \"January\" ?", "query": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";", "arabic": "ما هي النقاط الإجمالية لبناة الأجسام الذين يحتوي تاريخ ميلادهم على السلسلة \"يناير\"؟", "db_id": "body_builder"}
{"question": "What is the minimum snatch score?", "query": "SELECT min(snatch) FROM body_builder", "arabic": "ما هو أقل نقاط قرص السناتش؟", "db_id": "body_builder"}
{"question": "How many elections are there?", "query": "SELECT count(*) FROM election", "arabic": "كم عدد الانتخابات؟", "db_id": "election_representative"}
{"question": "List the votes of elections in descending order.", "query": "SELECT Votes FROM election ORDER BY Votes DESC", "arabic": "أذكر الأصوات للانتخابات بترتيب تنازلي.", "db_id": "election_representative"}
{"question": "List the dates and vote percents of elections.", "query": "SELECT Date ,  Vote_Percent FROM election", "arabic": "أذكر التواريخ ونسب الأصوات للانتخابات.", "db_id": "election_representative"}
{"question": "What are the minimum and maximum vote percents of elections?", "query": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election", "arabic": "ما هي النسب الأدنى والأقصى لنسب الأصوات للانتخابات؟", "db_id": "election_representative"}
{"question": "What are the names and parties of representatives?", "query": "SELECT Name ,  Party FROM representative", "arabic": "ما هي أسماء النواب والأحزاب؟", "db_id": "election_representative"}
{"question": "What are the names of representatives whose party is not \"Republican\"?", "query": "SELECT Name FROM Representative WHERE Party != \"Republican\"", "arabic": "ما هي أسماء النواب الذين حزبهم ليس \"الجمهوري\"؟", "db_id": "election_representative"}
{"question": "What are the life spans of representatives from New York state or Indiana state?", "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"", "arabic": "ما هي فترات حياة النواب من ولاية نيويورك أو ولاية إنديانا؟", "db_id": "election_representative"}
{"question": "What are the names of representatives and the dates of elections they participated in.", "query": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID", "arabic": "ما هي أسماء النواب وتواريخ الانتخابات التي شاركوا فيها؟", "db_id": "election_representative"}
{"question": "What are the names of representatives with more than 10000 votes in election?", "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000", "arabic": "ما هي أسماء النواب الذين حصلوا على أكثر من 10000 صوت في الانتخاب؟", "db_id": "election_representative"}
{"question": "What are the names of representatives in descending order of votes?", "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC", "arabic": "ما هي أسماء النواب بترتيب تنازلي حسب الأصوات؟", "db_id": "election_representative"}
{"question": "What is the party of the representative that has the smallest number of votes.", "query": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1", "arabic": "ما هو حزب النائب الذي حصل على أقل عدد من الأصوات.", "db_id": "election_representative"}
{"question": "What are the lifespans of representatives in descending order of vote percent?", "query": "SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC", "arabic": "ما هي فترات حياة النواب بترتيب تنازلي حسب نسبة الأصوات؟", "db_id": "election_representative"}
{"question": "What is the average number of votes of representatives from party \"Republican\"?", "query": "SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  \"Republican\"", "arabic": "ما هو المتوسط ​​لعدد الأصوات للنواب من حزب \"الجمهوري\"؟", "db_id": "election_representative"}
{"question": "What are the different parties of representative? Show the party name and the number of representatives in each party.", "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party", "arabic": "ما هي الأحزاب المختلفة للنائب؟ أظهر اسم الحزب وعدد النواب في كل حزب.", "db_id": "election_representative"}
{"question": "What is the party that has the largest number of representatives?", "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو الحزب الذي يمتلك أكبر عدد من النواب؟", "db_id": "election_representative"}
{"question": "What parties have at least three representatives?", "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3", "arabic": "ما الأحزاب التي لديها على الأقل ثلاثة نواب؟", "db_id": "election_representative"}
{"question": "What states have at least two representatives?", "query": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2", "arabic": "ما الولايات التي لديها على الأقل نائبين؟", "db_id": "election_representative"}
{"question": "List the names of representatives that have not participated in elections listed here.", "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)", "arabic": "أذكر أسماء النواب الذين لم يشاركوا في الانتخابات المدرجة هنا.", "db_id": "election_representative"}
{"question": "Show the parties that have both representatives in New York state and representatives in Pennsylvania state.", "query": "SELECT Party FROM representative WHERE State  =  \"New York\" INTERSECT SELECT Party FROM representative WHERE State  =  \"Pennsylvania\"", "arabic": "أظهر الأحزاب التي لديها كل من النواب في ولاية نيويورك والنواب في ولاية بنسلفانيا.", "db_id": "election_representative"}
{"question": "How many distinct parties are there for representatives?", "query": "SELECT count(DISTINCT Party) FROM representative", "arabic": "كم عدد الأحزاب المميزة للنواب؟", "db_id": "election_representative"}
{"question": "How many apartment bookings are there in total?", "query": "SELECT count(*) FROM Apartment_Bookings", "arabic": "كم عدد حجوزات الشقق في المجموع؟", "db_id": "apartment_rentals"}
{"question": "Count the total number of apartment bookings.", "query": "SELECT count(*) FROM Apartment_Bookings", "arabic": "احسب العدد الإجمالي لحجوزات الشقق.", "db_id": "apartment_rentals"}
{"question": "Show the start dates and end dates of all the apartment bookings.", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "arabic": "أظهر تواريخ البداية وتواريخ الانتهاء لجميع حجوزات الشقق.", "db_id": "apartment_rentals"}
{"question": "What are the start date and end date of each apartment booking?", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "arabic": "ما هي تاريخ البداية وتاريخ الانتهاء لكل حجز شقة؟", "db_id": "apartment_rentals"}
{"question": "Show all distinct building descriptions.", "query": "SELECT DISTINCT building_description FROM Apartment_Buildings", "arabic": "أظهر جميع وصف المباني المميزة.", "db_id": "apartment_rentals"}
{"question": "Give me a list of all the distinct building descriptions.", "query": "SELECT DISTINCT building_description FROM Apartment_Buildings", "arabic": "أعطني قائمة بجميع وصف المباني المميزة.", "db_id": "apartment_rentals"}
{"question": "Show the short names of the buildings managed by \"Emma\".", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"", "arabic": "أظهر الأسماء المختصرة للمباني التي يديرها \"إيما\".", "db_id": "apartment_rentals"}
{"question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"", "arabic": "أي المباني تديرها \"إيما؟\" أعطني الأسماء القصيرة للمباني.", "db_id": "apartment_rentals"}
{"question": "Show the addresses and phones of all the buildings managed by \"Brenden\".", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "arabic": "أظهر العناوين وأرقام الهواتف لجميع المباني التي يديرها \"بريندن\".", "db_id": "apartment_rentals"}
{"question": "What are the address and phone number of the buildings managed by \"Brenden\"?", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "arabic": "ما هي العنوان ورقم الهاتف للمباني التي يديرها \"بريندن\"؟", "db_id": "apartment_rentals"}
{"question": "What are the building full names that contain the word \"court\"?", "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"", "arabic": "ما هي الأسماء الكاملة للمباني التي تحتوي على كلمة \"court\"؟", "db_id": "apartment_rentals"}
{"question": "Find all the building full names containing the word \"court\".", "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"", "arabic": "ابحث عن جميع الأسماء الكاملة للمباني التي تحتوي على كلمة \"court\".", "db_id": "apartment_rentals"}
{"question": "What is the minimum and maximum number of bathrooms of all the apartments?", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "arabic": "ما هو الحد الأدنى والحد الأقصى لعدد الحمامات في جميع الشقق؟", "db_id": "apartment_rentals"}
{"question": "Give me the minimum and maximum bathroom count among all the apartments.", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "arabic": "أعطني الحد الأدنى والحد الأقصى لعدد الحمامات بين جميع الشقق.", "db_id": "apartment_rentals"}
{"question": "What is the average number of bedrooms of all apartments?", "query": "SELECT avg(bedroom_count) FROM Apartments", "arabic": "ما هو المتوسط ​​لعدد غرف النوم لجميع الشقق؟", "db_id": "apartment_rentals"}
{"question": "Find the average number of bedrooms of all the apartments.", "query": "SELECT avg(bedroom_count) FROM Apartments", "arabic": "ابحث عن المتوسط ​​لعدد غرف النوم لجميع الشقق.", "db_id": "apartment_rentals"}
{"question": "Return the apartment number and the number of rooms for each apartment.", "query": "SELECT apt_number ,  room_count FROM Apartments", "arabic": "أرجع رقم الشقة وعدد الغرف لكل شقة.", "db_id": "apartment_rentals"}
{"question": "What are the apartment number and the room count of each apartment?", "query": "SELECT apt_number ,  room_count FROM Apartments", "arabic": "ما هي أرقام الشقق وعدد الغرف في كل شقة؟", "db_id": "apartment_rentals"}
{"question": "What is the average number of rooms of apartments with type code \"Studio\"?", "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"", "arabic": "ما هو المتوسط ​​لعدد الغرف في الشقق ذات رمز النوع \"Studio\"؟", "db_id": "apartment_rentals"}
{"question": "Find the average room count of the apartments that have the \"Studio\" type code.", "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"", "arabic": "ابحث عن المتوسط ​​لعدد الغرف في الشقق التي تحمل رمز النوع \"Studio\".", "db_id": "apartment_rentals"}
{"question": "Return the apartment numbers of the apartments with type code \"Flat\".", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"", "arabic": "أرجع أرقام الشقق للشقق التي تحمل رمز النوع \"Flat\".", "db_id": "apartment_rentals"}
{"question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"", "arabic": "أي الشقق التي تحمل رمز النوع \"Flat\"؟ أعطني أرقام الشقق.", "db_id": "apartment_rentals"}
{"question": "Return the first names and last names of all guests", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "arabic": "ما هي أسماء الأولاد وأسماء العائلة لجميع الضيوف؟", "db_id": "apartment_rentals"}
{"question": "What are the first names and last names of all the guests?", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "arabic": "ما هي أسماء الأولاد وأسماء العائلة لجميع الضيوف؟", "db_id": "apartment_rentals"}
{"question": "Return the date of birth for all the guests with gender code \"Male\".", "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"", "arabic": "أرجع تاريخ الميلاد لجميع الضيوف ذوي رمز الجنس \"ذكر\".", "db_id": "apartment_rentals"}
{"question": "What are dates of birth of all the guests whose gender is \"Male\"?", "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"", "arabic": "ما هي تواريخ ميلاد جميع الضيوف الذين يحملون جنس \"ذكر\"؟", "db_id": "apartment_rentals"}
{"question": "Show the apartment numbers, start dates, and end dates of all the apartment bookings.", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "arabic": "أظهر أرقام الشقق وتواريخ البداية وتواريخ النهاية لجميع حجوزات الشقق.", "db_id": "apartment_rentals"}
{"question": "What are the apartment number, start date, and end date of each apartment booking?", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "arabic": "ما هي أرقام الشقق وتاريخ البداية وتاريخ النهاية لكل حجز للشقة؟", "db_id": "apartment_rentals"}
{"question": "What are the booking start and end dates of the apartments with type code \"Duplex\"?", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "arabic": "ما هي تواريخ بدء الحجز ونهاية الحجز للشقق التي تحمل رمز النوع \"دوبلكس\"؟", "db_id": "apartment_rentals"}
{"question": "Return the booking start date and end date for the apartments that have type code \"Duplex\".", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "arabic": "أرجع تاريخ بدء الحجز وتاريخ النهاية للشقق التي تحمل رمز النوع \"دوبلكس\".", "db_id": "apartment_rentals"}
{"question": "What are the booking start and end dates of the apartments with more than 2 bedrooms?", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "arabic": "ما هي تواريخ بدء الحجز ونهاية الحجز للشقق التي تحتوي على أكثر من 2 غرف نوم؟", "db_id": "apartment_rentals"}
{"question": "Find the booking start date and end date for the apartments that have more than two bedrooms.", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "arabic": "ابحث عن تاريخ بدء الحجز ونهاية الحجز للشقق التي تحتوي على أكثر من غرفتي نوم.", "db_id": "apartment_rentals"}
{"question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"", "arabic": "ما هو رمز حالة الحجز للشقة برقم \"Suite 634\"؟", "db_id": "apartment_rentals"}
{"question": "Tell me the booking status code for the apartment with number \"Suite 634\".", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"", "arabic": "قل لي رمز حالة الحجز للشقة برقم \"Suite 634\".", "db_id": "apartment_rentals"}
{"question": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\".", "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"", "arabic": "أظهر أرقام الشقق المتميزة للشقق التي لديها حجوزات برمز حالة \"تأكيد\".", "db_id": "apartment_rentals"}
{"question": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.", "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"", "arabic": "أي الشقق التي لديها حجوزات برمز حالة \"تأكيد\"؟ أرجع أرقام الشقق.", "db_id": "apartment_rentals"}
{"question": "Show the average room count of the apartments that have booking status code \"Provisional\".", "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "arabic": "أظهر المتوسط ​​لعدد الغرف في الشقق التي لديها رمز حالة الحجز \"مؤقت\".", "db_id": "apartment_rentals"}
{"question": "What is the average room count of the apartments whose booking status code is \"Provisional\"?", "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "arabic": "ما هو متوسط ​​عدد الغرف للشقق التي يكون رمز حالة الحجز الخاص بها \"مؤقت\"؟", "db_id": "apartment_rentals"}
{"question": "Show the guest first names, start dates, and end dates of all the apartment bookings.", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "arabic": "أظهر أسماء الضيوف الأولى وتواريخ البداية وتواريخ النهاية لجميع حجوزات الشقق.", "db_id": "apartment_rentals"}
{"question": "What are the guest first name, start date, and end date of each apartment booking?", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "arabic": "ما هي أسماء الضيوف الأولى وتواريخ البداية وتواريخ النهاية لكل حجز للشقة؟", "db_id": "apartment_rentals"}
{"question": "Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\".", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "arabic": "أظهر تواريخ البداية وتواريخ النهاية لجميع حجوزات الشقق التي تم إجراؤها بواسطة الضيوف الذين لديهم رمز الجنس \"أنثى\".", "db_id": "apartment_rentals"}
{"question": "What are the start date and end date of the apartment bookings made by female guests (gender code \"Female\")?", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "arabic": "ما هي تاريخ بدء الحجز وتاريخ النهاية لحجوزات الشقة التي تم إجراؤها بواسطة الضيوف الإناث (رمز الجنس \"أنثى\")؟\n", "db_id": "apartment_rentals"}
{"question": "Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\".", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "arabic": "أظهر أسماء الضيوف الأولية وأسماء العائلة لجميع الضيوف الذين لديهم حجوزات شقق برمز حالة \"مؤكد\".", "db_id": "apartment_rentals"}
{"question": "Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names.", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "arabic": "أي الضيوف لديهم حجوزات شقق برمز حالة \"مؤكد\"؟ أرجع أسماء الضيوف الأولية وأسماء العائلة.", "db_id": "apartment_rentals"}
{"question": "Show the facility codes of apartments with more than 4 bedrooms.", "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4", "arabic": "أظهر رموز المرافق للشقق التي تحتوي على أكثر من 4 غرف نوم.", "db_id": "apartment_rentals"}
{"question": "What are the facility codes of the apartments with more than four bedrooms?", "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4", "arabic": "ما هي رموز المرافق للشقق التي تحتوي على أكثر من أربع غرف نوم؟", "db_id": "apartment_rentals"}
{"question": "Show the total number of rooms of all apartments with facility code \"Gym\".", "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"", "arabic": "أظهر العدد الإجمالي للغرف في جميع الشقق التي تحتوي على رمز المرفق \"النادي الرياضي\".", "db_id": "apartment_rentals"}
{"question": "Find the total number of rooms in the apartments that have facility code \"Gym\".", "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"", "arabic": "ما هو العدد الإجمالي للغرف في الشقق التي تحتوي على رمز المرفق \"النادي الرياضي\"؟", "db_id": "apartment_rentals"}
{"question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".", "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"", "arabic": "أظهر العدد الإجمالي للغرف في الشقق في المبنى ذو الاسم القصير \"كولومبوس سكوير\".", "db_id": "apartment_rentals"}
{"question": "How many rooms in total are there in the apartments in the building with short name \"Columbus Square\"?", "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"", "arabic": "كم هو عدد الغرف الإجمالي في الشقق في المبنى ذو الاسم القصير \"كولومبوس سكوير\"؟", "db_id": "apartment_rentals"}
{"question": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "arabic": "أظهر عناوين المباني التي تحتوي على شقق تحتوي على أكثر من 2 حمام.", "db_id": "apartment_rentals"}
{"question": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "arabic": "أي المباني التي تحتوي على شقق تحتوي على أكثر من حمامين؟ أعطني عناوين المباني.", "db_id": "apartment_rentals"}
{"question": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\".", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "arabic": "ما هي رموز أنواع الشقق وأرقام الشقق في المباني التي يديرها \"كايل\"؟", "db_id": "apartment_rentals"}
{"question": "What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "arabic": "ما هي رموز أنواع الشقق وأرقام الشقق في المباني التي يديرها \"كايل\"؟", "db_id": "apartment_rentals"}
{"question": "Show the booking status code and the corresponding number of bookings.", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "arabic": "أظهر رمز حالة الحجز وعدد الحجوزات المقابلة.", "db_id": "apartment_rentals"}
{"question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "arabic": "كم حجزًا لكل حالة حجز؟ قائمة رمز حالة الحجز وعدد الحجوزات المقابلة.", "db_id": "apartment_rentals"}
{"question": "Return all the apartment numbers sorted by the room count in ascending order.", "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC", "arabic": "ارجاع جميع أرقام الشقق مرتبة حسب عدد الغرف بترتيب تصاعدي.", "db_id": "apartment_rentals"}
{"question": "Sort the apartment numbers in ascending order of room count.", "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC", "arabic": "فرز أرقام الشقق بترتيب تصاعدي حسب عدد الغرف.", "db_id": "apartment_rentals"}
{"question": "Return the apartment number with the largest number of bedrooms.", "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1", "arabic": "ارجاع رقم الشقة الذي يحتوي على أكبر عدد من غرف النوم.", "db_id": "apartment_rentals"}
{"question": "What is the apartment number of the apartment with the most beds?", "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1", "arabic": "ما هو رقم الشقة التي تحتوي على أكبر عدد من الأسرة؟", "db_id": "apartment_rentals"}
{"question": "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order.", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "arabic": "أظهر رموز أنواع الشقق وعدد الشقق المقابلة مرتبة حسب عدد الشقق بترتيب تصاعدي.", "db_id": "apartment_rentals"}
{"question": "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "arabic": "ارجاع كل رمز نوع الشقة مع عدد الشقق التي تحتوي على تلك الشقة، مرتبة تصاعديا حسب عدد الشقق.", "db_id": "apartment_rentals"}
{"question": "Show the top 3 apartment type codes sorted by the average number of rooms in descending order.", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3", "arabic": "أظهر أكواد أنواع الشقق الثلاثة الأعلى مرتبة حسب المتوسط لعدد الغرف تنازليا.", "db_id": "apartment_rentals"}
{"question": "What are the top three apartment types in terms of the average room count? Give me the", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3", "arabic": "ما هي أعلى ثلاثة أنواع شقق من حيث متوسط عدد الغرف؟", "db_id": "apartment_rentals"}
{"question": "Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms.", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "arabic": "أظهر رمز نوع الشقة الذي يحتوي على أكبر عدد من الغرف الكلي، جنبًا إلى جنب مع عدد الحمامات وعدد غرف النوم.", "db_id": "apartment_rentals"}
{"question": "Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "arabic": "أي نوع من الشقق يحتوي على أكبر عدد من الغرف الكلي؟ ارجاع رمز نوع الشقة، وعدد الحمامات وعدد غرف النوم.", "db_id": "apartment_rentals"}
{"question": "Show the most common apartment type code.", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر رمز نوع الشقة الأكثر شيوعا.", "db_id": "apartment_rentals"}
{"question": "Which apartment type code appears the most often?", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي رمز لنوع الشقة يظهر الأكثر؟", "db_id": "apartment_rentals"}
{"question": "Show the most common apartment type code among apartments with more than 1 bathroom.", "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر الرمز الأكثر شيوعًا لنوع الشقة بين الشقق التي تحتوي على أكثر من حمام واحد.", "db_id": "apartment_rentals"}
{"question": "Which apartment type code is the most common among apartments with more than one bathroom?", "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي رمز لنوع الشقة هو الأكثر شيوعًا بين الشقق التي تحتوي على أكثر من حمام واحد؟", "db_id": "apartment_rentals"}
{"question": "Show each apartment type code, and the maximum and minimum number of rooms for each type.", "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code", "arabic": "أظهر كل رمز لنوع الشقة، وأقصى وأدنى عدد من الغرف لكل نوع.", "db_id": "apartment_rentals"}
{"question": "Return each apartment type code along with the maximum and minimum number of rooms among each type.", "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code", "arabic": "ارجع كل رمز لنوع الشقة مع العدد الأقصى والأدنى للغرف بين كل نوع.", "db_id": "apartment_rentals"}
{"question": "Show each gender code and the corresponding count of guests sorted by the count in descending order.", "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC", "arabic": "أظهر كل رمز للجنس وعدد الضيوف المقابل مرتبة تنازليًا حسب العدد.", "db_id": "apartment_rentals"}
{"question": "Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts.", "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC", "arabic": "فرز رموز الجنس بترتيب تنازلي حسب عدد الضيوف المقابل. ارجاع رموز الجنس والعدد.", "db_id": "apartment_rentals"}
{"question": "How many apartments do not have any facility?", "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)", "arabic": "كم عدد الشقق التي لا تحتوي على أي مرفق؟", "db_id": "apartment_rentals"}
{"question": "Find the number of apartments that have no facility.", "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)", "arabic": "العثور على عدد الشقق التي لا تحتوي على أي مرفق.", "db_id": "apartment_rentals"}
{"question": "Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\"", "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "arabic": "أظهر أرقام الشقق للشقق التي لها حجوزات تحمل رمز حالة \"مؤقت\" و \"مؤكد\" على حد سواء.", "db_id": "apartment_rentals"}
{"question": "Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers.", "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"", "arabic": "أي الشقق لديها حجوزات برموز حالة \"مؤقت\" و \"مؤكد\" على حد سواء؟ أعطني أرقام الشقق.", "db_id": "apartment_rentals"}
{"question": "Show the apartment numbers of apartments with unit status availability of both 0 and 1.", "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1", "arabic": "أظهر أرقام الشقق للشقق التي تحمل توافر حالة الوحدة لديها كلاً من 0 و 1.", "db_id": "apartment_rentals"}
{"question": "Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.", "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1", "arabic": "أي الشقق لها توافر حالة الوحدة لديها كلاً من 0 و 1؟ ارجاع أرقام الشقق.", "db_id": "apartment_rentals"}
{"question": "How many games are held after season 2007?", "query": "SELECT count(*) FROM game WHERE season  >  2007", "arabic": "كم عدد المباريات التي تمت بعد موسم 2007؟", "db_id": "game_injury"}
{"question": "List the dates of games by the home team name in descending order.", "query": "SELECT Date FROM game ORDER BY home_team DESC", "arabic": "قائمة تواريخ المباريات حسب اسم الفريق المستضيف بترتيب تنازلي.", "db_id": "game_injury"}
{"question": "List the season, home team, away team of all the games.", "query": "SELECT season ,  home_team ,  away_team FROM game", "arabic": "ما هي الموسم، والفريق المضيف، والفريق الزائر لجميع المباريات؟", "db_id": "game_injury"}
{"question": "What are the maximum, minimum and average home games each stadium held?", "query": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium", "arabic": "ما هي الحد الأقصى والحد الأدنى والمتوسط للمباريات المنزلية التي أقامها كل ملعب؟", "db_id": "game_injury"}
{"question": "What is the average attendance of stadiums with capacity percentage higher than 100%?", "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100", "arabic": "ما هو متوسط الحضور في الملاعب التي تحمل نسبة السعة أعلى من 100٪؟", "db_id": "game_injury"}
{"question": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?", "query": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'", "arabic": "ما هي أسماء اللاعبين، وعدد المباريات، ومصدر المعلومات للاعبين الذين لا يعانون من إصابة \"مشكلة في الركبة\"؟", "db_id": "game_injury"}
{"question": "What is the season of the game which causes the player 'Walter Samuel' to get injured?", "query": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel'", "arabic": "ما هو الموسم الخاص بالمباراة التي تسببت في إصابة اللاعب \"والتر سامويل\"؟", "db_id": "game_injury"}
{"question": "What are the ids, scores, and dates of the games which caused at least two injury accidents?", "query": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "arabic": "ما هي الهويات، والنتائج، والتواريخ للمباريات التي تسببت في حدوث حادثتي إصابة على الأقل؟", "db_id": "game_injury"}
{"question": "What are the id and name of the stadium where the most injury accidents happened?", "query": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الهوية والاسم للملعب الذي حدث فيه أكبر عدد من حوادث الإصابة؟", "db_id": "game_injury"}
{"question": "Find the id and name of the stadium where the largest number of injury accidents occurred.", "query": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "arabic": "اعثر على الهوية والاسم للملعب الذي وقع فيه أكبر عدد من حوادث الإصابة.", "db_id": "game_injury"}
{"question": "In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?", "query": "SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'", "arabic": "في أي موسم وفي أي ملعب حدث لأي لاعب إصابة بـ 'إصابة في القدم' أو 'مشكلة في الركبة'؟", "db_id": "game_injury"}
{"question": "How many different kinds of information sources are there for injury accidents?", "query": "SELECT count(DISTINCT SOURCE) FROM injury_accident", "arabic": "كم عدد أنواع مختلفة من مصادر المعلومات لحوادث الإصابة؟", "db_id": "game_injury"}
{"question": "How many games are free of injury accidents?", "query": "SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )", "arabic": "كم عدد المباريات التي لم تحدث فيها حوادث إصابة؟", "db_id": "game_injury"}
{"question": "How many distinct kinds of injuries happened after season 2010?", "query": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010", "arabic": "كم عدد أنواع الإصابات المميزة التي وقعت بعد موسم 2010؟", "db_id": "game_injury"}
{"question": "List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured.", "query": "SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta'", "arabic": "قائمة باسم الملعب الذي تعرض فيه كل من اللاعب 'والتر سامويل' واللاعب 'تياغو موتا' للإصابة.", "db_id": "game_injury"}
{"question": "Show the name, average attendance, total attendance for stadiums where no accidents happened.", "query": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id", "arabic": "أظهر الاسم، والحضور المتوسط، والحضور الإجمالي للملاعب التي لم تحدث فيها حوادث.", "db_id": "game_injury"}
{"question": "Which stadium name contains the substring \"Bank\"?", "query": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\"", "arabic": "أي اسم ملعب يحتوي على السلسلة الفرعية \"بنك\"؟", "db_id": "game_injury"}
{"question": "How many games has each stadium held?", "query": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id", "arabic": "كم لعبت كل استاد؟", "db_id": "game_injury"}
{"question": "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.", "query": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC", "arabic": "لكل حادث إصابة، ابحث عن تاريخ المباراة واسم اللاعب المصاب في اللعبة، ورتب النتائج تنازليًا حسب الموسم.", "db_id": "game_injury"}
{"question": "List all country and league names.", "query": "SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id", "arabic": "استعرض جميع أسماء البلدان والدوريات.", "db_id": "soccer_1"}
{"question": "How many leagues are there in England?", "query": "SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  \"England\"", "arabic": "كم عدد الدوريات في إنجلترا؟", "db_id": "soccer_1"}
{"question": "What is the average weight of all players?", "query": "SELECT avg(weight) FROM Player", "arabic": "ما هو متوسط وزن جميع اللاعبين؟", "db_id": "soccer_1"}
{"question": "What is the maximum and minimum height of all players?", "query": "SELECT max(weight) ,  min(weight) FROM Player", "arabic": "ما هو أقصى وأدنى طول لجميع اللاعبين؟", "db_id": "soccer_1"}
{"question": "List all player names who have an overall rating higher than the average.", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )", "arabic": "استعرض أسماء جميع اللاعبين الذين لديهم تقييم عام أعلى من المتوسط.", "db_id": "soccer_1"}
{"question": "What are the names of players who have the best dribbling?", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)", "arabic": "ما هي أسماء اللاعبين الذين لديهم أفضل مهارة الكرة؟", "db_id": "soccer_1"}
{"question": "List the names of all players who have a crossing score higher than 90 and prefer their right foot.", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"right\"", "arabic": "استعرض أسماء جميع اللاعبين الذين لديهم درجة عبور أعلى من 90 ويفضلون قدمهم اليمنى.", "db_id": "soccer_1"}
{"question": "List the names of all left-footed players who have overall rating between 85 and 90.", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"left\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90", "arabic": "استعرض أسماء جميع اللاعبين الذين يستخدمون القدم اليسرى ولديهم تقييم عام بين 85 و 90.", "db_id": "soccer_1"}
{"question": "What is the average rating for right-footed players and left-footed players?", "query": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot", "arabic": "ما هو متوسط تقييم اللاعبين الذين يستخدمون القدم اليمنى والقدم اليسرى؟", "db_id": "soccer_1"}
{"question": "Of all players with an overall rating greater than 80, how many are right-footed and left-footed?", "query": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot", "arabic": "من بين جميع اللاعبين الذين لديهم تقييم عام أكبر من 80، كم عدد الذين يستخدمون القدم اليمنى والقدم اليسرى؟", "db_id": "soccer_1"}
{"question": "List all of the player ids with a height of at least 180cm and an overall rating higher than 85.", "query": "SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85", "arabic": "استعرض جميع معرف اللاعبين الذين يبلغ طولهم 180 سم على الأقل وتقييمهم العام أعلى من 85.", "db_id": "soccer_1"}
{"question": "List all of the ids for left-footed players with a height between 180cm and 190cm.", "query": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\"", "arabic": "استعرض جميع معرفات اللاعبين الذين يستخدمون القدم اليسرى وطولهم بين 180 سم و 190 سم.", "db_id": "soccer_1"}
{"question": "Who are the top 3 players in terms of overall rating?", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3", "arabic": "من هم أفضل 3 لاعبين من حيث التقييم العام؟", "db_id": "soccer_1"}
{"question": "List the names and birthdays of the top five players in terms of potential.", "query": "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5", "arabic": "ما هي أسماء وتواريخ ميلاد أفضل خمسة لاعبين من حيث الإمكانيات؟", "db_id": "soccer_1"}
{"question": "How many performances are there?", "query": "SELECT count(*) FROM performance", "arabic": "كم عدد الأداءات؟", "db_id": "performance_attendance"}
{"question": "List the hosts of performances in ascending order of attendance.", "query": "SELECT HOST FROM performance ORDER BY Attendance ASC", "arabic": "قائمة مضيفي الأداءات بترتيب تصاعدي للحضور.", "db_id": "performance_attendance"}
{"question": "What are the dates and locations of performances?", "query": "SELECT Date ,  LOCATION FROM performance", "arabic": "ما هي التواريخ والمواقع للأداءات؟", "db_id": "performance_attendance"}
{"question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"", "query": "SELECT Attendance FROM performance WHERE LOCATION  =  \"TD Garden\" OR LOCATION  =  \"Bell Centre\"", "arabic": "عرض حضور الأداءات في الموقع \"TD Garden\" أو \"Bell Centre\".", "db_id": "performance_attendance"}
{"question": "What is the average number of attendees for performances?", "query": "SELECT avg(Attendance) FROM performance", "arabic": "ما هو متوسط عدد الحضور للأداءات؟", "db_id": "performance_attendance"}
{"question": "What is the date of the performance with the highest number of attendees?", "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1", "arabic": "ما هو تاريخ الأداء الذي شهد أعلى عدد من الحضور؟", "db_id": "performance_attendance"}
{"question": "Show different locations and the number of performances at each location.", "query": "SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION", "arabic": "عرض المواقع المختلفة وعدد الأداءات في كل موقع.", "db_id": "performance_attendance"}
{"question": "Show the most common location of performances.", "query": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "عرض الموقع الأكثر شيوعًا للأداءات.", "db_id": "performance_attendance"}
{"question": "Show the locations that have at least two performances.", "query": "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2", "arabic": "عرض المواقع التي تحتوي على ما لا يقل عن أداءين.", "db_id": "performance_attendance"}
{"question": "Show the locations that have both performances with more than 2000 attendees and performances with less than 1000 attendees.", "query": "SELECT LOCATION FROM performance WHERE Attendance  >  2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance  <  1000", "arabic": "عرض المواقع التي تحتوي على أداءات بحضور يزيد عن 2000 شخص وأداءات بحضور يقل عن 1000 شخص.", "db_id": "performance_attendance"}
{"question": "Show the names of members and the location of the performances they attended.", "query": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID", "arabic": "عرض أسماء الأعضاء ومواقع الأداءات التي حضروها.", "db_id": "performance_attendance"}
{"question": "Show the names of members and the location of performances they attended in ascending alphabetical order of their names.", "query": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T2.Name ASC", "arabic": "عرض أسماء الأعضاء ومواقع الأداءات التي حضروها بترتيب أبجدي تصاعدي لأسمائهم.", "db_id": "performance_attendance"}
{"question": "Show the dates of performances with attending members whose roles are \"Violin\".", "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\"", "arabic": "عرض تواريخ الأداءات مع الأعضاء الحاضرين الذين لديهم أدوار \"الكمان\".", "db_id": "performance_attendance"}
{"question": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.", "query": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC", "arabic": "عرض أسماء الأعضاء وتواريخ الأداءات التي حضروها بترتيب تنازلي للحضور في الأداءات.", "db_id": "performance_attendance"}
{"question": "List the names of members who did not attend any performance.", "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)", "arabic": "ما هي أسماء الأعضاء الذين لم يحضروا أي أداء؟", "db_id": "performance_attendance"}
{"question": "Find the buildings which have rooms with capacity more than 50.", "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50", "arabic": "العثور على المباني التي تحتوي على غرف بسعة أكبر من 50.", "db_id": "college_2"}
{"question": "What are the distinct buildings with capacities of greater than 50?", "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50", "arabic": "ما هي المباني المميزة بسعة أكبر من 50؟", "db_id": "college_2"}
{"question": "Count the number of rooms that are not in the Lamberton building.", "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'", "arabic": "عدد الغرف التي لا تنتمي إلى مبنى Lamberton.", "db_id": "college_2"}
{"question": "How many classrooms are not in Lamberton?", "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'", "arabic": "كم عدد الفصول الدراسية التي لا تنتمي إلى Lamberton؟", "db_id": "college_2"}
{"question": "What is the name and building of the departments whose budget is more than the average budget?", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "arabic": "ما هو اسم ومبنى الأقسام التي ميزانيتها أكبر من الميزانية المتوسطة؟", "db_id": "college_2"}
{"question": "Give the name and building of the departments with greater than average budget.", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "arabic": "إعطاء اسم ومبنى الأقسام ذات الميزانية الأعلى من المتوسط.", "db_id": "college_2"}
{"question": "Find the room number of the rooms which can sit 50 to 100 students and their buildings.", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100", "arabic": "العثور على رقم الغرفة للغرف التي يمكن أن يجلس فيها بين 50 و 100 طالب ومبانيهم.", "db_id": "college_2"}
{"question": "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100", "arabic": "ما هي أرقام الغرف والمباني المقابلة للفصول الدراسية التي يمكن أن تتسع بين 50 و 100 طالب؟", "db_id": "college_2"}
{"question": "Find the name and building of the department with the highest budget.", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1", "arabic": "العثور على اسم ومبنى القسم ذي أعلى ميزانية.", "db_id": "college_2"}
{"question": "What is the department name and corresponding building for the department with the greatest budget?", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1", "arabic": "ما هو اسم القسم والمبنى المقابل للقسم ذي أعلى ميزانية؟", "db_id": "college_2"}
{"question": "What is the name of the student who has the highest total credits in the History department.", "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1", "arabic": "ما هو اسم الطالب الذي يمتلك أعلى إجمالي ساعات معتمدة في قسم التاريخ.", "db_id": "college_2"}
{"question": "Give the name of the student in the History department with the most credits.", "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1", "arabic": "إعطاء اسم الطالب في قسم التاريخ الذي يمتلك أكبر عدد من الساعات المعتمدة.", "db_id": "college_2"}
{"question": "How many rooms does the Lamberton building have?", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'", "arabic": "كم عدد الغرف في مبنى Lamberton؟", "db_id": "college_2"}
{"question": "Count the number of classrooms in Lamberton.", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'", "arabic": "عدد الفصول الدراسية في Lamberton.", "db_id": "college_2"}
{"question": "How many students have advisors?", "query": "SELECT count(DISTINCT s_id) FROM advisor", "arabic": "كم عدد الطلاب الذين لديهم مستشارون؟", "db_id": "college_2"}
{"question": "Count the number of students who have advisors.", "query": "SELECT count(DISTINCT s_id) FROM advisor", "arabic": "عدد الطلاب الذين لديهم مستشارون؟", "db_id": "college_2"}
{"question": "How many departments offer courses?", "query": "SELECT count(DISTINCT dept_name) FROM course", "arabic": "كم عدد الأقسام التي تقدم دورات؟", "db_id": "college_2"}
{"question": "Count the number of departments which offer courses.", "query": "SELECT count(DISTINCT dept_name) FROM course", "arabic": "عدد الأقسام التي تقدم دورات؟", "db_id": "college_2"}
{"question": "How many different courses offered by Physics department?", "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'", "arabic": "كم عدد الدورات المختلفة التي تقدمها قسم الفيزياء؟", "db_id": "college_2"}
{"question": "Count the number of courses in the Physics department.", "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'", "arabic": "عدد الدورات في قسم الفيزياء؟", "db_id": "college_2"}
{"question": "Find the title of courses that have two prerequisites?", "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2", "arabic": "العثور على عناوين الدورات التي لها اثنين من المتطلبات؟", "db_id": "college_2"}
{"question": "What are the titles for courses with two prerequisites?", "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2", "arabic": "ما هي العناوين للدورات التي لها اثنين من المتطلبات؟", "db_id": "college_2"}
{"question": "Find the title, credit, and department name of courses that have more than one prerequisites?", "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1", "arabic": "العثور على العنوان والرصيد واسم القسم للدورات التي لها أكثر من متطلب واحد؟", "db_id": "college_2"}
{"question": "What is the title, credit value, and department name for courses with more than one prerequisite?", "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1", "arabic": "ما هو العنوان وقيمة الرصيد واسم القسم للدورات التي لها أكثر من متطلب واحد؟", "db_id": "college_2"}
{"question": "How many courses that do not have prerequisite?", "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "arabic": "كم عدد الدورات التي ليس لها متطلب؟", "db_id": "college_2"}
{"question": "Count the number of courses without prerequisites.", "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "arabic": "عدد الدورات دون متطلبات.", "db_id": "college_2"}
{"question": "Find the name of the courses that do not have any prerequisite?", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "arabic": "العثور على اسم الدورات التي ليس لديها أي متطلب؟", "db_id": "college_2"}
{"question": "What are the titles of courses without prerequisites?", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "arabic": "ما هي عناوين الدورات دون متطلبات؟", "db_id": "college_2"}
{"question": "How many different instructors have taught some course?", "query": "SELECT COUNT (DISTINCT id) FROM teaches", "arabic": "كم عدد المدرسين المختلفين الذين قاموا بتدريس بعض الدورات؟", "db_id": "college_2"}
{"question": "Count the number of distinct instructors who have taught a course.", "query": "SELECT COUNT (DISTINCT id) FROM teaches", "arabic": "كم عدد المدرسين المختلفين الذين قاموا بتدريس دورة؟", "db_id": "college_2"}
{"question": "Find the total budgets of the Marketing or Finance department.", "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'", "arabic": "العثور على الميزانيات الإجمالية لأقسام التسويق أو المالية.", "db_id": "college_2"}
{"question": "What is the sum of budgets of the Marketing and Finance departments?", "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'", "arabic": "ما هو مجموع الميزانيات لأقسام التسويق والمالية؟", "db_id": "college_2"}
{"question": "Find the department name of the instructor whose name contains 'Soisalon'.", "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'", "arabic": "العثور على اسم القسم للمدرس الذي يحتوي اسمه على 'Soisalon'.", "db_id": "college_2"}
{"question": "What is the name of the department with an instructure who has a name like 'Soisalon'?", "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'", "arabic": "ما هو اسم القسم الذي يحتوي على مدرس له اسم مشابه لـ 'Soisalon'؟", "db_id": "college_2"}
{"question": "How many rooms whose capacity is less than 50 does the Lamberton building have?", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50", "arabic": "كم عدد الغرف التي تتسع لأقل من 50 طالبًا في مبنى Lamberton؟", "db_id": "college_2"}
{"question": "Count the number of rooms in Lamberton with capacity lower than 50.", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50", "arabic": "عدد الغرف في Lamberton بسعة أقل من 50.", "db_id": "college_2"}
{"question": "Find the name and budget of departments whose budgets are more than the average budget.", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "arabic": "العثور على الأسماء والميزانيات للأقسام التي تزيد ميزانيتها عن المتوسط.", "db_id": "college_2"}
{"question": "What are the names and budgets of departments with budgets greater than the average?", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "arabic": "ما هي الأسماء والميزانيات للأقسام التي تتجاوز المتوسط؟", "db_id": "college_2"}
{"question": "what is the name of the instructor who is in Statistics department and earns the lowest salary?", "query": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1", "arabic": "ما هو اسم المدرس الذي يعمل في قسم الإحصاء ويحصل على أقل راتب؟", "db_id": "college_2"}
{"question": "Give the name of the lowest earning instructor in the Statistics department.", "query": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1", "arabic": "اعطاء اسم المدرس الذي يحصل على أقل راتب في قسم الإحصاء.", "db_id": "college_2"}
{"question": "Find the title of course that is provided by both Statistics and Psychology departments.", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'", "arabic": "العثور على عنوان الدورة التي يقدمها كل من قسم الإحصاء وعلم النفس.", "db_id": "college_2"}
{"question": "What is the title of a course that is listed in both the Statistics and Psychology departments?", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'", "arabic": "ما هو عنوان الدورة المدرجة في كل من قسم الإحصاء وعلم النفس؟", "db_id": "college_2"}
{"question": "Find the title of course that is provided by Statistics but not Psychology departments.", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'", "arabic": "العثور على عنوان الدورة التي يقدمها قسم الإحصاء ولكن لا يقدمها قسم علم النفس.", "db_id": "college_2"}
{"question": "What are the titles of courses that are in the Statistics department but not the Psychology department?", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'", "arabic": "ما هي عناوين الدورات التي تتواجد في قسم الإحصاء ولكن لا تتواجد في قسم علم النفس؟", "db_id": "college_2"}
{"question": "Find the id of instructors who taught a class in Fall 2009 but not in Spring 2010.", "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "ما هو رقم هوية المدرسين الذين قاموا بتدريس صف في خريف عام 2009 ولكن لم يقوموا بتدريس في ربيع عام 2010؟", "db_id": "college_2"}
{"question": "What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010?", "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "ما هي أرقام هوية المدرسين الذين قاموا بتدريس في خريف عام 2009 ولكن لم يقوموا بتدريس في ربيع عام 2010؟", "db_id": "college_2"}
{"question": "Find the name of students who took any class in the years of 2009 and 2010.", "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010", "arabic": "العثور على أسماء الطلاب الذين حضروا أي صف دراسي في سنوات 2009 و 2010.", "db_id": "college_2"}
{"question": "What are the names of the students who took classes in 2009 or 2010?", "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010", "arabic": "ما هي أسماء الطلاب الذين حضروا دروسًا في عام 2009 أو 2010؟", "db_id": "college_2"}
{"question": "Find the names of the top 3 departments that provide the largest amount of courses?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3", "arabic": "العثور على أسماء أعلى 3 أقسام تقدم أكبر عدد من الدورات؟", "db_id": "college_2"}
{"question": "What are the names of the 3 departments with the most courses?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هي أسماء 3 الأقسام التي تقدم أكبر عدد من الدورات؟", "db_id": "college_2"}
{"question": "Find the name of the department that offers the highest total credits?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1", "arabic": "العثور على اسم القسم الذي يقدم أعلى إجمالي للوحدات الدراسية؟", "db_id": "college_2"}
{"question": "What is the name of the department with the most credits?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1", "arabic": "ما هو اسم القسم الذي يحمل أكبر عدد من الوحدات الدراسية؟", "db_id": "college_2"}
{"question": "List the names of all courses ordered by their titles and credits.", "query": "SELECT title FROM course ORDER BY title ,  credits", "arabic": "قائمة بأسماء جميع الدورات مرتبة حسب عناوينها والوحدات الدراسية.", "db_id": "college_2"}
{"question": "Given the titles of all courses, in order of titles and credits.", "query": "SELECT title FROM course ORDER BY title ,  credits", "arabic": "مع توفير عناوين جميع الدورات، مرتبة حسب العناوين والوحدات الدراسية.", "db_id": "college_2"}
{"question": "Which department has the lowest budget?", "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1", "arabic": "أي قسم لديه أقل ميزانية؟", "db_id": "college_2"}
{"question": "Give the name of the department with the lowest budget.", "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1", "arabic": "اعطني اسم القسم الذي لديه أقل ميزانية.", "db_id": "college_2"}
{"question": "List the names and buildings of all departments sorted by the budget from large to small.", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC", "arabic": "قائمة بأسماء ومباني جميع الأقسام مرتبة حسب الميزانية من الأكبر إلى الأصغر.", "db_id": "college_2"}
{"question": "What are the names and buildings of the deparments, sorted by budget descending?", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC", "arabic": "ما هي أسماء ومباني الأقسام، مرتبة حسب الميزانية بترتيب تنازلي؟", "db_id": "college_2"}
{"question": "Who is the instructor with the highest salary?", "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1", "arabic": "من هو المدرس الذي يحصل على أعلى راتب؟", "db_id": "college_2"}
{"question": "Give the name of the highest paid instructor.", "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1", "arabic": "ما اسم المدرس الذي يتقاضى أعلى راتب؟", "db_id": "college_2"}
{"question": "List the information of all instructors ordered by their salary in ascending order.", "query": "SELECT * FROM instructor ORDER BY salary", "arabic": "قائمة بمعلومات جميع المدرسين مرتبة حسب رواتبهم بترتيب تصاعدي.", "db_id": "college_2"}
{"question": "Give all information regarding instructors, in order of salary from least to greatest.", "query": "SELECT * FROM instructor ORDER BY salary", "arabic": "اعطني جميع المعلومات المتعلقة بالمدرسين، مرتبة حسب الراتب من الأقل إلى الأعلى.", "db_id": "college_2"}
{"question": "Find the name of the students and their department names sorted by their total credits in ascending order.", "query": "SELECT name ,  dept_name FROM student ORDER BY tot_cred", "arabic": "العثور على أسماء الطلاب وأسماء أقسامهم مرتبة حسب إجمالي الوحدات الدراسية لهم بترتيب تصاعدي.", "db_id": "college_2"}
{"question": "What are the names of students and their respective departments, ordered by number of credits from least to greatest?", "query": "SELECT name ,  dept_name FROM student ORDER BY tot_cred", "arabic": "ما هي أسماء الطلاب وأقسامهم، مرتبة حسب عدد الوحدات الدراسية من الأقل إلى الأكثر؟", "db_id": "college_2"}
{"question": "list in alphabetic order all course names and their instructors' names in year 2008.", "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title", "arabic": "قائمة بأسماء جميع الدورات وأسماء مدرسيهم مرتبة ترتيباً أبجدياً في عام 2008.", "db_id": "college_2"}
{"question": "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title.", "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title", "arabic": "عرض جميع العناوين وأسماء مدرسيهم للدورات في عام 2008، مرتبة ترتيباً أبجدياً حسب العنوان.", "db_id": "college_2"}
{"question": "Find the name of instructors who are advising more than one student.", "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1", "arabic": "العثور على أسماء المدرسين الذين يقومون بإرشاد أكثر من طالب واحد.", "db_id": "college_2"}
{"question": "What are the names of instructors who advise more than one student?", "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1", "arabic": "ما هي أسماء المدرسين الذين يقومون بإرشاد أكثر من طالب واحد؟", "db_id": "college_2"}
{"question": "Find the name of the students who have more than one advisor?", "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1", "arabic": "العثور على أسماء الطلاب الذين لديهم أكثر من مستشار واحد؟", "db_id": "college_2"}
{"question": "What are the names of students who have more than one advisor?", "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1", "arabic": "ما هي أسماء الطلاب الذين لديهم أكثر من مستشار واحد؟", "db_id": "college_2"}
{"question": "Find the number of rooms with more than 50 capacity for each building.", "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building", "arabic": "العثور على عدد الغرف التي تتسع لأكثر من 50 شخصًا لكل مبنى.", "db_id": "college_2"}
{"question": "How many rooms in each building have a capacity of over 50?", "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building", "arabic": "كم عدد الغرف في كل مبنى تتسع لأكثر من 50 شخصًا؟", "db_id": "college_2"}
{"question": "Find the maximum and average capacity among rooms in each building.", "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building", "arabic": "العثور على السعة القصوى والمتوسطة بين الغرف في كل مبنى.", "db_id": "college_2"}
{"question": "What are the greatest and average capacity for rooms in each building?", "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building", "arabic": "ما هي السعة القصوى والمتوسطة للغرف في كل مبنى؟", "db_id": "college_2"}
{"question": "Find the title of the course that is offered by more than one department.", "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1", "arabic": "ما هو عنوان الدورة التي يتم تقديمها من قبل أكثر من قسم؟", "db_id": "college_2"}
{"question": "What are the titles of courses that are offered in more than one department?", "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1", "arabic": "ما هي عناوين الدورات التي يتم تقديمها في أكثر من قسم؟", "db_id": "college_2"}
{"question": "Find the total credits of courses provided by different department.", "query": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name", "arabic": "العثور على إجمالي الوحدات الدراسية للدورات التي تقدمها أقسام مختلفة.", "db_id": "college_2"}
{"question": "How many total credits are offered by each department?", "query": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name", "arabic": "كم عدد الوحدات الدراسية الكلية التي تقدمها كل قسم؟", "db_id": "college_2"}
{"question": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors.", "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)", "arabic": "العثور على الراتب الأدنى للأقسام التي يكون متوسط الراتب فيها أعلى من المتوسط العام لجميع المدرسين.", "db_id": "college_2"}
{"question": "What is the lowest salary in departments with average salary greater than the overall average.", "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)", "arabic": "ما هو أدنى راتب في الأقسام التي يكون متوسط الراتب فيها أعلى من المتوسط العام.\n", "db_id": "college_2"}
{"question": "Find the number of courses provided in each semester and year.", "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR", "arabic": "العثور على عدد الدورات المقدمة في كل فصل دراسي وسنة.", "db_id": "college_2"}
{"question": "How many courses are provided in each semester and year?", "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR", "arabic": "كم عدد الدورات المقدمة في كل فصل دراسي وسنة؟", "db_id": "college_2"}
{"question": "Find the year which offers the largest number of courses.", "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "arabic": "العثور على السنة التي تقدم أكبر عدد من الدورات.", "db_id": "college_2"}
{"question": "Which year had the greatest number of courses?", "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "arabic": "أي سنة كان بها أكبر عدد من الدورات؟", "db_id": "college_2"}
{"question": "Find the year and semester when offers the largest number of courses.", "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1", "arabic": "العثور على السنة والفصل الذي يقدم أكبر عدد من الدورات.", "db_id": "college_2"}
{"question": "What is the year and semester with the most courses?", "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي السنة والفصل مع أكبر عدد من الدورات؟", "db_id": "college_2"}
{"question": "Find the name of department has the highest amount of students?", "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1", "arabic": "العثور على اسم القسم الذي يحتوي على أعلى عدد من الطلاب؟", "db_id": "college_2"}
{"question": "What is the name of the deparment with the highest enrollment?", "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم القسم الذي يحتوي على أعلى عدد من الطلاب؟", "db_id": "college_2"}
{"question": "Find the total number of students in each department.", "query": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name", "arabic": "العثور على العدد الإجمالي للطلاب في كل قسم؟", "db_id": "college_2"}
{"question": "How many students are in each department?", "query": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name", "arabic": "كم عدد الطلاب في كل قسم؟", "db_id": "college_2"}
{"question": "Find the semester and year which has the least number of student taking any class.", "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1", "arabic": "العثور على الفصل الدراسي والسنة التي بها أقل عدد من الطلاب الذين يدرسون أي صف دراسي.", "db_id": "college_2"}
{"question": "Which semeseter and year had the fewest students?", "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1", "arabic": "أي فصل دراسي وسنة كان بها أقل عدد من الطلاب؟", "db_id": "college_2"}
{"question": "What is the id of the instructor who advises of all students from History department?", "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'", "arabic": "ما هو رقم التعريف الشخصي للمدرس الذي يُشرف على جميع الطلاب من قسم التاريخ؟", "db_id": "college_2"}
{"question": "Give id of the instructor who advises students in the History department.", "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'", "arabic": "أعط رقم تعريف المدرس الذي يُشرف على الطلاب في قسم التاريخ.", "db_id": "college_2"}
{"question": "Find the name and salary of the instructors who are advisors of any student from History department?", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'", "arabic": "العثور على الاسم والراتب للمدرسين الذين يشرفون على أي طالب من قسم التاريخ؟", "db_id": "college_2"}
{"question": "What are the names and salaries of instructors who advises students in the History department?", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'", "arabic": "ما هي أسماء ورواتب المدرسين الذين يشرفون على الطلاب في قسم التاريخ؟", "db_id": "college_2"}
{"question": "Find the id of the courses that do not have any prerequisite?", "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq", "arabic": "العثور على رقم التعريف للدورات التي لا تحتوي على أي شرط مسبق؟", "db_id": "college_2"}
{"question": "What are the ids of courses without prerequisites?", "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq", "arabic": "ما هي الهويات الخاصة بالدورات بدون شروط مسبقة؟", "db_id": "college_2"}
{"question": "Find the name of the courses that do not have any prerequisite?", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "arabic": "العثور على اسم الدورات التي لا تحتوي على أي شرط مسبق؟", "db_id": "college_2"}
{"question": "What are the names of courses without prerequisites?", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "arabic": "ما هي أسماء الدورات بدون شروط مسبقة؟", "db_id": "college_2"}
{"question": "What is the title of the prerequisite class of International Finance course?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')", "arabic": "ما هو عنوان الصف الدراسي المسبق لدورة التمويل الدولي؟", "db_id": "college_2"}
{"question": "Give the title of the prerequisite to the course International Finance.", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')", "arabic": "أعط عنوان الصف الدراسي المسبق لدورة التمويل الدولي.", "db_id": "college_2"}
{"question": "Find the title of course whose prerequisite is course Differential Geometry.", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')", "arabic": "العثور على عنوان الدورة التي يكون الصف الدراسي المسبق لها هو الهندسة التفاضلية.", "db_id": "college_2"}
{"question": "What is the title of the course with Differential Geometry as a prerequisite?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')", "arabic": "ما هو عنوان الدورة التي لها الهندسة التفاضلية كشرط مسبق؟", "db_id": "college_2"}
{"question": "Find the names of students who have taken any course in the fall semester of year 2003.", "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)", "arabic": "ما هي أسماء الطلاب الذين درسوا أي دورة في فصل الخريف من العام 2003؟", "db_id": "college_2"}
{"question": "What are the names of students who took a course in the Fall of 2003?", "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)", "arabic": "ما هي أسماء الطلاب الذين حضروا دورة في الخريف من عام 2003؟", "db_id": "college_2"}
{"question": "What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?", "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010", "arabic": "ما هو عنوان الدورة التي تم تقديمها في مبنى تشاندلر خلال فصل الخريف من عام 2010؟", "db_id": "college_2"}
{"question": "Give the title of the course offered in Chandler during the Fall of 2010.", "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010", "arabic": "أعط عنوان الدورة التي تم تقديمها في تشاندلر خلال الخريف عام 2010.", "db_id": "college_2"}
{"question": "Find the name of the instructors who taught C Programming course before.", "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'", "arabic": "العثور على أسماء المدرسين الذين قاموا بتدريس دورة برمجة C من قبل.", "db_id": "college_2"}
{"question": "What are the names of instructors who have taught C Programming courses?", "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'", "arabic": "ما هي أسماء المدرسين الذين قاموا بتدريس دورات برمجة C؟", "db_id": "college_2"}
{"question": "Find the name and salary of instructors who are advisors of the students from the Math department.", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", "arabic": "العثور على اسم وراتب المدرسين الذين يشرفون على الطلاب من قسم الرياضيات.", "db_id": "college_2"}
{"question": "What are the names and salaries of instructors who advise students in the Math department?", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", "arabic": "ما هي أسماء ورواتب المدرسين الذين يشرفون على الطلاب في قسم الرياضيات؟", "db_id": "college_2"}
{"question": "Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred", "arabic": "العثور على أسماء المدرسين الذين يشرفون على الطلاب من قسم الرياضيات، وترتيب النتائج حسب إجمالي الرصيد الدراسي للطلاب.", "db_id": "college_2"}
{"question": "What are the names of all instructors who advise students in the math depart sorted by total credits of the student.", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred", "arabic": "ما هي أسماء جميع المدرسين الذين يشرفون على الطلاب في قسم الرياضيات مرتبة حسب إجمالي رصيد الطلاب؟", "db_id": "college_2"}
{"question": "What is the course title of the prerequisite of course Mobile Computing?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')", "arabic": "ما هو عنوان الدورة المسبقة لدورة الحوسبة المتنقلة؟", "db_id": "college_2"}
{"question": "What is the title of the course that is a prerequisite for Mobile Computing?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')", "arabic": "ما هو عنوان الدورة التي تعتبر شرطًا مسبقًا للحوسبة المتنقلة؟", "db_id": "college_2"}
{"question": "Find the name of instructor who is the advisor of the student who has the highest number of total credits.", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1", "arabic": "العثور على اسم المدرس الذي يشرف على الطالب الذي لديه أعلى عدد من الرصيد الإجمالي.", "db_id": "college_2"}
{"question": "What is the name of the instructor who advises the student with the greatest number of total credits?", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1", "arabic": "ما هو اسم المدرس الذي يشرف على الطالب الذي لديه أعلى عدد من الرصيد الإجمالي؟", "db_id": "college_2"}
{"question": "Find the name of instructors who didn't teach any courses?", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)", "arabic": "العثور على أسماء المدرسين الذين لم يقوموا بتدريس أي دورات؟", "db_id": "college_2"}
{"question": "What are the names of instructors who didn't teach?", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)", "arabic": "ما هي أسماء المدرسين الذين لم يدرسوا؟", "db_id": "college_2"}
{"question": "Find the id of instructors who didn't teach any courses?", "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches", "arabic": "العثور على معرّف المدرسين الذين لم يدروسوا أي دورات؟", "db_id": "college_2"}
{"question": "What are the ids of instructors who didnt' teach?", "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches", "arabic": "ما هي معرّفات المدرسين الذين لم يدروسوا؟", "db_id": "college_2"}
{"question": "Find the names of instructors who didn't each any courses in any Spring semester.", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')", "arabic": "العثور على أسماء المدرسين الذين لم يدروسوا أي دورات في أي فصل ربيعي.", "db_id": "college_2"}
{"question": "What are the names of instructors who didn't teach courses in the Spring?", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')", "arabic": "ما هي أسماء المدرسين الذين لم يدروسوا دورات في الربيع؟", "db_id": "college_2"}
{"question": "Find the name of the department which has the highest average salary of professors.", "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1", "arabic": "العثور على اسم القسم الذي لديه أعلى متوسط راتب للأساتذة.", "db_id": "college_2"}
{"question": "Which department has the highest average instructor salary?", "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1", "arabic": "أي قسم لديه أعلى متوسط راتب للمدرسين؟", "db_id": "college_2"}
{"question": "Find the number and averaged salary of all instructors who are in the department with the highest budget.", "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1", "arabic": "العثور على عدد ومتوسط راتب جميع المدرسين الذين ينتمون إلى القسم ذي أعلى ميزانية.", "db_id": "college_2"}
{"question": "How many instructors are in the department with the highest budget, and what is their average salary?", "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1", "arabic": "كم عدد المدرسين في القسم ذي أعلى ميزانية، وما هو متوسط راتبهم؟", "db_id": "college_2"}
{"question": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", "arabic": "ما هو عنوان الدورة وعدد الوحدات الدراسية للدورة التي يدرسها في أكبر فصل دراسي (بأعلى سعة)؟", "db_id": "college_2"}
{"question": "Give the title and credits for the course that is taught in the classroom with the greatest capacity.", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", "arabic": "أعط عنوان الدورة وعدد الوحدات الدراسية للدورة التي يدرسها في الفصل الدراسي بأكبر سعة.", "db_id": "college_2"}
{"question": "Find the name of students who didn't take any course from Biology department.", "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')", "arabic": "العثور على أسماء الطلاب الذين لم يتخذوا أي دورة من قسم الأحياء.", "db_id": "college_2"}
{"question": "What are the names of students who haven't taken any Biology courses?", "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')", "arabic": "ما هي أسماء الطلاب الذين لم يتخذوا أي دورات في الأحياء؟", "db_id": "college_2"}
{"question": "Find the total number of students and total number of instructors for each department.", "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name", "arabic": "العثور على العدد الإجمالي للطلاب والمدرسين لكل قسم.", "db_id": "college_2"}
{"question": "How many students and instructors are in each department?", "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name", "arabic": "كم عدد الطلاب والمدرسين في كل قسم؟", "db_id": "college_2"}
{"question": "Find the name of students who have taken the prerequisite course of the course with title International Finance.", "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')", "arabic": "ما هي أسماء الطلاب الذين أخذوا الدورة الأساسية للدورة بعنوان التمويل الدولي؟", "db_id": "college_2"}
{"question": "What are the names of students who have taken the prerequisite for the course International Finance?", "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')", "arabic": "ما هي أسماء الطلاب الذين أخذوا الشرط المسبق لدورة التمويل الدولي؟", "db_id": "college_2"}
{"question": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')", "arabic": "العثور على اسم وراتب المدرسين الذين راتبهم أقل من المتوسط ​​للرواتب للمدرسين في قسم الفيزياء.", "db_id": "college_2"}
{"question": "What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')", "arabic": "ما هي الأسماء والرواتب للمدرسين الذين يكسبون أقل من المتوسط ​​للرواتب للمدرسين في قسم الفيزياء؟", "db_id": "college_2"}
{"question": "Find the name of students who took some course offered by Statistics department.", "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'", "arabic": "العثور على أسماء الطلاب الذين أخذوا بعض الدورات التي تقدمها قسم الإحصاء.", "db_id": "college_2"}
{"question": "What are the names of students who have taken Statistics courses?", "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'", "arabic": "ما هي أسماء الطلاب الذين أخذوا دورات الإحصاء؟", "db_id": "college_2"}
{"question": "Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles.", "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title", "arabic": "العثور على المبنى، ورقم الغرفة، والفصل الدراسي والسنة لجميع الدورات التي تقدمها قسم علم النفس مرتبة حسب عناوين الدورات.", "db_id": "college_2"}
{"question": "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?", "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title", "arabic": "ما هي المبنى، ورقم الغرفة، والفصل الدراسي والسنة للدورات في قسم علم النفس، مرتبة باستخدام عنوان الدورة؟", "db_id": "college_2"}
{"question": "Find the names of all instructors in computer science department", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'", "arabic": "العثور على أسماء جميع المدرسين في قسم علوم الحاسوب.", "db_id": "college_2"}
{"question": "What are the names of all instructors in the Comp. Sci. department?", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'", "arabic": "ما هي أسماء جميع المدرسين في قسم علوم الحاسوب؟", "db_id": "college_2"}
{"question": "Find the names of all instructors in Comp. Sci. department with salary > 80000.", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000", "arabic": "العثور على أسماء جميع المدرسين في قسم علوم الحاسوب الذين يكسبون أكثر من 80000.", "db_id": "college_2"}
{"question": "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000", "arabic": "ما هي أسماء المدرسين في قسم علوم الحاسوب الذين يكسبون أكثر من 80000؟", "db_id": "college_2"}
{"question": "Find the names of all instructors who have taught some course and the course_id.", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", "arabic": "العثور على أسماء جميع المدرسين الذين قاموا بتدريس دورة ما ومعرف الدورة.", "db_id": "college_2"}
{"question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", "arabic": "ما هي أسماء جميع المدرسين الذين قاموا بتدريس دورة ما، وكذلك معرف الدورة المقابل؟", "db_id": "college_2"}
{"question": "Find the names of all instructors in the Art department who have taught some course and the course_id.", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'", "arabic": "العثور على أسماء جميع المدرسين في قسم الفنون الذين قاموا بتدريس دورة ما ومعرف الدورة.", "db_id": "college_2"}
{"question": "What are the names of Art instructors who have taught a course, and the corresponding course id?", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'", "arabic": "ما هي أسماء مدرسي الفن الذين قاموا بتدريس دورة، ومعرف الدورة المقابل؟", "db_id": "college_2"}
{"question": "Find the names of all instructors whose name includes the substring “dar”.", "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'", "arabic": "العثور على أسماء جميع المدرسين التي تتضمن السلسلة الفرعية \"dar\".", "db_id": "college_2"}
{"question": "What are the names of all instructors with names that include \"dar\"?", "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'", "arabic": "ما هي أسماء جميع المدرسين الذين تتضمن أسماؤهم \"dar\"؟\n", "db_id": "college_2"}
{"question": "List in alphabetic order the names of all distinct instructors.", "query": "SELECT DISTINCT name FROM  instructor ORDER BY name", "arabic": "قائمة بأسماء جميع المدرسين المميزين بترتيب ألفبائي.", "db_id": "college_2"}
{"question": "List the distinct names of the instructors, ordered by name.", "query": "SELECT DISTINCT name FROM  instructor ORDER BY name", "arabic": "قائمة بأسماء المدرسين المميزين، مرتبة حسب الاسم.", "db_id": "college_2"}
{"question": "Find courses that ran in Fall 2009 or in Spring 2010.", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "العثور على الدورات التي تم تنفيذها في خريف عام 2009 أو في ربيع عام 2010.", "db_id": "college_2"}
{"question": "What are the ids for courses in the Fall of 2009 or the Spring of 2010?", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "ما هي المعرفات للدورات في خريف عام 2009 أو في ربيع عام 2010؟", "db_id": "college_2"}
{"question": "Find courses that ran in Fall 2009 and in Spring 2010.", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "العثور على الدورات التي تم تنفيذها في خريف عام 2009 وفي ربيع عام 2010.", "db_id": "college_2"}
{"question": "What are the ids for courses that were offered in both Fall of 2009 and Spring of 2010?", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "ما هي المعرفات للدورات التي تم تقديمها في كل من خريف عام 2009 وربيع عام 2010؟", "db_id": "college_2"}
{"question": "Find courses that ran in Fall 2009 but not in Spring 2010.", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "العثور على الدورات التي تم تنفيذها في خريف عام 2009 ولم تكن في ربيع عام 2010.", "db_id": "college_2"}
{"question": "What are the ids of courses offered in Fall of 2009 but not in Spring of 2010?", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "ما هي المعرفات للدورات التي تم تقديمها في خريف عام 2009 ولكن لم تكن في ربيع عام 2010؟", "db_id": "college_2"}
{"question": "Find the salaries of all distinct instructors that are less than the largest salary.", "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)", "arabic": "العثور على رواتب جميع المدرسين المميزين التي تكون أقل من أعلى راتب.", "db_id": "college_2"}
{"question": "What are the distinct salaries of all instructors who earned less than the maximum salary?", "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)", "arabic": "ما هي الرواتب المميزة لجميع المدرسين الذين كانت رواتبهم أقل من الحد الأقصى للرواتب؟", "db_id": "college_2"}
{"question": "Find the total number of instructors who teach a course in the Spring 2010 semester.", "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "العثور على العدد الإجمالي للمدرسين الذين يدرسون دورة في فصل الربيع عام 2010.", "db_id": "college_2"}
{"question": "How many instructors teach a course in the Spring of 2010?", "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", "arabic": "كم عدد المدرسين الذين يدرون دورة في ربيع عام 2010؟", "db_id": "college_2"}
{"question": "Find the names and average salaries of all departments whose average salary is greater than 42000.", "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000", "arabic": "ما هي أسماء ورواتب الأقسام جميعها التي تتجاوز متوسط الرواتب 42000؟", "db_id": "college_2"}
{"question": "What are the names and average salaries for departments with average salary higher than 42000?", "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000", "arabic": "ما هي أسماء ورواتب الأقسام التي يتجاوز متوسط رواتبها 42000؟", "db_id": "college_2"}
{"question": "Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department.", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')", "arabic": "العثور على أسماء المدرسين الذين يتقاضون رواتب أعلى من تلك التي يتقاضاها بعض (على الأقل واحد) المدرسين في قسم البيولوجيا.", "db_id": "college_2"}
{"question": "What are the names of instructors who earn more than at least one instructor from the Biology department?", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')", "arabic": "ما هي أسماء المدرسين الذين يحصلون على رواتب أعلى من مدرس واحد على الأقل من قسم البيولوجيا؟", "db_id": "college_2"}
{"question": "Find the names of all instructors whose salary is greater than the salary of all instructors in the Biology department.", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')", "arabic": "العثور على أسماء جميع المدرسين الذين يتقاضون رواتب أعلى من رواتب جميع المدرسين في قسم البيولوجيا.", "db_id": "college_2"}
{"question": "What are the names of all instructors with a higher salary than any of the instructors in the Biology department?", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')", "arabic": "ما هي أسماء جميع المدرسين الذين يحصلون على رواتب أعلى من أي من مدرسي قسم البيولوجيا؟", "db_id": "college_2"}
{"question": "How many debates are there?", "query": "SELECT count(*) FROM debate", "arabic": "كم مناظرة هناك؟", "db_id": "debate"}
{"question": "List the venues of debates in ascending order of the number of audience.", "query": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC", "arabic": "قائمة بأماكن المناظرات بترتيب تصاعدي حسب عدد الجمهور.", "db_id": "debate"}
{"question": "What are the date and venue of each debate?", "query": "SELECT Date ,  Venue FROM debate", "arabic": "ما هي التاريخ والمكان لكل مناظرة؟", "db_id": "debate"}
{"question": "List the dates of debates with number of audience bigger than 150", "query": "SELECT Date FROM debate WHERE Num_of_Audience  >  150", "arabic": "قائمة بتواريخ المناظرات مع عدد الجمهور أكبر من 150.", "db_id": "debate"}
{"question": "Show the names of people aged either 35 or 36.", "query": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36", "arabic": "عرض أسماء الأشخاص الذين تتراوح أعمارهم بين 35 أو 36 عامًا.", "db_id": "debate"}
{"question": "What is the party of the youngest people?", "query": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1", "arabic": "ما هي حزب أصغر الأشخاص سنًا؟", "db_id": "debate"}
{"question": "Show different parties of people along with the number of people in each party.", "query": "SELECT Party ,  COUNT(*) FROM people GROUP BY Party", "arabic": "عرض الأحزاب المختلفة للأشخاص مع عدد الأشخاص في كل حزب.", "db_id": "debate"}
{"question": "Show the party that has the most people.", "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "عرض الحزب الذي يضم أكبر عدد من الأشخاص.", "db_id": "debate"}
{"question": "Show the distinct venues of debates", "query": "SELECT DISTINCT Venue FROM debate", "arabic": "عرض الأماكن المختلفة للمناظرات.", "db_id": "debate"}
{"question": "Show the names of people, and dates and venues of debates they are on the affirmative side.", "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID", "arabic": "أظهر أسماء الأشخاص، وتواريخ وأماكن المناظرات التي يكونون في الجانب الموافق.", "db_id": "debate"}
{"question": "Show the names of people, and dates and venues of debates they are on the negative side, ordered in ascending alphabetical order of name.", "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC", "arabic": "أظهر أسماء الأشخاص، وتواريخ وأماكن المناظرات التي يكونون في الجانب السلبي، مرتبة بترتيب أبجدي تصاعدي للاسم.", "db_id": "debate"}
{"question": "Show the names of people that are on affirmative side of debates with number of audience bigger than 200.", "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200", "arabic": "أظهر أسماء الأشخاص الذين يكونون في الجانب الموافق للمناظرات مع عدد الجمهور أكبر من 200.", "db_id": "debate"}
{"question": "Show the names of people and the number of times they have been on the affirmative side of debates.", "query": "SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name", "arabic": "أظهر أسماء الأشخاص وعدد المرات التي شاركوا في الجانب الموافق للمناظرات.", "db_id": "debate"}
{"question": "Show the names of people who have been on the negative side of debates at least twice.", "query": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "arabic": "أظهر أسماء الأشخاص الذين كانوا في الجانب السلبي للمناظرات مرتين على الأقل.", "db_id": "debate"}
{"question": "List the names of people that have not been on the affirmative side of debates.", "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)", "arabic": "قائمة بأسماء الأشخاص الذين لم يكونوا في الجانب الموافق للمناظرات.", "db_id": "debate"}
{"question": "List the names of all the customers in alphabetical order.", "query": "SELECT customer_details FROM customers ORDER BY customer_details", "arabic": "قائمة بأسماء جميع الزبائن بترتيب أبجدي.", "db_id": "insurance_and_eClaims"}
{"question": "Sort the customer names in alphabetical order.", "query": "SELECT customer_details FROM customers ORDER BY customer_details", "arabic": "فرز أسماء الزبائن بترتيب أبجدي.", "db_id": "insurance_and_eClaims"}
{"question": "Find all the policy type codes associated with the customer \"Dayana Robel\"", "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"", "arabic": "العثور على جميع أنواع السياسات المرتبطة بالزبون \"ديانا روبيل\".", "db_id": "insurance_and_eClaims"}
{"question": "What are the type codes of the policies used by the customer \"Dayana Robel\"?", "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"", "arabic": "ما هي أنواع السياسات المستخدمة من قبل الزبون \"ديانا روبيل\"؟", "db_id": "insurance_and_eClaims"}
{"question": "Which type of policy is most frequently used? Give me the policy type code.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من السياسات يُستخدم بشكل متكرر؟ أعطني رمز نوع السياسة.", "db_id": "insurance_and_eClaims"}
{"question": "Find the type code of the most frequently used policy.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "العثور على رمز نوع السياسة الأكثر استخدامًا بشكل متكرر.", "db_id": "insurance_and_eClaims"}
{"question": "Find all the policy types that are used by more than 2 customers.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2", "arabic": "العثور على جميع أنواع السياسات التي يستخدمها أكثر من 2 زبون.", "db_id": "insurance_and_eClaims"}
{"question": "Which types of policy are chosen by more than 2 customers? Give me the policy type codes.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2", "arabic": "أي أنواع السياسات يختارها أكثر من 2 زبون؟ أعطني رموز أنواع السياسة.", "db_id": "insurance_and_eClaims"}
{"question": "Find the total and average amount paid in claim headers.", "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers", "arabic": "العثور على المبلغ الإجمالي والمتوسط المدفوع في رؤوس المطالبات.\n", "db_id": "insurance_and_eClaims"}
{"question": "What are the total amount and average amount paid in claim headers?", "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers", "arabic": "ما هي المبلغ الإجمالي والمبلغ المتوسط المدفوع في رؤوس المطالبات؟", "db_id": "insurance_and_eClaims"}
{"question": "Find the total amount claimed in the most recently created document.", "query": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)", "arabic": "العثور على المبلغ الإجمالي المطالب به في أحدث وثيقة تم إنشاؤها.", "db_id": "insurance_and_eClaims"}
{"question": "How much amount in total were claimed in the most recently created document?", "query": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)", "arabic": "كم المبلغ الإجمالي المطالب به في أحدث وثيقة تم إنشاؤها؟", "db_id": "insurance_and_eClaims"}
{"question": "What is the name of the customer who has made the largest amount of claim in a single claim?", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)", "arabic": "ما اسم الزبون الذي قام بالمطالبة بأكبر مبلغ في مطالبة واحدة؟", "db_id": "insurance_and_eClaims"}
{"question": "Which customer made the largest amount of claim in a single claim? Return the customer details.", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)", "arabic": "أي زبون قدم أكبر مبلغ مطالبة في مطالبة واحدة؟ أعد تفاصيل الزبون.", "db_id": "insurance_and_eClaims"}
{"question": "What is the name of the customer who has made the minimum amount of payment in one claim?", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)", "arabic": "ما اسم الزبون الذي قام بدفع أقل مبلغ في مطالبة واحدة؟", "db_id": "insurance_and_eClaims"}
{"question": "Which customer made the smallest amount of claim in one claim? Return the customer details.", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)", "arabic": "أي زبون قدم أقل مبلغ مطالبة في مطالبة واحدة؟ أعد تفاصيل الزبون.", "db_id": "insurance_and_eClaims"}
{"question": "Find the names of customers who have no policies associated.", "query": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id", "arabic": "العثور على أسماء الزبائن الذين ليس لديهم سياسات مرتبطة.", "db_id": "insurance_and_eClaims"}
{"question": "What are the names of customers who do not have any policies?", "query": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id", "arabic": "ما هي أسماء الزبائن الذين ليس لديهم أي سياسات؟", "db_id": "insurance_and_eClaims"}
{"question": "How many claim processing stages are there in total?", "query": "SELECT count(*) FROM claims_processing_stages", "arabic": "كم عدد مراحل معالجة المطالبات بشكل إجمالي؟", "db_id": "insurance_and_eClaims"}
{"question": "Find the number of distinct stages in claim processing.", "query": "SELECT count(*) FROM claims_processing_stages", "arabic": "العثور على عدد المراحل المميزة في معالجة المطالبات.", "db_id": "insurance_and_eClaims"}
{"question": "What is the name of the claim processing stage that most of the claims are on?", "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما اسم مرحلة معالجة المطالبات التي يكون معظم المطالبات عليها؟", "db_id": "insurance_and_eClaims"}
{"question": "Which claim processing stage has the most claims? Show the claim status name.", "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي مرحلة في معالجة المطالبات لديها أكبر عدد من المطالبات؟ أظهر اسم حالة المطالبة.", "db_id": "insurance_and_eClaims"}
{"question": "Find the names of customers whose name contains \"Diana\".", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"", "arabic": "العثور على أسماء الزبائن الذين يحتوي اسمهم على \"ديانا\".", "db_id": "insurance_and_eClaims"}
{"question": "Which customers have the substring \"Diana\" in their names? Return the customer details.", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"", "arabic": "أي الزبائن الذين يحتوي اسمهم على \"ديانا\" كجزء منه؟ أعد تفاصيل الزبون.", "db_id": "insurance_and_eClaims"}
{"question": "Find the names of the customers who have an deputy policy.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\"", "arabic": "ما هي أسماء العملاء الذين لديهم سياسة نائب؟", "db_id": "insurance_and_eClaims"}
{"question": "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\"", "arabic": "أي العملاء لديهم وثيقة تأمينية برمز النوع \"نائب؟\" أعطني تفاصيل العميل.", "db_id": "insurance_and_eClaims"}
{"question": "Find the names of customers who either have an deputy policy or uniformed policy.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\"", "arabic": "العثور على أسماء العملاء الذين إما لديهم سياسة نائب أو سياسة موحدة.", "db_id": "insurance_and_eClaims"}
{"question": "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\"", "arabic": "أي العملاء لديهم وثيقة تأمينية برمز النوع \"نائب\" أو \"موحد؟\" أعد تفاصيل العميل.", "db_id": "insurance_and_eClaims"}
{"question": "Find the names of all the customers and staff members.", "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff", "arabic": "العثور على أسماء جميع العملاء وأعضاء الطاقم.", "db_id": "insurance_and_eClaims"}
{"question": "What are the names of the customers and staff members?", "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff", "arabic": "ما هي أسماء العملاء وأعضاء الطاقم؟", "db_id": "insurance_and_eClaims"}
{"question": "Find the number of records of each policy type and its type code.", "query": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code", "arabic": "العثور على عدد السجلات لكل نوع من أنواع السياسات ورمز نوعها.", "db_id": "insurance_and_eClaims"}
{"question": "For each policy type, return its type code and its count in the record.", "query": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code", "arabic": "لكل نوع من أنواع السياسات، أرجع رمز نوعها وعددها في السجل.", "db_id": "insurance_and_eClaims"}
{"question": "Find the name of the customer that has been involved in the most policies.", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1", "arabic": "العثور على اسم العميل الذي شارك في أكبر عدد من السياسات.", "db_id": "insurance_and_eClaims"}
{"question": "Which customer have the most policies? Give me the customer details.", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1", "arabic": "أي العملاء لديهم أكبر عدد من السياسات؟ أعطني تفاصيل العميل.", "db_id": "insurance_and_eClaims"}
{"question": "What is the description of the claim status \"Open\"?", "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"", "arabic": "ما هو وصف حالة المطالبة \"مفتوحة\"؟", "db_id": "insurance_and_eClaims"}
{"question": "Find the description of the claim status \"Open\".", "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"", "arabic": "العثور على وصف حالة المطالبة \"مفتوحة\".", "db_id": "insurance_and_eClaims"}
{"question": "How many distinct claim outcome codes are there?", "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing", "arabic": "كم عدد رموز نتائج المطالبات المميزة؟", "db_id": "insurance_and_eClaims"}
{"question": "Count the number of distinct claim outcome codes.", "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing", "arabic": "عدد عدد رموز نتائج المطالبات المميزة.", "db_id": "insurance_and_eClaims"}
{"question": "Which customer is associated with the latest policy?", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)", "arabic": "أي العميل مرتبط بأحدث سياسة؟", "db_id": "insurance_and_eClaims"}
{"question": "Find the customer who started a policy most recently.", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)", "arabic": "ما هو العميل الذي بدأ بوليصة مؤخرًا؟", "db_id": "insurance_and_eClaims"}
{"question": "Show the number of accounts.", "query": "SELECT count(*) FROM Accounts", "arabic": "عرض عدد الحسابات.", "db_id": "customers_and_invoices"}
{"question": "How many accounts are there?", "query": "SELECT count(*) FROM Accounts", "arabic": "كم عدد الحسابات؟", "db_id": "customers_and_invoices"}
{"question": "How many customers have opened an account?", "query": "SELECT count(DISTINCT customer_id) FROM Accounts", "arabic": "كم عدد العملاء الذين فتحوا حسابًا؟", "db_id": "customers_and_invoices"}
{"question": "Count the number of customers who have an account.", "query": "SELECT count(DISTINCT customer_id) FROM Accounts", "arabic": "عدد العملاء الذين لديهم حساب.", "db_id": "customers_and_invoices"}
{"question": "Show the id, the date of account opened, the account name, and other account detail for all accounts.", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "arabic": "عرض الهوية، وتاريخ فتح الحساب، واسم الحساب، وتفاصيل حساب أخرى لجميع الحسابات.", "db_id": "customers_and_invoices"}
{"question": "What are the ids, date opened, name, and other details for all accounts?", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "arabic": "ما هي الهويات، وتواريخ الافتتاح، والأسماء، والتفاصيل الأخرى للحسابات؟", "db_id": "customers_and_invoices"}
{"question": "Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'.", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'", "arabic": "عرض الهوية، واسم الحساب، وتفاصيل الحساب الأخرى لجميع الحسابات بواسطة العميل الذي لديه الاسم الأول 'ميغان'.", "db_id": "customers_and_invoices"}
{"question": "What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name \"Meaghan\"?", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'", "arabic": "ما هي الهويات، والأسماء، وتواريخ الافتتاح، والتفاصيل الأخرى للحسابات المتعلقة بالعميل الذي لديه الاسم الأول \"ميغان\"؟", "db_id": "customers_and_invoices"}
{"question": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling.", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"", "arabic": "عرض اسم الحساب وتفاصيل الحساب الأخرى لجميع الحسابات بواسطة العميل الذي لديه الاسم الأول ميغان والاسم الأخير كيلينج.", "db_id": "customers_and_invoices"}
{"question": "What are the names and other details for accounts corresponding to the customer named Meaghan Keeling?", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"", "arabic": "ما هي الأسماء والتفاصيل الأخرى للحسابات المتعلقة بالعميل المسمى ميغان كيلينج؟", "db_id": "customers_and_invoices"}
{"question": "Show the first name and last name for the customer with account name 900.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"", "arabic": "عرض الاسم الأول والاسم الأخير للعميل مع اسم الحساب 900.", "db_id": "customers_and_invoices"}
{"question": "What are the full names of customers with the account name 900?", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"", "arabic": "ما هي الأسماء الكاملة للعملاء ذوي اسم الحساب 900؟", "db_id": "customers_and_invoices"}
{"question": "How many customers don't have an account?", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)", "arabic": "كم عدد العملاء الذين ليس لديهم حساب؟", "db_id": "customers_and_invoices"}
{"question": "Count the number of customers who do not have an account.", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)", "arabic": "عدد العملاء الذين ليس لديهم حساب.", "db_id": "customers_and_invoices"}
{"question": "Show the unique first names, last names, and phone numbers for all customers with any account.", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "أظهر الأسماء الأولى الفريدة، وأسماء العائلة، وأرقام الهواتف لجميع العملاء الذين لديهم حساب أيًا كان.", "db_id": "customers_and_invoices"}
{"question": "What are the distinct first names, last names, and phone numbers for customers with accounts?", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "ما هي الأسماء الأولى المميزة، وأسماء العائلة، وأرقام الهواتف للعملاء الذين لديهم حساب؟", "db_id": "customers_and_invoices"}
{"question": "Show customer ids who don't have an account.", "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts", "arabic": "أظهر هويات العملاء الذين ليس لديهم حساب.", "db_id": "customers_and_invoices"}
{"question": "What are the customer ids for customers who do not have an account?", "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts", "arabic": "ما هي هويات العملاء الذين ليس لديهم حساب؟", "db_id": "customers_and_invoices"}
{"question": "How many accounts does each customer have? List the number and customer id.", "query": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id", "arabic": "كم عدد الحسابات التي يمتلكها كل عميل؟ قائمة بالعدد وهوية العميل.", "db_id": "customers_and_invoices"}
{"question": "Count the number of accounts corresponding to each customer id.", "query": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id", "arabic": "عدد الحسابات المتوافقة مع كل هوية عميل.", "db_id": "customers_and_invoices"}
{"question": "What is the customer id, first and last name with most number of accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي هوية العميل، والاسم الأول والأخير الذي يمتلك أكبر عدد من الحسابات؟", "db_id": "customers_and_invoices"}
{"question": "Return the id and full name of the customer with the most accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "العودة بالهوية والاسم الكامل للعميل الذي يمتلك أكبر عدد من الحسابات.", "db_id": "customers_and_invoices"}
{"question": "Show id, first name and last name for all customers and the number of accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "arabic": "أظهر الهوية، والاسم الأول والأخير لجميع العملاء وعدد الحسابات.", "db_id": "customers_and_invoices"}
{"question": "What are the the full names and ids for all customers, and how many accounts does each have?", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "arabic": "ما هي الأسماء الكاملة والهويات لجميع العملاء، وكم عدد الحسابات التي يمتلكها كل عميل؟", "db_id": "customers_and_invoices"}
{"question": "Show first name and id for all customers with at least 2 accounts.", "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "arabic": "أظهر الاسم الأول والهوية لجميع العملاء الذين لديهم ما لا يقل عن حسابين.", "db_id": "customers_and_invoices"}
{"question": "What are the first names and ids for customers who have two or more accounts?", "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "arabic": "ما هي الأسماء الأولى والهويات للعملاء الذين لديهم حسابين أو أكثر؟", "db_id": "customers_and_invoices"}
{"question": "Show the number of customers.", "query": "SELECT count(*) FROM Customers", "arabic": "أظهر عدد العملاء.", "db_id": "customers_and_invoices"}
{"question": "Count the number of customers.", "query": "SELECT count(*) FROM Customers", "arabic": "عدد العملاء.", "db_id": "customers_and_invoices"}
{"question": "Show the number of customers for each gender.", "query": "SELECT gender ,  count(*) FROM Customers GROUP BY gender", "arabic": "أظهر عدد العملاء لكل نوع.", "db_id": "customers_and_invoices"}
{"question": "How many customers are there of each gender?", "query": "SELECT gender ,  count(*) FROM Customers GROUP BY gender", "arabic": "كم عدد العملاء لكل جنس؟", "db_id": "customers_and_invoices"}
{"question": "How many transactions do we have?", "query": "SELECT count(*) FROM Financial_transactions", "arabic": "كم عدد المعاملات لدينا؟", "db_id": "customers_and_invoices"}
{"question": "Count the number of transactions.", "query": "SELECT count(*) FROM Financial_transactions", "arabic": "عدد المعاملات.", "db_id": "customers_and_invoices"}
{"question": "How many transaction does each account have? Show the number and account id.", "query": "SELECT count(*) ,  account_id FROM Financial_transactions", "arabic": "كم عدد المعاملات التي يمتلكها كل حساب؟ أظهر العدد وهوية الحساب.", "db_id": "customers_and_invoices"}
{"question": "Count the number of financial transactions that correspond to each account id.", "query": "SELECT count(*) ,  account_id FROM Financial_transactions", "arabic": "عدد المعاملات المالية التي تتوافق مع كل هوية حساب.", "db_id": "customers_and_invoices"}
{"question": "How many transaction does account with name 337 have?", "query": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\"", "arabic": "كم عدد المعاملات التي يمتلكها الحساب بالاسم 337؟", "db_id": "customers_and_invoices"}
{"question": "Count the number of financial transactions that the account with the name 337 has.", "query": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\"", "arabic": "عدد المعاملات المالية التي يمتلكها الحساب بالاسم 337.", "db_id": "customers_and_invoices"}
{"question": "What is the average, minimum, maximum, and total transaction amount?", "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions", "arabic": "ما هو المتوسط، الحد الأدنى، الأقصى، والمجموع لمبلغ المعاملة؟", "db_id": "customers_and_invoices"}
{"question": "Return the average, minimum, maximum, and total transaction amounts.", "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions", "arabic": "العودة بالمتوسط، الحد الأدنى، الأقصى، والمجموع لمبالغ المعاملات.", "db_id": "customers_and_invoices"}
{"question": "Show ids for all transactions whose amounts are greater than the average.", "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)", "arabic": "أظهر الهويات لجميع المعاملات التي تكون مبالغها أكبر من المتوسط.", "db_id": "customers_and_invoices"}
{"question": "What are the ids for transactions that have an amount greater than the average amount of a transaction?", "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)", "arabic": "ما هي الهويات للمعاملات التي تحتوي على مبلغ أكبر من المتوسط لمبلغ المعاملة؟", "db_id": "customers_and_invoices"}
{"question": "Show the transaction types and the total amount of transactions.", "query": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type", "arabic": "أظهر أنواع المعاملات ومجموع مبالغ المعاملات.", "db_id": "customers_and_invoices"}
{"question": "What are total transaction amounts for each transaction type?", "query": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type", "arabic": "ما هي إجمالي مبالغ المعاملات لكل نوع من المعاملات؟", "db_id": "customers_and_invoices"}
{"question": "Show the account name, id and the number of transactions for each account.", "query": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id", "arabic": "أظهر اسم الحساب، الهوية، وعدد المعاملات لكل حساب.", "db_id": "customers_and_invoices"}
{"question": "Return the names and ids of each account, as well as the number of transactions.", "query": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id", "arabic": "العودة بالأسماء والهويات لكل حساب، بالإضافة إلى عدد المعاملات.", "db_id": "customers_and_invoices"}
{"question": "Show the account id with most number of transactions.", "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرف الحساب الذي يحتوي على أكبر عدد من المعاملات؟", "db_id": "customers_and_invoices"}
{"question": "What is the id of the account with the most transactions?", "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرف الحساب الذي يحتوي على أكبر عدد من المعاملات؟", "db_id": "customers_and_invoices"}
{"question": "Show the account id and name with at least 4 transactions.", "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4", "arabic": "أظهر معرف الحساب والاسم الذي يحتوي على ما لا يقل عن 4 معاملات.", "db_id": "customers_and_invoices"}
{"question": "What are the ids and names of accounts with 4 or more transactions?", "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4", "arabic": "ما هي الهويات والأسماء للحسابات التي تحتوي على 4 معاملات أو أكثر؟", "db_id": "customers_and_invoices"}
{"question": "Show all product sizes.", "query": "SELECT DISTINCT product_size FROM Products", "arabic": "أظهر جميع أحجام المنتجات.", "db_id": "customers_and_invoices"}
{"question": "What are the different product sizes?", "query": "SELECT DISTINCT product_size FROM Products", "arabic": "ما هي الأحجام المختلفة للمنتجات؟", "db_id": "customers_and_invoices"}
{"question": "Show all product colors.", "query": "SELECT DISTINCT product_color FROM Products", "arabic": "أظهر جميع ألوان المنتجات.", "db_id": "customers_and_invoices"}
{"question": "What are the different product colors?", "query": "SELECT DISTINCT product_color FROM Products", "arabic": "ما هي الألوان المختلفة للمنتجات؟", "db_id": "customers_and_invoices"}
{"question": "Show the invoice number and the number of transactions for each invoice.", "query": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number", "arabic": "أظهر رقم الفاتورة وعدد المعاملات لكل فاتورة.", "db_id": "customers_and_invoices"}
{"question": "How many transactions correspond to each invoice number?", "query": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number", "arabic": "كم عدد المعاملات المتوافقة مع كل رقم فاتورة؟", "db_id": "customers_and_invoices"}
{"question": "What is the invoice number and invoice date for the invoice with most number of transactions?", "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو رقم الفاتورة وتاريخ الفاتورة للفاتورة التي تحتوي على أكبر عدد من المعاملات؟", "db_id": "customers_and_invoices"}
{"question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?", "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو رقم الفاتورة وتاريخ الفاتورة المتوافق مع الفاتورة التي تحتوي على أكبر عدد من المعاملات؟", "db_id": "customers_and_invoices"}
{"question": "How many invoices do we have?", "query": "SELECT count(*) FROM Invoices", "arabic": "كم عدد الفواتير لدينا؟", "db_id": "customers_and_invoices"}
{"question": "Count the number of invoices.", "query": "SELECT count(*) FROM Invoices", "arabic": "عدد الفواتير.", "db_id": "customers_and_invoices"}
{"question": "Show invoice dates and order id and details for all invoices.", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id", "arabic": "أظهر تواريخ الفواتير ومعرف الطلب وتفاصيل لجميع الفواتير.", "db_id": "customers_and_invoices"}
{"question": "What are the invoice dates, order ids, and order details for all invoices?", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id", "arabic": "ما هي تواريخ الفواتير ومعرّفات الطلبات وتفاصيل الطلبات لجميع الفواتير؟", "db_id": "customers_and_invoices"}
{"question": "Show the order ids and the number of invoices for each order.", "query": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id", "arabic": "اعرض معرفات الطلبات وعدد الفواتير لكل طلب.", "db_id": "customers_and_invoices"}
{"question": "How many invoices correspond to each order id?", "query": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id", "arabic": "كم عدد الفواتير التي تتوافق مع كل معرّف طلب؟", "db_id": "customers_and_invoices"}
{"question": "What is the order id and order details for the order more than two invoices.", "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2", "arabic": "ما هو معرّف الطلب وتفاصيل الطلب للطلب الذي يحتوي على أكثر من فاتورتين؟", "db_id": "customers_and_invoices"}
{"question": "Return the order ids and details for orderes with two or more invoices.", "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2", "arabic": "ارجع معرّفات الطلب والتفاصيل للطلبات التي تحتوي على فاتورتين أو أكثر.", "db_id": "customers_and_invoices"}
{"question": "What is the customer last name, id and phone number with most number of orders?", "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العائلة للعميل ومعرّفه ورقم هاتفه الذي لديه أكبر عدد من الطلبات؟", "db_id": "customers_and_invoices"}
{"question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.", "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ارجع اسم العائلة والمعرّف ورقم الهاتف للعميل الذي قام بأكبر عدد من الطلبات.", "db_id": "customers_and_invoices"}
{"question": "Show all product names without an order.", "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "arabic": "اعرض أسماء جميع المنتجات بدون طلب.", "db_id": "customers_and_invoices"}
{"question": "What are the names of products that have never been ordered?", "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id", "arabic": "ما هي أسماء المنتجات التي لم يتم طلبها أبدًا؟", "db_id": "customers_and_invoices"}
{"question": "Show all product names and the total quantity ordered for each product name.", "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name", "arabic": "اعرض أسماء جميع المنتجات والكمية الإجمالية المطلوبة لكل اسم من أسماء المنتجات.", "db_id": "customers_and_invoices"}
{"question": "What are the different product names, and what is the sum of quantity ordered for each product?", "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name", "arabic": "ما هي الأسماء المختلفة للمنتجات وما مجموع الكمية المطلوبة لكل منتج؟", "db_id": "customers_and_invoices"}
{"question": "Show the order ids and the number of items in each order.", "query": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id", "arabic": "اعرض معرّفات الطلب وعدد العناصر في كل طلب.", "db_id": "customers_and_invoices"}
{"question": "How many order items correspond to each order id?", "query": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id", "arabic": "كم عدد عناصر الطلب التي تتوافق مع كل معرّف طلب؟", "db_id": "customers_and_invoices"}
{"question": "Show the product ids and the number of unique orders containing each product.", "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id", "arabic": "اعرض معرّفات المنتجات وعدد الطلبات الفريدة التي تحتوي على كل منتج.", "db_id": "customers_and_invoices"}
{"question": "How many distinct order ids correspond to each product?", "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id", "arabic": "كم عدد معرّفات الطلبات المتميزة التي تتوافق مع كل منتج؟", "db_id": "customers_and_invoices"}
{"question": "Show all product names and the number of customers having an order on each product.", "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name", "arabic": "ما هي أسماء جميع المنتجات وعدد العملاء الذين قاموا بطلب كل منتج؟", "db_id": "customers_and_invoices"}
{"question": "What are teh names of the different products, as well as the number of customers who have ordered each product.", "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name", "arabic": "ما هي أسماء المنتجات المختلفة، بالإضافة إلى عدد العملاء الذين قاموا بطلب كل منتج؟", "db_id": "customers_and_invoices"}
{"question": "Show order ids and the number of products in each order.", "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id", "arabic": "اعرض معرّفات الطلب وعدد المنتجات في كل طلب.", "db_id": "customers_and_invoices"}
{"question": "How many different products correspond to each order id?", "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id", "arabic": "كم عدد المنتجات المختلفة التي تتوافق مع كل معرّف طلب؟", "db_id": "customers_and_invoices"}
{"question": "Show order ids and the total quantity in each order.", "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id", "arabic": "اعرض معرّفات الطلب والكمية الإجمالية في كل طلب.", "db_id": "customers_and_invoices"}
{"question": "Give the order ids for all orders, as well as the total product quantity in each.", "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id", "arabic": "أعط معرّفات الطلب لجميع الطلبات، بالإضافة إلى الكمية الإجمالية للمنتجات في كل منها.", "db_id": "customers_and_invoices"}
{"question": "How many products were not included in any order?", "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )", "arabic": "كم عدد المنتجات التي لم تُدرج في أي طلب؟", "db_id": "customers_and_invoices"}
{"question": "Count the number of products that were never ordered.", "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )", "arabic": "عد عدد المنتجات التي لم يتم طلبها أبدًا؟", "db_id": "customers_and_invoices"}
{"question": "How many churches opened before 1850 are there?", "query": "SELECT count(*) FROM Church WHERE Open_Date  <  1850", "arabic": "كم عدد الكنائس التي تم فتحها قبل عام 1850؟", "db_id": "wedding"}
{"question": "Show the name, open date, and organizer for all churches.", "query": "SELECT name ,  open_date ,  organized_by FROM Church", "arabic": "اعرض الاسم وتاريخ الافتتاح والمنظم لجميع الكنائس.", "db_id": "wedding"}
{"question": "List all church names in descending order of opening date.", "query": "SELECT name FROM church ORDER BY open_date DESC", "arabic": "عرض جميع أسماء الكنائس بترتيب تنازلي حسب تاريخ الافتتاح.", "db_id": "wedding"}
{"question": "Show the opening year in whcih at least two churches opened.", "query": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2", "arabic": "اعرض العام الذي تم فيه فتح ما لا يقل عن كنيستين.", "db_id": "wedding"}
{"question": "Show the organizer and name for churches that opened between 1830 and 1840.", "query": "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840", "arabic": "اعرض المنظم والاسم للكنائس التي فُتحت بين عامي 1830 و1840.", "db_id": "wedding"}
{"question": "Show all opening years and the number of churches that opened in that year.", "query": "SELECT open_date ,  count(*) FROM church GROUP BY open_date", "arabic": "اعرض جميع السنوات الافتتاحية وعدد الكنائس التي فُتحت في كل سنة.", "db_id": "wedding"}
{"question": "Show the name and opening year for three churches that opened most recently.", "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3", "arabic": "اعرض الاسم وسنة الافتتاح لثلاث كنائس فُتحت مؤخرًا بشكل أكثر.", "db_id": "wedding"}
{"question": "How many female people are older than 30 in our record?", "query": "SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30", "arabic": "كم عدد الأشخاص الإناث الذين تجاوزوا سن الثلاثين في سجلنا؟", "db_id": "wedding"}
{"question": "Show the country where people older than 30 and younger than 25 are from.", "query": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30", "arabic": "اعرض البلدان التي يزيد فيها عمر الأشخاص عن 30 ويقل عمرهم عن 25 عامًا.", "db_id": "wedding"}
{"question": "Show the minimum, maximum, and average age for all people.", "query": "SELECT min(age) ,  max(age) ,  avg(age) FROM people", "arabic": "اعرض أقل، وأكثر، ومتوسط العمر لجميع الأشخاص.", "db_id": "wedding"}
{"question": "Show the name and country for all people whose age is smaller than the average.", "query": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)", "arabic": "اعرض الاسم والبلد لجميع الأشخاص الذين يكون عمرهم أقل من المتوسط.", "db_id": "wedding"}
{"question": "Show the pair of male and female names in all weddings after year 2014", "query": "SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014", "arabic": "اعرض زوج أسماء الذكور والإناث في جميع حفلات الزفاف بعد عام 2014.", "db_id": "wedding"}
{"question": "Show the name and age for all male people who don't have a wedding.", "query": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "arabic": "اعرض الاسم والعمر لجميع الأشخاص الذكور الذين ليس لديهم حفل زفاف.", "db_id": "wedding"}
{"question": "Show all church names except for those that had a wedding in year 2015.", "query": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015", "arabic": "اعرض جميع أسماء الكنائس باستثناء تلك التي كانت لها حفل زفاف في عام 2015.", "db_id": "wedding"}
{"question": "Show all church names that have hosted least two weddings.", "query": "SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2", "arabic": "اعرض جميع أسماء الكنائس التي استضافت حفل زفاف على الأقل.", "db_id": "wedding"}
{"question": "Show the names for all females from Canada having a wedding in year 2016.", "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada'", "arabic": "اعرض الأسماء لجميع الإناث من كندا اللواتي أقمن حفل زفاف في عام 2016.", "db_id": "wedding"}
{"question": "How many weddings are there in year 2016?", "query": "SELECT count(*) FROM wedding WHERE YEAR  =  2016", "arabic": "كم عدد حفلات الزفاف في عام 2016؟", "db_id": "wedding"}
{"question": "Show the church names for the weddings of all people older than 30.", "query": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30", "arabic": "اعرض أسماء الكنائس لحفلات زفاف جميع الأشخاص الذين تجاوزوا سن الثلاثين.", "db_id": "wedding"}
{"question": "Show all countries and the number of people from each country.", "query": "SELECT country ,  count(*) FROM people GROUP BY country", "arabic": "اعرض جميع البلدان وعدد الأشخاص من كل بلد.", "db_id": "wedding"}
{"question": "How many churches have a wedding in year 2016?", "query": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016", "arabic": "كم عدد الكنائس التي تم فيها حفل زفاف في عام 2016؟", "db_id": "wedding"}
{"question": "How many artists do we have?", "query": "SELECT count(*) FROM artist", "arabic": "كم عدد الفنانين لدينا؟", "db_id": "theme_gallery"}
{"question": "Count the number of artists.", "query": "SELECT count(*) FROM artist", "arabic": "عد عدد الفنانين.", "db_id": "theme_gallery"}
{"question": "Show all artist name, age, and country ordered by the yeared they joined.", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "arabic": "ما هي أسماء جميع الفنانين، وأعمارهم، وبلدانهم مرتبة حسب سنوات انضمامهم؟", "db_id": "theme_gallery"}
{"question": "What are the names, ages, and countries of artists, sorted by the year they joined?", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "arabic": "ما هي الأسماء، والأعمار، والبلدان للفنانين، مرتبة حسب سنوات انضمامهم؟", "db_id": "theme_gallery"}
{"question": "What are all distinct country for artists?", "query": "SELECT DISTINCT country FROM artist", "arabic": "ما هي جميع البلدان المميزة للفنانين؟", "db_id": "theme_gallery"}
{"question": "Return the different countries for artists.", "query": "SELECT DISTINCT country FROM artist", "arabic": "ما هي البلدان المختلفة للفنانين؟", "db_id": "theme_gallery"}
{"question": "Show all artist names and the year joined who are not from United States.", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "arabic": "اعرض جميع أسماء الفنانين وسنة الانضمام الذين ليسوا من الولايات المتحدة.", "db_id": "theme_gallery"}
{"question": "What are the names and year of joining for artists that do not have the country \"United States\"?", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "arabic": "ما هي الأسماء وسنة الانضمام للفنانين الذين ليس لديهم البلد \"الولايات المتحدة\"؟", "db_id": "theme_gallery"}
{"question": "How many artists are above age 46 and joined after 1990?", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990", "arabic": "كم عدد الفنانين الذين تتجاوز أعمارهم 46 عامًا وانضموا بعد عام 1990؟", "db_id": "theme_gallery"}
{"question": "Count the number of artists who are older than 46 and joined after 1990.", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990", "arabic": "عد عدد الفنانين الذين تجاوزوا سن ال 46 وانضموا بعد عام 1990.", "db_id": "theme_gallery"}
{"question": "What is the average and minimum age of all artists from United States.", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "arabic": "ما هو متوسط وأدنى عمر جميع الفنانين من الولايات المتحدة.", "db_id": "theme_gallery"}
{"question": "Return the average and minimum ages across artists from the United States.", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "arabic": "اعرض المتوسط والحد الأدنى للأعمار بين الفنانين من الولايات المتحدة.", "db_id": "theme_gallery"}
{"question": "What is the name of the artist who joined latest?", "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1", "arabic": "ما هو اسم الفنان الذي انضم مؤخرًا؟", "db_id": "theme_gallery"}
{"question": "Return the name of the artist who has the latest join year.", "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1", "arabic": "اعرض اسم الفنان الذي انضم مؤخرًا.", "db_id": "theme_gallery"}
{"question": "How many exhibition are there in year 2005 or after?", "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005", "arabic": "كم عدد المعارض في عام 2005 أو بعدها؟", "db_id": "theme_gallery"}
{"question": "Count the number of exhibitions that happened in or after 2005.", "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005", "arabic": "عد عدد المعارض التي حدثت في أو بعد عام 2005.", "db_id": "theme_gallery"}
{"question": "Show theme and year for all exhibitions with ticket prices lower than 15.", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "arabic": "اعرض الموضوع والسنة لجميع المعارض التي تتوفر تذاكرها بأسعار أقل من 15.", "db_id": "theme_gallery"}
{"question": "What are the theme and year for all exhibitions that have a ticket price under 15?", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "arabic": "ما هي الموضوع والسنة لجميع المعارض التي تمتلك سعر تذكرة أقل من 15؟", "db_id": "theme_gallery"}
{"question": "Show all artist names and the number of exhibitions for each artist.", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id", "arabic": "اعرض جميع أسماء الفنانين وعدد المعارض لكل فنان.", "db_id": "theme_gallery"}
{"question": "How many exhibitions has each artist had?", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id", "arabic": "كم عدد المعارض التي قدمها كل فنان؟", "db_id": "theme_gallery"}
{"question": "What is the name and country for the artist with most number of exhibitions?", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم الفنان والبلد للفنان الذي قام بأكبر عدد من المعارض؟", "db_id": "theme_gallery"}
{"question": "Return the name and country corresponding to the artist who has had the most exhibitions.", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "arabic": "اعرض الاسم والبلد المتوافق مع الفنان الذي قام بأكبر عدد من المعارض.", "db_id": "theme_gallery"}
{"question": "Show names for artists without any exhibition.", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "arabic": "اعرض الأسماء للفنانين الذين لم يقدموا أي معرض.", "db_id": "theme_gallery"}
{"question": "What are the names of artists that have not had any exhibitions?", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "arabic": "ما هي أسماء الفنانين الذين لم يقدموا أي معرض؟", "db_id": "theme_gallery"}
{"question": "What is the theme and artist name for the exhibition with a ticket price higher than the average?", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "arabic": "ما هو الموضوع واسم الفنان للمعرض الذي كان سعر تذكرته أعلى من المتوسط؟", "db_id": "theme_gallery"}
{"question": "Return the names of artists and the themes of their exhibitions that had a ticket price higher than average.", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "arabic": "اعرض أسماء الفنانين ومواضيع معارضهم التي كان سعر تذكرتها أعلى من المتوسط.", "db_id": "theme_gallery"}
{"question": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "arabic": "اعرض المتوسط والحد الأدنى والحد الأقصى لأسعار التذاكر للمعارض لجميع السنوات قبل عام 2009.", "db_id": "theme_gallery"}
{"question": "What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "arabic": "ما هي المتوسط والحد الأدنى والحد الأقصى لأسعار التذاكر للمعارض التي حدثت قبل عام 2009؟", "db_id": "theme_gallery"}
{"question": "Show theme and year for all exhibitions in an descending order of ticket price.", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "arabic": "اعرض الموضوع والسنة لجميع المعارض بترتيب تنازلي حسب سعر التذكرة.", "db_id": "theme_gallery"}
{"question": "What are the themes and years for exhibitions, sorted by ticket price descending?", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "arabic": "ما هي المواضيع والسنوات للمعارض، مرتبة حسب سعر التذكرة بتنازل؟", "db_id": "theme_gallery"}
{"question": "What is the theme, date, and attendance for the exhibition in year 2004?", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "arabic": "ما هو الموضوع والتاريخ والحضور للمعرض في عام 2004؟", "db_id": "theme_gallery"}
{"question": "Return the themes, dates, and attendance for exhibitions that happened in 2004.", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "arabic": "اعرض الموضوعات والتواريخ والحضور للمعارض التي حدثت في عام 2004.", "db_id": "theme_gallery"}
{"question": "Show all artist names who didn't have an exhibition in 2004.", "query": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004", "arabic": "أظهر أسماء جميع الفنانين الذين لم يكونوا لديهم معرض في عام 2004.", "db_id": "theme_gallery"}
{"question": "What are the names of artists who did not have an exhibition in 2004?", "query": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004", "arabic": "ما هي أسماء الفنانين الذين لم يكون لديهم معرض في عام 2004؟", "db_id": "theme_gallery"}
{"question": "Show the theme for exhibitions with both records of an attendance below 100 and above 500.", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "arabic": "أظهر الموضوع للمعارض التي كان لديها سجل حضور أقل من 100 وأكثر من 500.", "db_id": "theme_gallery"}
{"question": "Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "arabic": "ما هي المواضيع التي كانت لها معارض مقابلة كان لديها حضور أقل من 100 وأكثر من 500؟", "db_id": "theme_gallery"}
{"question": "How many exhibitions have a attendance more than 100 or have a ticket price below 10?", "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10", "arabic": "كم عدد المعارض التي كان لديها حضور أكثر من 100 أو كان لديها سعر تذكرة أقل من 10؟", "db_id": "theme_gallery"}
{"question": "Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10.", "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10", "arabic": "عدد المعارض التي كان لديها حضور أكثر من 100 أو سعر تذكرة أقل من 10.", "db_id": "theme_gallery"}
{"question": "Show all artist names with an average exhibition attendance over 200.", "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200", "arabic": "أظهر أسماء جميع الفنانين الذين كان متوسط حضور معارضهم أكثر من 200.", "db_id": "theme_gallery"}
{"question": "What are the names of artist whose exhibitions draw over 200 attendees on average?", "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200", "arabic": "ما هي أسماء الفنانين الذين تجذب معارضهم أكثر من 200 زائر في المتوسط؟", "db_id": "theme_gallery"}
{"question": "Find the id of the item whose title is \"orange\".", "query": "SELECT i_id FROM item WHERE title  =  \"orange\"", "arabic": "ابحث عن معرف العنصر الذي عنوانه \"orange\".", "db_id": "epinions_1"}
{"question": "List all information in the item table.", "query": "SELECT * FROM item", "arabic": "قائمة جميع المعلومات في جدول العناصر.", "db_id": "epinions_1"}
{"question": "Find the number of reviews.", "query": "SELECT count(*) FROM review", "arabic": "ابحث عن عدد التقييمات.", "db_id": "epinions_1"}
{"question": "How many users are there?", "query": "SELECT count(*) FROM useracct", "arabic": "كم عدد المستخدمين؟", "db_id": "epinions_1"}
{"question": "Find the average and maximum rating of all reviews.", "query": "SELECT avg(rating) ,  max(rating) FROM review", "arabic": "ابحث عن المتوسط والتقييم الأقصى لجميع التقييمات.", "db_id": "epinions_1"}
{"question": "Find the highest rank of all reviews.", "query": "SELECT min(rank) FROM review", "arabic": "ابحث عن أعلى تصنيف لجميع التقييمات.", "db_id": "epinions_1"}
{"question": "How many different users wrote some reviews?", "query": "SELECT count(DISTINCT u_id) FROM review", "arabic": "كم عدد المستخدمين المختلفين الذين كتبوا بعض التقييمات؟", "db_id": "epinions_1"}
{"question": "How many different items were reviewed by some users?", "query": "SELECT count(DISTINCT i_id) FROM review", "arabic": "كم عدد العناصر المختلفة التي تمت مراجعتها من قبل بعض المستخدمين؟", "db_id": "epinions_1"}
{"question": "Find the number of items that did not receive any review.", "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)", "arabic": "ابحث عن عدد العناصر التي لم تتلقى أي مراجعة.", "db_id": "epinions_1"}
{"question": "Find the names of users who did not leave any review.", "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)", "arabic": "ابحث عن أسماء المستخدمين الذين لم يتركوا أي مراجعة.", "db_id": "epinions_1"}
{"question": "Find the names of goods that receive a rating of 10.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  =  10", "arabic": "ابحث عن أسماء البضائع التي تلقت تقييمًا قدره 10.", "db_id": "epinions_1"}
{"question": "Find the titles of items whose rating is higher than the average review rating of all items.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)", "arabic": "ابحث عن عناوين العناصر التي تكون تقييمها أعلى من التقييم المتوسط لجميع العناصر.", "db_id": "epinions_1"}
{"question": "Find the titles of items that received any rating below 5.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5", "arabic": "ابحث عن عناوين العناصر التي تلقت أي تقييم أقل من 5.", "db_id": "epinions_1"}
{"question": "Find the titles of items that received both a rating higher than 8 and a rating below 5.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5", "arabic": "ابحث عن عناوين العناصر التي تلقت تقييمًا أعلى من 8 وتقييمًا أقل من 5.", "db_id": "epinions_1"}
{"question": "Find the names of items whose rank is higher than 3 and whose average rating is above 5.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5", "arabic": "ابحث عن أسماء العناصر التي يكون تصنيفها أعلى من 3 وتكون متوسط تقييمها أعلى من 5.", "db_id": "epinions_1"}
{"question": "Find the name of the item with the lowest average rating.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1", "arabic": "ابحث عن اسم العنصر الذي يحمل أدنى تقييم متوسط.", "db_id": "epinions_1"}
{"question": "List the titles of all items in alphabetic order .", "query": "SELECT title FROM item ORDER BY title", "arabic": "قائمة بعناوين جميع العناصر بترتيب أبجدي.", "db_id": "epinions_1"}
{"question": "Find the name of the user who gives the most reviews.", "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن اسم المستخدم الذي يعطي أكبر عدد من التقييمات.", "db_id": "epinions_1"}
{"question": "Find the name and id of the item with the highest average rating.", "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1", "arabic": "ابحث عن اسم ومعرف العنصر الذي يحمل أعلى تقييم متوسط.", "db_id": "epinions_1"}
{"question": "Find the name and id of the good with the highest average rank.", "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1", "arabic": "ابحث عن اسم ومعرف السلعة التي تحمل أعلى تصنيف متوسط.", "db_id": "epinions_1"}
{"question": "For each user, return the name and the average rating of reviews given by them.", "query": "SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id", "arabic": "بالنسبة لكل مستخدم، قم بإرجاع الاسم والتقييم المتوسط للتقييمات التي قاموا بإعطائها.", "db_id": "epinions_1"}
{"question": "For each user, find their name and the number of reviews written by them.", "query": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id", "arabic": "بالنسبة لكل مستخدم، ابحث عن اسمهم وعدد التقييمات التي كتبوها.", "db_id": "epinions_1"}
{"question": "Find the name of the user who gave the highest rating.", "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id ORDER BY T2.rating DESC LIMIT 1", "arabic": "ما هو اسم المستخدم الذي قدم أعلى تقييم؟", "db_id": "epinions_1"}
{"question": "Find the name of the source user with the highest average trust score.", "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg(trust) DESC LIMIT 1", "arabic": "ما هو اسم المستخدم المصدر الذي يحمل أعلى متوسط ​​للمصداقية؟", "db_id": "epinions_1"}
{"question": "Find each target user's name and average trust score.", "query": "SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id", "arabic": "ابحث عن اسماء المستخدمين المستهدفين ومتوسط ​​المصداقية.", "db_id": "epinions_1"}
{"question": "Find the name of the target user with the lowest trust score.", "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1", "arabic": "ما هو اسم المستخدم المستهدف الذي يحمل أدنى مصداقية؟", "db_id": "epinions_1"}
{"question": "Find the names of the items that did not receive any review.", "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)", "arabic": "ما هي أسماء العناصر التي لم تتلقى أي مراجعة؟", "db_id": "epinions_1"}
{"question": "Find the names of users who did not leave any review.", "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)", "arabic": "ما هي أسماء المستخدمين الذين لم يتركوا أي مراجعة؟", "db_id": "epinions_1"}
{"question": "Find the number of users who did not write any review.", "query": "SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)", "arabic": "ما هو عدد المستخدمين الذين لم يكتبوا أي مراجعة؟", "db_id": "epinions_1"}
{"question": "Find the number of items without any review.", "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)", "arabic": "ما هو عدد العناصر التي لم تتلقى أي مراجعة؟", "db_id": "epinions_1"}
{"question": "How many players are there?", "query": "SELECT count(*) FROM player", "arabic": "كم عدد اللاعبين؟", "db_id": "riding_club"}
{"question": "List the names of players in ascending order of votes.", "query": "SELECT Player_name FROM player ORDER BY Votes ASC", "arabic": "قائمة أسماء اللاعبين بترتيب تصاعدي حسب الأصوات.", "db_id": "riding_club"}
{"question": "What are the gender and occupation of players?", "query": "SELECT Gender ,  Occupation FROM player", "arabic": "ما هي الجنسية والمهنة للاعبين؟", "db_id": "riding_club"}
{"question": "List the name and residence for players whose occupation is not \"Researcher\".", "query": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Researcher\"", "arabic": "قائمة الاسم والإقامة للاعبين الذين ليسوا \"باحثين\".", "db_id": "riding_club"}
{"question": "Show the names of sponsors of players whose residence is either \"Brandon\" or \"Birtle\".", "query": "SELECT Sponsor_name FROM player WHERE Residence  =  \"Brandon\" OR Residence  =  \"Birtle\"", "arabic": "عرض أسماء الرعاة للاعبين الذين يقيمون إما في \"براندون\" أو \"بيرتل\".", "db_id": "riding_club"}
{"question": "What is the name of the player with the largest number of votes?", "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1", "arabic": "ما هو اسم اللاعب الذي يحمل أكبر عدد من الأصوات؟", "db_id": "riding_club"}
{"question": "Show different occupations along with the number of players in each occupation.", "query": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation", "arabic": "عرض المهن المختلفة جنبًا إلى جنب مع عدد اللاعبين في كل مهنة.", "db_id": "riding_club"}
{"question": "Please show the most common occupation of players.", "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "الرجاء عرض الوظيفة الأكثر شيوعًا بين اللاعبين.", "db_id": "riding_club"}
{"question": "Show the residences that have at least two players.", "query": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2", "arabic": "عرض الإقامات التي يوجد فيها لاعبان على الأقل.", "db_id": "riding_club"}
{"question": "Show the names of players and names of their coaches.", "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID", "arabic": "عرض أسماء اللاعبين وأسماء مدربيهم.", "db_id": "riding_club"}
{"question": "Show the names of players coached by the rank 1 coach.", "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1", "arabic": "عرض أسماء اللاعبين الذين يتم تدريبهم بواسطة المدرب من رتبة 1.", "db_id": "riding_club"}
{"question": "Show the names and genders of players with a coach starting after 2011.", "query": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011", "arabic": "عرض أسماء وأنواع الجنس للاعبين الذين لديهم مدرب يبدأ بعد عام 2011.", "db_id": "riding_club"}
{"question": "Show the names of players and names of their coaches in descending order of the votes of players.", "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC", "arabic": "عرض أسماء اللاعبين وأسماء مدربيهم بترتيب تنازلي حسب عدد الأصوات التي حصلوا عليها.", "db_id": "riding_club"}
{"question": "List the names of players that do not have coaches.", "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)", "arabic": "قائمة أسماء اللاعبين الذين ليس لديهم مدربون.", "db_id": "riding_club"}
{"question": "Show the residences that have both a player of gender \"M\" and a player of gender \"F\".", "query": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\"", "arabic": "عرض الإقامات التي تحتوي على لاعب من الجنس \"ذكر\" ولاعب من الجنس \"أنثى\".", "db_id": "riding_club"}
{"question": "How many coaches does each club has? List the club id, name and the number of coaches.", "query": "SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id", "arabic": "كم مدرب يمتلك كل نادٍ؟ قائمة معرف النادي والاسم وعدد المدربين.", "db_id": "riding_club"}
{"question": "How many gold medals has the club with the most coaches won?", "query": "SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عدد الميداليات الذهبية التي فاز بها النادي الذي يمتلك أكبر عدد من المدربين؟", "db_id": "riding_club"}
{"question": "How many gymnasts are there?", "query": "SELECT count(*) FROM gymnast", "arabic": "كم عدد الجمبازين؟", "db_id": "gymnast"}
{"question": "Count the number of gymnasts.", "query": "SELECT count(*) FROM gymnast", "arabic": "عدد الجمبازين.", "db_id": "gymnast"}
{"question": "List the total points of gymnasts in descending order.", "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC", "arabic": "قائمة نقاط الجمبازين بترتيب تنازلي.", "db_id": "gymnast"}
{"question": "What are the total points for all gymnasts, ordered by total points descending?", "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC", "arabic": "ما هي النقاط الإجمالية لجميع الجمبازين، مرتبة حسب النقاط الإجمالية بترتيب تنازلي؟", "db_id": "gymnast"}
{"question": "List the total points of gymnasts in descending order of floor exercise points.", "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC", "arabic": "قائمة نقاط الجمبازين بترتيب تنازلي حسب نقاط تمرين الأرض.", "db_id": "gymnast"}
{"question": "What are the total points of gymnasts, ordered by their floor exercise points descending?", "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC", "arabic": "ما هي النقاط الإجمالية للجمبازين، مرتبة حسب نقاط ممارسة الأرض تنازليًا؟", "db_id": "gymnast"}
{"question": "What is the average horizontal bar points for all gymnasts?", "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast", "arabic": "ما هو متوسط نقاط العارضة الأفقية لجميع الجمبازين؟", "db_id": "gymnast"}
{"question": "Return the average horizontal bar points across all gymnasts.", "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast", "arabic": "ارجاع المتوسط ​​لنقاط العارضة الأفقية عبر جميع الجمبازين.", "db_id": "gymnast"}
{"question": "What are the names of people in ascending alphabetical order?", "query": "SELECT Name FROM People ORDER BY Name ASC", "arabic": "ما هي أسماء الأشخاص بترتيب أبجدي تصاعدي؟", "db_id": "gymnast"}
{"question": "Return the names of people, ordered alphabetically.", "query": "SELECT Name FROM People ORDER BY Name ASC", "arabic": "ارجاع أسماء الأشخاص، مرتبة أبجديًا.", "db_id": "gymnast"}
{"question": "What are the names of gymnasts?", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "arabic": "ما هي أسماء الجمبازين؟", "db_id": "gymnast"}
{"question": "Return the names of the gymnasts.", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "arabic": "ارجاع أسماء الجمبازين.", "db_id": "gymnast"}
{"question": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"", "arabic": "ما هي أسماء الجمبازين الذين لم يكن مسقط رأسهم \"سانتو دومينغو\"؟", "db_id": "gymnast"}
{"question": "Return the names of gymnasts who did not grow up in Santo Domingo.", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"", "arabic": "ارجاع أسماء الجمبازين الذين لم ينشأوا في سانتو دومينغو.", "db_id": "gymnast"}
{"question": "What is the age of the tallest person?", "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1", "arabic": "ما هو عمر أطول شخص؟", "db_id": "gymnast"}
{"question": "Return the age of the person with the greatest height.", "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1", "arabic": "ارجاع عمر الشخص ذو أعظم ارتفاع.", "db_id": "gymnast"}
{"question": "List the names of the top 5 oldest people.", "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5", "arabic": "قائمة أسماء أكبر خمسة أشخاص في العمر.", "db_id": "gymnast"}
{"question": "What are the names of the five oldest people?", "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5", "arabic": "ما هي أسماء أكبر خمسة أشخاص؟", "db_id": "gymnast"}
{"question": "What is the total point count of the youngest gymnast?", "query": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1", "arabic": "ما هو إجمالي نقاط أصغر جمباز؟", "db_id": "gymnast"}
{"question": "Return the total points of the gymnast with the lowest age.", "query": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1", "arabic": "ارجاع النقاط الإجمالية للجمباز ذو العمر الأدنى.", "db_id": "gymnast"}
{"question": "What is the average age of all gymnasts?", "query": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "arabic": "ما هو متوسط عمر جميع الجمبازين؟", "db_id": "gymnast"}
{"question": "Return the average age across all gymnasts.", "query": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "arabic": "ارجاع المتوسط ​​العمري عبر جميع الجمبازين.", "db_id": "gymnast"}
{"question": "What are the distinct hometowns of gymnasts with total points more than 57.5?", "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5", "arabic": "ما هي مدن الجمبازين المميزة الذين لديهم مجموع نقاط أكثر من 57.5؟", "db_id": "gymnast"}
{"question": "Give the different hometowns of gymnasts that have a total point score of above 57.5.", "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5", "arabic": "أعطِ مدن الجمبازين المختلفة الذين لديهم درجة إجمالية تزيد عن 57.5.", "db_id": "gymnast"}
{"question": "What are the hometowns of gymnasts and the corresponding number of gymnasts?", "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown", "arabic": "ما هي مدن الجمبازين وعدد الجمبازين المقابل لها؟", "db_id": "gymnast"}
{"question": "How many gymnasts are from each hometown?", "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown", "arabic": "كم عدد الجمبازين من كل مسقط رأس؟", "db_id": "gymnast"}
{"question": "What is the most common hometown of gymnasts?", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو الوطن الأم الأكثر شيوعًا بين الجمبازين؟", "db_id": "gymnast"}
{"question": "Return the hometown that is most common among gymnasts.", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ارجاع المسقط الرأسي الأكثر شيوعًا بين الجمبازين.", "db_id": "gymnast"}
{"question": "What are the hometowns that are shared by at least two gymnasts?", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2", "arabic": "ما هي المدن الأصلية التي يشترك فيها على الأقل جمبازينان؟", "db_id": "gymnast"}
{"question": "Give the hometowns from which two or more gymnasts are from.", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2", "arabic": "أعطِ المدن الأصلية التي يأتي منها جمبازان على الأقل.", "db_id": "gymnast"}
{"question": "List the names of gymnasts in ascending order by their heights.", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC", "arabic": "قائمة أسماء الجمبازين بترتيب تصاعدي حسب طولهم.", "db_id": "gymnast"}
{"question": "What are the names of gymnasts, ordered by their heights ascending?", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC", "arabic": "ما هي أسماء الجمبازين، مرتبة حسب ارتفاعها بترتيب تصاعدي؟", "db_id": "gymnast"}
{"question": "List the distinct hometowns that are not associated with any gymnast.", "query": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "arabic": "قائمة المدن الأصلية المميزة التي لا ترتبط بأي جمباز.", "db_id": "gymnast"}
{"question": "From which hometowns did no gymnasts come from?", "query": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "arabic": "من أي المدن الأصلية لم يأتِ أي جمباز؟", "db_id": "gymnast"}
{"question": "Show the hometowns shared by people older than 23 and younger than 20.", "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20", "arabic": "اظهر المدن الأصلية المشتركة بين الأشخاص الذين تزيد أعمارهم عن 23 وأقل من 20 عامًا.", "db_id": "gymnast"}
{"question": "From which hometowns did both people older than 23 and younger than 20 come from?", "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20", "arabic": "من أي مسقطات رأس جاء الأشخاص الذين تجاوزوا سن الـ 23 وكانوا أصغر من سن الـ 20؟", "db_id": "gymnast"}
{"question": "How many distinct hometowns did these people have?", "query": "SELECT count(DISTINCT Hometown) FROM people", "arabic": "كم عدد المسقطات الرئيسية المختلفة التي كانت لهؤلاء الأشخاص؟", "db_id": "gymnast"}
{"question": "Count the number of different hometowns of these people.", "query": "SELECT count(DISTINCT Hometown) FROM people", "arabic": "عد عدد المسقطات الرئيسية المختلفة لهؤلاء الأشخاص.", "db_id": "gymnast"}
{"question": "Show the ages of gymnasts in descending order of total points.", "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC", "arabic": "أظهر أعمار الجمبازين بترتيب تنازلي حسب النقاط الإجمالية.", "db_id": "gymnast"}
{"question": "What are the ages of the gymnasts, ordered descending by their total points?", "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC", "arabic": "ما هي أعمار الجمبازين، مرتبة تنازليًا حسب نقاطهم الإجمالية؟", "db_id": "gymnast"}
{"question": "Find the total savings balance of all accounts except the account with name ‘Brown’.", "query": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'", "arabic": "اعثر على الرصيد الإجمالي لجميع الحسابات باستثناء الحساب بالاسم 'براون'.", "db_id": "small_bank_1"}
{"question": "What is the total balance of savings accounts not belonging to someone with the name Brown?", "query": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'", "arabic": "ما هو الرصيد الإجمالي لحسابات التوفير التي لا تنتمي إلى شخص يحمل اسم براون؟", "db_id": "small_bank_1"}
{"question": "How many accounts are there in total?", "query": "SELECT count(*) FROM accounts", "arabic": "كم حسابا هناك بالمجموع؟", "db_id": "small_bank_1"}
{"question": "Count the number of accounts.", "query": "SELECT count(*) FROM accounts", "arabic": "عد عدد الحسابات.", "db_id": "small_bank_1"}
{"question": "What is the total checking balance in all accounts?", "query": "SELECT sum(balance) FROM checking", "arabic": "ما هو الرصيد الإجمالي لجميع الحسابات الجارية؟", "db_id": "small_bank_1"}
{"question": "Find the total balance across checking accounts.", "query": "SELECT sum(balance) FROM checking", "arabic": "اعثر على الرصيد الإجمالي عبر الحسابات الجارية.", "db_id": "small_bank_1"}
{"question": "Find the average checking balance.", "query": "SELECT avg(balance) FROM checking", "arabic": "اعثر على الرصيد الجاري المتوسط.", "db_id": "small_bank_1"}
{"question": "What is the average balance in checking accounts?", "query": "SELECT avg(balance) FROM checking", "arabic": "ما هو المتوسط ​​للرصيد في الحسابات الجارية؟", "db_id": "small_bank_1"}
{"question": "How many accounts have a savings balance above the average savings balance?", "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)", "arabic": "كم عدد الحسابات التي لديها رصيد توفير أعلى من المتوسط ​​لرصيد التوفير؟", "db_id": "small_bank_1"}
{"question": "Find the number of accounts with a savings balance that is higher than the average savings balance.", "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)", "arabic": "اعثر على عدد الحسابات التي تحتوي على رصيد توفير أعلى من المتوسط ​​لرصيد التوفير.", "db_id": "small_bank_1"}
{"question": "Find the name and id of accounts whose checking balance is below the maximum checking balance.", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)", "arabic": "ما هي الاسم والمعرف الخاص بالحسابات التي يكون رصيدها الجاري أقل من الحد الأقصى لرصيد الجري؟", "db_id": "small_bank_1"}
{"question": "What are the customer id and name corresponding to accounts with a checking balance less than the largest checking balance?", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)", "arabic": "ما هي معرف العميل والاسم المقابل للحسابات التي يكون رصيدها الجاري أقل من أكبر رصيد جري؟", "db_id": "small_bank_1"}
{"question": "What is the checking balance of the account whose owner’s name contains the substring ‘ee’?", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'", "arabic": "ما هو رصيد الفحص للحساب الذي يحتوي اسم مالكه على السلسلة الفرعية 'ee'؟", "db_id": "small_bank_1"}
{"question": "Find the balance of the checking account belonging to an owner whose name contains 'ee'.", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'", "arabic": "اعثر على رصيد الحساب الجاري الخاص بمالك يحتوي اسمه على السلسلة الفرعية 'ee'.", "db_id": "small_bank_1"}
{"question": "Find the checking balance and saving balance in the Brown’s account.", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "arabic": "ما هي رصيد الفحص ورصيد الادخار في حساب براون؟", "db_id": "small_bank_1"}
{"question": "What are the checking and savings balances in accounts belonging to Brown?", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "arabic": "ما هي أرصدة الفحص والادخار في الحسابات التي تنتمي إلى براون؟", "db_id": "small_bank_1"}
{"question": "Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)", "arabic": "اعثر على أسماء الحسابات التي يكون رصيدها الجاري أعلى من المتوسط ​​لرصيد الجري، ولكن رصيدها للادخار أقل من المتوسط ​​لرصيد التوفير.", "db_id": "small_bank_1"}
{"question": "What are the names of accounts with checking balances greater than the average checking balance and savings balances below the average savings balance?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)", "arabic": "ما هي أسماء الحسابات ذات الرصيد الجاري الأعلى من المتوسط ​​ورصيد الادخار أقل من المتوسط؟", "db_id": "small_bank_1"}
{"question": "Find the checking balance of the accounts whose savings balance is higher than the average savings balance.", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))", "arabic": "اعثر على رصيد الفحص للحسابات التي يكون رصيدها للادخار أعلى من المتوسط ​​لرصيد التوفير.", "db_id": "small_bank_1"}
{"question": "What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance?", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))", "arabic": "ما هي الأرصدة للحسابات الجارية التي تنتمي إلى أشخاص لديهم أرصدة للادخار أعلى من المتوسط ​​لرصيد التوفير؟", "db_id": "small_bank_1"}
{"question": "List all customers’ names in the alphabetical order.", "query": "SELECT name FROM accounts ORDER BY name", "arabic": "اكتب أسماء جميع العملاء بالترتيب الأبجدي.", "db_id": "small_bank_1"}
{"question": "What are the names of all the customers in alphabetical order?", "query": "SELECT name FROM accounts ORDER BY name", "arabic": "ما هي أسماء جميع العملاء مرتبة بالترتيب الأبجدي؟", "db_id": "small_bank_1"}
{"question": "Find the name of account that has the lowest total checking and saving balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1", "arabic": "اعثر على اسم الحساب الذي يحمل أدنى إجمالي لرصيد الفحص والادخار.", "db_id": "small_bank_1"}
{"question": "What is the name corresponding to the accoung with the lowest sum of checking and savings balances?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1", "arabic": "ما هو الاسم المقابل للحساب الذي يحمل أقل مجموع لأرصدة الفحص والادخار؟", "db_id": "small_bank_1"}
{"question": "Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance.", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)", "arabic": "اعثر على أسماء وإجمالي رصيد الفحص والادخار للحسابات التي يكون رصيدها للادخار أعلى من المتوسط ​​لرصيد التوفير.", "db_id": "small_bank_1"}
{"question": "What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance?", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)", "arabic": "ما هي الأسماء ومجموع أرصدة الفحص والادخار للحسابات التي تحمل أرصدة ادخار أعلى من المتوسط لرصيد التوفير؟", "db_id": "small_bank_1"}
{"question": "Find the name and checking balance of the account with the lowest savings balance.", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "arabic": "اعثر على الاسم ورصيد الفحص للحساب الذي يحمل أدنى رصيد للادخار.", "db_id": "small_bank_1"}
{"question": "What are the names and balances of checking accounts belonging to the customer with the lowest savings balance?", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "arabic": "ما هي الأسماء والأرصدة للحسابات الجارية التي تنتمي إلى العميل الذي يحمل أدنى رصيد للادخار؟", "db_id": "small_bank_1"}
{"question": "Find the number of checking accounts for each account name.", "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "arabic": "اعثر على عدد حسابات الفحص لكل اسم حساب.", "db_id": "small_bank_1"}
{"question": "What are the names of customers with accounts, and how many checking accounts do each of them have?", "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "arabic": "ما هي أسماء العملاء الذين لديهم حسابات، وكم عدد حسابات الفحص لكل منهم؟", "db_id": "small_bank_1"}
{"question": "Find the total saving balance for each account name.", "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "arabic": "اعثر على إجمالي رصيد الادخار لكل اسم حساب.", "db_id": "small_bank_1"}
{"question": "What are the names of customers with accounts, and what are the total savings balances for each?", "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "arabic": "ما هي أسماء العملاء الذين لديهم حسابات، وما هي إجماليات رصيد الادخار لكل منهم؟", "db_id": "small_bank_1"}
{"question": "Find the name of accounts whose checking balance is below the average checking balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)", "arabic": "اعثر على اسماء الحسابات التي يكون رصيدها الجاري أقل من المتوسط ​​لرصيد الجري.", "db_id": "small_bank_1"}
{"question": "What are the names of customers with checking balances lower than the average checking balance?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)", "arabic": "ما هي أسماء العملاء الذين لديهم أرصدة فحص أقل من المتوسط ​​لرصيد الجري؟", "db_id": "small_bank_1"}
{"question": "Find the saving balance of the account with the highest checking balance.", "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1", "arabic": "اعثر على رصيد الادخار للحساب الذي يحمل أعلى رصيد جري.", "db_id": "small_bank_1"}
{"question": "What is the savings balance of the account belonging to the customer with the highest checking balance?", "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1", "arabic": "ما هو رصيد الادخار للحساب الذي ينتمي إلى العميل الذي يحمل أعلى رصيد جري؟", "db_id": "small_bank_1"}
{"question": "Find the total checking and saving balance of all accounts sorted by the total balance in ascending order.", "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance", "arabic": "اعثر على إجمالي رصيد الفحص والادخار لجميع الحسابات مرتبة حسب الرصيد الكلي بترتيب تصاعدي.", "db_id": "small_bank_1"}
{"question": "What is the sum of checking and savings balances for all customers, ordered by the total balance?", "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance", "arabic": "ما هو مجموع رصيد الفحص والادخار لجميع العملاء، مرتبة حسب الرصيد الكلي؟", "db_id": "small_bank_1"}
{"question": "Find the name and checking balance of the account with the lowest saving balance.", "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "arabic": "اعثر على الاسم ورصيد الفحص للحساب الذي يحمل أدنى رصيد للادخار.", "db_id": "small_bank_1"}
{"question": "What is the name and checking balance of the account which has the lowest savings balance?", "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "arabic": "ما هو الاسم ورصيد الفحص للحساب الذي يحمل أدنى رصيد للادخار؟\r\n\r\n\r\n\r\n\r\n\r\n", "db_id": "small_bank_1"}
{"question": "Find the name, checking balance and saving balance of all accounts in the bank.", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid", "arabic": "ما هي الأسماء، ورصيد الفحص، ورصيد الادخار لجميع الحسابات في البنك؟", "db_id": "small_bank_1"}
{"question": "What are the names, checking balances, and savings balances for all customers?", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid", "arabic": "ما هي الأسماء، وأرصدة الفحص، وأرصدة الادخار لجميع العملاء؟", "db_id": "small_bank_1"}
{"question": "Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC", "arabic": "اعثر على الاسم، ورصيد الفحص، ورصيد الادخار لجميع الحسابات في البنك مرتبة حسب إجمالي رصيد الفحص والادخار بترتيب تنازلي.", "db_id": "small_bank_1"}
{"question": "What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC", "arabic": "ما هي الأسماء، وأرصدة الفحص، وأرصدة الادخار للعملاء، مرتبة حسب إجمالي رصيد الفحص والادخار بترتيب تنازلي؟", "db_id": "small_bank_1"}
{"question": "Find the name of accounts whose checking balance is higher than corresponding saving balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "arabic": "اعثر على الأسماء للحسابات التي يكون رصيدها الجاري أعلى من رصيد الادخار المقابل.", "db_id": "small_bank_1"}
{"question": "What are the names of customers with a higher checking balance than savings balance?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "arabic": "ما هي أسماء العملاء الذين لديهم رصيد فحص أعلى من رصيد الادخار المقابل؟", "db_id": "small_bank_1"}
{"question": "Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance.", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "arabic": "اعثر على الاسم وإجمالي رصيد الفحص والادخار للحسابات التي يكون رصيدها الادخار أقل من رصيد الفحص المقابل.", "db_id": "small_bank_1"}
{"question": "What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "arabic": "ما هي أسماء العملاء الذين لديهم رصيد ادخار أقل من رصيد الفحص المقابل، وما هو إجمالي رصيد الفحص والادخار لهم؟", "db_id": "small_bank_1"}
{"question": "Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3", "arabic": "اعثر على الاسم ورصيد الادخار لأعلى ثلاثة حسابات بأعلى رصيد ادخار، مرتبة بترتيب تنازلي حسب رصيد الادخار.", "db_id": "small_bank_1"}
{"question": "What are names and savings balances of the three accounts with the highest savings balances?", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3", "arabic": "ما هي أسماء وأرصدة الادخار لثلاثة حسابات بأعلى رصيد ادخار؟", "db_id": "small_bank_1"}
{"question": "How many main stream browsers whose market share is at least 5 exist?", "query": "SELECT count(*) FROM browser WHERE market_share  >=  5", "arabic": "كم متصفح رئيسي بحصة سوقية تبلغ ما لا يقل عن 5 موجود؟", "db_id": "browser_web"}
{"question": "List the name of browsers in descending order by market share.", "query": "SELECT name FROM browser ORDER BY market_share DESC", "arabic": "قم بتسجيل اسماء المتصفحات بترتيب تنازلي حسب حصة السوق.", "db_id": "browser_web"}
{"question": "List the ids, names and market shares of all browsers.", "query": "SELECT id ,  name ,  market_share FROM browser", "arabic": "قم بتسجيل الهويات، والأسماء، وحصص السوق لجميع المتصفحات.", "db_id": "browser_web"}
{"question": "What is the maximum, minimum and average market share of the listed browsers?", "query": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser", "arabic": "ما هو الحد الأقصى، والحد الأدنى، والمتوسط ​​لحصة السوق للمتصفحات المُدرجة؟", "db_id": "browser_web"}
{"question": "What is the id and market share of the browser Safari?", "query": "SELECT id ,  market_share FROM browser WHERE name  =  'Safari'", "arabic": "ما هو الهوية وحصة السوق للمتصفح سفاري؟", "db_id": "browser_web"}
{"question": "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?", "query": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'", "arabic": "ما هي الأسماء وأنظمة التشغيل لتسريعات عملاء الويب التي لا تعمل فقط مع اتصال من نوع 'Broadband'؟", "db_id": "browser_web"}
{"question": "What is the name of the browser that became compatible with the accelerator 'CProxy' after year 1998 ?", "query": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998", "arabic": "ما هو اسم المتصفح الذي أصبح متوافقًا مع التسريع 'CProxy' بعد عام 1998؟", "db_id": "browser_web"}
{"question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?", "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "arabic": "ما هي الهويات والأسماء لتسريعات الويب التي تتوافق مع متصفحين أو أكثر؟", "db_id": "browser_web"}
{"question": "What is the id and name of the browser that is compatible with the most web accelerators?", "query": "SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الهوية والاسم للمتصفح الذي يتوافق مع معظم تسريعات الويب؟", "db_id": "browser_web"}
{"question": "When did the web accelerator 'CACHEbox' and browser 'Internet Explorer' become compatible?", "query": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id WHERE T3.name  =  'CACHEbox' AND T2.name  =  'Internet Explorer'", "arabic": "متى أصبحت التسريع 'CACHEbox' والمتصفح 'Internet Explorer' متوافقة؟", "db_id": "browser_web"}
{"question": "How many different kinds of clients are supported by the web clients accelerators?", "query": "SELECT count(DISTINCT client) FROM web_client_accelerator", "arabic": "كم عدد أنواع العملاء المختلفة التي يدعمها تسريع عملاء الويب؟", "db_id": "browser_web"}
{"question": "How many accelerators are not compatible with the browsers listed ?", "query": "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );", "arabic": "كم عدد التسريعات التي لا تتوافق مع المتصفحات المدرجة؟", "db_id": "browser_web"}
{"question": "What distinct accelerator names are compatible with the browswers that have market share higher than 15?", "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;", "arabic": "ما هي أسماء تسريع الويب المميزة التي تتوافق مع المتصفحات التي تمتلك حصة سوقية أعلى من 15؟", "db_id": "browser_web"}
{"question": "List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.", "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'", "arabic": "قائمة بأسماء المتصفحات التي تتوافق مع كل من 'CACHEbox' و 'Fasterfox'.", "db_id": "browser_web"}
{"question": "Show the accelerator names and supporting operating systems that are not compatible with the browser named 'Opera'.", "query": "SELECT name ,  operating_system FROM web_client_accelerator EXCEPT SELECT T1.name ,  T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name  =  'Opera'", "arabic": "عرض أسماء تسريع الويب وأنظمة التشغيل المدعومة التي لا تتوافق مع متصفح يدعى 'Opera'.", "db_id": "browser_web"}
{"question": "Which accelerator name contains substring \"Opera\"?", "query": "SELECT name FROM web_client_accelerator WHERE name LIKE \"%Opera%\"", "arabic": "أي اسم لتسريع يحتوي على متسلسل \"Opera\"؟", "db_id": "browser_web"}
{"question": "Find the number of web accelerators used for each Operating system.", "query": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system", "arabic": "اعثر على عدد تسريعات الويب المستخدمة لكل نظام تشغيل.", "db_id": "browser_web"}
{"question": "give me names of all compatible browsers and accelerators in the descending order of compatible year", "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC", "arabic": "أعطني أسماء جميع المتصفحات وتسريعات الويب المتوافقة بترتيب تنازلي حسب سنة التوافق.", "db_id": "browser_web"}
{"question": "How many wrestlers are there?", "query": "SELECT count(*) FROM wrestler", "arabic": "كم عدد المصارعين؟", "db_id": "wrestler"}
{"question": "Count the number of wrestlers.", "query": "SELECT count(*) FROM wrestler", "arabic": "احسب عدد المصارعين.", "db_id": "wrestler"}
{"question": "List the names of wrestlers in descending order of days held.", "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC", "arabic": "ما هي أسماء المصارعين بترتيب تنازلي حسب الأيام التي تمت الاحتفاظ بها؟", "db_id": "wrestler"}
{"question": "What are the names of the wrestlers, ordered descending by days held?", "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC", "arabic": "ما هي أسماء المصارعين، مرتبة تنازليًا حسب الأيام التي تمت الاحتفاظ بها؟", "db_id": "wrestler"}
{"question": "What is the name of the wrestler with the fewest days held?", "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1", "arabic": "ما اسم المصارع الذي قضى أقل عدد من الأيام؟", "db_id": "wrestler"}
{"question": "Return the name of the wrestler who had the lowest number of days held.", "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1", "arabic": "أرجع اسم المصارع الذي كان لديه أقل عدد من الأيام التي تمت الاحتفاظ بها.", "db_id": "wrestler"}
{"question": "What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?", "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\"", "arabic": "ما هي الفترات المتميزة للمصارعين الذين ليسوا في \"Tokyo, Japan\"؟", "db_id": "wrestler"}
{"question": "Give the different reigns of wrestlers who are not located in Tokyo, Japan.", "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\"", "arabic": "أعط فترات مختلفة للمصارعين الذين ليسوا في Tokyo، Japan.", "db_id": "wrestler"}
{"question": "What are the names and location of the wrestlers?", "query": "SELECT Name ,  LOCATION FROM wrestler", "arabic": "ما هي أسماء المصارعين ومواقعهم؟", "db_id": "wrestler"}
{"question": "Give the names and locations of all wrestlers.", "query": "SELECT Name ,  LOCATION FROM wrestler", "arabic": "أعط أسماء ومواقع جميع المصارعين.", "db_id": "wrestler"}
{"question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?", "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"", "arabic": "ما هي حركات القضاء للمصارعين الذين ينتمون إلى \"Team Orton\"؟", "db_id": "wrestler"}
{"question": "Return the elimination movies of wrestlers on Team Orton.", "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"", "arabic": "ارجع أفلام القضاء للمصارعين في فريق Orton.", "db_id": "wrestler"}
{"question": "What are the names of wrestlers and the elimination moves?", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "arabic": "ما هي أسماء المصارعين وحركات القضاء؟", "db_id": "wrestler"}
{"question": "Give the names of wrestlers and their elimination moves.", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "arabic": "أعط أسماء المصارعين وحركات القضاء لهم.", "db_id": "wrestler"}
{"question": "List the names of wrestlers and the teams in elimination in descending order of days held.", "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC", "arabic": "اكتب أسماء المصارعين والفرق في التصفية بترتيب تنازلي حسب الأيام التي تمت الاحتفاظ بها.", "db_id": "wrestler"}
{"question": "What are the names of wrestlers and their teams in elimination, ordered descending by days held?", "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC", "arabic": "ما هي أسماء المصارعين وفرقهم في التصفية، مرتبة تنازليًا حسب الأيام التي تمت الاحتفاظ بها؟", "db_id": "wrestler"}
{"question": "List the time of elimination of the wrestlers with largest days held.", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1", "arabic": "قم بتسجيل وقت التصفية للمصارعين الذين يحملون أكبر عدد من الأيام التي تمت الاحتفاظ بها.", "db_id": "wrestler"}
{"question": "What is the time of elimination for the wrestler with the most days held?", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1", "arabic": "ما هو وقت الإقصاء للمصارع الذي يحمل أكبر عدد من الأيام؟", "db_id": "wrestler"}
{"question": "Show times of elimination of wrestlers with days held more than 50.", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50", "arabic": "أظهر أوقات الإقصاء للمصارعين الذين يحملون أكثر من 50 يومًا.", "db_id": "wrestler"}
{"question": "What are the times of elimination for wrestlers with over 50 days held?", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50", "arabic": "ما هي أوقات الإقصاء للمصارعين الذين يحملون أكثر من 50 يومًا؟", "db_id": "wrestler"}
{"question": "Show different teams in eliminations and the number of eliminations from each team.", "query": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team", "arabic": "أظهر الفرق المختلفة في التصفية وعدد الإقصاءات من كل فريق.", "db_id": "wrestler"}
{"question": "How many eliminations did each team have?", "query": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team", "arabic": "كم عدد الإقصاءات التي تعرض لها كل فريق؟", "db_id": "wrestler"}
{"question": "Show teams that have suffered more than three eliminations.", "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3", "arabic": "أظهر الفرق التي تعرضت لأكثر من ثلاثة إقصاءات.", "db_id": "wrestler"}
{"question": "Which teams had more than 3 eliminations?", "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3", "arabic": "أي الفرق تعرضت لأكثر من 3 إقصاءات؟", "db_id": "wrestler"}
{"question": "Show the reign and days held of wrestlers.", "query": "SELECT Reign ,  Days_held FROM wrestler", "arabic": "أظهر الفترة وعدد الأيام التي تمت الاحتفاظ بها للمصارعين.", "db_id": "wrestler"}
{"question": "What are the reigns and days held of all wrestlers?", "query": "SELECT Reign ,  Days_held FROM wrestler", "arabic": "ما هي الفترات وعدد الأيام التي تمت الاحتفاظ بها لجميع المصارعين؟", "db_id": "wrestler"}
{"question": "What are the names of wrestlers days held less than 100?", "query": "SELECT Name FROM wrestler WHERE Days_held  <  100", "arabic": "ما هي أسماء المصارعين الذين تمت الاحتفاظ بهم لأقل من 100 يوم؟", "db_id": "wrestler"}
{"question": "Return the names of wrestlers with fewer than 100 days held.", "query": "SELECT Name FROM wrestler WHERE Days_held  <  100", "arabic": "أرجع أسماء المصارعين الذين تمت الاحتفاظ بهم لأقل من 100 يوم.", "db_id": "wrestler"}
{"question": "Please show the most common reigns of wrestlers.", "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "يرجى إظهار الفترات الأكثر شيوعًا للمصارعين.", "db_id": "wrestler"}
{"question": "Which reign is the most common among wrestlers?", "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي فترة هي الأكثر شيوعًا بين المصارعين؟", "db_id": "wrestler"}
{"question": "List the locations that are shared by more than two wrestlers.", "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2", "arabic": "اكتب المواقع التي تتشارك فيها أكثر من مصارعينان.", "db_id": "wrestler"}
{"question": "Which locations are shared by more than two wrestlers?", "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2", "arabic": "ما هي المواقع التي تتشارك فيها أكثر من مصارعينان؟", "db_id": "wrestler"}
{"question": "List the names of wrestlers that have not been eliminated.", "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)", "arabic": "أذكر أسماء المصارعين الذين لم يتم إقصاؤهم.", "db_id": "wrestler"}
{"question": "What are the names of wrestlers who have never been eliminated?", "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)", "arabic": "ما هي أسماء المصارعين الذين لم يتم إقصاؤهم؟", "db_id": "wrestler"}
{"question": "Show the teams that have both wrestlers eliminated by \"Orton\" and wrestlers eliminated by \"Benjamin\".", "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\"", "arabic": "أظهر الفرق التي تمتلك كل من المصارعين الذين تم إقصاؤهم بواسطة \"أورتن\" والمصارعين الذين تم إقصاؤهم بواسطة \"بنجامين\".", "db_id": "wrestler"}
{"question": "What are the teams that have both wrestlers eliminated by Orton and wrestlers eliminated by Benjamin?", "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\"", "arabic": "ما هي الفرق التي تمتلك كل من المصارعين الذين تم إقصاؤهم بواسطة أورتن والمصارعين الذين تم إقصاؤهم بواسطة بنجامين؟", "db_id": "wrestler"}
{"question": "What is the number of distinct teams that suffer elimination?", "query": "SELECT COUNT (DISTINCT team) FROM elimination", "arabic": "ما هو عدد الفرق المتميزة التي تعاني من الإقصاء؟", "db_id": "wrestler"}
{"question": "How many different teams have had eliminated wrestlers?", "query": "SELECT COUNT (DISTINCT team) FROM elimination", "arabic": "كم عدد الفرق المختلفة التي شهدت إقصاء المصارعين؟", "db_id": "wrestler"}
{"question": "Show the times of elimination by \"Punk\" or \"Orton\".", "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"", "arabic": "أظهر أوقات الإقصاء بواسطة \"بانك\" أو \"أورتن\".", "db_id": "wrestler"}
{"question": "What are the times of elimination for any instances in which the elimination was done by Punk or Orton?", "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"", "arabic": "ما هي الأوقات التي تم فيها الإقصاء لأي حالة تمت بواسطة بانك أو أورتن؟", "db_id": "wrestler"}
{"question": "How many schools are there?", "query": "SELECT count(*) FROM school", "arabic": "كم عدد المدارس؟", "db_id": "school_finance"}
{"question": "Count the number of schools.", "query": "SELECT count(*) FROM school", "arabic": "عد عدد المدارس.", "db_id": "school_finance"}
{"question": "Show all school names in alphabetical order.", "query": "SELECT school_name FROM school ORDER BY school_name", "arabic": "أظهر جميع أسماء المدارس بالترتيب الأبجدي.", "db_id": "school_finance"}
{"question": "List the name, location, mascot for all schools.", "query": "SELECT school_name ,  LOCATION ,  mascot FROM school", "arabic": "أذكر الاسم، الموقع، والشعار لجميع المدارس.", "db_id": "school_finance"}
{"question": "What are the total and average enrollment of all schools?", "query": "SELECT sum(enrollment) ,  avg(enrollment) FROM school", "arabic": "ما هي إجمالي ومتوسط التسجيل في جميع المدارس؟", "db_id": "school_finance"}
{"question": "What are the mascots for schools with enrollments above the average?", "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)", "arabic": "ما هي الشعارات للمدارس التي يزيد تسجيلها عن المتوسط؟", "db_id": "school_finance"}
{"question": "List the name of the school with the smallest enrollment.", "query": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1", "arabic": "أذكر اسم المدرسة التي لديها أقل تسجيل.", "db_id": "school_finance"}
{"question": "Show the average, maximum, minimum enrollment of all schools.", "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school", "arabic": "أظهر المتوسط والحد الأقصى والحد الأدنى للتسجيل في جميع المدارس.", "db_id": "school_finance"}
{"question": "Show each county along with the number of schools and total enrollment in each county.", "query": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county", "arabic": "أظهر كل مقاطعة بجانب عدد المدارس والتسجيل الإجمالي في كل مقاطعة.", "db_id": "school_finance"}
{"question": "How many donors have endowment for school named \"Glenn\"?", "query": "SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"Glenn\"", "arabic": "كم عدد المتبرعين الذين لديهم تبرع للمدرسة بالاسم \"غلين\"؟", "db_id": "school_finance"}
{"question": "List each donator name and the amount of endowment in descending order of the amount of endowment.", "query": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC", "arabic": "أذكر اسم كل متبرع ومبلغ التبرع بترتيب تنازلي لمبلغ التبرع.", "db_id": "school_finance"}
{"question": "List the names of the schools without any endowment.", "query": "SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)", "arabic": "أذكر أسماء المدارس التي لا تمتلك أي تبرع.", "db_id": "school_finance"}
{"question": "List all the names of schools with an endowment amount smaller than or equal to 10.", "query": "SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10", "arabic": "أذكر جميع أسماء المدارس التي تمتلك مبلغ تبرع أقل من أو يساوي 10.", "db_id": "school_finance"}
{"question": "Show the names of donors who donated to both school \"Glenn\" and \"Triton.\"", "query": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Triton'", "arabic": "أظهر أسماء المتبرعين الذين تبرعوا إلى كل من مدرسة \"غلين\" و \"تريتون\".", "db_id": "school_finance"}
{"question": "Show the names of all the donors except those whose donation amount less than 9.", "query": "SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9", "arabic": "أظهر أسماء جميع المتبرعين باستثناء تلك التي قيمة تبرعها أقل من 9.", "db_id": "school_finance"}
{"question": "List the amount and donor name for the largest amount of donation.", "query": "SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1", "arabic": "أذكر المبلغ واسم المتبرع لأكبر مبلغ تبرع.", "db_id": "school_finance"}
{"question": "How many budgets are above 3000 in year 2001 or before?", "query": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001", "arabic": "كم هو عدد الميزانيات التي تزيد عن 3000 في عام 2001 أو قبل ذلك؟", "db_id": "school_finance"}
{"question": "Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000", "query": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001", "arabic": "عد عدد الميزانيات في عام 2001 أو قبل ذلك التي تزيد قيمة ميزانيتها عن 3000.", "db_id": "school_finance"}
{"question": "Show each school name, its budgeted amount, and invested amount in year 2002 or after.", "query": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002", "arabic": "أظهر اسم كل مدرسة، مبلغ الميزانية المخصص، والمبلغ المستثمر في عام 2002 أو بعده.", "db_id": "school_finance"}
{"question": "Show all donor names.", "query": "SELECT DISTINCT donator_name FROM endowment", "arabic": "أظهر جميع أسماء المتبرعين.", "db_id": "school_finance"}
{"question": "How many budget record has a budget amount smaller than the invested amount?", "query": "SELECT count(*) FROM budget WHERE budgeted  <  invested", "arabic": "كم عدد سجلات الميزانية التي تحتوي على مبلغ ميزانية أقل من المبلغ المستثمر؟", "db_id": "school_finance"}
{"question": "What is the total budget amount for school \"Glenn\" in all years?", "query": "SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn'", "arabic": "ما هو إجمالي مبلغ الميزانية للمدرسة \"غلين\" في جميع السنوات؟", "db_id": "school_finance"}
{"question": "Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10.", "query": "SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10", "arabic": "أظهر أسماء المدارس مع مبلغ ميزانية إجمالي أكبر من 100 أو تبرع إجمالي أكبر من 10.", "db_id": "school_finance"}
{"question": "Find the names of schools that have more than one donator with donation amount above 8.5.", "query": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1", "arabic": "ابحث عن أسماء المدارس التي لديها أكثر من متبرع واحد بمبلغ تبرع أعلى من 8.5.", "db_id": "school_finance"}
{"question": "Find the number of schools that have more than one donator whose donation amount is less than 8.5.", "query": "SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1)", "arabic": "ابحث عن عدد المدارس التي لديها أكثر من متبرع واحد ومبلغ تبرع أقل من 8.5.", "db_id": "school_finance"}
{"question": "List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget.", "query": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted", "arabic": "أذكر اسم المدرسة وفئة كرة القدم IHSAA والشعار للمدارس التي لديها أكثر من 6000 من الميزانية المخصصة أو تأسست قبل عام 2003، بترتيب نسبة الميزانية المستثمرة الإجمالية والميزانية المخصصة الإجمالية.", "db_id": "school_finance"}
{"question": "How many buildings are there?", "query": "SELECT count(*) FROM building", "arabic": "كم عدد المباني؟", "db_id": "protein_institute"}
{"question": "Show the name, street address, and number of floors for all buildings ordered by the number of floors.", "query": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors", "arabic": "أظهر الاسم وعنوان الشارع وعدد الطوابق لجميع المباني مرتبة حسب عدد الطوابق.", "db_id": "protein_institute"}
{"question": "What is the name of the tallest building?", "query": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1", "arabic": "ما هو اسم أطول مبنى؟", "db_id": "protein_institute"}
{"question": "What are the average, maximum, and minimum number of floors for all buildings?", "query": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building", "arabic": "ما هو المتوسط والحد الأقصى والحد الأدنى لعدد الطوابق لجميع المباني؟", "db_id": "protein_institute"}
{"question": "Show the number of buildings with a height above the average or a number of floors above the average.", "query": "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)", "arabic": "أظهر عدد المباني التي يزيد ارتفاعها عن المتوسط أو عدد الطوابق عن المتوسط.", "db_id": "protein_institute"}
{"question": "List the names of buildings with at least 200 feet of height and with at least 20 floors.", "query": "SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20", "arabic": "أذكر أسماء المباني التي يبلغ ارتفاعها 200 قدم على الأقل ولديها 20 طابقًا على الأقل.", "db_id": "protein_institute"}
{"question": "Show the names and locations of institutions that are founded after 1990 and have the type \"Private\".", "query": "SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private'", "arabic": "أظهر الأسماء والمواقع للمؤسسات التي تم تأسيسها بعد عام 1990 ولها نوع \"خاص\".", "db_id": "protein_institute"}
{"question": "Show institution types, along with the number of institutions and total enrollment for each type.", "query": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE", "arabic": "أظهر أنواع المؤسسات، جنبًا إلى جنب مع عدد المؤسسات والتسجيل الإجمالي لكل نوع.", "db_id": "protein_institute"}
{"question": "Show the institution type with the largest number of institutions.", "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر نوع المؤسسة الذي يحتوي على أكبر عدد من المؤسسات.", "db_id": "protein_institute"}
{"question": "Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment.", "query": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000", "arabic": "أظهر نوع المؤسسة مع مؤسسة تم تأسيسها بعد عام 1990 ومؤسسة تملك تسجيلًا بحد أدنى 1000.", "db_id": "protein_institute"}
{"question": "Show the name of buildings that do not have any institution.", "query": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)", "arabic": "أظهر اسم المباني التي ليس لديها أي مؤسسة.", "db_id": "protein_institute"}
{"question": "Show the names of buildings except for those having an institution founded in 2003.", "query": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003", "arabic": "أظهر أسماء المباني باستثناء تلك التي تحتوي على مؤسسة تأسست في عام 2003.", "db_id": "protein_institute"}
{"question": "For each building, show the name of the building and the number of institutions in it.", "query": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id", "arabic": "لكل مبنى، أظهر اسم المبنى وعدد المؤسسات فيه.", "db_id": "protein_institute"}
{"question": "Show the names and heights of buildings with at least two institutions founded after 1880.", "query": "SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2", "arabic": "أظهر أسماء المباني وارتفاعاتها لتلك التي تحتوي على مؤسستين على الأقل تأسستا بعد عام 1880.", "db_id": "protein_institute"}
{"question": "Show all the distinct institution types.", "query": "SELECT DISTINCT TYPE FROM institution", "arabic": "أظهر جميع أنواع المؤسسات المتميزة.", "db_id": "protein_institute"}
{"question": "Show institution names along with the number of proteins for each institution.", "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id", "arabic": "أظهر أسماء المؤسسات بالإضافة إلى عدد البروتينات لكل مؤسسة.", "db_id": "protein_institute"}
{"question": "How many proteins are associated with an institution founded after 1880 or an institution with type \"Private\"?", "query": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private'", "arabic": "كم عدد البروتينات المرتبطة بمؤسسة تم تأسيسها بعد عام 1880 أو مؤسسة من النوع \"خاص\"؟", "db_id": "protein_institute"}
{"question": "Show the protein name and the institution name.", "query": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id", "arabic": "أظهر اسم البروتين واسم المؤسسة.", "db_id": "protein_institute"}
{"question": "How many proteins are associated with an institution in a building with at least 20 floors?", "query": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20", "arabic": "كم عدد البروتينات المرتبطة بمؤسسة في مبنى يحتوي على ما لا يقل عن 20 طابقًا؟", "db_id": "protein_institute"}
{"question": "How many institutions do not have an associated protein in our record?", "query": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)", "arabic": "كم عدد المؤسسات التي لا تحتوي على بروتين مرتبط في سجلنا؟", "db_id": "protein_institute"}
{"question": "Show all the locations where no cinema has capacity over 800.", "query": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800", "arabic": "أظهر جميع المواقع التي لا تحتوي على سينما بسعة تزيد عن 800.", "db_id": "cinema"}
{"question": "Show all the locations where some cinemas were opened in both year 2010 and year 2011.", "query": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011", "arabic": "أظهر جميع المواقع التي تم فيها فتح بعض السينمات في كل من عام 2010 وعام 2011.", "db_id": "cinema"}
{"question": "How many cinema do we have?", "query": "SELECT count(*) FROM cinema", "arabic": "كم عدد السينمات التي لدينا؟", "db_id": "cinema"}
{"question": "Count the number of cinemas.", "query": "SELECT count(*) FROM cinema", "arabic": "عد عدد السينمات.", "db_id": "cinema"}
{"question": "Show name, opening year, and capacity for each cinema.", "query": "SELECT name ,  openning_year ,  capacity FROM cinema", "arabic": "أظهر الاسم، وسنة الافتتاح، والسعة لكل سينما.", "db_id": "cinema"}
{"question": "Show the cinema name and location for cinemas with capacity above average.", "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)", "arabic": "أظهر اسم السينما والموقع للسينمات ذات السعة فوق المتوسط.", "db_id": "cinema"}
{"question": "What are all the locations with a cinema?", "query": "SELECT DISTINCT LOCATION FROM cinema", "arabic": "ما هي جميع المواقع التي بها سينما؟", "db_id": "cinema"}
{"question": "Find the distinct locations that has a cinema.", "query": "SELECT DISTINCT LOCATION FROM cinema", "arabic": "ابحث عن المواقع المميزة التي بها سينما.", "db_id": "cinema"}
{"question": "Show all the cinema names and opening years in descending order of opening year.", "query": "SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC", "arabic": "أظهر جميع أسماء السينما وسنوات الافتتاح بترتيب تنازلي حسب سنة الافتتاح.", "db_id": "cinema"}
{"question": "What are the name and location of the cinema with the largest capacity?", "query": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1", "arabic": "ما هي اسم وموقع السينما ذات السعة الأكبر؟", "db_id": "cinema"}
{"question": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.", "query": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011", "arabic": "أظهر المتوسط والحد الأدنى والحد الأقصى للسعة لجميع السينمات التي تم فتحها في عام 2011 أو بعد ذلك.", "db_id": "cinema"}
{"question": "Show each location and the number of cinemas there.", "query": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION", "arabic": "أظهر كل موقع وعدد السينمات فيه.", "db_id": "cinema"}
{"question": "What is the location with the most cinemas opened in year 2010 or later?", "query": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الموقع الذي به أكبر عدد من السينمات التي تم فتحها في عام 2010 أو بعد ذلك؟", "db_id": "cinema"}
{"question": "Show all the locations with at least two cinemas with capacity above 300.", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2", "arabic": "أظهر جميع المواقع التي تحتوي على ما لا يقل عن سينماين بسعة تزيد عن 300.", "db_id": "cinema"}
{"question": "Which locations have 2 or more cinemas with capacity over 300?", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2", "arabic": "أي المواقع بها سينماين أو أكثر بسعة تزيد عن 300؟", "db_id": "cinema"}
{"question": "Show the title and director for all films.", "query": "SELECT title ,  directed_by FROM film", "arabic": "أظهر العنوان والمخرج لجميع الأفلام.", "db_id": "cinema"}
{"question": "What are the title and director of each film?", "query": "SELECT title ,  directed_by FROM film", "arabic": "ما هي العنوان والمخرج لكل فيلم؟", "db_id": "cinema"}
{"question": "Show all directors.", "query": "SELECT DISTINCT directed_by FROM film", "arabic": "أظهر جميع المخرجين.", "db_id": "cinema"}
{"question": "Who are all the directors?", "query": "SELECT DISTINCT directed_by FROM film", "arabic": "من هم جميع المخرجين؟", "db_id": "cinema"}
{"question": "List all directors along with the number of films directed by each director.", "query": "SELECT directed_by ,  count(*) FROM film GROUP BY directed_by", "arabic": "قائمة جميع المخرجين مع عدد الأفلام التي أخرجها كل مخرج.", "db_id": "cinema"}
{"question": "What is total number of show times per dat for each cinema?", "query": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id", "arabic": "ما هو إجمالي عدد مرات العرض في اليوم لكل سينما؟", "db_id": "cinema"}
{"question": "What are the title and maximum price of each film?", "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id", "arabic": "ما هي عنوان وأقصى سعر لكل فيلم؟", "db_id": "cinema"}
{"question": "Give me the title and highest price for each film.", "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id", "arabic": "أعطني العنوان وأعلى سعر لكل فيلم.", "db_id": "cinema"}
{"question": "Show cinema name, film title, date, and price for each record in schedule.", "query": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id", "arabic": "أظهر اسم السينما، وعنوان الفيلم، والتاريخ، والسعر لكل سجل في الجدول الزمني.", "db_id": "cinema"}
{"question": "What are the title and director of the films without any schedule?", "query": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)", "arabic": "ما هي عنوان والمخرج للأفلام التي ليس لها جدول زمني؟", "db_id": "cinema"}
{"question": "Show director with the largest number of show times in total.", "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1", "arabic": "أظهر المخرج الذي يمتلك أكبر عدد من مرات العرض بشكل إجمالي.", "db_id": "cinema"}
{"question": "Find the locations that have more than one movie theater with capacity above 300.", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1", "arabic": "ابحث عن المواقع التي تحتوي على أكثر من دار عرض واحدة بسعة تزيد عن 300.", "db_id": "cinema"}
{"question": "In which locations are there more than one movie theater with capacity above 300?", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1", "arabic": "في أي المواقع هناك أكثر من دار عرض واحدة بسعة تزيد عن 300؟", "db_id": "cinema"}
{"question": "How many films have the word 'Dummy' in their titles?", "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"", "arabic": "كم فيلم يحتوي على كلمة \"Dummy\" في عنوانه؟", "db_id": "cinema"}
{"question": "Count the number of films whose title contains the word 'Dummy'.", "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"", "arabic": "عدد الأفلام التي عنوانها يحتوي على كلمة \"Dummy\".", "db_id": "cinema"}
{"question": "Are the customers holding coupons with amount 500 bad or good?", "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500", "arabic": "هل الزبائن الذين يحملون كوبونات بمبلغ 500 سيئون أم جيدون؟", "db_id": "products_for_hire"}
{"question": "How many bookings did each customer make? List the customer id, first name, and the count.", "query": "SELECT T1.customer_id ,  T1.first_name ,  count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "arabic": "كم حجز قام كل زبون بعمله؟ قائمة بمعرف الزبون والاسم الأول والعدد.", "db_id": "products_for_hire"}
{"question": "What is the maximum total amount paid by a customer? List the customer id and amount.", "query": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1", "arabic": "ما هو أقصى مبلغ إجمالي دفعه زبون؟ قائمة بمعرف الزبون والمبلغ.", "db_id": "products_for_hire"}
{"question": "What are the id and the amount of refund of the booking that incurred the most times of payments?", "query": "SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي معرف ومبلغ المبالغة بالترتيب الأكبر؟ قائمة بمعرف الزبون والمبلغ.", "db_id": "products_for_hire"}
{"question": "What is the id of the product that is booked for 3 times?", "query": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3", "arabic": "ما هو معرف المنتج الذي تم حجزه لثلاث مرات؟", "db_id": "products_for_hire"}
{"question": "What is the product description of the product booked with an amount of 102.76?", "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76", "arabic": "ما هو وصف المنتج الذي تم حجزه بمبلغ 102.76؟", "db_id": "products_for_hire"}
{"question": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?", "query": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'", "arabic": "ما هي تاريخ البداية وتاريخ الانتهاء للحجز الذي قام بحجز المنتج المسمى 'Book collection A'؟", "db_id": "products_for_hire"}
{"question": "What are the names of products whose availability equals to 1?", "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1", "arabic": "ما هي أسماء المنتجات التي تساوي توافرها 1؟", "db_id": "products_for_hire"}
{"question": "How many different product types are there?", "query": "SELECT count(DISTINCT product_type_code) FROM products_for_hire", "arabic": "كم نوع مختلف من المنتجات موجود؟", "db_id": "products_for_hire"}
{"question": "What are the first name, last name, and gender of all the good customers? Order by their last name.", "query": "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name", "arabic": "ما هي الاسم الأول، والاسم الأخير، والجنس لجميع الزبائن الجيدين؟ ارتب حسب اسمهم الأخير.", "db_id": "products_for_hire"}
{"question": "What is the average amount due for all the payments?", "query": "SELECT avg(amount_due) FROM payments", "arabic": "ما هو المبلغ المتوسط المستحق لجميع المدفوعات؟", "db_id": "products_for_hire"}
{"question": "What are the maximum, minimum, and average booked count for the products booked?", "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked", "arabic": "ما هو العدد الأقصى، والعدد الأدنى، والمتوسط لعدد الحجوزات للمنتجات المحجوزة؟", "db_id": "products_for_hire"}
{"question": "What are all the distinct payment types?", "query": "SELECT DISTINCT payment_type_code FROM payments", "arabic": "ما هي جميع أنواع الدفع المميزة؟", "db_id": "products_for_hire"}
{"question": "What are the daily hire costs for the products with substring 'Book' in its name?", "query": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'", "arabic": "ما هي تكاليف التأجير اليومية للمنتجات التي تحتوي على السلسلة \"Book\" في اسمها؟", "db_id": "products_for_hire"}
{"question": "How many products are never booked with amount higher than 200?", "query": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )", "arabic": "كم عدد المنتجات التي لم يتم حجزها أبدًا بمبلغ أعلى من 200؟", "db_id": "products_for_hire"}
{"question": "What are the coupon amount of the coupons owned by both good and bad customers?", "query": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'", "arabic": "ما هو مبلغ الكوبون للكوبونات التي تمتلكها كل من الزبائن الجيدين والسيئين؟", "db_id": "products_for_hire"}
{"question": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'", "query": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'", "arabic": "ما هي تاريخ الدفع للدفعة التي تم دفع مبلغ أعلى من 300 أو نوع الدفع هو 'Check'؟", "db_id": "products_for_hire"}
{"question": "What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?", "query": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20", "arabic": "ما هي الأسماء والوصف للمنتجات التي هي من نوع 'Cutlery' ولديها تكلفة تأجير يومية أقل من 20؟", "db_id": "products_for_hire"}
{"question": "How many phones are there?", "query": "SELECT count(*) FROM phone", "arabic": "كم عدد الهواتف الموجودة؟", "db_id": "phone_market"}
{"question": "List the names of phones in ascending order of price.", "query": "SELECT Name FROM phone ORDER BY Price ASC", "arabic": "قائمة بأسماء الهواتف بترتيب تصاعدي للسعر.", "db_id": "phone_market"}
{"question": "What are the memories and carriers of phones?", "query": "SELECT Memory_in_G ,  Carrier FROM phone", "arabic": "ما هي الذاكرة وشركات الهواتف؟", "db_id": "phone_market"}
{"question": "List the distinct carriers of phones with memories bigger than 32.", "query": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32", "arabic": "ما هي الناقلات المميزة للهواتف ذات الذاكرة أكبر من 32؟", "db_id": "phone_market"}
{"question": "Show the names of phones with carrier either \"Sprint\" or \"TMobile\".", "query": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\"", "arabic": "أظهر أسماء الهواتف مع الناقل إما \"Sprint\" أو \"TMobile\".", "db_id": "phone_market"}
{"question": "What is the carrier of the most expensive phone?", "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1", "arabic": "ما هو الناقل لأغلى هاتف؟", "db_id": "phone_market"}
{"question": "Show different carriers of phones together with the number of phones with each carrier.", "query": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier", "arabic": "أظهر الناقلات المختلفة للهواتف جنبًا إلى جنب مع عدد الهواتف لكل ناقل.", "db_id": "phone_market"}
{"question": "Show the most frequently used carrier of the phones.", "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الناقل الأكثر استخدامًا للهواتف.", "db_id": "phone_market"}
{"question": "Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.", "query": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64", "arabic": "أظهر الناقلات التي تحتوي على هواتف بذاكرة أقل من 32 وهواتف بذاكرة أكبر من 64.", "db_id": "phone_market"}
{"question": "Show the names of phones and the districts of markets they are on.", "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID", "arabic": "أظهر أسماء الهواتف ومناطق الأسواق التي توجد بها.", "db_id": "phone_market"}
{"question": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.", "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking", "arabic": "أظهر أسماء الهواتف ومناطق الأسواق التي توجد بها، بترتيب تصاعدي لتصنيف السوق.", "db_id": "phone_market"}
{"question": "Show the names of phones that are on market with number of shops greater than 50.", "query": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50", "arabic": "أظهر أسماء الهواتف التي تتواجد في السوق مع عدد المتاجر أكبر من 50.", "db_id": "phone_market"}
{"question": "For each phone, show its names and total number of stocks.", "query": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name", "arabic": "لكل هاتف، أظهر أسمائه وإجمالي عدد الأسهم.", "db_id": "phone_market"}
{"question": "Show the names of phones that have total number of stocks bigger than 2000, in descending order of the total number of stocks.", "query": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC", "arabic": "أظهر أسماء الهواتف التي لديها إجمالي عدد الأسهم أكبر من 2000، بترتيب تنازلي لإجمالي عدد الأسهم.", "db_id": "phone_market"}
{"question": "List the names of phones that are not on any market.", "query": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)", "arabic": "قائمة أسماء الهواتف التي ليست في أي سوق.", "db_id": "phone_market"}
{"question": "How many gas companies are there?", "query": "SELECT count(*) FROM company", "arabic": "كم عدد شركات الغاز؟", "db_id": "gas_company"}
{"question": "What is the total number of companies?", "query": "SELECT count(*) FROM company", "arabic": "ما هو العدد الإجمالي للشركات؟", "db_id": "gas_company"}
{"question": "List the company name and rank for all companies in the decreasing order of their sales.", "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC", "arabic": "قائمة اسم الشركة والتصنيف لجميع الشركات بترتيب تنازلي حسب مبيعاتها.", "db_id": "gas_company"}
{"question": "What is the name and rank of every company ordered by descending number of sales?", "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC", "arabic": "ما هو اسم الشركة والترتيب لكل شركة مرتبة بترتيب تنازلي حسب عدد المبيعات؟", "db_id": "gas_company"}
{"question": "Show the company name and the main industry for all companies whose headquarters are not from USA.", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'", "arabic": "أظهر اسم الشركة والصناعة الرئيسية لجميع الشركات التي لا تتخذ مقرها في الولايات المتحدة.", "db_id": "gas_company"}
{"question": "What are the companies and main industries of all companies that are not headquartered in the United States?", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'", "arabic": "ما هي الشركات والصناعات الرئيسية لجميع الشركات التي لا تتخذ مقرها في الولايات المتحدة؟", "db_id": "gas_company"}
{"question": "Show all company names and headquarters in the descending order of market value.", "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC", "arabic": "أظهر جميع أسماء الشركات ومقراتها بترتيب تنازلي حسب قيمة السوق.", "db_id": "gas_company"}
{"question": "What are the names and headquarters of all companies ordered by descending market value?", "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC", "arabic": "ما هي أسماء ومقار جميع الشركات المرتبة حسب القيمة السوقية بترتيب تنازلي؟", "db_id": "gas_company"}
{"question": "Show minimum, maximum, and average market value for all companies.", "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company", "arabic": "ما هي القيمة السوقية الدنيا والقصوى والمتوسطة لجميع الشركات؟", "db_id": "gas_company"}
{"question": "What is the minimum, maximum, and average market value for every company?", "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company", "arabic": "ما هي القيمة السوقية الدنيا والقصوى والمتوسطة لكل شركة؟", "db_id": "gas_company"}
{"question": "Show all main industry for all companies.", "query": "SELECT DISTINCT main_industry FROM company", "arabic": "ما هي جميع الصناعات الرئيسية لجميع الشركات؟", "db_id": "gas_company"}
{"question": "What are the different main industries for all companies?", "query": "SELECT DISTINCT main_industry FROM company", "arabic": "ما هي الصناعات الرئيسية المختلفة لجميع الشركات؟", "db_id": "gas_company"}
{"question": "List all headquarters and the number of companies in each headquarter.", "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters", "arabic": "ما هي قائمة جميع المقرات الرئيسية وعدد الشركات في كل مقر؟", "db_id": "gas_company"}
{"question": "For each headquarter, what are the headquarter and how many companies are centered there?", "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters", "arabic": "لكل مقر، ما هو المقر وكم عدد الشركات المتمركزة هناك؟", "db_id": "gas_company"}
{"question": "Show all main industry and total market value in each industry.", "query": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry", "arabic": "ما هي جميع الصناعات الرئيسية والقيمة السوقية الإجمالية في كل صناعة؟", "db_id": "gas_company"}
{"question": "What are the main indstries and total market value for each industry?", "query": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry", "arabic": "ما هي الصناعات الرئيسية والقيمة السوقية الإجمالية لكل صناعة؟", "db_id": "gas_company"}
{"question": "List the main industry with highest total market value and its number of companies.", "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1", "arabic": "اذكر الصناعة الرئيسية ذات أعلى قيمة سوقية إجمالية وعدد الشركات فيها.", "db_id": "gas_company"}
{"question": "For each main industry, what is the total number of companies for the industry with the highest total market value?", "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1", "arabic": "لكل صناعة رئيسية، ما هو العدد الإجمالي للشركات للصناعة ذات أعلى قيمة سوقية إجمالية؟", "db_id": "gas_company"}
{"question": "Show headquarters with at least two companies in the banking industry.", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2", "arabic": "ما هي المقرات التي تحتوي على ما لا يقل عن شركتين في صناعة البنوك؟", "db_id": "gas_company"}
{"question": "What are the headquarters with at least two companies in the banking industry?", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2", "arabic": "ما هي المقار التي تحتوي على ما لا يقل عن شركتين في صناعة البنوك؟", "db_id": "gas_company"}
{"question": "Show gas station id, location, and manager_name for all gas stations ordered by open year.", "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year", "arabic": "ما هي معرفات محطات الوقود ومواقعها وأسماء المديرين لجميع محطات الوقود مرتبة حسب سنة الافتتاح؟", "db_id": "gas_company"}
{"question": "What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?", "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year", "arabic": "ما هي معرفات محطات الوقود، مواقعها، وأسماء المديرين لمحطات الوقود مرتبة حسب سنة الافتتاح؟", "db_id": "gas_company"}
{"question": "How many gas station are opened between 2000 and 2005?", "query": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005", "arabic": "كم عدد محطات الوقود التي تم فتحها بين عامي 2000 و 2005؟", "db_id": "gas_company"}
{"question": "What is the total number of gas stations that opened between 2000 and 2005?", "query": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005", "arabic": "ما هو العدد الإجمالي لمحطات الوقود التي تم فتحها بين عامي 2000 و 2005؟", "db_id": "gas_company"}
{"question": "Show all locations and the number of gas stations in each location ordered by the count.", "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)", "arabic": "ما هي جميع المواقع وعدد محطات الوقود في كل موقع مرتبة حسب العدد؟", "db_id": "gas_company"}
{"question": "For each location, how many gas stations are there in order?", "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)", "arabic": "لكل موقع، كم عدد محطات الوقود الموجودة بترتيب؟", "db_id": "gas_company"}
{"question": "Show all headquarters with both a company in banking industry and a company in Oil and gas.", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'", "arabic": "ما هي جميع المقرات التي تحتوي على شركة في صناعة البنوك وشركة في صناعة النفط والغاز؟", "db_id": "gas_company"}
{"question": "What are the headquarters that have both a company in the banking and 'oil and gas' industries?", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'", "arabic": "ما هي المقار التي تحتوي على شركة في صناعة البنوك و\"النفط والغاز\"؟", "db_id": "gas_company"}
{"question": "Show all headquarters without a company in banking industry.", "query": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'", "arabic": "ما هي جميع المقار التي لا تحتوي على شركة في صناعة البنوك؟", "db_id": "gas_company"}
{"question": "What are the headquarters without companies that are in the banking industry?", "query": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'", "arabic": "ما هي المقار التي ليس لديها شركات في صناعة البنوك؟", "db_id": "gas_company"}
{"question": "Show the company name with the number of gas station.", "query": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id", "arabic": "ما هو اسم الشركة مع عدد محطات الوقود؟", "db_id": "gas_company"}
{"question": "For each company id, what are the companies and how many gas stations does each one operate?", "query": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id", "arabic": "لكل معرف شركة، ما هي الشركات وكم عدد محطات الوقود التي تديرها كل منها؟", "db_id": "gas_company"}
{"question": "Show company name and main industry without a gas station.", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)", "arabic": "ما هي أسماء الشركات والصناعة الرئيسية بدون محطة وقود؟", "db_id": "gas_company"}
{"question": "What are the main industries of the companies without gas stations and what are the companies?", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)", "arabic": "ما هي الصناعات الرئيسية للشركات بدون محطات وقود وما هي تلك الشركات؟", "db_id": "gas_company"}
{"question": "Show the manager name for gas stations belonging to the ExxonMobil company.", "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'", "arabic": "ما هو اسم المدير لمحطات الوقود التابعة لشركة ExxonMobil؟", "db_id": "gas_company"}
{"question": "What are the names of the managers for gas stations that are operated by the ExxonMobil company?", "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'", "arabic": "ما هي أسماء المديرين لمحطات الوقود التي تديرها شركة ExxonMobil؟", "db_id": "gas_company"}
{"question": "Show all locations where a gas station for company with market value greater than 100 is located.", "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100", "arabic": "ما هي جميع المواقع التي توجد فيها محطة وقود لشركة لها قيمة سوقية أكبر من 100؟", "db_id": "gas_company"}
{"question": "What are the locations that have gas stations owned by a company with a market value greater than 100?", "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100", "arabic": "ما هي المواقع التي تحتوي على محطات وقود تمتلكها شركة لها قيمة سوقية أكبر من 100؟", "db_id": "gas_company"}
{"question": "Show the manager name with most number of gas stations opened after 2000.", "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم المدير لأكبر عدد من محطات الوقود المفتوحة بعد عام 2000؟", "db_id": "gas_company"}
{"question": "What is the name of the manager with the most gas stations that opened after 2000?", "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم المدير لأكبر عدد من محطات الوقود التي تم فتحها بعد عام 2000؟", "db_id": "gas_company"}
{"question": "order all gas station locations by the opening year.", "query": "SELECT LOCATION FROM gas_station ORDER BY open_year", "arabic": "مرتبة جميع مواقع محطات الوقود حسب سنة الافتتاح.", "db_id": "gas_company"}
{"question": "What are the locations of all the gas stations ordered by opening year?", "query": "SELECT LOCATION FROM gas_station ORDER BY open_year", "arabic": "ما هي مواقع جميع محطات الوقود مرتبة حسب سنة الافتتاح؟", "db_id": "gas_company"}
{"question": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.", "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion", "arabic": "ما هي الترتيبات وأسماء الشركات وقيم السوق للشركات في صناعة البنوك مرتبة حسب مبيعاتها وأرباحها بالمليار؟", "db_id": "gas_company"}
{"question": "What is the rank, company, and market value of every comapny in the banking industry ordered by sales and profits?", "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion", "arabic": "ما هي الترتيبات، وأسماء الشركات، وقيم السوق لكل شركة في صناعة البنوك مرتبة حسب المبيعات والأرباح؟", "db_id": "gas_company"}
{"question": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.", "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3", "arabic": "ما هي الموقع واسم الممثل لمحطات الوقود التابعة للشركات ذات أعلى 3 قيم للأصول؟", "db_id": "gas_company"}
{"question": "What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?", "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3", "arabic": "ما هي المواقع وأسماء الممثلين لمحطات الوقود التابعة للشركات ذات أكبر 3 مبالغ في الأصول؟", "db_id": "gas_company"}
{"question": "How many regions do we have?", "query": "SELECT count(*) FROM region", "arabic": "كم عدد المناطق لدينا؟", "db_id": "party_people"}
{"question": "Count the number of regions.", "query": "SELECT count(*) FROM region", "arabic": "عدد المناطق؟", "db_id": "party_people"}
{"question": "Show all distinct region names ordered by their labels.", "query": "SELECT DISTINCT region_name FROM region ORDER BY Label", "arabic": "أظهر جميع أسماء المناطق المميزة مرتبة حسب تسمياتها.", "db_id": "party_people"}
{"question": "What are the different region names, ordered by labels?", "query": "SELECT DISTINCT region_name FROM region ORDER BY Label", "arabic": "ما هي أسماء المناطق المختلفة، مرتبة حسب التسميات؟", "db_id": "party_people"}
{"question": "How many parties do we have?", "query": "SELECT count(DISTINCT party_name) FROM party", "arabic": "كم عدد الأطراف التي لدينا؟", "db_id": "party_people"}
{"question": "Count the number of different parties.", "query": "SELECT count(DISTINCT party_name) FROM party", "arabic": "عد عدد الأطراف المختلفة.", "db_id": "party_people"}
{"question": "Show the ministers and the time they took and left office, listed by the time they left office.", "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office", "arabic": "أظهر الوزراء والوقت الذي تولوا فيه المنصب وتركوا المنصب، مرتبة حسب الوقت الذي تركوا فيه المنصب.", "db_id": "party_people"}
{"question": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?", "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office", "arabic": "من هم الوزراء، ومتى تولوا المنصب، ومتى تركوا المنصب، مرتبة حسب الوقت الذي تركوا فيه المنصب؟", "db_id": "party_people"}
{"question": "Show the minister who took office after 1961 or before 1959.", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "arabic": "أظهر الوزير الذي تولى المنصب بعد عام 1961 أو قبل عام 1959.", "db_id": "party_people"}
{"question": "Who are the ministers who took office after 1961 or before 1959?", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "arabic": "من هم الوزراء الذين تولوا المنصب بعد عام 1961 أو قبل عام 1959؟", "db_id": "party_people"}
{"question": "Show all ministers who do not belong to Progress Party.", "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'", "arabic": "أظهر جميع الوزراء الذين لا ينتمون إلى حزب التقدم.", "db_id": "party_people"}
{"question": "Which ministers are not a part of the Progress Party?", "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'", "arabic": "أي الوزراء ليسوا جزءًا من حزب التقدم؟", "db_id": "party_people"}
{"question": "Show all ministers and parties they belong to in descending order of the time they took office.", "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC", "arabic": "أظهر جميع الوزراء والأحزاب التي ينتمون إليها بترتيب تنازلي حسب الوقت الذي تولوا فيه المنصب.", "db_id": "party_people"}
{"question": "Who are the ministers and what parties do they belong to, listed descending by the times they took office?", "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC", "arabic": "من هم الوزراء وما هي الأحزاب التي ينتمون إليها، مرتبة تنازليًا حسب الأوقات التي تولوا فيها المنصب؟", "db_id": "party_people"}
{"question": "Return the minister who left office at the latest time.", "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1", "arabic": "من هو الوزير الذي غادر المنصب في أحدث وقت؟", "db_id": "party_people"}
{"question": "Which minister left office the latest?", "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1", "arabic": "أي وزير غادر المنصب في أحدث وقت؟", "db_id": "party_people"}
{"question": "List member names and their party names.", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "arabic": "أذكر أسماء الأعضاء وأسماء الأحزاب الخاصة بهم.", "db_id": "party_people"}
{"question": "What are the names of members and their corresponding parties?", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "arabic": "ما هي أسماء الأعضاء وأحزابهم المقابلة؟", "db_id": "party_people"}
{"question": "Show all party names and the number of members in each party.", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "arabic": "ما هي أسماء الأحزاب وعدد الأعضاء في كل حزب؟", "db_id": "party_people"}
{"question": "How many members are in each party?", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "arabic": "كم عدد الأعضاء في كل حزب؟", "db_id": "party_people"}
{"question": "What is the name of party with most number of members?", "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم الحزب الذي يمتلك أكبر عدد من الأعضاء؟", "db_id": "party_people"}
{"question": "Return the name of the party with the most members.", "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم الحزب الذي يمتلك أكبر عدد من الأعضاء؟", "db_id": "party_people"}
{"question": "Show all party names and their region names.", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "arabic": "ما هي أسماء جميع الأحزاب وأسماء مناطقها؟", "db_id": "party_people"}
{"question": "What are the names of parties and their respective regions?", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "arabic": "ما هي أسماء الأحزاب ومناطقها المتناظرة؟", "db_id": "party_people"}
{"question": "Show names of parties that does not have any members.", "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)", "arabic": "ما هي أسماء الأحزاب التي لا تمتلك أي أعضاء؟", "db_id": "party_people"}
{"question": "What are the names of parties that have no members?", "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)", "arabic": "ما هي أسماء الأحزاب التي ليس لديها أي أعضاء؟", "db_id": "party_people"}
{"question": "Show the member names which are in both the party with id 3 and the party with id 1.", "query": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1", "arabic": "أظهر أسماء الأعضاء الذين هم في الحزب رقم 3 والحزب رقم 1.", "db_id": "party_people"}
{"question": "Which member names are shared among members in the party with the id 3 and the party with the id 1?", "query": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1", "arabic": "أي أسماء أعضاء مشتركة بين أعضاء الحزب ذو الرقم 3 والحزب ذو الرقم 1؟", "db_id": "party_people"}
{"question": "Show member names that are not in the Progress Party.", "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\"", "arabic": "أظهر أسماء الأعضاء الذين ليسوا في حزب التقدم.", "db_id": "party_people"}
{"question": "Which member names corresponding to members who are not in the Progress Party?", "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\"", "arabic": "أي اسماء للأعضاء يتوافق مع الأعضاء الذين ليسوا في حزب التقدم؟", "db_id": "party_people"}
{"question": "How many party events do we have?", "query": "SELECT count(*) FROM party_events", "arabic": "كم حدث حزب لدينا؟", "db_id": "party_people"}
{"question": "Count the number of party events.", "query": "SELECT count(*) FROM party_events", "arabic": "عدد حدث الحزب؟", "db_id": "party_people"}
{"question": "Show party names and the number of events for each party.", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "arabic": "أظهر أسماء الأحزاب وعدد الفعاليات لكل حزب؟", "db_id": "party_people"}
{"question": "How many events are there for each party?", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "arabic": "كم عدد الفعاليات لكل حزب؟", "db_id": "party_people"}
{"question": "Show all member names who are not in charge of any event.", "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id", "arabic": "ما هي أسماء جميع الأعضاء الذين ليسوا مسؤولين عن أي حدث؟", "db_id": "party_people"}
{"question": "What are the names of members who are not in charge of any events?", "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id", "arabic": "ما هي أسماء الأعضاء الذين ليسوا مسؤولين عن أي حدث؟", "db_id": "party_people"}
{"question": "What are the names of parties with at least 2 events?", "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2", "arabic": "ما هي أسماء الأحزاب التي لديها على الأقل حدثين؟", "db_id": "party_people"}
{"question": "Return the names of parties that have two or more events.", "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2", "arabic": "ما هي أسماء الأحزاب التي لديها حدثان أو أكثر؟", "db_id": "party_people"}
{"question": "What is the name of member in charge of greatest number of events?", "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العضو المسؤول عن أكبر عدد من الفعاليات؟", "db_id": "party_people"}
{"question": "Return the name of the member who is in charge of the most events.", "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العضو الذي يتولى أكبر عدد من الفعاليات؟", "db_id": "party_people"}
{"question": "How many Annual Meeting events happened in the United Kingdom region?", "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"", "arabic": "كم عدد فعاليات الاجتماع السنوي التي حدثت في منطقة المملكة المتحدة؟", "db_id": "party_people"}
{"question": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.", "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"", "arabic": "ما عدد فعاليات الاجتماع السنوي التي وقعت في منطقة المملكة المتحدة؟", "db_id": "party_people"}
{"question": "How many pilots are there?", "query": "SELECT count(*) FROM pilot", "arabic": "كم عدد الطيارين؟", "db_id": "pilot_record"}
{"question": "List the names of pilots in ascending order of rank.", "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC", "arabic": "ما هي أسماء الطيارين بترتيب تصاعدي حسب الرتبة؟", "db_id": "pilot_record"}
{"question": "What are the positions and teams of pilots?", "query": "SELECT POSITION ,  Team FROM pilot", "arabic": "ما هي المناصب والفرق التابعة للطيارين؟", "db_id": "pilot_record"}
{"question": "List the distinct positions of pilots older than 30.", "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30", "arabic": "ما هي المناصب المميزة للطيارين الذين تجاوزوا سن الثلاثين؟", "db_id": "pilot_record"}
{"question": "Show the names of pilots from team \"Bradley\" or \"Fordham\".", "query": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"", "arabic": "أظهر أسماء الطيارين من فريق \"برادلي\" أو \"فوردهام\".", "db_id": "pilot_record"}
{"question": "What is the joined year of the pilot of the highest rank?", "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1", "arabic": "ما هو عام التحاق الطيار ذو أعلى رتبة؟", "db_id": "pilot_record"}
{"question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "query": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality", "arabic": "ما هي الجنسيات المختلفة للطيارين؟ أظهر كل جنسية وعدد الطيارين من كل جنسية.", "db_id": "pilot_record"}
{"question": "Show the most common nationality of pilots.", "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الجنسية الأكثر شيوعًا بين الطيارين.", "db_id": "pilot_record"}
{"question": "Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.", "query": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005", "arabic": "أظهر مناصب الطيارين الذين انضموا جميعهم بعد عام 2005 والذين انضموا جميعهم قبل عام 2000.", "db_id": "pilot_record"}
{"question": "Show the names of pilots and models of aircrafts they have flied with.", "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID", "arabic": "أظهر أسماء الطيارين ونماذج الطائرات التي قاموا بالطيران بها.", "db_id": "pilot_record"}
{"question": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.", "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank", "arabic": "أظهر أسماء الطيارين وسلسلة الأسطول للطائرات التي قاموا بالطيران بها بترتيب تصاعدي حسب رتبة الطيار.", "db_id": "pilot_record"}
{"question": "Show the fleet series of the aircrafts flied by pilots younger than 34", "query": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34", "arabic": "أظهر سلسلة الأسطول للطائرات التي قام بها الطيارون الذين أصغر من 34 عامًا.", "db_id": "pilot_record"}
{"question": "Show the names of pilots and the number of records they have.", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name", "arabic": "أظهر أسماء الطيارين وعدد السجلات التي لديهم.", "db_id": "pilot_record"}
{"question": "Show names of pilots that have more than one record.", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1", "arabic": "أظهر أسماء الطيارين الذين لديهم أكثر من سجل واحد.", "db_id": "pilot_record"}
{"question": "List the names of pilots that do not have any record.", "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)", "arabic": "اذكر أسماء الطيارين الذين ليس لديهم أي سجل.", "db_id": "pilot_record"}
{"question": "What document status codes do we have?", "query": "SELECT document_status_code FROM Ref_Document_Status;", "arabic": "ما هي أكواد حالة المستندات التي لدينا؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the description of document status code 'working'?", "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";", "arabic": "ما هو وصف كود حالة المستند 'working'؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What document type codes do we have?", "query": "SELECT document_type_code FROM Ref_Document_Types;", "arabic": "ما هي أكواد أنواع المستندات التي لدينا؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the description of document type 'Paper'?", "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";", "arabic": "ما هو الوصف لنوع المستند 'Paper'؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What are the shipping agent names?", "query": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;", "arabic": "ما هي أسماء وكلاء الشحن؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the shipping agent code of shipping agent UPS?", "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"UPS\";", "arabic": "ما هو رمز وكيل الشحن لوكالة الشحن UPS؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What are all role codes?", "query": "SELECT role_code FROM ROLES;", "arabic": "ما هي جميع أكواد الدور؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the description of role code ED?", "query": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";", "arabic": "ما هو الوصف لرمز الدور ED؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "How many employees do we have?", "query": "SELECT count(*) FROM Employees;", "arabic": "كم عدد الموظفين لدينا؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the role of the employee named Koby?", "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\";", "arabic": "ما هو دور الموظف المسمى \"كوبي\"؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "List all document ids and receipt dates of documents.", "query": "SELECT document_id ,  receipt_date FROM Documents;", "arabic": "اذكر جميع معرّفات المستندات وتواريخ الاستلام الخاصة بها.", "db_id": "cre_Doc_Control_Systems"}
{"question": "How many employees does each role have? List role description, id and number of employees.", "query": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;", "arabic": "كم عدد الموظفين في كل دور؟ اذكر وصف الدور، ومعرّفه، وعدد الموظفين.", "db_id": "cre_Doc_Control_Systems"}
{"question": "List roles that have more than one employee. List the role description and number of employees.", "query": "SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;", "arabic": "اذكر الأدوار التي لديها أكثر من موظف واحد. اذكر وصف الدور وعدد الموظفين.", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the document status description of the document with id 1?", "query": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;", "arabic": "ما هو وصف حالة المستند ذو الهوية 1؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "How many documents have the status code done?", "query": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";", "arabic": "كم عدد المستندات التي لديها رمز الحالة 'done'؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "List the document type code for the document with the id 2.", "query": "SELECT document_type_code FROM Documents WHERE document_id = 2;", "arabic": "اذكر رمز نوع المستند للمستند ذو الهوية 2.", "db_id": "cre_Doc_Control_Systems"}
{"question": "List the document ids for any documents with the status code done and the type code paper.", "query": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\";", "arabic": "اذكر معرّفات المستندات لأي مستندات لديها رمز الحالة \"done\" ورمز النوع \"paper\".", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the name of the shipping agent of the document with id 2?", "query": "SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;", "arabic": "ما هو اسم وكيل الشحن للمستند ذو الهوية 2؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "How many documents were shipped by USPS?", "query": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";", "arabic": "كم عدد المستندات التي تم شحنها عن طريق USPS؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.", "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;", "arabic": "أي وكيل شحن قام بشحن أكبر عدد من المستندات؟ اذكر اسم وكيل الشحن وعدد المستندات.", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the receipt date of the document with id 3?", "query": "SELECT receipt_date FROM Documents WHERE document_id = 3;", "arabic": "ما هو تاريخ الاستلام للمستند ذو الهوية 3؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What address was the document with id 4 mailed to?", "query": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;", "arabic": "إلى أي عنوان تم إرسال المستند ذو الهوية 4؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is the mail date of the document with id 7?", "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;", "arabic": "ما هو تاريخ البريد للمستند ذو الهوية 7؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS.", "query": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";", "arabic": "اذكر معرّفات المستندات التي لديها حالة 'done' ونوع 'Paper'، والتي لم تتم شحنها عن طريق وكيل الشحن المسمى USPS.", "db_id": "cre_Doc_Control_Systems"}
{"question": "List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS.", "query": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";", "arabic": "اذكر معرّف المستند الذي حالته 'done' ونوعه 'Paper' وتم شحنه بواسطة وكيل الشحن المسمى USPS.", "db_id": "cre_Doc_Control_Systems"}
{"question": "What is draft detail of the document with id 7?", "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;", "arabic": "ما هي تفاصيل المسودة للمستند ذو الهوية 7؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "How many draft copies does the document with id 2 have?", "query": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;", "arabic": "كم نسخة مسودة للمستند ذو الهوية 2؟", "db_id": "cre_Doc_Control_Systems"}
{"question": "Which document has the most draft copies? List its document id and number of draft copies.", "query": "SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;", "arabic": "أي مستند لديه أكبر عدد من نسخ المسودة؟ اذكر هويته وعدد نسخ المسودة.", "db_id": "cre_Doc_Control_Systems"}
{"question": "Which documents have more than 1 draft copies? List document id and number of draft copies.", "query": "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;", "arabic": "أي المستندات لديها أكثر من نسخة مسودة؟ اذكر هويت المستند وعدد نسخ المسودة.", "db_id": "cre_Doc_Control_Systems"}
{"question": "List all employees in the circulation history of the document with id 1. List the employee's name.", "query": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;", "arabic": "اذكر جميع الموظفين في سجل التداول للمستند ذو الهوية 1. اذكر اسم الموظف.", "db_id": "cre_Doc_Control_Systems"}
{"question": "List the employees who have not showed up in any circulation history of documents. List the employee's name.", "query": "SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id", "arabic": "اذكر الموظفين الذين لم يظهروا في أي سجل تداول للمستندات. اذكر اسم الموظف.", "db_id": "cre_Doc_Control_Systems"}
{"question": "Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies.", "query": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;", "arabic": "أي موظف ظهر في معظم سجلات تداول المستندات؟ اذكر اسم الموظف وعدد المسودات والنسخ.", "db_id": "cre_Doc_Control_Systems"}
{"question": "For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees.", "query": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;", "arabic": "لكل مستند، اذكر عدد الموظفين الذين ظهروا في سجل تداول ذلك المستند. اذكر معرفات المستندات وعدد الموظفين.", "db_id": "cre_Doc_Control_Systems"}
{"question": "List all department names ordered by their starting date.", "query": "SELECT dname FROM department ORDER BY mgr_start_date", "arabic": "استعرض جميع أسماء الأقسام مرتبة حسب تاريخ بدء التشغيل.", "db_id": "company_1"}
{"question": "find all dependent names who have a spouse relation with some employee.", "query": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'", "arabic": "ابحث عن جميع أسماء المعالين الذين لديهم علاقة بالزوج مع بعض الموظفين.", "db_id": "company_1"}
{"question": "how many female dependents are there?", "query": "SELECT count(*) FROM dependent WHERE sex  =  'F'", "arabic": "كم عدد المعالين الإناث؟", "db_id": "company_1"}
{"question": "Find the names of departments that are located in Houston.", "query": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'", "arabic": "ما هي أسماء الأقسام الموجودة في هيوستن؟", "db_id": "company_1"}
{"question": "Return the first names and last names of employees who earn more than 30000 in salary.", "query": "SELECT fname ,  lname FROM employee WHERE salary  >  30000", "arabic": "ما هي أسماء العائلة والأسماء الشخصية للموظفين الذين يكسبون أكثر من 30000 في الراتب؟", "db_id": "company_1"}
{"question": "Find the number of employees of each gender whose salary is lower than 50000.", "query": "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex", "arabic": "ما هو عدد الموظفين من كل جنس رواتبهم أقل من 50000؟", "db_id": "company_1"}
{"question": "list the first and last names, and the addresses of all employees in the ascending order of their birth date.", "query": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate", "arabic": "ما هي أسماء الأولاد والأخيرة، وعناوين جميع الموظفين بترتيب تصاعدي لتاريخ ميلادهم؟", "db_id": "company_1"}
{"question": "what are the event details of the services that have the type code 'Marriage'?", "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage'", "arabic": "ما هي تفاصيل الحدث للخدمات التي تحمل رمز النوع 'الزواج'؟", "db_id": "local_govt_in_alabama"}
{"question": "What are the ids and details of events that have more than one participants?", "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1", "arabic": "ما هي الهويات والتفاصيل للأحداث التي يشارك فيها أكثر من شخص واحد؟", "db_id": "local_govt_in_alabama"}
{"question": "How many events have each participants attended? List the participant id, type and the number.", "query": "SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID", "arabic": "كم عدد الأحداث التي حضرها كل مشارك؟ قائمة هويات المشاركين، النوع، والعدد.", "db_id": "local_govt_in_alabama"}
{"question": "What are all the the participant ids, type code and details?", "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants", "arabic": "ما هي جميع هويات المشاركين، رمز النوع، والتفاصيل؟", "db_id": "local_govt_in_alabama"}
{"question": "How many participants belong to the type 'Organizer'?", "query": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'", "arabic": "كم عدد المشاركين الذين ينتمون إلى النوع 'المنظم'؟", "db_id": "local_govt_in_alabama"}
{"question": "List the type of the services in alphabetical order.", "query": "SELECT service_type_code FROM services ORDER BY service_type_code", "arabic": "ما هو نوع الخدمات بالترتيب الأبجدي؟", "db_id": "local_govt_in_alabama"}
{"question": "List the service id and details for the events.", "query": "SELECT service_id ,  event_details FROM EVENTS", "arabic": "ما هو رقم الخدمة وتفاصيل الأحداث؟", "db_id": "local_govt_in_alabama"}
{"question": "How many events had participants whose details had the substring 'Dr.'", "query": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'", "arabic": "كم عدد الأحداث التي شارك فيها المشاركون الذين كانت تفاصيلهم يحتوون على الجزء الفرعي 'د.؟", "db_id": "local_govt_in_alabama"}
{"question": "What is the most common participant type?", "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو النوع الأكثر شيوعًا بين المشاركين؟", "db_id": "local_govt_in_alabama"}
{"question": "Which service id and type has the least number of participants?", "query": "SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو رقم الخدمة ونوعه الذي يحتوي على أقل عدد من المشاركين؟", "db_id": "local_govt_in_alabama"}
{"question": "What is the id of the event with the most participants?", "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو رقم الخدمة للحدث الذي يحتوي على أكبر عدد من المشاركين؟", "db_id": "local_govt_in_alabama"}
{"question": "Which events id does not have any participant with detail 'Kenyatta Kuhn'?", "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'", "arabic": "أي رقم الخدمة لا يحتوي على أي مشارك بتفاصيل \"كينياتا كون\".", "db_id": "local_govt_in_alabama"}
{"question": "Which services type had both successful and failure event details?", "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Fail'", "arabic": "أي نوع من الخدمات كان لديه كلاً من تفاصيل الحدث الناجحة والفاشلة؟", "db_id": "local_govt_in_alabama"}
{"question": "How many events did not have any participants?", "query": "SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events)", "arabic": "كم عدد الأحداث التي لم تمتلك أي مشاركين؟", "db_id": "local_govt_in_alabama"}
{"question": "What are all the distinct participant ids who attended any events?", "query": "SELECT count(DISTINCT participant_id) FROM participants_in_Events", "arabic": "ما هي جميع معرفات المشاركين المميزة الذين حضروا أي من الأحداث؟", "db_id": "local_govt_in_alabama"}
{"question": "What is the name of the race held most recently?", "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1", "arabic": "ما هو اسم السباق الذي عُقِدَ مؤخرًا بشكل أكبر؟", "db_id": "formula_1"}
{"question": "What is the name of the race that occurred most recently?", "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1", "arabic": "ما هو اسم السباق الذي وقع مؤخرًا بشكل أكبر؟", "db_id": "formula_1"}
{"question": "What is the name and date of the most recent race?", "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1", "arabic": "ما هو اسم وتاريخ آخر سباق؟", "db_id": "formula_1"}
{"question": "What is the name and date of the race that occurred most recently?", "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1", "arabic": "ما هو اسم وتاريخ السباق الذي حدث مؤخرًا بشكل أكبر؟", "db_id": "formula_1"}
{"question": "Find the names of all races held in 2017.", "query": "SELECT name FROM races WHERE YEAR = 2017", "arabic": "ما هي أسماء جميع السباقات التي أُقيمت في عام 2017؟", "db_id": "formula_1"}
{"question": "What are the names of all the races that occurred in the year 2017?", "query": "SELECT name FROM races WHERE YEAR = 2017", "arabic": "ما هي أسماء جميع السباقات التي حدثت في العام 2017؟", "db_id": "formula_1"}
{"question": "Find the distinct names of all races held between 2014 and 2017?", "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017", "arabic": "ما هي أسماء جميع السباقات المختلفة التي جرت بين عامي 2014 و 2017؟", "db_id": "formula_1"}
{"question": "What are the unique names of all race held between 2014 and 2017?", "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017", "arabic": "ما هي الأسماء الفريدة لجميع السباقات التي جرت بين عامي 2014 و 2017؟", "db_id": "formula_1"}
{"question": "List the forename and surname of all distinct drivers who once had laptime less than 93000 milliseconds?", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "arabic": "ما هي أسماء العائلة والأسماء الأولى لجميع السائقين المميزين الذين كان لديهم وقت لفة أقل من 93000 ميللي ثانية؟", "db_id": "formula_1"}
{"question": "What are the forenames and surnames of all unique drivers who had a lap time of less than 93000 milliseconds?", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "arabic": "ما هي الأسماء الأولية وأسماء العائلة لجميع السائقين المميزين الذين كان لديهم وقت لفة أقل من 93000 ميللي ثانية؟", "db_id": "formula_1"}
{"question": "Find all the distinct id and nationality of drivers who have had laptime more than 100000 milliseconds?", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000", "arabic": "ما هي جميع الهويات المميزة والجنسيات للسائقين الذين كان لديهم وقت لفة أكثر من 100000 ميللي ثانية؟", "db_id": "formula_1"}
{"question": "What are the different driver ids and nationalities of all drivers who had a laptime of more than 100000 milliseconds?", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000", "arabic": "ما هي الهويات المختلفة للسائقين وجنسياتهم الذين كان لديهم وقت لفة أكثر من 100000 ميللي ثانية؟", "db_id": "formula_1"}
{"question": "What are the forename and surname of the driver who has the smallest laptime?", "query": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1", "arabic": "ما هي الأسم الأول واللقب للسائق الذي لديه أقل وقت لفة؟", "db_id": "formula_1"}
{"question": "What is the forename and surname of the driver with the shortest laptime?", "query": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1", "arabic": "ما هو الاسم الأول واللقب للسائق الذي لديه أقصر وقت لفة؟", "db_id": "formula_1"}
{"question": "What is the id and family name of the driver who has the longest laptime?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1", "arabic": "ما هو رقم التعريف واسم العائلة للسائق الذي يمتلك أطول وقت للفة؟", "db_id": "formula_1"}
{"question": "What is the id and last name of the driver with the longest laptime?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1", "arabic": "ما هو رقم التعريف واسم العائلة للسائق الذي يمتلك أطول وقت للفة؟", "db_id": "formula_1"}
{"question": "What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?", "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2", "arabic": "ما هو رقم التعريف، الاسم الأول، واسم العائلة للسائق الذي حل في المركز الأول من حيث وقت اللفة على الأقل مرتين؟", "db_id": "formula_1"}
{"question": "What is the id, first name, and last name of the driver who was in the first position for laptime at least twice?", "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2", "arabic": "ما هو رقم التعريف، الاسم الأول، واسم العائلة للسائق الذي كان في المركز الأول لوقت اللفة على الأقل مرتين؟", "db_id": "formula_1"}
{"question": "How many drivers participated in the race Australian Grand Prix held in 2009?", "query": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009", "arabic": "كم عدد السائقين الذين شاركوا في سباق جائزة أستراليا الكبرى الذي أقيم في عام 2009؟", "db_id": "formula_1"}
{"question": "How many drivers were in the Australian Grand Prix held in 2009?", "query": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009", "arabic": "كم عدد السائقين الذين كانوا في جائزة أستراليا الكبرى التي أقيمت في عام 2009؟", "db_id": "formula_1"}
{"question": "How many drivers did not participate in the races held in 2009?", "query": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )", "arabic": "كم عدد السائقين الذين لم يشاركوا في السباقات التي أقيمت في عام 2009؟", "db_id": "formula_1"}
{"question": "How many drivers did not race in 2009?", "query": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )", "arabic": "كم عدد السائقين الذين لم يتسابقوا في عام 2009؟", "db_id": "formula_1"}
{"question": "Give me a list of names and years of races that had any driver whose forename is Lewis?", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"", "arabic": "أعطني قائمة بالأسماء والسنوات للسباقات التي شارك فيها أي سائق يدعى لويس؟", "db_id": "formula_1"}
{"question": "What are the names and years of all races that had a driver with the last name Lewis?", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"", "arabic": "ما هي أسماء السباقات والسنوات التي شارك فيها سائق باللقب الأخير لويس؟", "db_id": "formula_1"}
{"question": "Find the forename and surname of drivers whose nationality is German?", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"", "arabic": "ما هي الأسماء الأولية والأسماء الأخيرة للسائقين الذين يحملون الجنسية الألمانية؟", "db_id": "formula_1"}
{"question": "What is the first and last name of all the German drivers?", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"", "arabic": "ما هو الاسم الأول والاسم الأخير لجميع السائقين الألمان؟", "db_id": "formula_1"}
{"question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?", "query": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "arabic": "ما هو معرّف السائق وأسماء السائقين الذين شاركوا في كل من السباقات بأسم \"Australian Grand Prix\" و \"Chinese Grand Prix\"؟", "db_id": "formula_1"}
{"question": "What is the id and first name of all the drivers who participated in the Australian Grand Prix and the Chinese Grand Prix?", "query": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "arabic": "ما هو معرّف السائق والاسم الأول لجميع السائقين الذين شاركوا في سباق \"Australian Grand Prix\" و \"Chinese Grand Prix\"؟", "db_id": "formula_1"}
{"question": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?", "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "arabic": "ما هي الأسماء الأولى والأسماء الأخيرة للسائقين الذين شاركوا في سباقات تحمل اسم \"Australian Grand Prix\" ولكن لم يشاركوا في سباقات تحمل اسم \"Chinese Grand Prix\"؟", "db_id": "formula_1"}
{"question": "What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?", "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "arabic": "ما هي الأسماء الأولى والأسماء الأخيرة لجميع السائقين الذين شاركوا في سباق \"Australian Grand Prix\" ولم يشاركوا في سباق \"Chinese Grand Prix\"؟", "db_id": "formula_1"}
{"question": "Find all the forenames of distinct drivers who was in position 1 as standing and won?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1", "arabic": "ما هي أسماء السائقين المتميزة الذين كانوا في المركز الأول كمتصدر وفازوا؟", "db_id": "formula_1"}
{"question": "What are all the different first names of the drivers who are in position as standing and won?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1", "arabic": "ما هي جميع الأسماء الأولى المختلفة للسائقين الذين كانوا في موقف كمتصدر وفازوا؟", "db_id": "formula_1"}
{"question": "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20", "arabic": "ما هي جميع الأسماء الأولى للسائقين المميزين الذين فازوا في المركز الأول كسائقين متصدرين وكان لديهم أكثر من 20 نقطة؟", "db_id": "formula_1"}
{"question": "What are the first names of the different drivers who won in position 1 as driver standing and had more than 20 points?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20", "arabic": "ما هي الأسماء الأولى للسائقين المختلفين الذين فازوا في المركز الأول كسائقين متصدرين وكانت لديهم أكثر من 20 نقطة؟", "db_id": "formula_1"}
{"question": "What are the numbers of constructors for different nationalities?", "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality", "arabic": "ما هي أرقام المُصنّعين لجنسيات مختلفة؟", "db_id": "formula_1"}
{"question": "For each nationality, how many different constructors are there?", "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality", "arabic": "كم عدد المُصنّعين المختلفين لكل جنسية؟", "db_id": "formula_1"}
{"question": "What are the numbers of races for each constructor id?", "query": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid", "arabic": "ما هي أعداد السباقات لكل مُعرف مُصنّع؟", "db_id": "formula_1"}
{"question": "What are the names of races that were held after 2017 and the circuits were in the country of Spain?", "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017", "arabic": "ما هي أسماء السباقات التي أُقيمت بعد عام 2017 وكانت الحلبات في بلد إسبانيا؟", "db_id": "formula_1"}
{"question": "What are the names of the races held after 2017 in Spain?", "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017", "arabic": "ما هي أسماء السباقات التي أُقيمت بعد عام 2017 في إسبانيا؟", "db_id": "formula_1"}
{"question": "What are the unique names of races that held after 2000 and the circuits were in Spain?", "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000", "arabic": "ما هي الأسماء الفريدة للسباقات التي أقيمت بعد عام 2000 وكانت الحلبات في إسبانيا؟", "db_id": "formula_1"}
{"question": "What are the names of all races held after 2000 in Spain?", "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000", "arabic": "ما هي أسماء جميع السباقات التي أُقيمت بعد عام 2000 في إسبانيا؟", "db_id": "formula_1"}
{"question": "Find the distinct driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id 841.", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)", "arabic": "ما هو رقم مُعرّف السائق المميز ورقم التوقف لجميع السائقين الذين لديهم مدة توقف في الحفرة أقصر من بعض السائقين في السباق الذي له رقم 841؟", "db_id": "formula_1"}
{"question": "What is the id and stop number for each driver that has a shorter pit stop than the driver in the race with id 841?", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)", "arabic": "ما هو معرف السائق ورقم التوقف لكل سائق لديه توقف في الحفرة أقصر من السائق في السباق الذي له رقم 841؟", "db_id": "formula_1"}
{"question": "Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841?", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)", "arabic": "ما هو معرّف السائق المميز لجميع السائقين الذين لديهم مدة توقف أطول من بعض السائقين في السباق الذي يحمل الرقم 841؟", "db_id": "formula_1"}
{"question": "What are the different ids and stop durations of all the drivers whose stop lasted longer than the driver in the race with the id 841?", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)", "arabic": "ما هي الأسماء المختلفة ومدد التوقف لجميع السائقين الذين استمر توقفهم لمدة أطول من السائق في السباق الذي يحمل الرقم 841؟", "db_id": "formula_1"}
{"question": "List the forenames of all distinct drivers in alphabetical order?", "query": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC", "arabic": "ما هي أسماء الأولاد لجميع السائقين المميزين بالترتيب الأبجدي؟", "db_id": "formula_1"}
{"question": "What are the first names of all the different drivers in alphabetical order?", "query": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC", "arabic": "ما هي الأسماء الأولى لجميع السائقين المختلفين بالترتيب الأبجدي؟", "db_id": "formula_1"}
{"question": "List the names of all distinct races in reversed  lexicographic order?", "query": "SELECT DISTINCT name FROM races ORDER BY name DESC", "arabic": "ما هي أسماء جميع السباقات المميزة بالترتيب اللغوي العكسي؟", "db_id": "formula_1"}
{"question": "What are the different names of all the races in reverse alphabetical order?", "query": "SELECT DISTINCT name FROM races ORDER BY name DESC", "arabic": "ما هي الأسماء المختلفة لجميع السباقات بالترتيب الأبجدي العكسي؟", "db_id": "formula_1"}
{"question": "What are the names of races held between 2009 and 2011?", "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011", "arabic": "ما هي أسماء السباقات التي أُقيمت بين عامي 2009 و 2011؟", "db_id": "formula_1"}
{"question": "What are the names of all races held between 2009 and 2011?", "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011", "arabic": "ما هي أسماء جميع السباقات التي أُقيمت بين عامي 2009 و 2011؟", "db_id": "formula_1"}
{"question": "What are the names of races held after 12:00:00 or before 09:00:00?", "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"", "arabic": "ما هي أسماء السباقات التي أُقيمت بعد الساعة 12:00:00 أو قبل الساعة 09:00:00؟", "db_id": "formula_1"}
{"question": "What are the names of all races that occurred after 12:00:00 or before 09:00:00?", "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"", "arabic": "ما هي أسماء جميع السباقات التي وقعت بعد الساعة 12:00:00 أو قبل الساعة 09:00:00؟", "db_id": "formula_1"}
{"question": "What are the drivers' first, last names and id who had more than 8 pit stops or participated in more than 5 race results?", "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "arabic": "ما هي الأسماء الأولى والأخيرة للسائقين ومعرفهم الذين قاموا بأكثر من 8 توقفات في الحفرة أو شاركوا في أكثر من 5 نتائج للسباق؟", "db_id": "formula_1"}
{"question": "What are the drivers' first names,last names, and ids for all those that had more than 8 stops or participated in more than 5 races?", "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "arabic": "ما هي الأسماء الأولى والأخيرة ومعرّفات السائقين لجميع الذين قاموا بأكثر من 8 توقفات أو شاركوا في أكثر من 5 سباقات؟", "db_id": "formula_1"}
{"question": "What are the drivers' last names and id who had 11 pit stops and participated in more than 5 race results?", "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "arabic": "ما هي أسماء العائلة ومعرف السائقين الذين قاموا بـ 11 توقفًا في الحفرة وشاركوا في أكثر من 5 نتائج للسباق؟", "db_id": "formula_1"}
{"question": "What are the last names and ids of all drivers who had 11 pit stops and participated in more than 5 races?", "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "arabic": "ما هي أسماء العائلة ومعرّفات جميع السائقين الذين قاموا بـ 11 توقفًا في الحفرة وشاركوا في أكثر من 5 سباقات؟", "db_id": "formula_1"}
{"question": "What is the id and last name of the driver who participated in the most races after 2010?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرّف واسم العائلة للسائق الذي شارك في أكبر عدد من السباقات بعد عام 2010؟", "db_id": "formula_1"}
{"question": "What is the id and last name of the driver who participated in the most races after 2010?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرّف واسم العائلة للسائق الذي شارك في أكبر عدد من السباقات بعد عام 2010؟", "db_id": "formula_1"}
{"question": "What are the names of circuits that belong to UK or Malaysia?", "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"", "arabic": "ما هي أسماء الحلبات التي تنتمي إلى المملكة المتحدة أو ماليزيا؟", "db_id": "formula_1"}
{"question": "What are the names of all the circuits that are in the UK or Malaysia?", "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"", "arabic": "ما هي أسماء جميع الحلبات التي تقع في المملكة المتحدة أو ماليزيا؟", "db_id": "formula_1"}
{"question": "Find the id and location of circuits that belong to France or Belgium?", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"", "arabic": "ما هو معرّف الحلبة وموقعها للحلبات التي تنتمي إلى فرنسا أو بلجيكا؟", "db_id": "formula_1"}
{"question": "What are the ids and locations of all circuits in France or Belgium?", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"", "arabic": "ما هي معرّفات الحلبات ومواقعها لجميع الحلبات في فرنسا أو بلجيكا؟", "db_id": "formula_1"}
{"question": "Find the names of Japanese constructors that have once earned more than 5 points?", "query": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5", "arabic": "ما هي أسماء المُنشئين اليابانيين الذين حققوا مرة واحدة أكثر من 5 نقاط؟", "db_id": "formula_1"}
{"question": "What are the names of all the Japanese constructors that have earned more than 5 points?", "query": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5", "arabic": "ما هي أسماء جميع المُنشئين اليابانيين الذين حققوا أكثر من 5 نقاط؟", "db_id": "formula_1"}
{"question": "What is the average fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?", "query": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"", "arabic": "ما هي المتوسطة لأسرع لفة في السباق المسمى \"جائزة موناكو الكبرى\" في عام 2008؟", "db_id": "formula_1"}
{"question": "What is the average fastest lap speed for the Monaco Grand Prix in 2008?", "query": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"", "arabic": "ما هي المتوسطة لأسرع سرعة للفة في جائزة موناكو الكبرى في عام 2008؟", "db_id": "formula_1"}
{"question": "What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?", "query": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"", "arabic": "ما هي السرعة القصوى لأسرع لفة في السباق المسمى \"جائزة موناكو الكبرى\" في عام 2008؟", "db_id": "formula_1"}
{"question": "What is the maximum fastest lap speed in the Monaco Grand Prix in 2008?", "query": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"", "arabic": "ما هي السرعة القصوى لأسرع لفة في جائزة موناكو الكبرى في عام 2008؟", "db_id": "formula_1"}
{"question": "What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year?", "query": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "arabic": "ما هي أقصى سرعة لأسرع لفة في السباقات التي أُقيمت بعد عام 2004 مجمعة حسب اسم السباق ومرتبة حسب السنة؟", "db_id": "formula_1"}
{"question": "For each race name, What is the maximum fastest lap speed for races after 2004 ordered by year?", "query": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "arabic": "لكل اسم سباق، ما هي أقصى سرعة لأسرع لفة للسباقات بعد عام 2004 مرتبة حسب السنة؟", "db_id": "formula_1"}
{"question": "What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year?", "query": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "arabic": "ما هي المتوسطة لأسرع سرعة للفة في السباقات التي أُقيمت بعد عام 2004 مجمعة حسب اسم السباق ومرتبة حسب السنة؟", "db_id": "formula_1"}
{"question": "What is the average fastest lap speed for races held after 2004, for each race, ordered by year?", "query": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "arabic": "ما هي المتوسطة لأسرع سرعة للفة في السباقات التي أُقيمت بعد عام 2004، لكل سباق، مرتبة حسب السنة؟", "db_id": "formula_1"}
{"question": "Find the id, forename and number of races of all drivers who have at least participated in two races?", "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2", "arabic": "ما هي معرّفات السائقين، الأسماء الأولى، وعدد السباقات لجميع السائقين الذين شاركوا على الأقل في سباقين؟", "db_id": "formula_1"}
{"question": "What is the id, forename, and number of races for all drivers that have participated in at least 2 races?", "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2", "arabic": "ما هي معرّفات السائقين، الأسماء الأولى، وعدد السباقات لجميع السائقين الذين شاركوا في على الأقل سباقين؟", "db_id": "formula_1"}
{"question": "Find the driver id and number of races of all drivers who have at most participated in 30 races?", "query": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30", "arabic": "ما هو معرّف السائق وعدد السباقات لجميع السائقين الذين شاركوا في عدد لا يتجاوز 30 سباقًا؟", "db_id": "formula_1"}
{"question": "For each id of a driver who participated in at most 30 races, how many races did they participate in?", "query": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30", "arabic": "لكل معرّف للسائق الذي شارك في 30 سباقًا على الأكثر، كم عدد السباقات التي شارك فيها؟", "db_id": "formula_1"}
{"question": "Find the id and surname of the driver who participated the most number of races?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرّف السائق واسم العائلة للسائق الذي شارك في أكبر عدد من السباقات؟", "db_id": "formula_1"}
{"question": "What are the ids and last names of all drivers who participated in the most races?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي معرّفات السائقين وأسماء العائلة لجميع السائقين الذين شاركوا في أكبر عدد من السباقات؟", "db_id": "formula_1"}
{"question": "How many technicians are there?", "query": "SELECT count(*) FROM technician", "arabic": "كم عدد الفنيين؟", "db_id": "machine_repair"}
{"question": "What is the number of technicians?", "query": "SELECT count(*) FROM technician", "arabic": "ما هو عدد الفنيين؟", "db_id": "machine_repair"}
{"question": "List the names of technicians in ascending order of age.", "query": "SELECT Name FROM technician ORDER BY Age ASC", "arabic": "ما هي أسماء الفنيين بترتيب تصاعدي للعمر؟", "db_id": "machine_repair"}
{"question": "What are the names of the technicians by ascending order of age?", "query": "SELECT Name FROM technician ORDER BY Age ASC", "arabic": "ما هي أسماء الفنيين بترتيب تصاعدي للعمر؟", "db_id": "machine_repair"}
{"question": "What are the team and starting year of technicians?", "query": "SELECT Team ,  Starting_Year FROM technician", "arabic": "ما هي الفرق وسنة البدء للفنيين؟", "db_id": "machine_repair"}
{"question": "What is the team and starting year for each technician?", "query": "SELECT Team ,  Starting_Year FROM technician", "arabic": "ما هو الفريق وسنة البدء لكل فني؟", "db_id": "machine_repair"}
{"question": "List the name of technicians whose team is not \"NYY\".", "query": "SELECT Name FROM technician WHERE Team != \"NYY\"", "arabic": "ما هي أسماء الفنيين الذين ليسوا في الفريق \"NYY\"؟", "db_id": "machine_repair"}
{"question": "What is the name of the technician whose team is not 'NYY'?", "query": "SELECT Name FROM technician WHERE Team != \"NYY\"", "arabic": "ما هو اسم الفني الذي لا ينتمي إلى فريق \"NYY\"؟", "db_id": "machine_repair"}
{"question": "Show the name of technicians aged either 36 or 37", "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37", "arabic": "ما هي أسماء الفنيين الذين يبلغون من العمر 36 أو 37 عامًا؟", "db_id": "machine_repair"}
{"question": "What are the names of the technicians aged either 36 or 37?", "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37", "arabic": "ما هي أسماء الفنيين الذين يبلغون من العمر 36 أو 37 عامًا؟", "db_id": "machine_repair"}
{"question": "What is the starting year of the oldest technicians?", "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1", "arabic": "ما هو العام الذي بدأ فيه أقدم فني؟", "db_id": "machine_repair"}
{"question": "What is the starting year for the oldest technician?", "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1", "arabic": "ما هو العام الذي بدأ فيه أقدم فني؟", "db_id": "machine_repair"}
{"question": "Show different teams of technicians and the number of technicians in each team.", "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team", "arabic": "ما هي فرق الفنيين المختلفة وعدد الفنيين في كل فريق؟", "db_id": "machine_repair"}
{"question": "For each team, how many technicians are there?", "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team", "arabic": "لكل فريق، كم عدد الفنيين؟", "db_id": "machine_repair"}
{"question": "Please show the team that has the most number of technicians.", "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "من فضلك، أظهر الفريق الذي يمتلك أكبر عدد من الفنيين؟", "db_id": "machine_repair"}
{"question": "What are the teams with the most technicians?", "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي الفرق التي تمتلك أكبر عدد من الفنيين؟", "db_id": "machine_repair"}
{"question": "Show the team that have at least two technicians.", "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2", "arabic": "أظهر الفريق الذي يمتلك ما لا يقل عن اثنين من الفنيين.", "db_id": "machine_repair"}
{"question": "What is the team with at least 2 technicians?", "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2", "arabic": "ما هو الفريق الذي يحتوي على ما لا يقل عن 2 فنيين؟", "db_id": "machine_repair"}
{"question": "Show names of technicians and series of machines they are assigned to repair.", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID", "arabic": "ما هي أسماء الفنيين وسلاسل الآلات التي تم تكليفهم بإصلاحها؟", "db_id": "machine_repair"}
{"question": "What are the names of technicians and the machine series that they repair?", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID", "arabic": "ما هي أسماء الفنيين وسلاسل الآلات التي يقومون بإصلاحها؟", "db_id": "machine_repair"}
{"question": "Show names of technicians in ascending order of quality rank of the machine they are assigned.", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank", "arabic": "ما هي أسماء الفنيين بترتيب تصاعدي حسب ترتيب جودة الآلة التي يتم تعيينهم لإصلاحها؟", "db_id": "machine_repair"}
{"question": "What are the names of the technicians by ascending order of quality rank for the machine they are assigned?", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank", "arabic": "ما هي أسماء الفنيين بترتيب تصاعدي حسب ترتيب جودة الآلة التي يتم تعيينهم لإصلاحها؟", "db_id": "machine_repair"}
{"question": "Show names of technicians who are assigned to repair machines with value point more than 70.", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70", "arabic": "ما هي أسماء الفنيين الذين تم تعيينهم لإصلاح الآلات التي تحمل قيمة نقاط أكثر من 70؟", "db_id": "machine_repair"}
{"question": "What are the names of the technicians that are assigned to repair machines with more point values than 70?", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70", "arabic": "ما هي أسماء الفنيين الذين تم تعيينهم لإصلاح الآلات التي تحمل قيمة نقاط أكثر من 70؟", "db_id": "machine_repair"}
{"question": "Show names of technicians and the number of machines they are assigned to repair.", "query": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name", "arabic": "ما هي أسماء الفنيين وعدد الآلات التي تم تعيينهم لإصلاحها؟", "db_id": "machine_repair"}
{"question": "What are the names of the technicians  and how many machines are they assigned to repair?", "query": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name", "arabic": "ما هي أسماء الفنيين وكم عدد الآلات التي تم تعيينهم لإصلاحها؟", "db_id": "machine_repair"}
{"question": "List the names of technicians who have not been assigned to repair machines.", "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)", "arabic": "ما هي أسماء الفنيين الذين لم يتم تعيينهم لإصلاح الآلات؟", "db_id": "machine_repair"}
{"question": "What are the names of the technicians that have not been assigned to repair machines?", "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)", "arabic": "ما هي أسماء الفنيين الذين لم يتم تعيينهم لإصلاح الآلات؟", "db_id": "machine_repair"}
{"question": "Show the starting years shared by technicians from team \"CLE\" and \"CWS\".", "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\"", "arabic": "ما هي سنوات البداية المشتركة بين الفنيين من فريق \"CLE\" و \"CWS\"؟", "db_id": "machine_repair"}
{"question": "What are the starting years shared by the technicians from the team \"CLE\" or \"CWS\"?", "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\"", "arabic": "ما هي سنوات البداية المشتركة بين الفنيين من فريق \"CLE\" أو \"CWS\"؟", "db_id": "machine_repair"}
{"question": "How many entrepreneurs are there?", "query": "SELECT count(*) FROM entrepreneur", "arabic": "كم عدد رواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "Count the number of entrepreneurs.", "query": "SELECT count(*) FROM entrepreneur", "arabic": "عدد رواد الأعمال هو كم؟", "db_id": "entrepreneur"}
{"question": "What are the companies of entrepreneurs, ordered descending by amount of money requested?", "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC", "arabic": "ما هي شركات رواد الأعمال، مرتبة تنازلياً حسب المبلغ المطلوب؟", "db_id": "entrepreneur"}
{"question": "List the companies and the investors of entrepreneurs.", "query": "SELECT Company ,  Investor FROM entrepreneur", "arabic": "ما هي الشركات والمستثمرون لرواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "What are the companies and investors that correspond to each entrepreneur?", "query": "SELECT Company ,  Investor FROM entrepreneur", "arabic": "ما هي الشركات والمستثمرون الذين يتوافقون مع كل رائد أعمال؟", "db_id": "entrepreneur"}
{"question": "What is the average money requested by all entrepreneurs?", "query": "SELECT avg(Money_Requested) FROM entrepreneur", "arabic": "ما هو المبلغ المطلوب بالمتوسط ​​من جميع رواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "Return the average money requested across all entrepreneurs.", "query": "SELECT avg(Money_Requested) FROM entrepreneur", "arabic": "ما هو متوسط المبلغ المطلوب عبر جميع رواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "What are the names of people in ascending order of weight?", "query": "SELECT Name FROM People ORDER BY Weight ASC", "arabic": "ما هي أسماء الأشخاص بترتيب تصاعدي حسب الوزن؟", "db_id": "entrepreneur"}
{"question": "Return the names of people, ordered by weight ascending.", "query": "SELECT Name FROM People ORDER BY Weight ASC", "arabic": "ما هي أسماء الأشخاص، مرتبة حسب الوزن بترتيب تصاعدي؟", "db_id": "entrepreneur"}
{"question": "What are the names of entrepreneurs?", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID", "arabic": "ما هي أسماء رواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "Return the names of entrepreneurs.", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID", "arabic": "ما هي أسماء رواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"", "arabic": "ما هي أسماء رواد الأعمال الذين ليس مستثمرهم \"راشيل الناو\"؟", "db_id": "entrepreneur"}
{"question": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"", "arabic": "ما هي أسماء رواد الأعمال الذين ليس مستثمروهم هم \"Rachel Elnaugh\"؟", "db_id": "entrepreneur"}
{"question": "What is the weight of the shortest person?", "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1", "arabic": "ما هو وزن أقصر شخص؟", "db_id": "entrepreneur"}
{"question": "Return the weight of the shortest person.", "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1", "arabic": "ما هو وزن أقصر شخص؟", "db_id": "entrepreneur"}
{"question": "What is the name of the entrepreneur with the greatest weight?", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1", "arabic": "ما هو اسم رائد الأعمال الذي لديه أكبر وزن؟", "db_id": "entrepreneur"}
{"question": "Return the name of the heaviest entrepreneur.", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1", "arabic": "ما هو اسم أثقل رائد أعمال؟", "db_id": "entrepreneur"}
{"question": "What is the total money requested by entrepreneurs with height more than 1.85?", "query": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85", "arabic": "ما هو إجمالي المال المطلوب من قبل رواد الأعمال الذين يزيد طولهم عن 1.85؟", "db_id": "entrepreneur"}
{"question": "Give the total money requested by entrepreneurs who are taller than 1.85.", "query": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85", "arabic": "ما مجموع المال المطلوب من قبل رواد الأعمال الذين يتجاوزون 1.85 في الطول؟", "db_id": "entrepreneur"}
{"question": "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?", "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"", "arabic": "ما هي تواريخ ميلاد رواد الأعمال الذين لديهم مستثمرون \"Simon Woodroffe\" أو \"Peter Jones\"؟", "db_id": "entrepreneur"}
{"question": "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.", "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"", "arabic": "ما هي تواريخ ميلاد رواد الأعمال الذين لديهم إما المستثمر \"Simon Woodroffe\" أو \"Peter Jones\"؟", "db_id": "entrepreneur"}
{"question": "What are the weights of entrepreneurs in descending order of money requested?", "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC", "arabic": "ما هي أوزان رواد الأعمال مرتبة تنازلياً حسب المبلغ المطلوب؟", "db_id": "entrepreneur"}
{"question": "Return the weights of entrepreneurs, ordered descending by amount of money requested.", "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC", "arabic": "ما هي أوزان رواد الأعمال، مرتبة تنازلياً حسب المبلغ المطلوب؟", "db_id": "entrepreneur"}
{"question": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?", "query": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor", "arabic": "ما هم المستثمرون لرواد الأعمال وعدد رواد الأعمال المستثمرين من قبل كل مستثمر؟", "db_id": "entrepreneur"}
{"question": "How many entrepreneurs correspond to each investor?", "query": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor", "arabic": "كم عدد رواد الأعمال المتوافق مع كل مستثمر؟", "db_id": "entrepreneur"}
{"question": "What is the investor that has invested in the most number of entrepreneurs?", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو المستثمر الذي قام بالاستثمار في أكبر عدد من رواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "Return the investor who have invested in the greatest number of entrepreneurs.", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "من هو المستثمر الذي قام بالاستثمار في أكبر عدد من رواد الأعمال؟", "db_id": "entrepreneur"}
{"question": "What are the investors that have invested in at least two entrepreneurs?", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2", "arabic": "ما هم المستثمرون الذين قاموا بالاستثمار في ما لا يقل عن رائد أعمالين؟", "db_id": "entrepreneur"}
{"question": "Return the investors who have invested in two or more entrepreneurs.", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2", "arabic": "من هم المستثمرون الذين قاموا بالاستثمار في رائدي الأعمال اللذين يبلغ عددهم اثنين أو أكثر؟", "db_id": "entrepreneur"}
{"question": "List the names of entrepreneurs and their companies in descending order of money requested?", "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested", "arabic": "ما هي أسماء رواد الأعمال وشركاتهم مرتبة تنازلياً حسب المبلغ المطلوب؟", "db_id": "entrepreneur"}
{"question": "What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?", "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested", "arabic": "ما هي أسماء رواد الأعمال ومستثمروهم المقابلين، مرتبة تنازلياً حسب المبلغ المطلوب؟", "db_id": "entrepreneur"}
{"question": "List the names of people that are not entrepreneurs.", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)", "arabic": "ما هي أسماء الأشخاص الذين ليسوا رواد أعمال؟", "db_id": "entrepreneur"}
{"question": "What are the names of people who are not entrepreneurs?", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)", "arabic": "ما هي أسماء الأشخاص الذين ليسوا رواد أعمال؟", "db_id": "entrepreneur"}
{"question": "Show the investors shared by entrepreneurs that requested more than 140000 and entrepreneurs that requested less than 120000.", "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000", "arabic": "أظهر المستثمرين المشتركين بين رواد الأعمال الذين طلبوا أكثر من 140000 ورواد الأعمال الذين طلبوا أقل من 120000.", "db_id": "entrepreneur"}
{"question": "What are the investors who have invested in both entrepreneurs who requested more than 140000 and entrepreneurs who requested less than 120000?", "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000", "arabic": "ما هم المستثمرون الذين قاموا بالاستثمار في رواد الأعمال اللذين طلبوا أكثر من 140000 ورواد الأعمال اللذين طلبوا أقل من 120000؟", "db_id": "entrepreneur"}
{"question": "How many distinct companies are there?", "query": "SELECT count(DISTINCT Company) FROM entrepreneur", "arabic": "كم عدد الشركات المتميزة؟", "db_id": "entrepreneur"}
{"question": "Count the number of different companies.", "query": "SELECT count(DISTINCT Company) FROM entrepreneur", "arabic": "عدد الشركات المختلفة؟", "db_id": "entrepreneur"}
{"question": "Show the company of the tallest entrepreneur.", "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1", "arabic": "أظهر شركة أطول رائد أعمال؟", "db_id": "entrepreneur"}
{"question": "Which company was started by the entrepreneur with the greatest height?", "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1", "arabic": "أي شركة تم تأسيسها بواسطة رائد الأعمال ذو أعظم طول؟", "db_id": "entrepreneur"}
{"question": "How many perpetrators are there?", "query": "SELECT count(*) FROM perpetrator", "arabic": "كم عدد الجناة؟", "db_id": "perpetrator"}
{"question": "List the date of perpetrators in descending order of the number of people killed.", "query": "SELECT Date FROM perpetrator ORDER BY Killed DESC", "arabic": "ما هي تواريخ الجناة مرتبة تنازلياً حسب عدد الأشخاص الذين قتلوا؟", "db_id": "perpetrator"}
{"question": "List the number of people injured by perpetrators in ascending order.", "query": "SELECT Injured FROM perpetrator ORDER BY Injured ASC", "arabic": "ما هو عدد الأشخاص المصابين بواسطة الجناة مرتبة تصاعدياً؟", "db_id": "perpetrator"}
{"question": "What is the average number of people injured by all perpetrators?", "query": "SELECT avg(Injured) FROM perpetrator", "arabic": "ما هو متوسط عدد الأشخاص المصابين بواسطة جميع الجناة؟", "db_id": "perpetrator"}
{"question": "What is the location of the perpetrator with the largest kills.", "query": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1", "arabic": "ما هو موقع الجاني الذي قام بأكبر عدد من القتلى؟", "db_id": "perpetrator"}
{"question": "What are the names of people in ascending order of height?", "query": "SELECT Name FROM People ORDER BY Height ASC", "arabic": "ما هي أسماء الأشخاص مرتبة تصاعدياً حسب الطول؟", "db_id": "perpetrator"}
{"question": "What are the names of perpetrators?", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID", "arabic": "ما هي أسماء الجناة؟", "db_id": "perpetrator"}
{"question": "What are the names of perpetrators whose country is not \"China\"?", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"China\"", "arabic": "ما هي أسماء الجناة الذين ليست بلدانهم \"الصين\"؟", "db_id": "perpetrator"}
{"question": "What is the name of the perpetrator with the biggest weight.", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1", "arabic": "ما هو اسم الجاني الذي يمتلك أكبر وزن؟", "db_id": "perpetrator"}
{"question": "What is the total kills of the perpetrators with height more than 1.84.", "query": "SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84", "arabic": "ما هو إجمالي القتلى للجناة الذين يمتلكون طولًا أكبر من 1.84.", "db_id": "perpetrator"}
{"question": "What are the names of perpetrators in country \"China\" or \"Japan\"?", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"China\" OR T2.Country  =  \"Japan\"", "arabic": "ما هي أسماء الجناة في البلد \"الصين\" أو \"اليابان\"؟", "db_id": "perpetrator"}
{"question": "What are the heights of perpetrators in descending order of the number of people they injured?", "query": "SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC", "arabic": "ما هي الأطوال للجناة بترتيب تنازلي حسب عدد الأشخاص الذين أصيبوا به؟", "db_id": "perpetrator"}
{"question": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country", "arabic": "ما هي بلدان الجناة؟ أظهر كل بلد وعدد الجناة المقابل فيها.", "db_id": "perpetrator"}
{"question": "What is the country that has the most perpetrators?", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي الدولة التي بها أكبر عدد من الجناة؟", "db_id": "perpetrator"}
{"question": "What are the countries that have at least two perpetrators?", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2", "arabic": "ما هي الدول التي بها على الأقل جناين اثنين؟", "db_id": "perpetrator"}
{"question": "List the names of perpetrators in descending order of the year.", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Year DESC", "arabic": "ما هي أسماء المجرمين بترتيب تنازلي حسب السنة؟", "db_id": "perpetrator"}
{"question": "List the names of people that are not perpetrators.", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)", "arabic": "ما هي أسماء الأشخاص الذين ليسوا مجرمين؟", "db_id": "perpetrator"}
{"question": "Show the countries that have both perpetrators with injures more than 50 and perpetrators with injures smaller than 20.", "query": "SELECT Country FROM perpetrator WHERE Injured  >  50 INTERSECT SELECT Country FROM perpetrator WHERE Injured  <  20", "arabic": "ما هي الدول التي تحتوي على مرتكبين لديهم إصابات أكثر من 50 ومرتكبين لديهم إصابات أقل من 20؟", "db_id": "perpetrator"}
{"question": "How many distinct locations of perpetrators are there?", "query": "SELECT count(DISTINCT LOCATION) FROM perpetrator", "arabic": "كم عدد مواقع المرتكبين المميزة؟", "db_id": "perpetrator"}
{"question": "Show the date of the tallest perpetrator.", "query": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "arabic": "ما هي تاريخ المرتكب الأطول؟", "db_id": "perpetrator"}
{"question": "In which year did the most recent crime happen?", "query": "SELECT max(YEAR) FROM perpetrator;", "arabic": "في أي عام حدثت الجريمة الأخيرة؟", "db_id": "perpetrator"}
{"question": "Report the name of all campuses in Los Angeles county.", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "arabic": "ما هي الحرم الجامعية الموجودة في مقاطعة لوس أنجلوس؟", "db_id": "csu_1"}
{"question": "What campuses are located in the county of Los Angeles?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "arabic": "ما هي أسماء جميع الحرم الجامعية الموجودة في تشيكو؟", "db_id": "csu_1"}
{"question": "What are the names of all campuses located at Chico?", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"", "arabic": "ما هي الحرم الجامعية الموجودة في تشيكو؟", "db_id": "csu_1"}
{"question": "What campuses are located in Chico?", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"", "arabic": "ما هي جميع الحرم الجامعية التي تم فتحها في عام ١٩٥٨؟", "db_id": "csu_1"}
{"question": "Find all the campuses opened in 1958.", "query": "SELECT campus FROM campuses WHERE YEAR  =  1958", "arabic": "ما هي الحرم الجامعية التي تم فتحها في عام ١٩٥٨؟", "db_id": "csu_1"}
{"question": "What are the campuses that opened in 1958?", "query": "SELECT campus FROM campuses WHERE YEAR  =  1958", "arabic": "ما هو اسم الحرم الجامعي الذي تم فتحه قبل عام ١٨٠٠؟", "db_id": "csu_1"}
{"question": "Find the name of the campuses opened before 1800.", "query": "SELECT campus FROM campuses WHERE YEAR  <  1800", "arabic": "ما هي الحرم الجامعية التي فتحت قبل عام ١٨٠٠؟", "db_id": "csu_1"}
{"question": "What campuses opened before 1800?", "query": "SELECT campus FROM campuses WHERE YEAR  <  1800", "arabic": "أي حرم جامعي تم فتحه بين عامي ١٩٣٥ و ١٩٣٩؟", "db_id": "csu_1"}
{"question": "Which campus was opened between 1935 and 1939?", "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939", "arabic": "ما هي الحرم الجامعية التي فُتِحت بين عامي ١٩٣٥ و ١٩٣٩؟", "db_id": "csu_1"}
{"question": "What campuses opened between 1935 and 1939?", "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939", "arabic": "ما هي أسماء الحرم الجامعية التي تقع في نورثريدج، لوس أنجلوس أو في سان فرانسيسكو، سان فرانسيسكو؟", "db_id": "csu_1"}
{"question": "Find the name of the campuses that is in Northridge, Los Angeles or in San Francisco, San Francisco.", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\"", "arabic": "ما هي الحرم الجامعية الموجودة في نورثريدج، لوس أنجلوس أو في سان فرانسيسكو، سان فرانسيسكو؟", "db_id": "csu_1"}
{"question": "What campuses are located in Northridge, Los Angeles or in San Francisco, San Francisco?", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\"", "arabic": "ما هو رسم الحرم الجامعي لجامعة سان خوسيه في عام ١٩٩٦؟", "db_id": "csu_1"}
{"question": "What is the campus fee of \"San Jose State University\" in year 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996", "arabic": "ما هو رسم الحرم الجامعي لجامعة سان خوسيه في عام ١٩٩٦؟", "db_id": "csu_1"}
{"question": "What is the campus fee for San Jose State University in 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996", "arabic": "ما هو رسم الحرم الجامعي لجامعة سان فرانسيسكو في عام ١٩٩٦؟", "db_id": "csu_1"}
{"question": "What is the campus fee of \"San Francisco State University\" in year 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996", "arabic": "ما هو رسم الحرم الجامعي لجامعة سان فرانسيسكو في عام ١٩٩٦؟", "db_id": "csu_1"}
{"question": "What is the campus fee for San Francisco State University in 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996", "arabic": "ما عدد الجامعات التي تكون رسوم الحرم الجامعي لديها أكبر من متوسط رسوم الحرم الجامعي؟", "db_id": "csu_1"}
{"question": "Find the count of universities whose campus fee is greater than the average campus fee.", "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)", "arabic": "كم عدد الجامعات التي لديها رسوم الحرم الجامعي أعلى من المتوسط؟", "db_id": "csu_1"}
{"question": "How many universities have a campus fee higher than average?", "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)", "arabic": "ما عدد الجامعات التي يكون رسم الحرم الجامعي لديها أعلى من متوسط رسوم الحرم الجامعي؟", "db_id": "csu_1"}
{"question": "Find the count of universities whose campus fee is greater than the average campus fee.", "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)", "arabic": "كم عدد الجامعات التي تمتلك رسوم حرم جامعي أعلى من المتوسط؟", "db_id": "csu_1"}
{"question": "How many universities have a campus fee greater than the average?", "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)", "arabic": "أي جامعة في مقاطعة لوس أنجلوس وافتتحت بعد عام ١٩٥٠؟", "db_id": "csu_1"}
{"question": "Which university is in Los Angeles county and opened after 1950?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950", "arabic": "ما هي الحرم الجامعية الموجودة في مقاطعة لوس أنجلوس والتي تم فتحها بعد عام ١٩٥٠؟", "db_id": "csu_1"}
{"question": "What campuses are located in Los Angeles county and opened after 1950?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950", "arabic": "أي عام يمتلك أعلى عدد من الدرجات الممنوحة؟", "db_id": "csu_1"}
{"question": "Which year has the most degrees conferred?", "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1", "arabic": "في أي عام تم منح أكبر عدد من الدرجات؟", "db_id": "csu_1"}
{"question": "In what year was the most degrees conferred?", "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1", "arabic": "أي حرم جامعي يمتلك أكبر عدد من الدرجات الممنوحة على الإطلاق؟", "db_id": "csu_1"}
{"question": "Which campus has the most degrees conferred in all times?", "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1", "arabic": "ما هو الحرم الجامعي الذي تم منح أكبر عدد من الدرجات طوال وجوده؟", "db_id": "csu_1"}
{"question": "What campus has the most degrees  conferrred over its entire existence?", "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1", "arabic": "أي حرم جامعي يمتلك أكبر عدد من الكليات في عام ٢٠٠٣؟", "db_id": "csu_1"}
{"question": "Which campus has the most faculties in year 2003?", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1", "arabic": "أي حرم جامعي يمتلك أكبر عدد من الكليات في عام ٢٠٠٣؟", "db_id": "csu_1"}
{"question": "What campus has the most faculties in 2003?", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1", "arabic": "ما هو متوسط الرسوم على حرم جامعة كاليفورنيا الحكومية في عام ١٩٩٦؟", "db_id": "csu_1"}
{"question": "Find the average fee on a CSU campus in 1996", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996", "arabic": "ما هو متوسط الرسوم لحرم جامعة كاليفورنيا الحكومية في عام ١٩٩٦؟", "db_id": "csu_1"}
{"question": "What is the average fee for a CSU campus in the year of 1996?", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996", "arabic": "ما هو متوسط الرسوم على حرم جامعة كاليفورنيا الحكومية في عام ٢٠٠٥؟", "db_id": "csu_1"}
{"question": "What is the average fee on a CSU campus in 2005?", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005", "arabic": "ما هو متوسط الرسوم لحرم جامعة كاليفورنيا الحكومية في عام ٢٠٠٥؟", "db_id": "csu_1"}
{"question": "What is the average fee for a CSU campus in the year of 2005?", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005", "arabic": "ما مجموع عدد الدرجات الممنوحة بين عامي ١٩٩٨ و ٢٠٠٢؟", "db_id": "csu_1"}
{"question": "report the total number of degrees granted between 1998 and 2002.", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus", "arabic": "كم عدد الدرجات التي منحت بين عامي ١٩٩٨ و ٢٠٠٢؟", "db_id": "csu_1"}
{"question": "how many degrees were conferred between 1998 and 2002?", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus", "arabic": "لكل حرم جامعي في مقاطعة أورانج، أبلغ عن عدد الدرجات الممنوحة بعد عام ٢٠٠٠.", "db_id": "csu_1"}
{"question": "For each Orange county campus, report the number of degrees granted after 2000.", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus", "arabic": "ما هو العدد الإجمالي للدرجات الممنوحة بعد عام ٢٠٠٠ لكل حرم جامعي في مقاطعة أورانج؟", "db_id": "csu_1"}
{"question": "What is the total number of degrees granted after 2000 for each Orange county campus?", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus", "arabic": "ما هي أسماء الحرم الجامعية التي تمتلك أكثر عدد من الكليات في عام ٢٠٠٢ من كل حرم جامعي في مقاطعة أورانج؟", "db_id": "csu_1"}
{"question": "Find the names of the campus which has more faculties in 2002 than every campus in Orange county.", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")", "arabic": "ما هي أسماء الحرم الجامعية التي تمتلك أكثر عدد من الكليات في عام ٢٠٠٢ من العدد الأقصى في مقاطعة أورانج؟", "db_id": "csu_1"}
{"question": "What are the names of the campus that have more faculties in 2002 than the maximum number in Orange county?", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")", "arabic": "أي حرم جامعي كان لديه أكثر من ٤٠٠ تسجيل إجمالي ولكن أكثر من ٢٠٠ تسجيل بدوام كامل في عام ١٩٥٦؟", "db_id": "csu_1"}
{"question": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?", "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200", "arabic": "أي حرم جامعي بدأ في عام ١٩٥٦، ولديه أكثر من ٢٠٠ طالب بدوام كامل، وأكثر من ٤٠٠ طالب مسجل؟", "db_id": "csu_1"}
{"question": "What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled?", "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200", "arabic": "كم حرم جامعي موجود في مقاطعة لوس أنجلوس؟", "db_id": "csu_1"}
{"question": "How many campuses are there in Los Angeles county?", "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"", "arabic": "كم حرم جامعي موجود في مقاطعة لوس أنجلوس؟", "db_id": "csu_1"}
{"question": "How many campuses exist are in the county of LA?", "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"", "arabic": "ما هي قائمة الحرم الجامعية في مقاطعة لوس أنجلوس؟", "db_id": "csu_1"}
{"question": "List the campuses in Los Angeles county.", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "arabic": "ما هي الحرم الجامعية الموجودة في مقاطعة لوس أنجلوس؟", "db_id": "csu_1"}
{"question": "What campuses are in Los Angeles county?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "arabic": "كم عدد الدرجات التي منحت في \"جامعة سان خوسيه\" في عام 2000؟", "db_id": "csu_1"}
{"question": "How many degrees were conferred in \"San Jose State University\" in 2000?", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000", "arabic": "كم عدد الدرجات التي منحت في جامعة سان خوسيه في عام 2000؟", "db_id": "csu_1"}
{"question": "How many degrees were conferred at San Jose State University in 2000?", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000", "arabic": "ما هي الدرجات الممنوحة في جامعة سان فرانسيسكو الحكومية في عام 2001؟", "db_id": "csu_1"}
{"question": "What are the degrees conferred in \"San Francisco State University\" in 2001.", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001", "arabic": "ما هي الدرجات التي منحت في جامعة سان فرانسيسكو الحكومية في عام 2001؟", "db_id": "csu_1"}
{"question": "What degrees were conferred in San Francisco State University in the year 2001?", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001", "arabic": "كم عدد أعضاء هيئة التدريس بالمجموع في عام 2002؟", "db_id": "csu_1"}
{"question": "How many faculty is there in total in the year of 2002?", "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002", "arabic": "كم عدد أعضاء هيئة التدريس بالمجموع في عام 2002؟", "db_id": "csu_1"}
{"question": "How many faculty, in total, are there in the year 2002?", "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002", "arabic": "ما هو عدد خطوط هيئة التدريس في الحرم الجامعي \"جامعة لونغ بيتش\" في عام 2002؟", "db_id": "csu_1"}
{"question": "What is the number of faculty lines in campus \"Long Beach State University\" in 2002?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"", "arabic": "ما هو عدد أعضاء هيئة التدريس في جامعة لونغ بيتش في عام 2002؟", "db_id": "csu_1"}
{"question": "What is the number of faculty at Long Beach State University in 2002?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"", "arabic": "كم عدد خطوط هيئة التدريس في جامعة سان فرانسيسكو في عام 2004؟", "db_id": "csu_1"}
{"question": "How many faculty lines are there in \"San Francisco State University\" in year 2004?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"", "arabic": "كم عدد خطوط هيئة التدريس في جامعة سان فرانسيسكو في عام 2004؟", "db_id": "csu_1"}
{"question": "How many faculty lines are there at San Francisco State University in 2004?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"", "arabic": "ما هي الحرم الجامعية التي تمتلك بين 600 و 1000 خط هيئة تدريسية في عام 2004؟", "db_id": "csu_1"}
{"question": "List the campus that have between 600 and 1000 faculty lines in year 2004.", "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004", "arabic": "ما هي الحرم الجامعية التي كانت لديها بين 600 و 1000 عضو هيئة تدريسية في عام 2004؟", "db_id": "csu_1"}
{"question": "What are the campuses that had between 600 and 1000 faculty members in 2004?", "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004", "arabic": "كم عدد خطوط هيئة التدريس في الجامعة التي منحت أكبر عدد من الدرجات في عام 2002؟", "db_id": "csu_1"}
{"question": "How many faculty lines are there in the university that conferred the most number of degrees in year 2002?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1", "arabic": "كم كان عدد أعضاء هيئة التدريس في الجامعة التي منحت أكبر عدد من الدرجات في عام 2002؟", "db_id": "csu_1"}
{"question": "How many faculty members did the university that conferred the most degrees in 2002 have?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1", "arabic": "كم عدد خطوط هيئة التدريس في الجامعة التي منحت أقل عدد من الدرجات في عام 2001؟", "db_id": "csu_1"}
{"question": "How many faculty lines are there in the university that conferred the least number of degrees in year 2001?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1", "arabic": "كم عدد أعضاء هيئة التدريس في الجامعة التي منحت أقل عدد من الدرجات في عام 2001؟", "db_id": "csu_1"}
{"question": "How many faculty members are at the university that gave the least number of degrees in 2001?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1", "arabic": "كم عدد الطلاب الجامعيين في جامعة سان خوسيه في عام 2004؟", "db_id": "csu_1"}
{"question": "How many undergraduates are there in \"San Jose State University\" in year 2004?", "query": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\"", "arabic": "كم عدد طلاب الدراسات الجامعية في جامعة سان خوسيه؟", "db_id": "csu_1"}
{"question": "How many undergraduates are there at San Jose State", "query": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\"", "arabic": "ما هو عدد الخريجين في جامعة سان فرانسيسكو الحكومية في عام 2004؟", "db_id": "csu_1"}
{"question": "What is the number of graduates in \"San Francisco State University\" in year 2004?", "query": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"", "arabic": "كم شخص تخرج من جامعة سان فرانسيسكو الحكومية في عام 2004؟", "db_id": "csu_1"}
{"question": "How many people graduated from San Francisco State University in 2004?", "query": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"", "arabic": "ما هي رسوم الحرم الجامعي لجامعة سان فرانسيسكو في عام 2000؟", "db_id": "csu_1"}
{"question": "What is the campus fee of \"San Francisco State University\" in year 2000?", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000", "arabic": "في عام 2000، ما هي رسوم الحرم الجامعي لجامعة سان فرانسيسكو؟", "db_id": "csu_1"}
{"question": "In the year 2000, what is the campus fee for San Francisco State University?", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000", "arabic": "ما هي رسوم الحرم الجامعي لجامعة سان خوسيه في عام 2000؟", "db_id": "csu_1"}
{"question": "Find the campus fee of \"San Jose State University\" in year 2000.", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000", "arabic": "ما هي رسوم الحرم الجامعي في عام 2000 لجامعة سان خوسيه؟", "db_id": "csu_1"}
{"question": "What is the campus fee in the year 2000 for San Jose State University?", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000", "arabic": "كم حرمًا جامعيًا لنظام جامعات ولاية كاليفورنيا (CSU)؟", "db_id": "csu_1"}
{"question": "How many CSU campuses are there?", "query": "SELECT count(*) FROM campuses", "arabic": "ما هو إجمالي عدد الحرم الجامعية؟", "db_id": "csu_1"}
{"question": "What is the total number of campuses?", "query": "SELECT count(*) FROM campuses", "arabic": "كم عدد المرشحين؟", "db_id": "csu_1"}
{"question": "How many candidates are there?", "query": "SELECT count(*) FROM candidate", "arabic": "عدد المرشحين؟", "db_id": "candidate_poll"}
{"question": "Count the number of candidates.", "query": "SELECT count(*) FROM candidate", "arabic": "أي مصدر استطلاع أراء قدم أكبر عدد من معلومات المرشح؟", "db_id": "candidate_poll"}
{"question": "Which poll resource provided the most number of candidate information?", "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو مصدر الاستطلاع المرتبط بأكبر عدد من المرشحين؟", "db_id": "candidate_poll"}
{"question": "Return the poll resource associated with the most candidates.", "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أعلى 3 معدلات دعم؟", "db_id": "candidate_poll"}
{"question": "what are the top 3 highest support rates?", "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3", "arabic": "ما هي أعلى 3 معدلات دعم؟", "db_id": "candidate_poll"}
{"question": "Return the top 3 greatest support rates.", "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3", "arabic": "ما هو معرف المرشح الذي حصل على أقل معدل معارضة؟", "db_id": "candidate_poll"}
{"question": "Find the id of the candidate who got the lowest oppose rate.", "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1", "arabic": "ما هو معرف المرشح الذي لديه أدنى معدل معارضة؟", "db_id": "candidate_poll"}
{"question": "What is the id of the candidate with the lowest oppose rate?", "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1", "arabic": "من فضلك قم بسرد معدلات الدعم، النظر، والمعارضة لكل مرشح بترتيب تصاعدي حسب معدل عدم اليقين.", "db_id": "candidate_poll"}
{"question": "Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.", "query": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate", "arabic": "ما هي معدلات الدعم، النظر، والمعارضة لكل مرشح، مرتبة تصاعدياً حسب معدل عدم اليقين؟", "db_id": "candidate_poll"}
{"question": "What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?", "query": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate", "arabic": "من أي مصدر استطلاع يأتي أعلى معدل معارضة؟", "db_id": "candidate_poll"}
{"question": "which poll source does the highest oppose rate come from?", "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1", "arabic": "ما هو مصدر الاستطلاع المتعلق بالمرشح الذي يحمل معدل المعارضة؟", "db_id": "candidate_poll"}
{"question": "Return the poll source corresponding to the candidate who has the oppose rate.", "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1", "arabic": "اذكر جميع أسماء الأشخاص بترتيب تاريخ ميلادهم من الأكبر إلى الأصغر.", "db_id": "candidate_poll"}
{"question": "List all people names in the order of their date of birth from old to young.", "query": "SELECT name FROM people ORDER BY date_of_birth", "arabic": "ما هي أسماء جميع الأشخاص، مرتبة حسب تاريخ ميلادهم؟", "db_id": "candidate_poll"}
{"question": "What are the names of all people, ordered by their date of birth?", "query": "SELECT name FROM people ORDER BY date_of_birth", "arabic": "ما هو متوسط الطول والوزن لجميع الذكور (الجنس هو M)؟", "db_id": "candidate_poll"}
{"question": "Find the average height and weight for all males (sex is M).", "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'", "arabic": "ما هو متوسط الطول والوزن بين الذكور (الجنس هو M)؟", "db_id": "candidate_poll"}
{"question": "What are the average height and weight across males (sex is M)?", "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'", "arabic": "ما هي أسماء الأشخاص الذين يتجاوزون الطول 200 أو يقلون عن 190؟", "db_id": "candidate_poll"}
{"question": "find the names of people who are taller than 200 or lower than 190.", "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190", "arabic": "ما هي أسماء الأشخاص الذين لديهم طول أكبر من 200 أو أقل من 190؟", "db_id": "candidate_poll"}
{"question": "What are the names of people who have a height greater than 200 or less than 190?", "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190", "arabic": "ما هو المتوسط والحد الأدنى للوزن لكل جنس؟", "db_id": "candidate_poll"}
{"question": "Find the average and minimum weight for each gender.", "query": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex", "arabic": "ما هي الأوزان المتوسطة والحد الأدنى للأشخاص من كل جنس؟", "db_id": "candidate_poll"}
{"question": "What are the average and minimum weights for people of each sex?", "query": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex", "arabic": "ما هو اسم وجنس المرشح الذي حصل على أعلى معدل دعم؟", "db_id": "candidate_poll"}
{"question": "Find the name and gender of the candidate who got the highest support rate.", "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1", "arabic": "ما هو اسم وجنس المرشح الذي يحمل أعلى معدل دعم؟", "db_id": "candidate_poll"}
{"question": "What is the name and sex of the candidate with the highest support rate?", "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1", "arabic": "ما هي أسماء المرشحين الذين يكون نسبة الاعتراض لديهم الأقل لكل جنس؟", "db_id": "candidate_poll"}
{"question": "Find the name of the candidates whose oppose percentage is the lowest for each sex.", "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex", "arabic": "لكل جنس، ما هي الاسماء والجنس للمرشح الذي لديه نسبة الاعتراض لجنسه؟", "db_id": "candidate_poll"}
{"question": "For each sex, what is the name and sex of the candidate with the oppose rate for their sex?", "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex", "arabic": "أي جنس حصل على أعلى متوسط لنسبة الشك؟", "db_id": "candidate_poll"}
{"question": "which gender got the highest average uncertain ratio.", "query": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1", "arabic": "ما هو جنس المرشح الذي كانت نسبة الشك لديه أعلى؟", "db_id": "candidate_poll"}
{"question": "What is the sex of the candidate who had the highest unsure rate?", "query": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1", "arabic": "ما هي أسماء الأشخاص الذين لم يشاركوا في انتخابات المرشحين؟", "db_id": "candidate_poll"}
{"question": "what are the names of people who did not participate in the candidate election.", "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)", "arabic": "ما هي أسماء الأشخاص الذين لم يشاركوا في انتخابات المرشحين؟", "db_id": "candidate_poll"}
{"question": "Give the names of people who did not participate in the candidate election.", "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)", "arabic": "ما هي أسماء المرشحين الذين نسبة دعمهم أقل من نسبة معارضتهم؟", "db_id": "candidate_poll"}
{"question": "Find the names of the candidates whose support percentage is lower than their oppose rate.", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate", "arabic": "ما هي أسماء المرشحين الذين لديهم نسبة دعم أقل من نسبة المعارضة؟", "db_id": "candidate_poll"}
{"question": "What are the names of candidates who have a lower support rate than oppose rate?", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate", "arabic": "كم عدد الأشخاص الذين يزيد وزنهم عن 85 لكل جنس؟", "db_id": "candidate_poll"}
{"question": "how many people are there whose weight is higher than 85 for each gender?", "query": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex", "arabic": "عدّ عدد الأشخاص لكل جنس الذين يزيد وزنهم عن 85.", "db_id": "candidate_poll"}
{"question": "Count the number of people of each sex who have a weight higher than 85.", "query": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex", "arabic": "ما هي أعلى نسبة دعم، أدنى معدل اعتبار، ومعدل معارضة لجميع المرشحين؟", "db_id": "candidate_poll"}
{"question": "find the highest support percentage, lowest consider rate and oppose rate of all candidates.", "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate", "arabic": "ما هي أقصى نسبة دعم، أدنى معدل اعتبار، وأدنى معدل معارضة عبر جميع المرشحين؟", "db_id": "candidate_poll"}
{"question": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?", "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate", "arabic": "ما هي أسماء جميع المرشحات (جنسهن أنثى) مرتبة ترتيباً أبجدياً؟", "db_id": "candidate_poll"}
{"question": "list all female (sex is F) candidate names in the alphabetical order.", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name", "arabic": "ما هي أسماء جميع المرشحات الإناث مرتبة ترتيباً أبجدياً (الجنس هو F)؟", "db_id": "candidate_poll"}
{"question": "What are the names of all female candidates in alphabetical order (sex is F)?", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name", "arabic": "ما هو اسم الأشخاص الذين يكون طولهم أقل من المتوسط؟", "db_id": "candidate_poll"}
{"question": "find the name of people whose height is lower than the average.", "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)", "arabic": "ما هي أسماء الأشخاص الذين أقل طولهم من المتوسط؟", "db_id": "candidate_poll"}
{"question": "What are the names of people who are shorter than average?", "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)", "arabic": "ما هي جميع المعلومات حول جميع الأشخاص؟", "db_id": "candidate_poll"}
{"question": "List all info about all people.", "query": "SELECT * FROM people", "arabic": "ما هي جميع المعلومات حول جميع الأشخاص؟", "db_id": "candidate_poll"}
{"question": "What is all the information about all people?", "query": "SELECT * FROM people", "arabic": "ما هي عناوين جميع الأفلام التي أخرجها ستيفن سبيلبرغ؟", "db_id": "candidate_poll"}
{"question": "Find the titles of all movies directed by steven spielberg.", "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'", "arabic": "ما هي أسماء جميع الأفلام التي أخرجها ستيفن سبيلبرغ؟", "db_id": "movie_1"}
{"question": "What are the names of all movies directed by Steven Spielberg?", "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'", "arabic": "ما هو اسم الفيلم الذي تم إنتاجه بعد عام 2000 وأخرجه جيمس كاميرون؟", "db_id": "movie_1"}
{"question": "What is the name of the movie produced after 2000 and directed by James Cameron?", "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000", "arabic": "ما هي عناوين جميع الأفلام التي أخرجها جيمس كاميرون بعد عام ٢٠٠٠؟", "db_id": "movie_1"}
{"question": "What are the titles of all movies that James Cameron directed after 2000?", "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000", "arabic": "كم عدد الأفلام التي تم إنتاجها قبل عام ٢٠٠٠؟", "db_id": "movie_1"}
{"question": "How many movies were made before 2000?", "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000", "arabic": "كم فيلم تم إنتاجه قبل عام ٢٠٠٠؟", "db_id": "movie_1"}
{"question": "How many movies were made before 2000?", "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000", "arabic": "من هو المخرج لفيلم أفاتار؟", "db_id": "movie_1"}
{"question": "Who is the director of movie Avatar?", "query": "SELECT director FROM Movie WHERE title  = 'Avatar'", "arabic": "من أخرج فيلم أفاتار؟", "db_id": "movie_1"}
{"question": "Who directed Avatar?", "query": "SELECT director FROM Movie WHERE title  = 'Avatar'", "arabic": "كم مراجع قاموا بالتدرج؟", "db_id": "movie_1"}
{"question": "How many reviewers listed?", "query": "SELECT count(*) FROM Reviewer", "arabic": "كم عدد المراجعين؟", "db_id": "movie_1"}
{"question": "How many reviewers are there?", "query": "SELECT count(*) FROM Reviewer", "arabic": "ما هو معرف المراجع الذي يحتوي اسمه على النص \"مايك\"؟", "db_id": "movie_1"}
{"question": "What is the id of the reviewer whose name has substring “Mike”?", "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"", "arabic": "ما هو معرف المراجع الذي يتضمن اسمه كلمة \"مايك\"؟", "db_id": "movie_1"}
{"question": "What is the id of the reviewer whose name includes the word \"Mike\"?", "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"", "arabic": "ما هو معرف المراجع لدانيال لويس؟", "db_id": "movie_1"}
{"question": "What is the reviewer id of Daniel Lewis?", "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"", "arabic": "ما هو معرف المراجع الذي يدعى دانيال لويس؟", "db_id": "movie_1"}
{"question": "What is the id of the reviewer named Daniel Lewis?", "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"", "arabic": "ما هو إجمالي عدد التقييمات التي تحمل أكثر من 3 نجوم؟", "db_id": "movie_1"}
{"question": "What is the total number of ratings that has more than 3 stars?", "query": "SELECT count(*) FROM Rating WHERE stars  >  3", "arabic": "كم عدد تقييمات الأفلام التي تمتلك أكثر من 3 نجوم؟", "db_id": "movie_1"}
{"question": "How many movie ratings have more than 3 stars?", "query": "SELECT count(*) FROM Rating WHERE stars  >  3", "arabic": "ما هي أقل وأعلى تقييم نجمة؟", "db_id": "movie_1"}
{"question": "What is the lowest and highest rating star?", "query": "SELECT max(stars) ,  min(stars) FROM Rating", "arabic": "ما هو الحد الأقصى والحد الأدنى لعدد النجوم التي يمكن أن يتلقى تقييم؟", "db_id": "movie_1"}
{"question": "What is the maximum and mininum number of stars a rating can receive?", "query": "SELECT max(stars) ,  min(stars) FROM Rating", "arabic": "ابحث عن جميع السنوات التي فيها فيلم حصل على تقييم 4 أو 5، وقم بترتيبها تصاعدياً حسب السنة.", "db_id": "movie_1"}
{"question": "Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year.", "query": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year", "arabic": "في أي سنوات تلقت فيها فيلم تقييمًا بنجمتين أو خمس نجوم، واذكر السنوات من الأقدم إلى الأحدث؟", "db_id": "movie_1"}
{"question": "In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently?", "query": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year", "arabic": "ما هي أسماء المخرجين الذين أخرجوا أفلامًا حصلت على تقييم بخمس نجوم؟ كما عودونا بأن يتم إرجاع عناوين هذه الأفلام.", "db_id": "movie_1"}
{"question": "What are the names of directors who directed movies with 5 star rating? Also return the title of these movies.", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5", "arabic": "ما هي أسماء المخرجين الذين أنشأوا فيلمًا بتقييم بخمس نجوم، وما هي أسماء تلك الأفلام؟", "db_id": "movie_1"}
{"question": "What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5", "arabic": "ما هو متوسط تقييم النجوم لكل مراجع؟", "db_id": "movie_1"}
{"question": "What is the average rating star for each reviewer?", "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name", "arabic": "ما هو المتوسط ​​لعدد النجوم التي يمنحها كل مراجع لفيلم؟", "db_id": "movie_1"}
{"question": "What is the average number of stars that each reviewer awards for a movie?", "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name", "arabic": "ما هي عناوين جميع الأفلام التي ليست لديها تقييمات؟", "db_id": "movie_1"}
{"question": "Find the titles of all movies that have no ratings.", "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)", "arabic": "ما هي عناوين جميع الأفلام التي لم يتم تقييمها؟", "db_id": "movie_1"}
{"question": "What are the titles of all movies that have not been rated?", "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)", "arabic": "ما هي أسماء جميع المراجعين الذين لديهم تقييمات بقيمة NULL للتاريخ؟", "db_id": "movie_1"}
{"question": "Find the names of all reviewers who have ratings with a NULL value for the date.", "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\"", "arabic": "ما هي الأسماء المختلفة لجميع المراجعين الذين لا تحتوي تقييماتهم على حقل تاريخ؟", "db_id": "movie_1"}
{"question": "What are the different names of all reviewers whose ratings do not have a date field?", "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\"", "arabic": "ما هو متوسط تقييم النجوم والعنوان لأقدم فيلم؟", "db_id": "movie_1"}
{"question": "What is the average rating stars and title for the oldest movie?", "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)", "arabic": "بالنسبة لأقدم فيلم مدرج، ما هو متوسط التقييم والعنوان؟", "db_id": "movie_1"}
{"question": "For the oldest movie listed, what is its average rating and title?", "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)", "arabic": "ما هو اسم أحدث فيلم؟", "db_id": "movie_1"}
{"question": "What is the name of the most recent movie?", "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)", "arabic": "ما هو عنوان أحدث فيلم؟", "db_id": "movie_1"}
{"question": "What is the title of the newest movie?", "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)", "arabic": "ما هو أقصى عدد للنجوم والسنة لأحدث فيلم؟", "db_id": "movie_1"}
{"question": "What is the maximum stars and year for the most recent movie?", "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)", "arabic": "ما هو أعلى تقييم لأحدث فيلم ومتى تم إصداره؟", "db_id": "movie_1"}
{"question": "What is highest rating for the most recent movie and when was it released?", "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)", "arabic": "ما هي أسماء الأفلام التي تم إنشاؤها بعد جميع أفلام المخرج ستيفن سبيلبرج؟", "db_id": "movie_1"}
{"question": "What is the names of movies whose created year is after all movies directed by Steven Spielberg?", "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")", "arabic": "ما هي أسماء جميع الأفلام التي تم إنشاؤها بعد أحدث فيلم لستيفن سبيلبرغ؟", "db_id": "movie_1"}
{"question": "What are the names of all movies that were created after the most recent Steven Spielberg film?", "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")", "arabic": "ما هي عناوين ومخرجي الأفلام التي تتمتع بنجمة أعلى من متوسط نجوم الأفلام التي أخرجها جيمس كاميرون؟", "db_id": "movie_1"}
{"question": "What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by James Cameron?", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")", "arabic": "ما هي عناوين ومخرجي الأفلام التي لديها تقييم أعلى من متوسط تقييمات أفلام جيمس كاميرون؟", "db_id": "movie_1"}
{"question": "What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating?", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")", "arabic": "ما هي أسماء المراجعين، وعناوين الأفلام، وعدد النجوم، وتاريخ التقييم؟ وقم بفرز البيانات أولاً حسب اسم المراجع، ثم حسب عنوان الفيلم، وأخيرًا حسب عدد النجوم.", "db_id": "movie_1"}
{"question": "Return reviewer name, movie title, stars, and ratingDate. And sort the data first by reviewer name, then by movie title, and lastly by number of stars.", "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars", "arabic": "ما هو اسم المراجع، عنوان الفيلم، تقييم الفيلم، وتاريخ التقييم لكل فيلم، مرتبة حسب اسم المراجع، عنوان الفيلم، ثم أخيرًا التقييم؟", "db_id": "movie_1"}
{"question": "What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?", "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars", "arabic": "ما هي أسماء جميع المراجعين الذين قدموا ثلاث تقييمات أو أكثر؟", "db_id": "movie_1"}
{"question": "Find the names of all reviewers who have contributed three or more ratings.", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3", "arabic": "ما هي أسماء جميع المراجعين الذين قاموا بتقييم ثلاثة أو أكثر من الأفلام؟", "db_id": "movie_1"}
{"question": "What are the names of all reviewers that have rated 3 or more movies?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3", "arabic": "ما هي أسماء جميع المراجعين الذين قيموا فيلم Gone with the Wind؟", "db_id": "movie_1"}
{"question": "Find the names of all reviewers who rated Gone with the Wind.", "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'", "arabic": "ما هي أسماء جميع المراجعين المختلفين الذين قيموا فيلم Gone with the Wind؟", "db_id": "movie_1"}
{"question": "What are the names of all the different reviewers who rates Gone with the Wind?", "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'", "arabic": "ما هي أسماء جميع المخرجين الذين قامت سارة مارتينيز بتقييم أفلامهم؟", "db_id": "movie_1"}
{"question": "Find the names of all directors whose movies are rated by Sarah Martinez.", "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'", "arabic": "ما هي أسماء جميع المخرجين الذين تمت مراجعة أفلامهم من قبل سارة مارتينيز؟", "db_id": "movie_1"}
{"question": "What are the names of all directors whose movies have been reviewed by Sarah Martinez?", "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'", "arabic": "لأي تقييم حيث يكون اسم المراجع هو نفسه كمخرج الفيلم، ارجع اسم المراجع، عنوان الفيلم، وعدد النجوم.", "db_id": "movie_1"}
{"question": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name", "arabic": "ما هي أسماء المراجعين المختلفة، وعناوين الأفلام، والنجوم لكل تقييم حيث كان اسم المراجع هو نفس اسم المخرج؟", "db_id": "movie_1"}
{"question": "What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director?", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name", "arabic": "ما هي أسماء جميع المراجعين وأسماء الأفلام معًا في قائمة واحدة؟", "db_id": "movie_1"}
{"question": "Return all reviewer names and movie names together in a single list.", "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie", "arabic": "ما هي أسماء جميع المراجعين وأسماء الأفلام؟", "db_id": "movie_1"}
{"question": "What are the names of all the reviewers and movie names?", "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie", "arabic": "ما هي عناوين جميع الأفلام التي لم يتم مراجعتها بواسطة كريس جاكسون؟", "db_id": "movie_1"}
{"question": "Find the titles of all movies not reviewed by Chris Jackson.", "query": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'", "arabic": "ما هي عناوين جميع الأفلام التي لم يتم مراجعتها بواسطة كريس جاكسون؟", "db_id": "movie_1"}
{"question": "What are the titles of all movies that were not reviewed by Chris Jackson?", "query": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'", "arabic": "لجميع المخرجين الذين أخرجوا أكثر من فيلم واحد، ارجع أعناوين جميع الأفلام التي أخرجوها، بالإضافة إلى اسم المخرج. قم بالفرز حسب اسم المخرج، ثم عنوان الفيلم.", "db_id": "movie_1"}
{"question": "For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.", "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title", "arabic": "لجميع المخرجين الذين قاموا بإخراج أكثر من فيلم واحد، ما هي الأفلام التي قاموا بإخراجها وما هي أسماءهم؟", "db_id": "movie_1"}
{"question": "For all directors who have directed more than one movie, what movies have they directed and what are their names?", "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title", "arabic": "للمخرجين الذين أخرجوا أكثر من فيلم واحد، ارجع أعناوين وسنوات إنتاج جميع الأفلام التي أخرجوها.", "db_id": "movie_1"}
{"question": "For directors who had more than one movie, return the titles and produced years of all movies directed by them.", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title", "arabic": "لكل مخرج قاد أكثر من فيلم واحد، ما هي عناوين وتواريخ الإصدار لكل هذه الأفلام؟", "db_id": "movie_1"}
{"question": "For each director who directed more than one movie, what are the titles and dates of release for all those movies?", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title", "arabic": "ما هي أسماء المخرجين الذين قاموا بإنتاج فيلم واحد تمامًا؟", "db_id": "movie_1"}
{"question": "What are the names of the directors who made exactly one movie?", "query": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1", "arabic": "ما هي أسماء جميع المخرجين الذين أنتجوا فيلمًا واحدًا؟", "db_id": "movie_1"}
{"question": "What are the names of all directors who made one movie?", "query": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1", "arabic": "ما هي أسماء المخرجين الذين أنتجوا فيلمًا واحدًا باستثناء المخرج المعتمد كقيمة NULL؟", "db_id": "movie_1"}
{"question": "What are the names of the directors who made exactly one movie excluding director NULL?", "query": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1", "arabic": "ما هي أسماء جميع المخرجين الذين أنتجوا فيلمًا واحدً باستثناء المخرج المسمى NULL؟", "db_id": "movie_1"}
{"question": "What are the names of all directors who have made one movie except for the director named NULL?", "query": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1", "arabic": "كم عدد مراجعات الأفلام التي يحصل عليها كل مخرج؟", "db_id": "movie_1"}
{"question": "How many movie reviews does each director get?", "query": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director", "arabic": "كم عدد المراجعات التي تلقاها كل مخرج؟", "db_id": "movie_1"}
{"question": "For each director, how many reviews have they received?", "query": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director", "arabic": "ما هي الأفلام ذات التقييم المتوسط الأعلى؟ الرجاء إرجاع عناوين الأفلام والتقييم المتوسط.", "db_id": "movie_1"}
{"question": "Find the movies with the highest average rating. Return the movie titles and average rating.", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1", "arabic": "ما هي عناوين الأفلام ذات التقييم المتوسط الأعلى وما هي تلك التقييمات؟", "db_id": "movie_1"}
{"question": "What are the movie titles with the highest average rating and what are those ratings?", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1", "arabic": "ما هي عناوين الأفلام والتقييم المتوسط للأفلام ذات أدنى تقييم متوسط؟", "db_id": "movie_1"}
{"question": "What are the movie titles and average rating of the movies with the lowest average rating?", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1", "arabic": "ما هي عناوين الأفلام وتقييماتها المتوسطة لجميع الأفلام التي تمتلك أدنى تقييم متوسط؟", "db_id": "movie_1"}
{"question": "What are the titles and average ratings for all movies that have the lowest average rating?", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1", "arabic": "ما هي أسماء وسنوات الأفلام التي تحتوي على أعلى ثلاث تقييمات نجمية؟", "db_id": "movie_1"}
{"question": "What are the names and years of the movies that has the top 3 highest rating star?", "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3", "arabic": "ما هي أسماء الأفلام وسنوات الإصدار للأفلام التي حصلت على أعلى ثلاث تقييمات؟", "db_id": "movie_1"}
{"question": "What are the names and years released for the movies with the top 3 highest ratings?", "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3", "arabic": "لكل مخرج، ما هو اسم المخرج بالإضافة إلى عنوان الفيلم الذي أخرجه والذي حصل على أعلى تقييم بين جميع أفلامه، وقيمة ذلك التقييم. تجاهل الأفلام التي يكون مخرجها NULL.", "db_id": "movie_1"}
{"question": "For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director", "arabic": "لكل مخرج، ما هي أسماء الأفلام والتقييمات لجميع الأفلام التي قاموا بمراجعتها؟", "db_id": "movie_1"}
{"question": "For each director, what are the titles and ratings for all the movies they reviewed?", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director", "arabic": "ما هو عنوان الفيلم وتقييم النجوم للفيلم الذي حصل على أقل تقييم نجوم لكل مراجع؟", "db_id": "movie_1"}
{"question": "Find the title and star rating of the movie that got the least rating star for each reviewer.", "query": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID", "arabic": "لكل معرف للمراجع، ما هو عنوان الفيلم والتقييم للفيلم الذي يحمل أقل تقييم؟", "db_id": "movie_1"}
{"question": "For each reviewer id, what is the title and rating for the movie with the smallest rating?", "query": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID", "arabic": "لكل مخرج، ما هو عنوان الفيلم والتقييم للفيلم الذي يحمل أدنى تقييم بين جميع الأفلام التي أخرجها؟", "db_id": "movie_1"}
{"question": "Find the title and score of the movie with the lowest rating among all movies directed by each director.", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director", "arabic": "لكل مخرج، ما هو عنوان الفيلم والتقييم لأسوأ فيلم لهم؟", "db_id": "movie_1"}
{"question": "For each director, what is the title and score of their most poorly rated movie?", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director", "arabic": "ما هو اسم الفيلم الذي تم تقييمه معظم الأوقات؟", "db_id": "movie_1"}
{"question": "What is the name of the movie that is rated by most of times?", "query": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم الفيلم الذي تمت مراجعته الأكثر؟", "db_id": "movie_1"}
{"question": "What is the name of the movie that has been reviewed the most?", "query": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي عناوين جميع الأفلام التي تتراوح تقييماتها بين 3 و 5 نجوم؟", "db_id": "movie_1"}
{"question": "What are the titles of all movies that have rating star is between 3 and 5?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5", "arabic": "ما هي عناوين جميع الأفلام التي تحمل بين 3 و 5 نجوم؟", "db_id": "movie_1"}
{"question": "What are the titles of all movies that have between 3 and 5 stars?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5", "arabic": "ما هي أسماء المراجعين الذين قدموا تقييمات تزيد عن 3 نجوم؟", "db_id": "movie_1"}
{"question": "Find the names of reviewers who had given higher than 3 star ratings.", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3", "arabic": "ما هي أسماء المراجعين الذين قد قيموا فيلمًا بأكثر من 3 نجوم من قبل؟", "db_id": "movie_1"}
{"question": "What are the names of the reviewers who have rated a movie more than 3 stars before?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3", "arabic": "ما هو تقييم النجوم المتوسط لكل فيلم غير المراجع من قبل بريتاني هاريس؟", "db_id": "movie_1"}
{"question": "Find the average rating star for each movie that are not reviewed by Brittany Harris.", "query": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID", "arabic": "ما هو تقييم النجوم المتوسط لكل فيلم لم يتم مراجعته من قبل بريتاني هاريس؟", "db_id": "movie_1"}
{"question": "What is the average rating for each movie that has never been reviewed by Brittany Harris?", "query": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID", "arabic": "ما هي معرّفات الأفلام التي لم يتم مراجعتها من قبل بريتاني هاريس؟", "db_id": "movie_1"}
{"question": "What are the ids of the movies that are not reviewed by Brittany Harris.", "query": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\"", "arabic": "ما هي معرّفات جميع الأفلام التي لم يتم مراجعتها من قبل بريتاني هاريس؟", "db_id": "movie_1"}
{"question": "What are the ids of all moviest hat have not been reviewed by Britanny Harris?", "query": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\"", "arabic": "ما هو تقييم النجوم المتوسط لكل فيلم حصل على ما لا يقل عن تقييمين؟", "db_id": "movie_1"}
{"question": "Find the average rating star for each movie that received at least 2 ratings.", "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2", "arabic": "لكل فيلم تلقى أكثر من 3 مراجعات، ما هو التقييم المتوسط؟", "db_id": "movie_1"}
{"question": "For each movie that received more than 3 reviews, what is the average rating?", "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2", "arabic": "ما هي معرّفات المراجعين الذين لم يقدّموا تقييم بـ 4 نجوم؟", "db_id": "movie_1"}
{"question": "find the ids of reviewers who did not give 4 star.", "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4", "arabic": "ما هي معرّفات جميع المراجعين الذين لم يقدّموا تقييم بـ 4 نجوم؟", "db_id": "movie_1"}
{"question": "What are the ids of all reviewers who did not give 4 stars?", "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4", "arabic": "ما هي معرّفات المراجعين الذين لم يقدّموا فقط تقييم بـ 4 نجوم؟", "db_id": "movie_1"}
{"question": "Find the ids of reviewers who didn't only give 4 star.", "query": "SELECT rID FROM Rating WHERE stars != 4", "arabic": "ما هي معرّفات جميع المراجعين الذين لم يقدّموا تقييم بـ 4 نجوم على الأقل مرة واحدة؟", "db_id": "movie_1"}
{"question": "What are the ids of all reviewers who have not given 4 stars at least once?", "query": "SELECT rID FROM Rating WHERE stars != 4", "arabic": "ما هي أسماء الأفلام التي تم إنتاجها بعد عام 2000 أو تمت مراجعتها من قبل بريتاني هاريس؟", "db_id": "movie_1"}
{"question": "What are names of the movies that are either made after 2000 or reviewed by Brittany Harris?", "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000", "arabic": "ما هي أسماء جميع الأفلام التي تم إنتاجها بعد عام 2000 أو تمت مراجعتها من قبل بريتاني هاريس؟", "db_id": "movie_1"}
{"question": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?", "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000", "arabic": "ما هي أسماء الأفلام التي تم إنتاجها قبل عام 1980 أو تم إخراجها من قبل جيمس كاميرون؟", "db_id": "movie_1"}
{"question": "What are names of the movies that are either made before 1980 or directed by James Cameron?", "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980", "arabic": "ما هي أسماء جميع الأفلام التي تم إنتاجها قبل عام 1980 أو التي كان جيمس كاميرون مخرجًا لها؟", "db_id": "movie_1"}
{"question": "What are the names of all movies made before 1980 or had James Cameron as the director?", "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980", "arabic": "ما هي أسماء المراجعين الذين قد قيموا بـ 3 نجوم و 4 نجوم؟", "db_id": "movie_1"}
{"question": "What are the names of reviewers who had rated 3 star and 4 star?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4", "arabic": "ما هي أسماء جميع المراجعين الذين قد قاموا بتقييم 3 أو 4 نجوم للمراجعات؟", "db_id": "movie_1"}
{"question": "What are the names of all reviewers that have given 3 or 4 stars for reviews?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4", "arabic": "ما هي أسماء الأفلام التي حصلت على تقييم 3 نجوم و 4 نجوم؟", "db_id": "movie_1"}
{"question": "What are the names of movies that get 3 star and 4 star?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4", "arabic": "ما هي أسماء جميع الأفلام التي حصلت على 3 أو 4 نجوم؟", "db_id": "movie_1"}
{"question": "What are the names of all movies that received 3 or 4 stars?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4", "arabic": "كم عدد البلديات؟", "db_id": "movie_1"}
{"question": "How many counties are there?", "query": "SELECT count(*) FROM county_public_safety", "arabic": "عدد الدول؟", "db_id": "county_public_safety"}
{"question": "Count the number of countries.", "query": "SELECT count(*) FROM county_public_safety", "arabic": "اذكر أسماء البلديات بترتيب تنازلي حسب السكان.", "db_id": "county_public_safety"}
{"question": "List the names of counties in descending order of population.", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC", "arabic": "ما هي أسماء مقاطعات السلامة العامة، مرتبة حسب السكان بترتيب تنازلي؟", "db_id": "county_public_safety"}
{"question": "What are the names of the counties of public safety, ordered by population descending?", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC", "arabic": "اذكر القوات الشرطية المتميزة في المقاطعات التي لا تقع مواقعها على الجانب الشرقي.", "db_id": "county_public_safety"}
{"question": "List the distinct police forces of counties whose location is not on east side.", "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"", "arabic": "ما هي القوات الشرطية المختلفة في المقاطعات التي لا تقع في الشرق؟", "db_id": "county_public_safety"}
{"question": "What are the different police forces of counties that are not located in the East?", "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"", "arabic": "ما هي أدنى وأعلى معدل للجريمة في المقاطعات؟", "db_id": "county_public_safety"}
{"question": "What are the minimum and maximum crime rate of counties?", "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety", "arabic": "ما هي أدنى وأعلى معدل للجريمة عبر جميع المقاطعات؟", "db_id": "county_public_safety"}
{"question": "Return the minimum and maximum crime rates across all counties.", "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety", "arabic": "أظهر معدلات الجريمة في المقاطعات بترتيب تصاعدي حسب عدد ضباط الشرطة.", "db_id": "county_public_safety"}
{"question": "Show the crime rates of counties in ascending order of number of police officers.", "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC", "arabic": "ما هي معدلات الجريمة في المقاطعات مرتبة حسب عدد المكاتب بترتيب تصاعدي؟", "db_id": "county_public_safety"}
{"question": "What are the crime rates of counties sorted by number of offices ascending?", "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC", "arabic": "ما هي أسماء المدن مرتبة ترتيباً أبجدياً تصاعدياً؟", "db_id": "county_public_safety"}
{"question": "What are the names of cities in ascending alphabetical order?", "query": "SELECT Name FROM city ORDER BY Name ASC", "arabic": "أعيد أسماء المدن، مرتبة أبجدياً؟", "db_id": "county_public_safety"}
{"question": "Return the names of cities, ordered alphabetically.", "query": "SELECT Name FROM city ORDER BY Name ASC", "arabic": "ما هي نسبة الهسبانيين في المدن التي تتجاوز نسبة السود 10٪؟", "db_id": "county_public_safety"}
{"question": "What are the percentage of hispanics in cities with the black percentage higher than 10?", "query": "SELECT Hispanic FROM city WHERE Black  >  10", "arabic": "أعيد نسبة الهسبانيين للمدن التي تكون فيها نسبة السود أكبر من 10٪؟", "db_id": "county_public_safety"}
{"question": "Return the hispanic percentage for cities in which the black percentage is greater than 10.", "query": "SELECT Hispanic FROM city WHERE Black  >  10", "arabic": "اذكر اسم المقاطعة ذات أكبر تعداد سكاني.", "db_id": "county_public_safety"}
{"question": "List the name of the county with the largest population.", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1", "arabic": "ما هو اسم المقاطعة ذات أكبر تعداد سكاني؟", "db_id": "county_public_safety"}
{"question": "What is the name of the county with the greatest population?", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1", "arabic": "اذكر أسماء المدن ذات أعلى 5 نسب بيضاء؟", "db_id": "county_public_safety"}
{"question": "List the names of the city with the top 5 white percentages.", "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5", "arabic": "ما هي أسماء خمس مدن بأعلى نسبة للأشخاص البيض؟", "db_id": "county_public_safety"}
{"question": "What are the names of the five cities with the greatest proportion of white people?", "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5", "arabic": "أظهر أسماء المدن وأسماء المقاطعات التي تقع فيها.", "db_id": "county_public_safety"}
{"question": "Show names of cities and names of counties they are in.", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "arabic": "ما هي أسماء المدن، بالإضافة إلى أسماء المقاطعات التي تتوافق معها؟", "db_id": "county_public_safety"}
{"question": "What are the names of cities, as well as the names of the counties they correspond to?", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "arabic": "أظهر نسب الأشخاص البيض في المدن ومعدلات الجريمة في المقاطعات التي تقع فيها.", "db_id": "county_public_safety"}
{"question": "Show white percentages of cities and the crime rates of counties they are in.", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "arabic": "ما هي نسب الأشخاص البيض في المدن، ومعدلات الجريمة المقابلة في المقاطعات التي تتوافق معها؟", "db_id": "county_public_safety"}
{"question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "arabic": "أظهر أسماء المدن في المقاطعة التي تحتوي على أكبر عدد من ضباط الشرطة.", "db_id": "county_public_safety"}
{"question": "Show the name of cities in the county that has the largest number of police officers.", "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)", "arabic": "ما هي أسماء المدن التي تقع في المقاطعة التي تحتوي على أكبر عدد من ضباط الشرطة؟", "db_id": "county_public_safety"}
{"question": "What are the names of cities that are in the county with the most police officers?", "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)", "arabic": "أظهر عدد المدن في المقاطعات التي يبلغ تعداد سكانها أكثر من 20000.", "db_id": "county_public_safety"}
{"question": "Show the number of cities in counties that have a population more than 20000.", "query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)", "arabic": "كم عدد المدن في المقاطعات التي يبلغ تعداد سكانها أكثر من 20000؟", "db_id": "county_public_safety"}
{"question": "How many cities are in counties that have populations of over 20000?", "query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)", "arabic": "أظهر معدل الجريمة في المقاطعات التي تحتوي على مدينة تمتلك نسبة بيضاء تزيد عن 90 في المئة.", "db_id": "county_public_safety"}
{"question": "Show the crime rate of counties with a city having white percentage more than 90.", "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90", "arabic": "ما هي معدلات الجريمة في المقاطعات التي تحتوي على مدن تمتلك نسبة بيضاء تزيد عن 90 في المئة؟", "db_id": "county_public_safety"}
{"question": "What are the crime rates of counties that contain cities that have white percentages of over 90?", "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90", "arabic": "من فضلك أظهر قوات الشرطة وعدد المقاطعات التي تتبع كل قوة شرطة.", "db_id": "county_public_safety"}
{"question": "Please show the police forces and the number of counties with each police force.", "query": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force", "arabic": "كم عدد المقاطعات التي تتوافق مع كل قوة شرطة؟", "db_id": "county_public_safety"}
{"question": "How many counties correspond to each police force?", "query": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force", "arabic": "ما هي الموقع المشترك الذي يتقاسمه معظم المقاطعات؟", "db_id": "county_public_safety"}
{"question": "What is the location shared by most counties?", "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي موقع يحتوي على أكبر عدد من المقاطعات المتوافقة؟", "db_id": "county_public_safety"}
{"question": "Which location has the most corresponding counties?", "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي أسماء المقاطعات التي لا تحتوي على أي مدن؟", "db_id": "county_public_safety"}
{"question": "List the names of counties that do not have any cities.", "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)", "arabic": "ما هي أسماء المقاطعات التي لا تحتوي على أي مدن؟", "db_id": "county_public_safety"}
{"question": "What are the names of counties that do not contain any cities?", "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)", "arabic": "ما هي القوة الشرطية المشتركة بين المقاطعات التي تقع مواقعها إلى الشرق والغرب؟", "db_id": "county_public_safety"}
{"question": "Show the police force shared by counties with location on the east and west.", "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\"", "arabic": "أي القوات الشرطية تعمل في كل من المقاطعات التي تقع في الشرق والغرب؟", "db_id": "county_public_safety"}
{"question": "Which police forces operate in both counties that are located in the East and in the West?", "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\"", "arabic": "أظهر أسماء المدن في المقاطعات التي تمتلك معدل جريمة أقل من 100.", "db_id": "county_public_safety"}
{"question": "Show the names of cities in counties that have a crime rate less than 100.", "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)", "arabic": "ما هي أسماء المدن التي تقع في المقاطعات التي لديها معدل جريمة أقل من 100؟", "db_id": "county_public_safety"}
{"question": "What are the names of cities that are in counties that have a crime rate below 100?", "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)", "arabic": "ما هو عبء الحالة للمقاطعات بترتيب تنازلي حسب السكان؟", "db_id": "county_public_safety"}
{"question": "Show the case burden of counties in descending order of population.", "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC", "arabic": "ما هي أعباء الحالة للمقاطعات، مرتبة تنازليًا حسب السكان؟", "db_id": "county_public_safety"}
{"question": "What are the case burdens of counties, ordered descending by population?", "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC", "arabic": "ما هي أسماء جميع الغرف الحديثة التي يكون سعرها الأساسي أقل من 160 دولارًا وتحتوي على سريرين؟", "db_id": "county_public_safety"}
{"question": "Find the names of all modern rooms with a base price below $160 and two beds.", "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';", "arabic": "ما هي أسماء الغرف الحديثة التي لديها سعر أساسي أقل من 160 دولارًا وتحتوي على سريرين؟", "db_id": "inn_1"}
{"question": "What are the names of modern rooms that have a base price lower than $160 and two beds.", "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';", "arabic": "ما هي جميع الغرف التي لديها سعر أعلى من 160 ويمكن استيعاب أكثر من شخصين؟ أبلغ عن أسماء الغرف ومعرّفاتها.", "db_id": "inn_1"}
{"question": "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "arabic": "ما هي أسماء الغرف ومعرّفاتها لجميع الغرف التي تكلف أكثر من 160 ويمكن استيعاب أكثر من شخصين؟", "db_id": "inn_1"}
{"question": "What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "arabic": "ما هي الغرفة الأكثر شعبية في الفندق؟ الغرفة الأكثر شعبية هي الغرفة التي شهدت أكبر عدد من الحجوزات.", "db_id": "inn_1"}
{"question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;", "arabic": "أي غرفة لديها أكبر عدد من الحجوزات؟", "db_id": "inn_1"}
{"question": "Which room has the largest number of reservations?", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;", "arabic": "كم عدد الأطفال الذين يقيمون في الغرف المحجوزة بواسطة ROY SWEAZY؟", "db_id": "inn_1"}
{"question": "How many kids stay in the rooms reserved by ROY SWEAZY?", "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "arabic": "ابحث عن عدد الأطفال الذين يقيمون في الغرف المحجوزة بواسطة شخص يدعى ROY SWEAZ.", "db_id": "inn_1"}
{"question": "Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ.", "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "arabic": "كم مرة حجز ROY SWEAZY غرفة.", "db_id": "inn_1"}
{"question": "How many times does ROY SWEAZY has reserved a room.", "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "arabic": "كم عدد المرات التي قام فيها ROY SWEAZY بحجز غرفة.", "db_id": "inn_1"}
{"question": "Find the number of times ROY SWEAZY has reserved a room.", "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "arabic": "أي غرفة لديها أعلى سعر؟ قم بتسجيل اسم الغرفة بالكامل، والسعر، وتاريخ تسجيل الوصول وتاريخ تسجيل الخروج.", "db_id": "inn_1"}
{"question": "Which room has the highest rate? List the room's full name, rate, check in and check out date.", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "arabic": "ارجع اسم الغرفة، السعر، تاريخ تسجيل الوصول، وتاريخ تسجيل الخروج للغرفة ذات أعلى سعر.", "db_id": "inn_1"}
{"question": "Return the name, rate, check in and check out date for the room with the highest rate.", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "arabic": "كم عدد البالغين الذين يقيمون في الغرفة التي قام CONRAD SELBIG بتسجيل الدخول إليها في 23 أكتوبر 2010؟", "db_id": "inn_1"}
{"question": "How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";", "arabic": "كم عدد البالغين للغرفة المحجوزة والمسجلة من قبل كونراد سيلبيغ في ٢٣ أكتوبر ٢٠١٠؟", "db_id": "inn_1"}
{"question": "Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23, 2010.", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";", "arabic": "كم عدد الأطفال الذين يقيمون في الغرفة التي تم تسجيل داميان تراكسل فيها في ٢١ سبتمبر ٢٠١٠؟", "db_id": "inn_1"}
{"question": "How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21, 2010?", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";", "arabic": "ما هو عدد الأطفال للغرفة المحجوزة والمسجلة من قبل داميان تراكسل في ٢١ سبتمبر ٢٠١٠؟", "db_id": "inn_1"}
{"question": "Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010.", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";", "arabic": "كم عدد أسرّة الملك المتوفرة؟", "db_id": "inn_1"}
{"question": "How many king beds are there?", "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';", "arabic": "ما هو إجمالي عدد أسرّة الملك المتاحة؟", "db_id": "inn_1"}
{"question": "Find the total number of king beds available.", "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';", "arabic": "ما هي أسماء الغرف وديكورها التي تحتوي على سرير ملكي؟ قم بترتيب القائمة حسب السعر.", "db_id": "inn_1"}
{"question": "List the names and decor of rooms that have a king bed. Sort the list by their price.", "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;", "arabic": "ما هي أسماء الغرف وديكورها التي تحتوي على سرير ملكي؟ قم بترتيبها حسب السعر.", "db_id": "inn_1"}
{"question": "What are the names and decor of rooms with a king bed? Sort them by their price", "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;", "arabic": "أي غرفة لديها أدنى سعر أساسي؟ اعرض اسم الغرفة والسعر الأساسي.", "db_id": "inn_1"}
{"question": "Which room has cheapest base price? List the room's name and the base price.", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "arabic": "ما هو اسم الغرفة والسعر الأساسي للغرفة ذات السعر الأدنى؟", "db_id": "inn_1"}
{"question": "What are the room name and base price of the room with the lowest base price?", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "arabic": "ما هو ديكور الغرفة ريكلوز آند ديفايانس؟", "db_id": "inn_1"}
{"question": "What is the decor of room Recluse and defiance?", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";", "arabic": "ما هو ديكور الغرفة التي تحمل اسم \"Recluse and defiance\"؟", "db_id": "inn_1"}
{"question": "Return the decor of the room named \"Recluse and defiance\".", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";", "arabic": "ما هو متوسط السعر الأساسي لأنواع الأسرة المختلفة؟ اعرض نوع السرير والسعر الأساسي المتوسط.", "db_id": "inn_1"}
{"question": "What is the average base price of different bed type? List bed type and average base price.", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "arabic": "من أجل كل نوع سرير، ما هو متوسط السعر الأساسي لأنواع السرير المختلفة؟", "db_id": "inn_1"}
{"question": "For each bed type, find the average base price of different bed type.", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "arabic": "ما هو إجمالي عدد الأشخاص الذين يمكن أن يبقوا في الغرف الحديثة في هذه النزلة؟", "db_id": "inn_1"}
{"question": "What is the total number of people who could stay in the modern rooms in this inn?", "query": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';", "arabic": "كم عدد الأشخاص بالمجموع الذين يمكن أن يبقوا في الغرف الحديثة في هذه النزلة؟", "db_id": "inn_1"}
{"question": "How many people in total can stay in the modern rooms of this inn?", "query": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';", "arabic": "أي نوع من الديكور لديه أقل عدد من الحجوزات؟", "db_id": "inn_1"}
{"question": "What kind of decor has the least number of reservations?", "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;", "arabic": "ما هو نوع الديكور الأقل شعبية؟", "db_id": "inn_1"}
{"question": "What is the least popular kind of decor?", "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;", "arabic": "اذكر كم مرة وصل عدد الأشخاص في الغرفة إلى الحد الأقصى لاستيعاب الغرفة. يشمل عدد الأشخاص البالغين والأطفال.", "db_id": "inn_1"}
{"question": "List how many times the number of people in the room reached the maximum occupancy of the room. The number of people include adults and kids.", "query": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;", "arabic": "كم مرة وصل عدد البالغين والأطفال الذين يقيمون في الغرفة إلى السعة القصوى للغرفة؟", "db_id": "inn_1"}
{"question": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?", "query": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;", "arabic": "ما هي الأسماء الأولى والأخيرة للأشخاص الذين دفعوا أكثر من أسعار الغرف الأساسية؟", "db_id": "inn_1"}
{"question": "Find the first and last names of people who payed more than the rooms' base prices.", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "arabic": "ما هي الأسماء الأولى والأخيرة للأشخاص الذين دفعوا أكثر من أسعار الغرف الأساسية؟", "db_id": "inn_1"}
{"question": "What are the first and last names of people who payed more than the rooms' base prices?", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "arabic": "كم عدد الغرف؟", "db_id": "inn_1"}
{"question": "How many rooms are there?", "query": "SELECT count(*) FROM Rooms;", "arabic": "ما هو العدد الإجمالي للغرف المتاحة في هذه النزلة؟", "db_id": "inn_1"}
{"question": "What is the total number of rooms available in this inn?", "query": "SELECT count(*) FROM Rooms;", "arabic": "ما هو عدد الغرف التي تحتوي على سرير ملكي؟", "db_id": "inn_1"}
{"question": "Find the number of rooms with a king bed.", "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";", "arabic": "كم عدد الغرف التي تحتوي على سرير ملكي؟", "db_id": "inn_1"}
{"question": "How many rooms have a king bed?", "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";", "arabic": "ما هو عدد الغرف لكل نوع من أنواع الأسرة؟", "db_id": "inn_1"}
{"question": "Find the number of rooms for each bed type.", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;", "arabic": "ما هو عدد الغرف لكل نوع من أنواع الأسرة؟", "db_id": "inn_1"}
{"question": "What are the number of rooms for each bed type?", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;", "arabic": "ما هو اسم الغرفة ذات الاحتلال الأقصى؟", "db_id": "inn_1"}
{"question": "Find the name of the room with the maximum occupancy.", "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;", "arabic": "ما هو اسم الغرفة التي يمكن أن تستوعب أكبر عدد من الأشخاص؟", "db_id": "inn_1"}
{"question": "What is the name of the room that can accommodate the most people?", "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;", "arabic": "ما هو رقم الهوية واسم الغرفة ذات أعلى سعر أساسي؟", "db_id": "inn_1"}
{"question": "Find the id and name of the most expensive base price room.", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;", "arabic": "أي غرفة لديها أعلى سعر أساسي؟", "db_id": "inn_1"}
{"question": "Which room has the highest base price?", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;", "arabic": "ما هو نوع السرير واسم كل الغرف التقليدية؟", "db_id": "inn_1"}
{"question": "List the type of bed and name of all traditional rooms.", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "arabic": "ما هو نوع السرير واسم كل الغرف ذات الديكور التقليدي؟", "db_id": "inn_1"}
{"question": "What are the bed type and name of all the rooms with traditional decor?", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "arabic": "ما هو عدد الغرف التي تحتوي على سرير ملكي لكل نوع من أنواع الديكور؟", "db_id": "inn_1"}
{"question": "Find the number of rooms with king bed for each decor type.", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;", "arabic": "كم عدد الغرف التي تحتوي على أسرّة ملكية؟ أبلغ عن العدد لكل نوع من أنواع الديكور.", "db_id": "inn_1"}
{"question": "How many rooms have king beds? Report the number for each decor type.", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;", "arabic": "ما هو متوسط وأدنى سعر للغرف في أنواع مختلفة من الديكور؟", "db_id": "inn_1"}
{"question": "Find the average and minimum price of the rooms in different decor.", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;", "arabic": "ما هو متوسط السعر الأدنى للغرف لكل نوع مختلف من الديكور؟", "db_id": "inn_1"}
{"question": "What is the average minimum and price of the rooms for each different decor.", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;", "arabic": "ما هو اسم كل الغرف مرتبة حسب أسعارها؟", "db_id": "inn_1"}
{"question": "List the name of all rooms sorted by their prices.", "query": "SELECT roomName FROM Rooms ORDER BY basePrice;", "arabic": "قم بترتيب جميع الغرف حسب السعر. فقط أبلغ عن أسماء الغرف.", "db_id": "inn_1"}
{"question": "Sort all the rooms according to the price. Just report the room names.", "query": "SELECT roomName FROM Rooms ORDER BY basePrice;", "arabic": "ما هو عدد الغرف بسعر أعلى من 120 لأنواع مختلفة من الديكور؟", "db_id": "inn_1"}
{"question": "Find the number of rooms with price higher than 120 for different decor.", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;", "arabic": "كم عدد الغرف التي تكلف أكثر من 120، لكل نوع مختلف من الديكور؟", "db_id": "inn_1"}
{"question": "How many rooms cost more than 120, for each different decor?", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;", "arabic": "لكل نوع من أنواع الأسرة، ابحث عن متوسط سعر الغرفة.", "db_id": "inn_1"}
{"question": "For each bed type, find the average room price.", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "arabic": "ما هو متوسط السعر الأساسي للغرف، لكل نوع من أنواع الأسرة؟", "db_id": "inn_1"}
{"question": "What is the average base price of rooms, for each bed type?", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "arabic": "أذكر أسماء الغرف التي تحتوي على سرير ملكي أو سرير ملكة.", "db_id": "inn_1"}
{"question": "List the name of rooms with king or queen bed.", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";", "arabic": "ما هي أسماء الغرف التي تحتوي على سرير ملكي أو سرير ملكة؟", "db_id": "inn_1"}
{"question": "What are the names of rooms that have either king or queen bed?", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";", "arabic": "كم عدد أنواع الأسرة المختلفة؟", "db_id": "inn_1"}
{"question": "How many different types of beds are there?", "query": "SELECT count(DISTINCT bedType) FROM Rooms;", "arabic": "ما هو عدد أنواع الأسرة المتميزة المتاحة في هذه المنزلة؟", "db_id": "inn_1"}
{"question": "Find the number of distinct bed types available in this inn.", "query": "SELECT count(DISTINCT bedType) FROM Rooms;", "arabic": "ما هي أسماء ومعرّفات أعلى ٣ غرف مكلفة؟", "db_id": "inn_1"}
{"question": "Find the name and id of the top 3 expensive rooms.", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;", "arabic": "ما هي أسماء ومعرّفات أعلى ٣ غرف بأعلى سعر؟", "db_id": "inn_1"}
{"question": "What are the name and id of the three highest priced rooms?", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;", "arabic": "ما هي أسماء الغرف التي يكون سعرها أعلى من السعر المتوسط؟", "db_id": "inn_1"}
{"question": "Find the name of rooms whose price is higher than the average price.", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "arabic": "ما هي أسماء الغرف التي تكلف أكثر من المتوسط؟", "db_id": "inn_1"}
{"question": "What are the name of rooms that cost more than the average.", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "arabic": "كم عدد الغرف التي ليس لديها أي حجز؟", "db_id": "inn_1"}
{"question": "Find the number of rooms that do not have any reservation.", "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)", "arabic": "كم عدد الغرف التي لم تحجز بعد؟", "db_id": "inn_1"}
{"question": "How many rooms have not had any reservation yet?", "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)", "arabic": "ما هو اسم الغرفة وعدد الحجوزات التي تم إجراؤها لكل من الغرف؟", "db_id": "inn_1"}
{"question": "Return the name and number of reservations made for each of the rooms.", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "arabic": "من فضلك قدم اسم الغرفة وعدد المرات التي تم فيها إجراء الحجوزات لكل غرفة.", "db_id": "inn_1"}
{"question": "For each room, find its name and the number of times reservations were made for it.", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "arabic": "من فضلك اعثر على أسماء الغرف التي تم حجزها أكثر من 60 مرة.", "db_id": "inn_1"}
{"question": "Find the names of rooms that have been reserved for more than 60 times.", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60", "arabic": "ما هي أسماء الغرف التي تتجاوز تكرار حجزها 60 مرة؟", "db_id": "inn_1"}
{"question": "What are the names of rooms whose reservation frequency exceeds 60 times?", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60", "arabic": "ما هي أسماء الغرف التي يكون سعر قاعدتها بين 120 و 150؟", "db_id": "inn_1"}
{"question": "Find the name of rooms whose base price is between 120 and 150.", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "arabic": "أي الغرف تكلف بين 120 و 150؟ أعطني أسماء الغرف.", "db_id": "inn_1"}
{"question": "Which rooms cost between 120 and 150? Give me the room names.", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "arabic": "ما هي أسماء الغرف التي حجزتها بعض العملاء الذين يحتوي اسمهم الأول على \"ROY\"؟", "db_id": "inn_1"}
{"question": "Find the name of rooms booked by some customers whose first name contains ROY.", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "arabic": "ما هي أسماء الغرف التي حجزها العملاء الذين يحتوي اسمهم الأول على \"ROY\" جزئيا؟", "db_id": "inn_1"}
{"question": "What are the name of rooms booked by customers whose first name has \"ROY\" in part?", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "arabic": "ما هي تفاصيل ماجستير CMI التي لديها رمز الإشارة المشترك 'Tax'؟", "db_id": "inn_1"}
{"question": "what are the details of the cmi masters that have the cross reference code 'Tax'?", "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Tax'", "arabic": "ما هو معرف الإشارة المشتركة CMI الذي يتعلق بمدخل ضريبة المجلس واحد على الأقل؟ قم بتقديم معرف الإشارة المشتركة ورمز نظام المصدر.", "db_id": "local_govt_mdm"}
{"question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.", "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1", "arabic": "كم هي معدلات الأعمال المتعلقة بكل معرف إشارة مشترك CMI؟ قم بتقديم معرف الإشارة المشتركة ومعرف العميل الرئيسي والعدد.", "db_id": "local_govt_mdm"}
{"question": "How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n", "query": "SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id", "arabic": "ما هو رمز نظام مصدر الضرائب المتعلق بالفوائد والمبالغ الزائدة؟ قم بسرد الرمز ومعرف الفائدة، مرتبة حسب معرف الفائدة.", "db_id": "local_govt_mdm"}
{"question": "What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id.", "query": "SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id", "arabic": "ما هو رمز نظام مصدر الضرائب ومعرف العميل الرئيسي للضرائب المتعلقة بكل معرف غرامة لل estacionamento؟", "db_id": "local_govt_mdm"}
{"question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?", "query": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id", "arabic": "ما هي معرفات ضريبة تأخير الاستئجار المتعلقة بفهرس العميل الرئيسي للعملاء الذين لا يكون تفصيلهم \"Schmidt، Kertzmann و Lubowitz\"؟", "db_id": "local_govt_mdm"}
{"question": "What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'?", "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'", "arabic": "ما هي معرفات التسجيل للسجلات الانتخابية التي تحتوي على رمز نظام المصدر المشترك \"الانتخابات\" أو \"الضرائب\"؟", "db_id": "local_govt_mdm"}
{"question": "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?", "query": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id WHERE T2.source_system_code  =  'Electoral' OR T2.source_system_code  =  'Tax'", "arabic": "كم هو عدد رموز نظام المصدر المختلفة للإشارات المشتركة لفهرس رئيس العملاء؟", "db_id": "local_govt_mdm"}
{"question": "How many different source system code for the cmi cross references are there?", "query": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references", "arabic": "أورد كل المعلومات حول فهرس رئيس العملاء، ورتبها حسب التفاصيل بترتيب تنازلي.", "db_id": "local_govt_mdm"}
{"question": "List all information about customer master index, and sort them by details in descending order.", "query": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC", "arabic": "أورد معرفات ضريبة المجلس ومراجعها المتعلقة بجميع غرامات وقوف السيارات.", "db_id": "local_govt_mdm"}
{"question": "List the council tax ids and their related cmi cross references of all the parking fines.", "query": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines", "arabic": "كم عدد الضرائب المجمعة لمعوقات الإيجار؟", "db_id": "local_govt_mdm"}
{"question": "How many council taxes are collected for renting arrears ?", "query": "SELECT count(*) FROM rent_arrears", "arabic": "ما هي رموز نظام المصدر المتقاطع المميزة التي ترتبط بتفاصيل العميل الرئيسية \"جوتليب، بيكر وويمان\"؟", "db_id": "local_govt_mdm"}
{"question": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?", "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'", "arabic": "أي رقم مرجعي متقاطع لـ CMI ليس مرتبطًا بأي ضريبة على وقوف السيارات؟", "db_id": "local_govt_mdm"}
{"question": "Which cmi cross reference id is not related to any parking taxes?", "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines", "arabic": "أي نظام مصدر مميز يتضمن السلسلة الفرعية 'en'؟", "db_id": "local_govt_mdm"}
{"question": "Which distinct source system code includes the substring 'en'?", "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'", "arabic": "كم حفل هناك؟", "db_id": "local_govt_mdm"}
{"question": "How many parties are there?", "query": "SELECT count(*) FROM party", "arabic": "كم عدد الحفلات؟", "db_id": "party_host"}
{"question": "Count the number of parties.", "query": "SELECT count(*) FROM party", "arabic": "ما هي قائمة مواضيع الحفلات بترتيب تصاعدي حسب عدد المضيفين؟", "db_id": "party_host"}
{"question": "List the themes of parties in ascending order of number of hosts.", "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC", "arabic": "ما هي مواضيع الحفلات مرتبة حسب عدد المضيفين بطريقة تصاعدية؟", "db_id": "party_host"}
{"question": "What are the themes of parties ordered by the number of hosts in ascending manner?", "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC", "arabic": "ما هي مواضيع الحفلات والمواقع؟", "db_id": "party_host"}
{"question": "What are the themes and locations of parties?", "query": "SELECT Party_Theme ,  LOCATION FROM party", "arabic": "ما هي موضوعات الحفلات والمواقع لكل حفل؟", "db_id": "party_host"}
{"question": "Give me the theme and location of each party.", "query": "SELECT Party_Theme ,  LOCATION FROM party", "arabic": "أظهر السنة الأولى والسنة الأخيرة للحفلات ذات الموضوع \"Spring\" أو \"Technology\".", "db_id": "party_host"}
{"question": "Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\".", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "arabic": "ما هي السنة الأولى والسنة الأخيرة للحفلات التي تحمل موضوع \"Spring\" أو \"Technology\"؟", "db_id": "party_host"}
{"question": "What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "arabic": "ما هو متوسط عدد المضيفين للحفلات؟", "db_id": "party_host"}
{"question": "What is the average number of hosts for parties?", "query": "SELECT avg(Number_of_hosts) FROM party", "arabic": "ما هو متوسط عدد المضيفين للحفلات؟", "db_id": "party_host"}
{"question": "Compute the average number of hosts for parties.", "query": "SELECT avg(Number_of_hosts) FROM party", "arabic": "ما موقع الحفلة التي تمتلك أكبر عدد من المضيفين؟", "db_id": "party_host"}
{"question": "What is the location of the party with the most hosts?", "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1", "arabic": "أي حفلة كانت لديها أكبر عدد من المضيفين؟ أعطني موقع الحفلة.", "db_id": "party_host"}
{"question": "Which party had the most hosts? Give me the party location.", "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1", "arabic": "أظهر الجنسيات المختلفة جنبًا إلى جنب مع عدد المضيفين من كل جنسية.", "db_id": "party_host"}
{"question": "Show different nationalities along with the number of hosts of each nationality.", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "arabic": "كم عدد المضيفين لكل جنسية؟ قم بتسجيل الجنسية والعدد.", "db_id": "party_host"}
{"question": "How many hosts does each nationality have? List the nationality and the count.", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "arabic": "أظهر الجنسية الأكثر شيوعًا بين المضيفين.", "db_id": "party_host"}
{"question": "Show the most common nationality of hosts.", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي جنسية لديها أكبر عدد من المضيفين؟", "db_id": "party_host"}
{"question": "Which nationality has the most hosts?", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الدول التي لديها مضيفون يتجاوز عمرهم 45 عامًا ومضيفون أصغر من 35 عامًا.", "db_id": "party_host"}
{"question": "Show the nations that have both hosts older than 45 and hosts younger than 35.", "query": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35", "arabic": "أي الدول لديها مضيفون يبلغون من العمر أكثر من 45 عامًا ومضيفون يبلغون من العمر أقل من 35 عامًا؟", "db_id": "party_host"}
{"question": "Which nations have both hosts of age above 45 and hosts of age below 35?", "query": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35", "arabic": "أظهر مواضيع الحفلات وأسماء مضيفي الحفلات.", "db_id": "party_host"}
{"question": "Show the themes of parties and the names of the party hosts.", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID", "arabic": "لكل حفل، أعد قائمة بموضوعه واسم مضيفه.", "db_id": "party_host"}
{"question": "For each party, return its theme and the name of its host.", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID", "arabic": "أظهر مواقع الحفلات وأسماء مضيفي الحفلات بترتيب تصاعدي حسب عمر المضيف.", "db_id": "party_host"}
{"question": "Show the locations of parties and the names of the party hosts in ascending order of the age of the host.", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "arabic": "لكل حفل، اعثر على موقعه واسم مضيفه. قم بفرز النتيجة بترتيب تصاعدي حسب عمر المضيف.", "db_id": "party_host"}
{"question": "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "arabic": "أظهر مواقع الحفلات التي تضم مضيفين يبلغون من العمر أكثر من 50 عامًا.", "db_id": "party_host"}
{"question": "Show the locations of parties with hosts older than 50.", "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50", "arabic": "أي الحفلات التي تضم مضيفين يبلغون من العمر أكثر من 50 عامًا؟ أعطني مواقع الحفلات.", "db_id": "party_host"}
{"question": "Which parties have hosts of age above 50? Give me the party locations.", "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50", "arabic": "أظهر أسماء المضيفين للحفلات التي يتجاوز عدد المضيفين فيها العدد 20.", "db_id": "party_host"}
{"question": "Show the host names for parties with number of hosts greater than 20.", "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20", "arabic": "أي الحفلات التي تمتلك أكثر من 20 مضيفًا؟ أعطني أسماء المضيفين لهذه الحفلات.", "db_id": "party_host"}
{"question": "Which parties have more than 20 hosts? Give me the host names for these parties.", "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20", "arabic": "أظهر اسم وجنسية أكبر مضيف.", "db_id": "party_host"}
{"question": "Show the name and the nationality of the oldest host.", "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1", "arabic": "ما هي اسم وجنسية مضيف يبلغ من العمر أكبر سنًا؟", "db_id": "party_host"}
{"question": "What are the name and the nationality of the host of the highest age?", "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1", "arabic": "أعرض أسماء المضيفين الذين لم يكونوا مضيفين لأي حفل في سجلنا.", "db_id": "party_host"}
{"question": "List the names of hosts who did not serve as a host of any party in our record.", "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)", "arabic": "ما هي أسماء المضيفين الذين لم يكونوا مضيفين لأي حفل في سجلنا؟", "db_id": "party_host"}
{"question": "What are the names of hosts who did not host any party in our record?", "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)", "arabic": "كم منطقة لدينا؟", "db_id": "party_host"}
{"question": "How many regions do we have?", "query": "SELECT count(*) FROM region", "arabic": "عد عدد المناطق.", "db_id": "storm_record"}
{"question": "Count the number of regions.", "query": "SELECT count(*) FROM region", "arabic": "أظهر كل رمز منطقة واسم المنطقة مرتبة حسب الرموز.", "db_id": "storm_record"}
{"question": "Show all region code and region name sorted by the codes.", "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code", "arabic": "ما هي الرموز والأسماء لجميع المناطق، مرتبة حسب الرموز؟", "db_id": "storm_record"}
{"question": "What are the codes and names for all regions, sorted by codes?", "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code", "arabic": "أعرض جميع أسماء المناطق بترتيب أبجدي.", "db_id": "storm_record"}
{"question": "List all region names in alphabetical order.", "query": "SELECT region_name FROM region ORDER BY region_name", "arabic": "ما هي أسماء المناطق بترتيب أبجدي؟", "db_id": "storm_record"}
{"question": "What are the names of the regions in alphabetical order?", "query": "SELECT region_name FROM region ORDER BY region_name", "arabic": "أظهر أسماء جميع المناطق باستثناء الدنمارك.", "db_id": "storm_record"}
{"question": "Show names for all regions except for Denmark.", "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'", "arabic": "أرجع أسماء جميع المناطق باستثناء الدنمارك.", "db_id": "storm_record"}
{"question": "Return the names of all regions other than Denmark.", "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'", "arabic": "كم عدد العواصف التي كانت لها سجلات وفيات؟", "db_id": "storm_record"}
{"question": "How many storms had death records?", "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0", "arabic": "عد عدد العواصف التي توفي فيها شخص واحد على الأقل.", "db_id": "storm_record"}
{"question": "Count the number of storms in which at least 1 person died.", "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0", "arabic": "أعرض اسم العاصفة، وتواريخ النشاط، وعدد الوفيات لجميع العواصف التي تم فيها تسجيل وفاة واحدة على الأقل.", "db_id": "storm_record"}
{"question": "List name, dates active, and number of deaths for all storms with at least 1 death.", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "arabic": "ما هي الأسماء، وتواريخ النشاط، وعدد الوفيات للعواصف التي شهدت وفاة واحدة أو أكثر؟", "db_id": "storm_record"}
{"question": "What are the names, dates active, and number of deaths for storms that had 1 or more death?", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "arabic": "ما متوسط ​​الضرر والضرر الأقصى لجميع العواصف ذات السرعة القصوى أكبر من 1000؟", "db_id": "storm_record"}
{"question": "Show the average and maximum damage for all storms with max speed higher than 1000.", "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000", "arabic": "ما هو المتوسط ​​والضرر الأقصى بالملايين للعواصف التي كان لديها سرعة قصوى أكثر من 1000؟", "db_id": "storm_record"}
{"question": "What is the average and maximum damage in millions for storms that had a max speed over 1000?", "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000", "arabic": "ما مجموع عدد الوفيات والضرر لجميع العواصف بسرعة قصوى أكبر من المتوسط؟", "db_id": "storm_record"}
{"question": "What is the total number of deaths and damage for all storms with a max speed greater than the average?", "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)", "arabic": "ما مجموع عدد الوفيات والضرر الكلي بالملايين للعواصف التي كانت لديها سرعة قصوى أكبر من المتوسط؟", "db_id": "storm_record"}
{"question": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.", "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)", "arabic": "ما هو قائمة الأسماء والضرر لجميع العواصف بترتيب تنازلي حسب السرعة القصوى؟", "db_id": "storm_record"}
{"question": "List name and damage for all storms in a descending order of max speed.", "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC", "arabic": "ما هي الأسماء والضرر بالملايين للعواصف، مرتبة حسب سرعاتها القصوى بترتيب تنازلي؟", "db_id": "storm_record"}
{"question": "What are the names and damage in millions for storms, ordered by their max speeds descending?", "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC", "arabic": "كم عدد المناطق المتأثرة؟", "db_id": "storm_record"}
{"question": "How many regions are affected?", "query": "SELECT count(DISTINCT region_id) FROM affected_region", "arabic": "كم عدد المناطق المتأثرة المختلفة؟", "db_id": "storm_record"}
{"question": "Count the number of different affected regions.", "query": "SELECT count(DISTINCT region_id) FROM affected_region", "arabic": "ما هي الأسماء للمناطق غير المتأثرة؟", "db_id": "storm_record"}
{"question": "Show the name for regions not affected.", "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)", "arabic": "ما هي أسماء المناطق التي لم تتأثر؟", "db_id": "storm_record"}
{"question": "What are the names of regions that were not affected?", "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)", "arabic": "ما هي الأسماء للمناطق وعدد العواصف لكل منطقة؟", "db_id": "storm_record"}
{"question": "Show the name for regions and the number of storms for each region.", "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "arabic": "كم عدد العواصف التي حدثت في كل منطقة؟", "db_id": "storm_record"}
{"question": "How many storms occured in each region?", "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "arabic": "ما هي الأسماء للعواصف وعدد المناطق المتأثرة لكل عاصفة؟", "db_id": "storm_record"}
{"question": "List the name for storms and the number of affected regions for each storm.", "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id", "arabic": "كم عدد المناطق التي تأثرت بواسطة كل عاصفة؟", "db_id": "storm_record"}
{"question": "How many regions were affected by each storm?", "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id", "arabic": "ما هو اسم العاصفة والسرعة القصوى التي أثرت على أكبر عدد من المناطق؟", "db_id": "storm_record"}
{"question": "What is the storm name and max speed which affected the greatest number of regions?", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العاصفة والسرعة القصوى للعاصفة التي أثرت على أكبر عدد من المناطق؟", "db_id": "storm_record"}
{"question": "Return the name and max speed of the storm that affected the most regions.", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء العواصف التي لا تحتوي على منطقة متأثرة في السجل؟", "db_id": "storm_record"}
{"question": "Show the name of storms which don't have affected region in record.", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)", "arabic": "ما هي أسماء العواصف التي لم تؤثر على أي مناطق؟", "db_id": "storm_record"}
{"question": "What are the names of storms that did not affect any regions?", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)", "arabic": "ما هو اسم العاصفة التي تأثرت على الأقل بمنطقتين و 10 مدن؟", "db_id": "storm_record"}
{"question": "Show storm name with at least two regions and 10 cities affected.", "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10", "arabic": "ما هي أسماء العواصف التي تأثرت على ما لا يقل عن منطقتين وأثرت على مجموع 10 مدن أو أكثر؟", "db_id": "storm_record"}
{"question": "What are the names of storms that both affected two or more regions and affected a total of 10 or more cities?", "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10", "arabic": "ما هي أسماء جميع العواصف باستثناء تلك التي تؤثر على ما لا يقل عن منطقتين؟", "db_id": "storm_record"}
{"question": "Show all storm names except for those with at least two affected regions.", "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2", "arabic": "ما هي أسماء العواصف التي لم تؤثر على ما لا يقل عن منطقتين؟", "db_id": "storm_record"}
{"question": "What are the names of storms that did not affect two or more regions?", "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2", "arabic": "ما هي أسماء المناطق التي تأثرت بها العاصفة التي كان عدد الوفيات فيها على الأقل 10؟", "db_id": "storm_record"}
{"question": "What are the region names affected by the storm with a number of deaths of least 10?", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10", "arabic": "ما هي أسماء المناطق التي تأثرت بها العواصف التي كان عدد الوفيات فيها على الأقل 10؟", "db_id": "storm_record"}
{"question": "Return the names of the regions affected by storms that had a death count of at least 10.", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10", "arabic": "ما هي أسماء جميع العواصف التي تؤثر على المنطقة \"الدنمارك\"؟", "db_id": "storm_record"}
{"question": "Show all storm names affecting region \"Denmark\".", "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'", "arabic": "ما هي أسماء العواصف التي أثرت على الدنمارك؟", "db_id": "storm_record"}
{"question": "What are the names of the storms that affected Denmark?", "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'", "arabic": "ما هو اسم المنطقة التي تحتوي على على الأقل عاصفتين؟", "db_id": "storm_record"}
{"question": "Show the region name with at least two storms.", "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2", "arabic": "ما هي أسماء المناطق التي بها على الأقل عاصفتين؟", "db_id": "storm_record"}
{"question": "What are the names of regions with two or more storms?", "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2", "arabic": "ما هي أسماء المناطق التي تأثرت بها العاصفة التي تسببت في قتل أكبر عدد من الأشخاص؟", "db_id": "storm_record"}
{"question": "Find the names of the regions which were affected by the storm that killed the greatest number of people.", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1", "arabic": "ما هي أسماء المناطق التي تأثرت بها العاصفة التي فيها توفي أكبر عدد من الأشخاص؟", "db_id": "storm_record"}
{"question": "What are the names of regions that were affected by the storm in which the most people died?", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1", "arabic": "ما هو اسم العاصفة التي أثرت على كل من منطقتي أفغانستان وألبانيا؟", "db_id": "storm_record"}
{"question": "Find the name of the storm that affected both Afghanistan and Albania regions.", "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'", "arabic": "ما هي أسماء العواصف التي أثرت على مناطق أفغانستان وألبانيا؟", "db_id": "storm_record"}
{"question": "What are the names of the storms that affected both the regions of Afghanistan and Albania?", "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'", "arabic": "كم عدد البلديات بالمجموع؟", "db_id": "storm_record"}
{"question": "How many counties are there in total?", "query": "SELECT count(*) FROM county", "arabic": "عدد البلديات بالمجموع؟", "db_id": "election"}
{"question": "Count the total number of counties.", "query": "SELECT count(*) FROM county", "arabic": "ما هي أسماء البلديات والسكان لكل البلديات؟", "db_id": "election"}
{"question": "Show the county name and population of all counties.", "query": "SELECT County_name ,  Population FROM county", "arabic": "ما هي أسماء البلديات وعدد السكان لكل بلدية؟", "db_id": "election"}
{"question": "What are the name and population of each county?", "query": "SELECT County_name ,  Population FROM county", "arabic": "ما هو متوسط ​​السكان لكل البلديات؟", "db_id": "election"}
{"question": "Show the average population of all counties.", "query": "SELECT avg(Population) FROM county", "arabic": "متوسط حجم سكان البلديات؟", "db_id": "election"}
{"question": "On average how large is the population of the counties?", "query": "SELECT avg(Population) FROM county", "arabic": "ما هي أقصى وأدنى قيمة للسكان بين جميع البلديات؟", "db_id": "election"}
{"question": "Return the maximum and minimum population among all counties.", "query": "SELECT max(Population) ,  min(Population) FROM county", "arabic": "ما هي أقصى وأدنى قيمة للسكان في البلديات؟", "db_id": "election"}
{"question": "What are the maximum and minimum population of the counties?", "query": "SELECT max(Population) ,  min(Population) FROM county", "arabic": "ما هي جميع المناطق المتميزة للانتخابات؟", "db_id": "election"}
{"question": "Show all the distinct districts for elections.", "query": "SELECT DISTINCT District FROM election", "arabic": "ما هي المناطق المتميزة للانتخابات؟", "db_id": "election"}
{"question": "What are the distinct districts for elections?", "query": "SELECT DISTINCT District FROM election", "arabic": "ما هو رمز البريد للمقاطعة بالاسم \"هوارد\"؟", "db_id": "election"}
{"question": "Show the zip code of the county with name \"Howard\".", "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"", "arabic": "ما هو رمز البريد الذي تقع فيه المقاطعة التي تحمل اسم \"هوارد\"؟", "db_id": "election"}
{"question": "What is the zip code the county named \"Howard\" is located in?", "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"", "arabic": "مندوب المنطقة 1 في الانتخابات؟", "db_id": "election"}
{"question": "Show the delegate from district 1 in election.", "query": "SELECT Delegate FROM election WHERE District  =  1", "arabic": "من هو مندوب المنطقة 1 في الانتخابات؟", "db_id": "election"}
{"question": "Who is the delegate of district 1 in the elections?", "query": "SELECT Delegate FROM election WHERE District  =  1", "arabic": "ما هي معلومات المندوب واللجنة في الانتخابات؟", "db_id": "election"}
{"question": "Show the delegate and committee information of elections.", "query": "SELECT Delegate ,  Committee FROM election", "arabic": "ما هي معلومات المندوب واللجنة لكل سجل انتخابي؟", "db_id": "election"}
{"question": "What are the delegate and committee information for each election record?", "query": "SELECT Delegate ,  Committee FROM election", "arabic": "كم عدد الحكام المميزين؟", "db_id": "election"}
{"question": "How many distinct governors are there?", "query": "SELECT count(DISTINCT Governor) FROM party", "arabic": "كم عدد الحكام المميزين؟", "db_id": "election"}
{"question": "Count the number of distinct governors.", "query": "SELECT count(DISTINCT Governor) FROM party", "arabic": "من فضلك عليك إظهار نائب الحاكم والمحاسب من الحزب الديمقراطي؟", "db_id": "election"}
{"question": "Show the lieutenant governor and comptroller from the democratic party.", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "arabic": "من هم نائب الحاكم والمحاسب من الحزب الديمقراطي؟", "db_id": "election"}
{"question": "Who are the lieutenant governor and comptroller from the democratic party?", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "arabic": "في أي سنوات متميزة كان الحاكم \"إليوت سبيتزر\"؟", "db_id": "election"}
{"question": "In which distinct years was the governor \"Eliot Spitzer\"?", "query": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\"", "arabic": "ابحث عن السنوات المتميزة عندما كان الحاكم يدعى \"إليوت سبيتزر\".", "db_id": "election"}
{"question": "Find the distinct years when the governor was named \"Eliot Spitzer\".", "query": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\"", "arabic": "أظهر كل المعلومات حول الانتخابات.", "db_id": "election"}
{"question": "Show all the information about election.", "query": "SELECT * FROM election", "arabic": "ارجع جميع المعلومات لكل سجل انتخابي.", "db_id": "election"}
{"question": "Return all the information for each election record.", "query": "SELECT * FROM election", "arabic": "أظهر الوفود وأسماء المقاطعات التي ينتمون إليها.", "db_id": "election"}
{"question": "Show the delegates and the names of county they belong to.", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "arabic": "ما هما مندوب الانتخابات واسم المقاطعة التي ينتميان إليها، لكل مقاطعة؟", "db_id": "election"}
{"question": "What are the delegate and name of the county they belong to, for each county?", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "arabic": "أيّ المندوبين هم من المقاطعات التي يقل تعداد سكانها عن 100000؟", "db_id": "election"}
{"question": "Which delegates are from counties with population smaller than 100000?", "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000", "arabic": "أوجد المندوبين الذين ينتمون إلى المقاطعات التي يقل تعداد سكانها عن 100000.", "db_id": "election"}
{"question": "Find the delegates who are from counties with population below 100000.", "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000", "arabic": "كم عدد المندوبين المميزين الذين ينتمون إلى المقاطعات التي يتجاوز تعداد سكانها الـ 50000؟", "db_id": "election"}
{"question": "How many distinct delegates are from counties with population larger than 50000?", "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000", "arabic": "كم عدد المندوبين المميزين الذين ينتمون إلى المقاطعات التي يتجاوز تعداد سكانها الـ 50000؟", "db_id": "election"}
{"question": "Count the number of distinct delegates who are from counties with population above 50000.", "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000", "arabic": "ما هي أسماء المقاطعات التي ينتمي إليها المندوبون في لجنة \"التخصيصات\"؟", "db_id": "election"}
{"question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"", "arabic": "ما هي المقاطعة التي ينتمي إليها المندوبون في لجنة \"التخصيصات\"؟ أعطني أسماء المقاطعات.", "db_id": "election"}
{"question": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"", "arabic": "أظهر المندوبين وأسماء الأحزاب التي ينتمون إليها.", "db_id": "election"}
{"question": "Show the delegates and the names of the party they belong to.", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "arabic": "لكل مندوب، اعثر على أسماء الحزب الذين ينتمون إليه.", "db_id": "election"}
{"question": "For each delegate, find the names of the party they are part of.", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "arabic": "من كانوا حكام الأحزاب المرتبطة بالمندوبين من الحي رقم 1؟", "db_id": "election"}
{"question": "Who were the governors of the parties associated with delegates from district 1?", "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1", "arabic": "ابحث عن الأحزاب المرتبطة بالمندوبين من الحي رقم 1. من كان يخدم كحكام لهذه الأحزاب؟", "db_id": "election"}
{"question": "Find the parties associated with the delegates from district 1. Who served as governors of the parties?", "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1", "arabic": "من كانوا المراقبون الماليون للأحزاب المرتبطة بالمندوبين من الحي رقم 1 أو الحي رقم 2؟", "db_id": "election"}
{"question": "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?", "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2", "arabic": "من كانوا المراقبون الماليون للأحزاب المرتبطة بالمندوبين من الحي رقم 1 أو الحي رقم 2؟", "db_id": "election"}
{"question": "Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?", "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2", "arabic": "ما هي جميع اللجان التي تحتوي على مندوبين من الحزب الديمقراطي؟", "db_id": "election"}
{"question": "Return all the committees that have delegates from Democratic party.", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"", "arabic": "أي اللجان تضم مندوبين من الحزب الديمقراطي؟", "db_id": "election"}
{"question": "Which committees have delegates from the Democratic party?", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"", "arabic": "ما هو اسم كل مقاطعة مع عدد المندوبين المقابل لتلك المقاطعة؟", "db_id": "election"}
{"question": "Show the name of each county along with the corresponding number of delegates from that county.", "query": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id", "arabic": "من فضلك، لكل مقاطعة، ابحث عن اسم المقاطعة وعدد المندوبين من تلك المقاطعة.", "db_id": "election"}
{"question": "For each county, find the name of the county and the number of delegates from that county.", "query": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id", "arabic": "ما هو اسم كل حزب وعدد المندوبين المقابل لتلك الحزب؟", "db_id": "election"}
{"question": "Show the name of each party and the corresponding number of delegates from that party.", "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party", "arabic": "من فضلك، لكل حزب، ارجع اسم الحزب وعدد المندوبين من تلك الحزب.", "db_id": "election"}
{"question": "For each party, return the name of the party and the number of delegates from that party.", "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party", "arabic": "ما هي أسماء جميع المقاطعات مرتبة حسب السكان بترتيب تصاعدي؟", "db_id": "election"}
{"question": "Return the names of all counties sorted by population in ascending order.", "query": "SELECT County_name FROM county ORDER BY Population ASC", "arabic": "هل يمكنك فرز أسماء جميع المقاطعات بترتيب تصاعدي حسب السكان؟", "db_id": "election"}
{"question": "Sort the names of all counties in ascending order of population.", "query": "SELECT County_name FROM county ORDER BY Population ASC", "arabic": "ما هي أسماء جميع المقاطعات مرتبة حسب اسم المقاطعة بترتيب أبجدي تنازلي؟", "db_id": "election"}
{"question": "Return the names of all counties sorted by county name in descending alphabetical order.", "query": "SELECT County_name FROM county ORDER BY County_name DESC", "arabic": "هل يمكنك فرز أسماء جميع المقاطعات بترتيب أبجدي تنازلي؟", "db_id": "election"}
{"question": "Sort the names of all counties in descending alphabetical order.", "query": "SELECT County_name FROM county ORDER BY County_name DESC", "arabic": "ما هو اسم المقاطعة التي تمتلك أكبر عدد من السكان؟", "db_id": "election"}
{"question": "Show the name of the county with the biggest population.", "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1", "arabic": "ما هي المقاطعة التي تمتلك أكبر عدد من السكان؟ أعطني اسم المقاطعة.", "db_id": "election"}
{"question": "Which county has the largest population? Give me the name of the county.", "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1", "arabic": "ما هي المقاطعات الثلاث التي تمتلك أصغر عدد من السكان؟", "db_id": "election"}
{"question": "Show the 3 counties with the smallest population.", "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3", "arabic": "ما هي المقاطعات الثلاث التي تمتلك أصغر عدد من السكان؟ أعطني أسماء المقاطعات.", "db_id": "election"}
{"question": "What are the 3 counties that have the smallest population? Give me the county names.", "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3", "arabic": "ما هي أسماء المقاطعات التي تمتلك على الأقل مندوبين اثنين؟", "db_id": "election"}
{"question": "Show the names of counties that have at least two delegates.", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "arabic": "ما هي المقاطعات التي تمتلك متندبين اثنين أو أكثر؟ أعطني أسماء المقاطعات.", "db_id": "election"}
{"question": "Which counties have two or more delegates? Give me the county names.", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "arabic": "ما هو اسم الحزب الذي يمتلك على الأقل سجلين؟", "db_id": "election"}
{"question": "Show the name of the party that has at least two records.", "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2", "arabic": "ما هو الحزب الذي يمتلك سجلين أو أكثر؟", "db_id": "election"}
{"question": "Which party has two or more records?", "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2", "arabic": "ما هو اسم الحزب الذي يمتلك أكبر عدد من المندوبين؟", "db_id": "election"}
{"question": "Show the name of the party that has the most delegates.", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي حزب يمتلك أكبر عدد من المندوبين؟", "db_id": "election"}
{"question": "Which party has the largest number of delegates?", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "من فضلك، أظهر الأشخاص الذين شغلوا منصب الحاكم أكثر عدد من المرات.", "db_id": "election"}
{"question": "Show the people that have been governor the most times.", "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "من فضلك، أي الأشخاص خدموا كحاكم بشكل متكرر؟", "db_id": "election"}
{"question": "Which people severed as governor most frequently?", "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "من فضلك، أظهر الأشخاص الذين شغلوا منصب المراقب المالي أكثر عدد من المرات وعدد المرات المقابلة.", "db_id": "election"}
{"question": "Show the people that have been comptroller the most times and the corresponding number of times.", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي الأشخاص خدموا كمراقب مالي بشكل متكرر؟ أعطني اسم الشخص وعدد المرات.", "db_id": "election"}
{"question": "Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي أسماء الأحزاب التي لا تمتلك مندوبين في الانتخابات؟", "db_id": "election"}
{"question": "What are the names of parties that do not have delegates in election?", "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)", "arabic": "أي الأحزاب التي لم تمتلك أي مندوبين في الانتخابات؟", "db_id": "election"}
{"question": "Which parties did not have any delegates in elections?", "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)", "arabic": "ما هي أسماء الأحزاب التي لديها مندوبين في لجنة \"التعيينات\"؟", "db_id": "election"}
{"question": "What are the names of parties that have both delegates on \"Appropriations\" committee and", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"", "arabic": "أي الأحزاب التي لديها مندوبون في لجنة \"التعيينات\" ولجنة \"الشؤون الاقتصادية\"؟", "db_id": "election"}
{"question": "Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"", "arabic": "أي اللجان التي تضم مندوبين من كل من الحزب الديمقراطي والحزب الليبرالي؟", "db_id": "election"}
{"question": "Which committees have delegates from both democratic party and liberal party?", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\"", "arabic": "ما هي اللجان التي تضم مندوبين من الحزب الديمقراطي والحزب الليبرالي؟", "db_id": "election"}
{"question": "Find the committees that have delegates both from from the democratic party and the liberal party.", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\"", "arabic": "كم عدد الصحفيين؟", "db_id": "election"}
{"question": "How many journalists are there?", "query": "SELECT count(*) FROM journalist", "arabic": "ما هي أسماء الصحفيين مرتبة بترتيب تصاعدي حسب سنوات الخبرة؟", "db_id": "news_report"}
{"question": "List the names of journalists in ascending order of years working.", "query": "SELECT Name FROM journalist ORDER BY Years_working ASC", "arabic": "ما هي الجنسيات والأعمار للصحفيين؟", "db_id": "news_report"}
{"question": "What are the nationalities and ages of journalists?", "query": "SELECT Nationality ,  Age FROM journalist", "arabic": "أظهر أسماء الصحفيين من \"إنجلترا\" أو \"ويلز\".", "db_id": "news_report"}
{"question": "Show the names of journalists from \"England\" or \"Wales\".", "query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"", "arabic": "ما هو متوسط عدد السنوات التي قضاها الصحفيون في العمل؟", "db_id": "news_report"}
{"question": "What is the average number of years spent working as a journalist?", "query": "SELECT avg(Years_working) FROM journalist", "arabic": "ما هي جنسية الصحفي الذي يمتلك أكبر عدد من السنوات في العمل؟", "db_id": "news_report"}
{"question": "What is the nationality of the journalist with the largest number of years working?", "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1", "arabic": "أظهر الجنسيات المختلفة وعدد الصحفيين من كل جنسية.", "db_id": "news_report"}
{"question": "Show the different nationalities and the number of journalists of each nationality.", "query": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality", "arabic": "ما هي الجنسية الأكثر شيوعًا بين الصحفيين؟", "db_id": "news_report"}
{"question": "Show the most common nationality for journalists.", "query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الدول التي تمتلك كل من الصحفيين الذين لديهم أكثر من 10 سنوات من العمل والصحفيين الذين لديهم أقل من 3 سنوات من العمل.", "db_id": "news_report"}
{"question": "Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.", "query": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3", "arabic": "ما هي التواريخ، والأماكن، وأسماء الأحداث مرتبة بترتيب تنازلي للحضور؟", "db_id": "news_report"}
{"question": "Show the dates, places, and names of events in descending order of the attendance.", "query": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC", "arabic": "ما هي أسماء الصحفيين وتواريخ الأحداث التي قاموا بتغطيتها؟", "db_id": "news_report"}
{"question": "Show the names of journalists and the dates of the events they reported.", "query": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID", "arabic": "ما هي أسماء الصحفيين وأسماء الأحداث التي قاموا بتغطيتها مرتبة بترتيب تصاعدي؟", "db_id": "news_report"}
{"question": "Show the names of journalists and the names of the events they reported in ascending order", "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC", "arabic": "ما هي أسماء الصحفيين وعدد الأحداث التي قاموا بتغطيتها؟", "db_id": "news_report"}
{"question": "Show the names of journalists and the number of events they reported.", "query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name", "arabic": "ما هي أسماء الصحفيين الذين قاموا بتغطية أكثر من حدث واحد؟", "db_id": "news_report"}
{"question": "Show the names of journalists that have reported more than one event.", "query": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1", "arabic": "ما هي أسماء الصحفيين الذين لم يقموا بتغطية أي حدث؟", "db_id": "news_report"}
{"question": "List the names of journalists who have not reported any event.", "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)", "arabic": "ما هي المتوسط والحضور الأقصى لجميع الأحداث؟", "db_id": "news_report"}
{"question": "what are the average and maximum attendances of all events?", "query": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event", "arabic": "ما هو متوسط ​​العمر وطول الخبرة في العمل للصحفيين العاملين في أنواع دور مختلفة؟", "db_id": "news_report"}
{"question": "Find the average age and experience working length of journalists working on different role type.", "query": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type", "arabic": "ما هي أماكن الحدث والأسماء التي شهدت الأكبر عدد من الأشخاص المحضرين للحدث؟", "db_id": "news_report"}
{"question": "List the event venues and names that have the top 2 most number of people attended.", "query": "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2", "arabic": "أظهر لي جميع المطاعم.", "db_id": "news_report"}
{"question": "Show me all the restaurants.", "query": "SELECT ResName FROM Restaurant;", "arabic": "ما هو عنوان مطعم Subway؟", "db_id": "restaurant_1"}
{"question": "What is the address of the restaurant Subway?", "query": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";", "arabic": "ما هو تقييم مطعم Subway؟", "db_id": "restaurant_1"}
{"question": "What is the rating of the restaurant Subway?", "query": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";", "arabic": "ما هي قائمة جميع أنواع المطاعم؟", "db_id": "restaurant_1"}
{"question": "List all restaurant types.", "query": "SELECT ResTypeName FROM Restaurant_Type;", "arabic": "ما هو وصف نوع المطعم \"Sandwich\"؟", "db_id": "restaurant_1"}
{"question": "What is the description of the restaurant type Sandwich?", "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";", "arabic": "أي المطاعم لديها أعلى تقييم؟ أذكر اسم المطعم وتقييمه.", "db_id": "restaurant_1"}
{"question": "Which restaurants have highest rating? List the restaurant name and its rating.", "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;", "arabic": "ما هو عمر الطالبة ليندا سميث؟", "db_id": "restaurant_1"}
{"question": "What is the age of student Linda Smith?", "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "arabic": "ما هو جنس الطالبة ليندا سميث؟", "db_id": "restaurant_1"}
{"question": "What is the gender of the student Linda Smith?", "query": "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "arabic": "ما هي أسماء الطلاب الأولية والأسماء الأخيرة الذين اختصوا في 600؟", "db_id": "restaurant_1"}
{"question": "List all students' first names and last names who majored in 600.", "query": "SELECT Fname , Lname FROM Student WHERE Major  =  600;", "arabic": "في أي مدينة تعيش الطالبة ليندا سميث؟", "db_id": "restaurant_1"}
{"question": "Which city does student Linda Smith live in?", "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "arabic": "كم عدد الطلاب لدى المستشار 1121؟", "db_id": "restaurant_1"}
{"question": "Advisor 1121 has how many students?", "query": "SELECT count(*) FROM Student WHERE Advisor =  1121;", "arabic": "أي مستشار لديه معظم الطلاب؟ أذكر اسم المستشار وعدد الطلاب.", "db_id": "restaurant_1"}
{"question": "Which Advisor has most of students? List advisor and the number of students.", "query": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;", "arabic": "أي تخصص يحتوي على أقل عدد من الطلاب؟ أذكر التخصص وعدد الطلاب.", "db_id": "restaurant_1"}
{"question": "Which major has least number of students? List the major and the number of students.", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;", "arabic": "أي تخصص يحتوي على بين 2 و 30 عدد من الطلاب؟ أذكر التخصص وعدد الطلاب.", "db_id": "restaurant_1"}
{"question": "Which major has between 2 and 30 number of students? List major and the number of students.", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;", "arabic": "أي طالب عمره أكبر من 18 عامًا ويختص في 600؟ أذكر اسم الطالب الأول والأخير لكل طالب.", "db_id": "restaurant_1"}
{"question": "Which student's age is older than 18 and is majoring in 600? List each student's first and last name.", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;", "arabic": "أذكر جميع الطالبات الإناث اللاتي تتجاوز أعمارهن 18 عامًا واللاتي لا يختصن في 600. أذكر الاسم الأول والاسم الأخير للطلاب.", "db_id": "restaurant_1"}
{"question": "List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';", "arabic": "كم عدد المطاعم من نوع مطعم السندويتش؟", "db_id": "restaurant_1"}
{"question": "How many restaurant is the Sandwich type restaurant?", "query": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'", "arabic": "كم من الوقت يقضي الطالب ليندا سميث في المطعم بشكل إجمالي؟", "db_id": "restaurant_1"}
{"question": "How long does student Linda Smith spend on the restaurant in total?", "query": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";", "arabic": "كم مرة قامت الطالبة ليندا سميث بزيارة مطعم سبوي؟", "db_id": "restaurant_1"}
{"question": "How many times has the student Linda Smith visited Subway?", "query": "SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "arabic": "متى زارت ليندا سميث مطعم سبوي؟", "db_id": "restaurant_1"}
{"question": "When did Linda Smith visit Subway?", "query": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "arabic": "في أي مطعم قضى الطلاب أقل مدة زمنية؟ أذكر المطعم والوقت الذي قضاه الطلاب فيه بشكل إجمالي.", "db_id": "restaurant_1"}
{"question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.", "query": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;", "arabic": "أي طالب زار المطعم الأكثر تكرارًا؟ أذكر الاسم الأول والاسم الأخير للطالب.", "db_id": "restaurant_1"}
{"question": "Which student visited restaurant most often? List student's first name and last name.", "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;", "arabic": "ما هي معرّفات الطلبات التي يكون حالتها \"نجاح\"؟", "db_id": "restaurant_1"}
{"question": "Find the ids of orders whose status is 'Success'.", "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'", "arabic": "ما هو اسم المنتج وسعره الذي تم طلبه أكبر عدد من المرات؟", "db_id": "customer_deliveries"}
{"question": "Find the name and price of the product that has been ordered the greatest number of times.", "query": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو عدد العملاء بشكل إجمالي؟", "db_id": "customer_deliveries"}
{"question": "Find the number of customers in total.", "query": "SELECT count(*) FROM customers", "arabic": "كم طريقة دفع مختلفة متاحة؟", "db_id": "customer_deliveries"}
{"question": "How many different payment methods are there?", "query": "SELECT count(DISTINCT payment_method) FROM customers", "arabic": "أظهر تفاصيل جميع الشاحنات بترتيب أرقام تراخيصها.", "db_id": "customer_deliveries"}
{"question": "Show the details of all trucks in the order of their license number.", "query": "SELECT truck_details FROM trucks ORDER BY truck_licence_number", "arabic": "ما هو اسم أغلى منتج؟", "db_id": "customer_deliveries"}
{"question": "Find the name of the most expensive product.", "query": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1", "arabic": "ما هي أسماء العملاء الذين لا يعيشون في ولاية كاليفورنيا؟", "db_id": "customer_deliveries"}
{"question": "Find the names of customers who are not living in the state of California.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'", "arabic": "اذكر أسماء وعناوين البريد الإلكتروني للعملاء الذين دفعوا باستخدام بطاقة فيزا.", "db_id": "customer_deliveries"}
{"question": "List the names and emails of customers who payed by Visa card.", "query": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'", "arabic": "ابحث عن أسماء وأرقام هواتف العملاء الذين يعيشون في ولاية كاليفورنيا.", "db_id": "customer_deliveries"}
{"question": "Find the names and phone numbers of customers living in California state.", "query": "SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'", "arabic": "ابحث عن الولايات التي لا تحتوي على أي موظف في سجلها.", "db_id": "customer_deliveries"}
{"question": "Find the states which do not have any employee in their record.", "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)", "arabic": "أذكر أسماء العملاء وأرقام هواتفهم وعناوين البريد الإلكتروني، مرتبة حسب تواريخ تسجيلهم كعملاء.", "db_id": "customer_deliveries"}
{"question": "List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers.", "query": "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer", "arabic": "ما هو اسم أول 5 عملاء؟", "db_id": "customer_deliveries"}
{"question": "Find the name of the first 5 customers.", "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5", "arabic": "أي طريقة دفع تستخدم بشكل أكثر تواترًا؟", "db_id": "customer_deliveries"}
{"question": "Find the payment method that is used most frequently.", "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "arabic": "  ما هي أسماء جميع المسارات مرتبة ترتيباً أبجدياً؟", "db_id": "customer_deliveries"}
{"question": "List the names of all routes in alphabetic order.", "query": "SELECT route_name FROM Delivery_Routes ORDER BY route_name", "arabic": "ما هو اسم المسار الذي يحتوي على أعلى عدد من التسليمات؟", "db_id": "customer_deliveries"}
{"question": "Find the name of route that has the highest number of deliveries.", "query": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أذكر أسماء الولايات وعدد العملاء الذين يعيشون في كل ولاية.", "db_id": "customer_deliveries"}
{"question": "List the state names and the number of customers living in each state.", "query": "SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county", "arabic": "كم عدد الكتّاب؟", "db_id": "customer_deliveries"}
{"question": "How many authors are there?", "query": "SELECT count(*) FROM authors", "arabic": "عدد الكتّاب؟", "db_id": "icfp_1"}
{"question": "Count the number of authors.", "query": "SELECT count(*) FROM authors", "arabic": "كم عدد المؤسسات؟", "db_id": "icfp_1"}
{"question": "How many institutions are there?", "query": "SELECT count(*) FROM inst", "arabic": "عدد المؤسسات؟", "db_id": "icfp_1"}
{"question": "Count the number of institutions.", "query": "SELECT count(*) FROM inst", "arabic": "كم عدد الأوراق التي تم نشرها بشكل إجمالي؟", "db_id": "icfp_1"}
{"question": "How many papers are published in total?", "query": "SELECT count(*) FROM papers", "arabic": "عدد الأوراق الكلي؟", "db_id": "icfp_1"}
{"question": "Count the number of total papers.", "query": "SELECT count(*) FROM papers", "arabic": "ما هي عناوين الأوراق التي نُشرت بواسطة \"جيريمي جيبونز\"؟", "db_id": "icfp_1"}
{"question": "What are the titles of papers published by \"Jeremy Gibbons\"?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\"", "arabic": "ما هي عناوين جميع الأوراق التي كتبها \"جيريمي جيبونز\"؟", "db_id": "icfp_1"}
{"question": "Find the titles of all the papers written by \"Jeremy Gibbons\"", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\"", "arabic": "ابحث عن جميع الأوراق التي نُشرت بواسطة \"آرون تورون\".", "db_id": "icfp_1"}
{"question": "Find all the papers published by \"Aaron Turon\".", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"", "arabic": "ما هي عناوين جميع الأوراق التي كتبها \"آرون تورون\"؟", "db_id": "icfp_1"}
{"question": "Find the titles of all the papers written by \"Aaron Turon\".", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"", "arabic": "كم عدد الأوراق التي نُشرت بواسطة \"أتسوشي أوهوري\"؟", "db_id": "icfp_1"}
{"question": "How many papers have \"Atsushi Ohori\" published?", "query": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\"", "arabic": "كم عدد الأوراق التي كان \"أتسوشي أوهوري\" مؤلفًا لها؟", "db_id": "icfp_1"}
{"question": "How many papers are \"Atsushi Ohori\" the author of?", "query": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\"", "arabic": "ما هو اسم المؤسسة التي ينتمي إليها \"ماتياس بلوم\"؟", "db_id": "icfp_1"}
{"question": "What is the name of the institution that \"Matthias Blume\" belongs to?", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"", "arabic": "إلى أي مؤسسة ينتمي المؤلف \"ماتياس بلوم\"؟ أعطني اسم المؤسسة.", "db_id": "icfp_1"}
{"question": "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution.", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"", "arabic": "إلى أي مؤسسة ينتمي \"كاتسوهيرو أوينو\"؟", "db_id": "icfp_1"}
{"question": "Which institution does \"Katsuhiro Ueno\" belong to?", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "arabic": "ما هو اسم المؤسسة التي ينتمي إليها المؤلف \"كاتسوهيرو أوينو\"؟", "db_id": "icfp_1"}
{"question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "arabic": "من ينتمي إلى المؤسسة \"جامعة أكسفورد\"؟ أظهر الأسماء الأولى والأسماء الأخيرة.", "db_id": "icfp_1"}
{"question": "Who belong to the institution \"University of Oxford\"? Show the first names and last names.", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "arabic": "ابحث عن الأسماء الأولى والأسماء الأخيرة للمؤلفين الذين ينتمون إلى مؤسسة \"جامعة أكسفورد\".", "db_id": "icfp_1"}
{"question": "Find the first names and last names of the authors whose institution affiliation is \"University of Oxford\".", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "arabic": "أي المؤلفين ينتمون إلى المؤسسة \"جوجل\"؟ أظهر الأسماء الأولى والأسماء الأخيرة.", "db_id": "icfp_1"}
{"question": "Which authors belong to the institution \"Google\"? Show the first names and last names.", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "arabic": "ما هي أسماء الأولاد والأسماء الأخيرة للمؤلفين الذين ينتمون إلى المؤسسة \"جوجل\"؟", "db_id": "icfp_1"}
{"question": "Find the first names and last names of the authors whose institution affiliation is \"Google\".", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "arabic": "ما هي أسماء العائلة للمؤلف للورقة المسماة \"Binders Unbound\"؟", "db_id": "icfp_1"}
{"question": "What are the last names of the author of the paper titled \"Binders Unbound\"?", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"", "arabic": "من هو مؤلف الورقة بعنوان \"Binders Unbound\"؟ أعطني الاسم الأخير.", "db_id": "icfp_1"}
{"question": "Who is the author of the paper titled \"Binders Unbound\"? Give me the last name.", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"", "arabic": "ابحث عن الاسم الأول والاسم الأخير للمؤلف(ين) الذين كتبوا الورقة \"Nameless, Painless\".", "db_id": "icfp_1"}
{"question": "Find the first and last name of the author(s) who wrote the paper \"Nameless, Painless\".", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"", "arabic": "ما هي الاسم الأول والاسم الأخير للمؤلف الذي نشر الورقة بعنوان \"Nameless, Painless\"؟", "db_id": "icfp_1"}
{"question": "What are the first and last name of the author who published the paper titled \"Nameless, Painless\"?", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"", "arabic": "ما هي الأوراق التي تم نشرها تحت مؤسسة \"جامعة إنديانا\"؟", "db_id": "icfp_1"}
{"question": "What are the papers published under the institution \"Indiana University\"?", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"", "arabic": "ما هي عناوين الأوراق التي يكون مؤلفوها من مؤسسة \"جامعة إنديانا\"؟", "db_id": "icfp_1"}
{"question": "List the titles of the papers whose authors are from the institution \"Indiana University\".", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"", "arabic": "ما هي جميع الأوراق التي نشرتها مؤسسة \"جوجل\"؟", "db_id": "icfp_1"}
{"question": "Find all the papers published by the institution \"Google\".", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "arabic": "أي الأوراق كتبها الكتّاب من مؤسسة \"جوجل\"؟", "db_id": "icfp_1"}
{"question": "Which papers were written by authors from the institution \"Google\"?", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "arabic": "كم عدد الأوراق التي نُشرت من قِبَل مؤسسة \"جامعة توهوكو\"؟", "db_id": "icfp_1"}
{"question": "How many papers are published by the institution \"Tokohu University\"?", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"", "arabic": "كم عدد الأوراق التي نُشرت من قبل الكتاب من مؤسسة \"جامعة توهوكو\"؟", "db_id": "icfp_1"}
{"question": "Find the number of papers published by authors from the institution \"Tokohu University\".", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"", "arabic": "ما هو عدد الأوراق التي نُشرت من قبل مؤسسة \"جامعة بنسلفانيا\"؟", "db_id": "icfp_1"}
{"question": "Find the number of papers published by the institution \"University of Pennsylvania\".", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\"", "arabic": "كم ورقة كُتبت من قبل الكتاب من مؤسسة \"جامعة بنسلفانيا\"؟", "db_id": "icfp_1"}
{"question": "How many papers are written by authors from the institution \"University of Pennsylvania\"?", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\"", "arabic": "ما هي الأوراق التي لديها \"أولين شيفرز\" كمؤلف؟", "db_id": "icfp_1"}
{"question": "Find the papers which have \"Olin Shivers\" as an author.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\"", "arabic": "ما هي الأوراق التي كتبها المؤلف \"أولين شيفرز\"؟ أعطني عناوين الأوراق.", "db_id": "icfp_1"}
{"question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\"", "arabic": "أي الأوراق لديها \"ستيفاني ويريتش\" كمؤلف؟", "db_id": "icfp_1"}
{"question": "Which papers have \"Stephanie Weirich\" as an author?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"", "arabic": "ما هي عناوين الأوراق التي كتبها المؤلف \"ستيفاني ويريتش\"؟", "db_id": "icfp_1"}
{"question": "Find the titles of the papers the author \"Stephanie Weirich\" wrote.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"", "arabic": "أيّ ورقة نُشرت في مؤسسة في \"الولايات المتحدة الأمريكية\" ولها \"تورون\" كمؤلف ثانوي؟", "db_id": "icfp_1"}
{"question": "Which paper is published in an institution in \"USA\" and have \"Turon\" as its second author?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"", "arabic": "ما هي الأوراق التي يكون فيها الكاتب الثاني له اللقب \"تورون\" ومنتمٍ إلى مؤسسة في البلد \"الولايات المتحدة الأمريكية\"؟", "db_id": "icfp_1"}
{"question": "Find papers whose second author has last name \"Turon\" and is affiliated with an institution in the country \"USA\".", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"", "arabic": "ما هي عناوين الأوراق التي يكون الكاتب الأول منتمياً إلى مؤسسة في البلد \"اليابان\" ولديه اللقب \"أوهوري\"؟", "db_id": "icfp_1"}
{"question": "Find the titles of papers whose first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"", "arabic": "أي الأوراق التي يكون الكاتب الأول منتمياً إلى مؤسسة في البلد \"اليابان\" ولديه اللقب \"أوهوري\"؟ أعطني عناوين الأوراق.", "db_id": "icfp_1"}
{"question": "Which papers' first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"? Give me the titles of the papers.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"", "arabic": "ما هو لقب آخر الكاتب الذي قام بنشر أكبر عدد من الأوراق؟", "db_id": "icfp_1"}
{"question": "What is the last name of the author that has published the most papers?", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1", "arabic": "أي من المؤلفين كتب أكبر عدد من الأوراق؟ ابحث عن لقبه أو لقبها.", "db_id": "icfp_1"}
{"question": "Which author has written the most papers? Find his or her last name.", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو البلد الذي نُشرت فيه أكبر عدد من الأوراق؟", "db_id": "icfp_1"}
{"question": "Retrieve the country that has published the most papers.", "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو البلد الذي ينتمي إليه معظم الأوراق؟", "db_id": "icfp_1"}
{"question": "Find the country that the most papers are affiliated with.", "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم المنظمة التي نشرت أكبر عدد من الأوراق؟", "db_id": "icfp_1"}
{"question": "Find the name of the organization that has published the largest number of papers.", "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1", "arabic": "أي مؤسسة لديها أكبر عدد من الأوراق؟ ابحث عن اسم المؤسسة.", "db_id": "icfp_1"}
{"question": "Which institution has the most papers? Find the name of the institution.", "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي عناوين الأوراق التي تحتوي على كلمة \"ML\"؟", "db_id": "icfp_1"}
{"question": "Find the titles of the papers that contain the word \"ML\".", "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"", "arabic": "أي الأوراق التي تحتوي على الجزء الفرعي \"ML\" في عناوينها؟ عد العناوين للأوراق.", "db_id": "icfp_1"}
{"question": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers.", "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"", "arabic": "ما هو عنوان الورقة التي تحتوي على كلمة \"قاعدة بيانات\"؟", "db_id": "icfp_1"}
{"question": "Which paper's title contains the word \"Database\"?", "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"", "arabic": "أي الأوراق تحتوي على الجزء الفرعي \"قاعدة بيانات\" في عناوينها؟ عرض عناوين الأوراق.", "db_id": "icfp_1"}
{"question": "Which papers have the substring \"Database\" in their titles? Show the titles of the papers.", "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"", "arabic": "ما هي الأسماء الأولى لجميع الكتاب الذين كتبوا ورقة بعنوان يحتوي على كلمة \"وظيفية\"؟", "db_id": "icfp_1"}
{"question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"", "arabic": "من قام بكتابة ورقة تحتوي كلمة \"وظيفية\" في عنوانها؟ أرجو ذكر الأسماء الأولى للكتاب.", "db_id": "icfp_1"}
{"question": "Who has written a paper that has the word \"Functional\" in its title? Return the first names of the authors.", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"", "arabic": "ما هي الألقاب الأخيرة لجميع الكتاب الذين كتبوا ورقة بعنوان يحتوي على كلمة \"مونادية\"؟", "db_id": "icfp_1"}
{"question": "Find the last names of all the authors that have written a paper with title containing the word \"Monadic\".", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\"", "arabic": "أي الكتاب كتب ورقة بعنوان يحتوي على كلمة \"مونادية\"؟ أعطني ألقابهم.", "db_id": "icfp_1"}
{"question": "Which authors have written a paper with title containing the word \"Monadic\"? Return their last names.", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\"", "arabic": "ما هو عنوان الورقة التي يوجد فيها أكبر عدد من الكتاب؟", "db_id": "icfp_1"}
{"question": "Retrieve the title of the paper that has the largest number of authors.", "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)", "arabic": "أي ورقة بها أكبر عدد من الكتاب؟ أعطني عنوان الورقة.", "db_id": "icfp_1"}
{"question": "Which paper has the most authors? Give me the paper title.", "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)", "arabic": "ما هو الاسم الأول للكاتب الذي لديه اللقب \"أوينو\"؟", "db_id": "icfp_1"}
{"question": "What is the first name of the author with last name \"Ueno\"?", "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"", "arabic": "أي الكتاب لديهم اللقب \"أوينو\"؟ عرّف أسماؤهم الأولى.", "db_id": "icfp_1"}
{"question": "Which authors have last name \"Ueno\"? List their first names.", "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"", "arabic": "ما هو لقب الكاتب الذي يحمل الاسم الأول \"أمل\"؟", "db_id": "icfp_1"}
{"question": "Find the last name of the author with first name \"Amal\".", "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"", "arabic": "أي الكتاب لديهم الاسم الأول \"أمل\"؟ عرّف ألقابهم.", "db_id": "icfp_1"}
{"question": "Which authors have first name \"Amal\"? List their last names.", "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"", "arabic": "ما هي الأسماء الأولى لجميع الكتاب مرتبة ترتيباً أبجدياً؟", "db_id": "icfp_1"}
{"question": "Find the first names of all the authors ordered in alphabetical order.", "query": "SELECT fname FROM authors ORDER BY fname", "arabic": "فرز أسماء الكتّاب الأولى ترتيباً أبجدياً.", "db_id": "icfp_1"}
{"question": "Sort the first names of all the authors in alphabetical order.", "query": "SELECT fname FROM authors ORDER BY fname", "arabic": "استرجاع جميع ألقاب الكتّاب مرتبة ترتيباً أبجدياً.", "db_id": "icfp_1"}
{"question": "Retrieve all the last names of authors in alphabetical order.", "query": "SELECT lname FROM authors ORDER BY lname", "arabic": "أعطني قائمة بجميع ألقاب الكتّاب مرتبة ترتيباً أبجدياً.", "db_id": "icfp_1"}
{"question": "Give me a list of all the last names of authors sorted in alphabetical order", "query": "SELECT lname FROM authors ORDER BY lname", "arabic": "استرجاع جميع الأسماء الأولى والألقاب للكتّاب مرتبة ترتيباً أبجدياً حسب الألقاب.", "db_id": "icfp_1"}
{"question": "Retrieve all the first and last names of authors in the alphabetical order of last names.", "query": "SELECT fname ,  lname FROM authors ORDER BY lname", "arabic": "فرز قائمة جميع الأسماء الأولى والألقاب للكتّاب ترتيباً أبجدياً حسب الألقاب.", "db_id": "icfp_1"}
{"question": "Sort the list of all the first and last names of authors in alphabetical order of the last names.", "query": "SELECT fname ,  lname FROM authors ORDER BY lname", "arabic": "كم عدد الأسماء الأخيرة المختلفة التي تمتلكها الممثلون والممثلات؟", "db_id": "icfp_1"}
{"question": "How many different last names do the actors and actresses have?", "query": "SELECT count(DISTINCT last_name) FROM actor", "arabic": "عدّد عدد الأسماء الأخيرة المختلفة التي يمتلكها الممثلون.", "db_id": "sakila_1"}
{"question": "Count the number of different last names actors have.", "query": "SELECT count(DISTINCT last_name) FROM actor", "arabic": "ما هو الاسم الأول الأكثر شيوعًا بين الممثلين؟", "db_id": "sakila_1"}
{"question": "What is the most popular first name of the actors?", "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الاسم الأول الأكثر شيوعًا بين جميع الممثلين؟", "db_id": "sakila_1"}
{"question": "Return the most common first name among all actors.", "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الاسم الكامل الأكثر شيوعًا بين الممثلين؟", "db_id": "sakila_1"}
{"question": "What is the most popular full name of the actors?", "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الاسم الكامل الأكثر شيوعًا بين جميع الممثلين؟", "db_id": "sakila_1"}
{"question": "Return the most common full name among all actors.", "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1", "arabic": "أي المناطق التي تحتوي على عناوين على الأقل؟", "db_id": "sakila_1"}
{"question": "Which districts have at least two addresses?", "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2", "arabic": "اعطني المناطق التي تحتوي على عنواين عددها اثنان أو أكثر.", "db_id": "sakila_1"}
{"question": "Give the districts which have two or more addresses.", "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2", "arabic": "ما هو رقم الهاتف والرمز البريدي للعنوان 1031 Daugavpils Parkway؟", "db_id": "sakila_1"}
{"question": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'", "arabic": "أعطني رقم الهاتف والرمز البريدي المتوافقين مع العنوان '1031 Daugavpils Parkway'.", "db_id": "sakila_1"}
{"question": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'", "arabic": "أيّ مدينة تحتوي على أكبر عدد من العناوين؟ أذكر اسم المدينة، وعدد العناوين، ومعرف المدينة.", "db_id": "sakila_1"}
{"question": "Which city has the most addresses? List the city name, number of addresses, and city id.", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء المدينة ومعرفها وعدد العناوين المتوافقة مع المدينة التي تحتوي على أكبر عدد من العناوين؟", "db_id": "sakila_1"}
{"question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عنوان في منطقة كاليفورنيا؟", "db_id": "sakila_1"}
{"question": "How many addresses are in the district of California?", "query": "SELECT count(*) FROM address WHERE district  =  'California'", "arabic": "عدد العناوين في منطقة كاليفورنيا؟", "db_id": "sakila_1"}
{"question": "Count the number of addressed in the California district.", "query": "SELECT count(*) FROM address WHERE district  =  'California'", "arabic": "أي فيلم يتم استئجاره برسم قدره 0.99 ويكون لديه أقل من 3 في المخزون؟ أذكر عنوان الفيلم ومعرفه.", "db_id": "sakila_1"}
{"question": "Which film is rented at a fee of 0.99 and has less than 3 in the inventory? List the film title and id.", "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3", "arabic": "ما هي عنوان الفيلم ومعرفه الذي يتمتع بسعر تأجير قدره 0.99 ويكون المخزون أقل من 3؟", "db_id": "sakila_1"}
{"question": "What are the title and id of the film which has a rental rate of 0.99 and an inventory of below 3?", "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3", "arabic": "كم عدد المدن في أستراليا؟", "db_id": "sakila_1"}
{"question": "How many cities are in Australia?", "query": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'", "arabic": "عدد المدن في أستراليا؟", "db_id": "sakila_1"}
{"question": "Count the number of cities in Australia.", "query": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'", "arabic": "ما هي الدول التي تحتوي على ما لا يقل عن 3 مدن؟", "db_id": "sakila_1"}
{"question": "Which countries have at least 3 cities?", "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3", "arabic": "ما هي الدول التي تحتوي على 3 أو أكثر من المدن؟", "db_id": "sakila_1"}
{"question": "What are the countries that contain 3 or more cities?", "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3", "arabic": "ما هي جميع تواريخ الدفع للمدفوعات التي تزيد قيمتها عن 10 والتي تمت معالجتها بواسطة موظف يحمل الاسم الأول إلسا؟", "db_id": "sakila_1"}
{"question": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa.", "query": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'", "arabic": "ما هي تواريخ الدفع لأي دفعات تكون قيمتها أكبر من 10 أو تمت معالجتها من قبل موظف يحمل الاسم الأول إلسا؟", "db_id": "sakila_1"}
{"question": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "query": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'", "arabic": "كم عدد العملاء الذين لديهم قيمة نشطة تساوي 1؟", "db_id": "sakila_1"}
{"question": "How many customers have an active value of 1?", "query": "SELECT count(*) FROM customer WHERE active = '1'", "arabic": "عدد العملاء النشطين.", "db_id": "sakila_1"}
{"question": "Count the number of customers who are active.", "query": "SELECT count(*) FROM customer WHERE active = '1'", "arabic": "أي فيلم لديه أعلى سعر إيجار؟ وما هو السعر؟", "db_id": "sakila_1"}
{"question": "Which film has the highest rental rate? And what is the rate?", "query": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1", "arabic": "ما هو عنوان الفيلم وسعر الإيجار للفيلم الذي يمتلك أعلى سعر إيجار؟", "db_id": "sakila_1"}
{"question": "What are the title and rental rate of the film with the highest rental rate?", "query": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1", "arabic": "أي فيلم يحتوي على أكبر عدد من الممثلين أو الممثلات؟ أورد اسم الفيلم ومعرف الفيلم والوصف.", "db_id": "sakila_1"}
{"question": "Which film has the most number of actors or actresses? List the film name, film id and description.", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي عنوان الفيلم ومعرفه والوصف للفيلم الذي يحتوي على أكبر عدد من الممثلين؟", "db_id": "sakila_1"}
{"question": "What are the title, id, and description of the movie with the greatest number of actors?", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أيُّ ممثل (أو ممثلة) لعب دور البطولة في أكبر عدد من الأفلام؟ اذكر اسمه الأول، واسمه الأخير، ومعرفه كممثل.", "db_id": "sakila_1"}
{"question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الاسم الكامل والمعرف للممثل أو الممثلة الذين قاموا بأدوار رئيسية في أكبر عدد من الأفلام؟", "db_id": "sakila_1"}
{"question": "Return the full name and id of the actor or actress who starred in the greatest number of films.", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هم أسماء الممثلين (الممثلات) الذين قاموا بأدوار في أكثر من 30 فيلمًا؟", "db_id": "sakila_1"}
{"question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30", "arabic": "ما هي الأسماء الكاملة للممثلين الذين شاركوا في أكثر من 30 فيلمًا؟", "db_id": "sakila_1"}
{"question": "What are the full names of actors who had roles in more than 30 films?", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30", "arabic": "أي متجر يمتلك أكبر عدد من العناصر؟", "db_id": "sakila_1"}
{"question": "Which store owns most items?", "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو رقم التعريف الخاص بالمتجر الذي يمتلك أكبر عدد من العناصر في المخزون؟", "db_id": "sakila_1"}
{"question": "What is the id of the store that has the most items in inventory?", "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو إجمالي المبلغ لجميع المدفوعات؟", "db_id": "sakila_1"}
{"question": "What is the total amount of all payments?", "query": "SELECT sum(amount) FROM payment", "arabic": "ما هو مجموع جميع مبالغ الدفع؟", "db_id": "sakila_1"}
{"question": "Return the sum of all payment amounts.", "query": "SELECT sum(amount) FROM payment", "arabic": "أي عميل قام بعملية دفع واحدة على الأقل قد أنفق أقل مبلغ؟ قم بتقديم الاسم الأول والاسم الأخير، والمعرف.", "db_id": "sakila_1"}
{"question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1", "arabic": "ما هو الاسم الكامل والهوية الشخصية للعميل الذي يمتلك أقل إجمالي مبلغ دفع؟", "db_id": "sakila_1"}
{"question": "What is the full name and id of the customer who has the lowest total amount of payment?", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1", "arabic": "ما هو اسم النوع الخاص بفيلم HUNGER ROOF؟", "db_id": "sakila_1"}
{"question": "What is the genre name of the film HUNGER ROOF?", "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'", "arabic": "ما اسم الفئة التي ينتمي إليها فيلم 'HUNGER ROOF'؟", "db_id": "sakila_1"}
{"question": "Return the name of the category to which the film 'HUNGER ROOF' belongs.", "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'", "arabic": "كم فيلم هناك في كل فئة؟ قم بتسجيل اسم النوع، ومعرّف النوع، والعدد.", "db_id": "sakila_1"}
{"question": "How many films are there in each category? List the genre name, genre id and the count.", "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id", "arabic": "ما هي أسماء الفئات المختلفة ومعرّفاتها، وكم عدد الأفلام في كل منها؟", "db_id": "sakila_1"}
{"question": "What are the names and ids of the different categories, and how many films are in each?", "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id", "arabic": "أي فيلم يحتوي على أكبر عدد من النسخ في المخزون؟ قم بتسجيل العنوان والمعرّف.", "db_id": "sakila_1"}
{"question": "Which film has the most copies in the inventory? List both title and id.", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو عنوان الفيلم ومعرّفه الذي يحتوي على أكبر عدد من النسخ في المخزون؟", "db_id": "sakila_1"}
{"question": "What is the title and id of the film that has the greatest number of copies in inventory?", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو عنوان الفيلم ومعرّف المخزون للعنصر الذي تم استئجاره بشكل أكثر تواترًا في المخزون؟", "db_id": "sakila_1"}
{"question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو عنوان الفيلم ومعرّف المخزون للفيلم الذي يتم استئجاره بشكل أكثر تواترًا؟", "db_id": "sakila_1"}
{"question": "Return the title and inventory id of the film that is rented most often.", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عدد اللغات في هذه الأفلام؟", "db_id": "sakila_1"}
{"question": "How many languages are in these films?", "query": "SELECT count(DISTINCT language_id) FROM film", "arabic": "عدد اللغات المختلفة في هذه الأفلام؟", "db_id": "sakila_1"}
{"question": "Count the number of different languages in these films.", "query": "SELECT count(DISTINCT language_id) FROM film", "arabic": "ما هي جميع الأفلام التي تم تصنيفها كـ \"R\"؟ قم بتسجيل الأعناوي.", "db_id": "sakila_1"}
{"question": "What are all the movies rated as R? List the titles.", "query": "SELECT title FROM film WHERE rating  =  'R'", "arabic": "ما هي عناوين الأفلام التي تحمل تصنيف \"R\"؟", "db_id": "sakila_1"}
{"question": "Return the titles of any movies with an R rating.", "query": "SELECT title FROM film WHERE rating  =  'R'", "arabic": "أين يقع المخزن 1؟", "db_id": "sakila_1"}
{"question": "Where is store 1 located?", "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1", "arabic": "ما هو عنوان المخزن 1؟", "db_id": "sakila_1"}
{"question": "Return the address of store 1.", "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1", "arabic": "أي موظف قام بالتعامل مع أقل عدد من المدفوعات؟ قم بتسجيل الاسم الكامل والمعرّف.", "db_id": "sakila_1"}
{"question": "Which staff handled least number of payments? List the full name and the id.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو الاسم الكامل ومعرّف الموظف الذي قام بالتعامل مع أقل عدد من المدفوعات؟", "db_id": "sakila_1"}
{"question": "Give the full name and staff id of the staff who has handled the fewest payments.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هي اللغة التي يستخدمها فيلم AIRPORT POLLOCK؟ قم بتسجيل اسم اللغة.", "db_id": "sakila_1"}
{"question": "Which language does the film AIRPORT POLLOCK use? List the language name.", "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'", "arabic": "ما هو اسم اللغة التي يتحدث بها فيلم 'AIRPORT POLLOCK'؟", "db_id": "sakila_1"}
{"question": "What is the name of the language that the film 'AIRPORT POLLOCK' is in?", "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'", "arabic": "كم عدد المتاجر؟", "db_id": "sakila_1"}
{"question": "How many stores are there?", "query": "SELECT count(*) FROM store", "arabic": "عدد المتاجر؟", "db_id": "sakila_1"}
{"question": "Count the number of stores.", "query": "SELECT count(*) FROM store", "arabic": "كم نوعًا مختلفًا من التصنيفات المدرجة؟", "db_id": "sakila_1"}
{"question": "How many kinds of different ratings are listed?", "query": "SELECT count(DISTINCT rating) FROM film", "arabic": "عدد التصنيفات المختلفة للأفلام؟", "db_id": "sakila_1"}
{"question": "Count the number of different film ratings.", "query": "SELECT count(DISTINCT rating) FROM film", "arabic": "أي الأفلام التي تحتوي على 'Deleted Scenes' كجزء من الميزات الخاصة؟", "db_id": "sakila_1"}
{"question": "Which movies have 'Deleted Scenes' as a substring in the special feature?", "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'", "arabic": "ما هي عناوين الأفلام التي تتضمن 'Deleted Scenes' في قسم الميزات الخاصة بها؟", "db_id": "sakila_1"}
{"question": "Return the titles of films that include 'Deleted Scenes' in their special feature section.", "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'", "arabic": "كم عدد العناصر في المخزون الذي يمتلكه المخزن 1؟", "db_id": "sakila_1"}
{"question": "How many items in inventory does store 1 have?", "query": "SELECT count(*) FROM inventory WHERE store_id  =  1", "arabic": "عدد العناصر التي يحتويها المخزن 1 في المخزون؟", "db_id": "sakila_1"}
{"question": "Count the number of items store 1 has in stock.", "query": "SELECT count(*) FROM inventory WHERE store_id  =  1", "arabic": "متى حدثت أول عملية دفع؟", "db_id": "sakila_1"}
{"question": "When did the first payment happen?", "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1", "arabic": "ما هو تاريخ أول عملية دفع؟", "db_id": "sakila_1"}
{"question": "What was the date of the earliest payment?", "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1", "arabic": "أين تعيش العميلة التي تحمل اسم Linda؟ وما هو بريدها الإلكتروني؟", "db_id": "sakila_1"}
{"question": "Where does the customer with the first name Linda live? And what is her email?", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "arabic": "ارجع إلى عنوان وبريد العميلة التي تحمل الاسم الأول Linda.", "db_id": "sakila_1"}
{"question": "Return the address and email of the customer with the first name Linda.", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "arabic": "ابحث عن جميع الأفلام التي تزيد مدتها عن 100 دقيقة، أو التي تم تصنيفها كـ PG، باستثناء تلك التي تكلف أكثر من 200 للتبديل. قم بتسجيل العناوين.", "db_id": "sakila_1"}
{"question": "Find all the films longer than 100 minutes, or rated PG, except those who cost more than 200 for replacement. List the titles.", "query": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200", "arabic": "ما هي عناوين الأفلام التي يتجاوز مدتها 100 دقيقة، أو تم تصنيفها كـ PG، باستثناء تلك التي تكلف أكثر من 200 للتبديل؟", "db_id": "sakila_1"}
{"question": "What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?", "query": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200", "arabic": "ما هو الاسم الأول والاسم الأخير للعميل الذي قام بأقرب إستئجار؟", "db_id": "sakila_1"}
{"question": "What is the first name and the last name of the customer who made the earliest rental?", "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1", "arabic": "ما هو الاسم الكامل للعميل الذي قام بأول عملية إستئجار؟", "db_id": "sakila_1"}
{"question": "Return the full name of the customer who made the first rental.", "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1", "arabic": "ما هو الاسم الكامل لموظف الذي قام بتأجير فيلم لعميل يحمل الاسم الأول April والاسم الأخير Burns؟", "db_id": "sakila_1"}
{"question": "What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns?", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'", "arabic": "ما هو الاسم الكامل للموظف الذي قدم للعميل الذي يحمل الاسم الأول April والاسم الأخير Burns إعارة فيلم؟", "db_id": "sakila_1"}
{"question": "Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental.", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'", "arabic": "أي متجر يمتلك أكبر عدد من العملاء؟", "db_id": "sakila_1"}
{"question": "Which store has most the customers?", "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرّف المتجر الذي يمتلك أكبر عدد من العملاء؟", "db_id": "sakila_1"}
{"question": "Return the id of the store with the most customers.", "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو أكبر مبلغ للدفع؟", "db_id": "sakila_1"}
{"question": "What is the largest payment amount?", "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1", "arabic": "ما هو مبلغ أكبر دفعة؟", "db_id": "sakila_1"}
{"question": "Return the amount of the largest payment.", "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1", "arabic": "أين يعيش عضو الطاقم الذي يحمل الاسم الأول Elsa؟", "db_id": "sakila_1"}
{"question": "Where does the staff member with the first name Elsa live?", "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'", "arabic": "أعطني عنوان عضو الطاقم الذي يحمل الاسم الأول Elsa.", "db_id": "sakila_1"}
{"question": "Give the address of the staff member who has the first name Elsa.", "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'", "arabic": "ما هي الأسماء الأولى للعملاء الذين لم يستأجروا أي أفلام بعد '2005-08-23 02:06:01'؟", "db_id": "sakila_1"}
{"question": "What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?", "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )", "arabic": "ما هي الأسماء الأولى للعملاء الذين لم يستأجروا فيلمًا بعد التاريخ '2005-08-23 02:06:01'؟", "db_id": "sakila_1"}
{"question": "Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01'.", "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )", "arabic": "كم فرع بنكي موجود؟", "db_id": "sakila_1"}
{"question": "How many bank branches are there?", "query": "SELECT count(*) FROM bank", "arabic": "عدد فروع البنك؟", "db_id": "loan_1"}
{"question": "Count the number of bank branches.", "query": "SELECT count(*) FROM bank", "arabic": "كم عدد العملاء؟", "db_id": "loan_1"}
{"question": "How many customers are there?", "query": "SELECT sum(no_of_customers) FROM bank", "arabic": "ما هو إجمالي عدد العملاء عبر البنوك؟", "db_id": "loan_1"}
{"question": "What is the total number of customers across banks?", "query": "SELECT sum(no_of_customers) FROM bank", "arabic": "ما هو عدد العملاء في البنوك في مدينة نيويورك؟", "db_id": "loan_1"}
{"question": "Find the number of customers in the banks at New York City.", "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'", "arabic": "ما هو إجمالي عدد العملاء الذين يستخدمون البنوك في مدينة نيويورك؟", "db_id": "loan_1"}
{"question": "What is the total number of customers who use banks in New York City?", "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'", "arabic": "ما هو متوسط عدد العملاء في جميع البنوك في ولاية يوتا؟", "db_id": "loan_1"}
{"question": "Find the average number of customers in all banks of Utah state.", "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'", "arabic": "ما هو متوسط عدد العملاء في جميع البنوك في ولاية يوتا؟", "db_id": "loan_1"}
{"question": "What is the average number of customers across banks in the state of Utah?", "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'", "arabic": "ما هو متوسط عدد العملاء عبر جميع البنوك؟", "db_id": "loan_1"}
{"question": "Find the average number of customers cross all banks.", "query": "SELECT avg(no_of_customers) FROM bank", "arabic": "ما هو متوسط عدد عملاء البنك؟", "db_id": "loan_1"}
{"question": "What is the average number of bank customers?", "query": "SELECT avg(no_of_customers) FROM bank", "arabic": "ما هي المدينة والولاية لفرع البنك المسمى \"مورنينغسايد\"؟", "db_id": "loan_1"}
{"question": "Find the city and state of the bank branch named morningside.", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'", "arabic": "ما هي المدينة والولاية التي يوجد فيها البنك بالاسم \"مورنينغسايد\"؟", "db_id": "loan_1"}
{"question": "What city and state is the bank with the name morningside in?", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'", "arabic": "ما هي أسماء الفروع للبنوك في ولاية نيويورك؟", "db_id": "loan_1"}
{"question": "Find the branch names of banks in the New York state.", "query": "SELECT bname FROM bank WHERE state  =  'New York'", "arabic": "ما هي أسماء البنوك في ولاية نيويورك؟", "db_id": "loan_1"}
{"question": "What are the names of banks in the state of New York?", "query": "SELECT bname FROM bank WHERE state  =  'New York'", "arabic": "أذكر أسماء جميع العملاء مرتبة حسب رصيدهم في الحساب بترتيب تصاعدي.", "db_id": "loan_1"}
{"question": "List the name of all customers sorted by their account balance in ascending order.", "query": "SELECT cust_name FROM customer ORDER BY acc_bal", "arabic": "ما هي أسماء جميع العملاء، مرتبة حسب رصيد الحساب؟", "db_id": "loan_1"}
{"question": "What are the names of all customers, ordered by account balance?", "query": "SELECT cust_name FROM customer ORDER BY acc_bal", "arabic": "ما هي أسماء جميع العملاء المختلفين الذين لديهم قرض مرتبة حسب إجمالي مبلغ القرض؟", "db_id": "loan_1"}
{"question": "List the name of all different customers who have some loan sorted by their total loan amount.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)", "arabic": "ما هي أسماء العملاء المختلفين الذين قاموا بأخذ قرض، مرتبة حسب المبلغ الإجمالي الذي أخذوه؟", "db_id": "loan_1"}
{"question": "What are the names of the different customers who have taken out a loan, ordered by the total amount that they have taken?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)", "arabic": "ما هي الولاية، ونوع الحساب، ونقطة الائتمان للعميل الذي عدد القروض لديه 0؟", "db_id": "loan_1"}
{"question": "Find the state, account type, and credit score of the customer whose number of loan is 0.", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0", "arabic": "ما هي الولايات، وأنواع الحسابات، ونقاط الائتمان للعملاء الذين لديهم 0 قروض؟", "db_id": "loan_1"}
{"question": "What are the states, account types, and credit scores for customers who have 0 loans?", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0", "arabic": "كم عدد المدن المختلفة التي يوجد فيها البنوك؟", "db_id": "loan_1"}
{"question": "Find the number of different cities which banks are located at.", "query": "SELECT count(DISTINCT city) FROM bank", "arabic": "في كم مدينة مختلفة توجد البنوك؟", "db_id": "loan_1"}
{"question": "In how many different cities are banks located?", "query": "SELECT count(DISTINCT city) FROM bank", "arabic": "كم عدد الولايات المختلفة التي توجد بها البنوك؟", "db_id": "loan_1"}
{"question": "Find the number of different states which banks are located at.", "query": "SELECT count(DISTINCT state) FROM bank", "arabic": "في كم ولاية مختلفة توجد البنوك؟", "db_id": "loan_1"}
{"question": "In how many different states are banks located?", "query": "SELECT count(DISTINCT state) FROM bank", "arabic": "كم نوع مختلف من الحسابات موجودة؟", "db_id": "loan_1"}
{"question": "How many distinct types of accounts are there?", "query": "SELECT count(DISTINCT acc_type) FROM customer", "arabic": "عدد أنواع الحسابات المختلفة؟", "db_id": "loan_1"}
{"question": "Count the number of different account types.", "query": "SELECT count(DISTINCT acc_type) FROM customer", "arabic": "ما اسم العميل ورصيد الحساب للعميل الذي يحتوي اسمه على الحرف 'أ'?", "db_id": "loan_1"}
{"question": "Find the name and account balance of the customer whose name includes the letter ‘a’.", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "arabic": "ما هي أسماء العملاء وأرصدة الحسابات للعملاء الذين يحتوون على الحرف 'أ' في أسمائهم؟", "db_id": "loan_1"}
{"question": "What are the names and account balances of customers with the letter a in their names?", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "arabic": "ما مجموع الرصيد الإجمالي لكل عميل من ولايتي يوتا أو تكساس؟", "db_id": "loan_1"}
{"question": "Find the total account balance of each customer from Utah or Texas.", "query": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'", "arabic": "ما هي إجمالي الرصيد لكل عميل من ولاية يوتا أو تكساس؟", "db_id": "loan_1"}
{"question": "What are the total account balances for each customer from Utah or Texas?", "query": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'", "arabic": "ما هي أسماء العملاء الذين لديهم نوع حسابات التوفير والتحقق؟", "db_id": "loan_1"}
{"question": "Find the name of customers who have both saving and checking account types.", "query": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'", "arabic": "ما هي أسماء العملاء الذين لديهم حسابات توفير وتحقق؟", "db_id": "loan_1"}
{"question": "What are the names of customers who have both savings and checking accounts?", "query": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'", "arabic": "ما هي أسماء العملاء الذين ليس لديهم حساب توفير؟", "db_id": "loan_1"}
{"question": "Find the name of customers who do not have an saving account.", "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'", "arabic": "ما هي أسماء العملاء الذين ليس لديهم حسابات توفير؟", "db_id": "loan_1"}
{"question": "What are the names of customers who do not have saving accounts?", "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'", "arabic": "ما هي أسماء العملاء الذين ليس لديهم قرض بنوع الرهن العقاري؟", "db_id": "loan_1"}
{"question": "Find the name of customers who do not have a loan with a type of Mortgages.", "query": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'", "arabic": "ما هي أسماء العملاء الذين لم يأخذوا قرض رهن عقاري؟", "db_id": "loan_1"}
{"question": "What are the names of customers who have not taken a Mortage loan?", "query": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'", "arabic": "ما هي أسماء العملاء الذين لديهم قروض لكل من الرهون العقارية والسيارات؟", "db_id": "loan_1"}
{"question": "Find the name of customers who have loans of both Mortgages and Auto.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'", "arabic": "ما هي أسماء العملاء الذين اتخذوا قروض الرهن العقاري والسيارات؟", "db_id": "loan_1"}
{"question": "What are the names of customers who have taken both Mortgage and Auto loans?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'", "arabic": "ما هي أسماء العملاء الذين يكون معدل درجات الائتمان لديهم أقل من معدل درجات الائتمان العام لجميع العملاء؟", "db_id": "loan_1"}
{"question": "Find the name of customers whose credit score is below the average credit scores of all customers.", "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)", "arabic": "ما هي أسماء العملاء الذين لديهم درجة ائتمان أقل من متوسط الدرجات الائتمانية عبر العملاء؟", "db_id": "loan_1"}
{"question": "What are the names of customers with credit score less than the average credit score across customers?", "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)", "arabic": "ما هو اسم الفرع للبنك الذي يمتلك أكبر عدد من العملاء؟", "db_id": "loan_1"}
{"question": "Find the branch name of the bank that has the most number of customers.", "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1", "arabic": "ما هو اسم فرع البنك الذي يحتوي على أكبر عدد من العملاء؟", "db_id": "loan_1"}
{"question": "What is the name of the bank branch with the greatest number of customers?", "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1", "arabic": "ما هو اسم العميل الذي يمتلك أدنى درجة ائتمان؟", "db_id": "loan_1"}
{"question": "Find the name of customer who has the lowest credit score.", "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1", "arabic": "ما هو اسم العميل الذي يمتلك أسوأ درجة ائتمان؟", "db_id": "loan_1"}
{"question": "What is the name of the customer with the worst credit score?", "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1", "arabic": "ما هو اسم العميل، نوع الحساب، ورصيد الحساب للعميل الذي يمتلك أعلى درجة ائتمان؟", "db_id": "loan_1"}
{"question": "Find the name, account type, and account balance of the customer who has the highest credit score.", "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1", "arabic": "ما هو اسم العميل، نوع الحساب، ورصيد الحساب المتوافق مع العميل الذي يمتلك أعلى درجة ائتمان؟", "db_id": "loan_1"}
{"question": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?", "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1", "arabic": "ما هو اسم العميل الذي يمتلك أعلى مبلغ من القروض؟", "db_id": "loan_1"}
{"question": "Find the name of customer who has the highest amount of loans.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1", "arabic": "ما هو اسم العميل الذي يمتلك أعلى إجمالي مبلغ من القروض؟", "db_id": "loan_1"}
{"question": "What is the name of the customer who has greatest total loan amount?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1", "arabic": "ما هو الولاية التي تحتوي على أكبر عدد من العملاء؟", "db_id": "loan_1"}
{"question": "Find the state which has the most number of customers.", "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1", "arabic": "أي ولاية لديها أكبر إجمالي عدد من عملاء البنك؟", "db_id": "loan_1"}
{"question": "Which state has the greatest total number of bank customers?", "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1", "arabic": "ما هو متوسط الرصيد الحسابي لكل نوع حساب، لعملاء لديهم درجة ائتمان أقل من 50؟", "db_id": "loan_1"}
{"question": "For each account type, find the average account balance of customers with credit score lower than 50.", "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type", "arabic": "ما هو متوسط الرصيد الحسابي للعملاء الذين لديهم درجة ائتمان أقل من 50 لأنواع الحسابات المختلفة؟", "db_id": "loan_1"}
{"question": "What is the average account balance of customers with credit score below 50 for the different account types?", "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type", "arabic": "ما هو إجمالي الرصيد الحسابي للعملاء الذين يبلغ معدل الائتمان لديهم أكثر من 100 لكل ولاية؟", "db_id": "loan_1"}
{"question": "For each state, find the total account balance of customers whose credit score is above 100.", "query": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state", "arabic": "ما هو إجمالي الرصيد الحسابي للعملاء الذين يبلغ معدل الائتمان لديهم أكثر من 100 للولايات المختلفة؟", "db_id": "loan_1"}
{"question": "What is the total account balance for customers with a credit score of above 100 for the different states?", "query": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state", "arabic": "ما هو إجمالي مبلغ القروض المقدمة من كل فرع مصرفي؟", "db_id": "loan_1"}
{"question": "Find the total amount of loans offered by each bank branch.", "query": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname", "arabic": "ما هي أسماء فروع المصرف المختلفة، وما هي إجماليات مبالغ القروض في كل فرع؟", "db_id": "loan_1"}
{"question": "What are the names of the different bank branches, and what are their total loan amounts?", "query": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname", "arabic": "ما هي أسماء العملاء الذين لديهم أكثر من قرض واحد؟", "db_id": "loan_1"}
{"question": "Find the name of customers who have more than one loan.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1", "arabic": "ما هي أسماء العملاء الذين قاموا بأخذ أكثر من قرض واحد؟", "db_id": "loan_1"}
{"question": "What are the names of customers who have taken out more than one loan?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1", "arabic": "ما هي أسماء العملاء ورصيدهم الحالي الذين لديهم قروض بمبلغ إجمالي أكثر من 5000؟", "db_id": "loan_1"}
{"question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.", "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000", "arabic": "ما هي أسماء العملاء وأرصدتهم لديهم الذين قاموا بأخذ مبلغ إجمالي يزيد عن 5000 في القروض؟", "db_id": "loan_1"}
{"question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?", "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000", "arabic": "ما هو اسم فرع البنك الذي قدم أكبر مبلغ إجمالي من القروض؟", "db_id": "loan_1"}
{"question": "Find the name of bank branch that provided the greatest total amount of loans.", "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1", "arabic": "ما هو اسم فرع البنك الذي قام بإقراض أكبر مبلغ؟", "db_id": "loan_1"}
{"question": "What is the name of the bank branch that has lent the greatest amount?", "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1", "arabic": "ما هو اسم فرع البنك الذي قدم أكبر مبلغ إجمالي للقروض للعملاء الذين يمتلكون درجة ائتمان أقل من 100؟", "db_id": "loan_1"}
{"question": "Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100.", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1", "arabic": "ما هو اسم فرع البنك الذي قدم أكبر مبلغ إجمالي في القروض، بالضبط للعملاء الذين يمتلكون درجات ائتمان أقل من 100؟", "db_id": "loan_1"}
{"question": "What is the name of the bank branch that has lended the largest total amount in loans, specifically to customers with credit scores below 100?", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1", "arabic": "ما هي أسماء فروع البنك التي قدمت بعض القروض؟", "db_id": "loan_1"}
{"question": "Find the name of bank branches that provided some loans.", "query": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id", "arabic": "ما هي أسماء البنوك المختلفة التي قدمت قروض؟", "db_id": "loan_1"}
{"question": "What are the names of the different banks that have provided loans?", "query": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id", "arabic": "ما هو اسم ونقطة الائتمان للعملاء الذين لديهم بعض القروض؟", "db_id": "loan_1"}
{"question": "Find the name and credit score of the customers who have some loans.", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id", "arabic": "ما هي الأسماء ونقاط الائتمان المختلفة للعملاء الذين قاموا بأخذ قرض؟", "db_id": "loan_1"}
{"question": "What are the different names and credit scores of customers who have taken a loan?", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id", "arabic": "ما هي أسماء العملاء الذين لديهم قرض بمبلغ أكثر من 3000؟", "db_id": "loan_1"}
{"question": "Find the the name of the customers who have a loan with amount more than 3000.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000", "arabic": "ما هي أسماء العملاء الذين لديهم قرض بمبلغ أكثر من 3000؟", "db_id": "loan_1"}
{"question": "What are the names of customers who have a loan of more than 3000 in amount?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000", "arabic": "ما هي المدينة واسم فروع البنوك التي تقدم قروض تجارية؟", "db_id": "loan_1"}
{"question": "Find the city and name of bank branches that provide business loans.", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'", "arabic": "ما هي أسماء ومدن فروع البنوك التي تقدم قروض للأعمال؟", "db_id": "loan_1"}
{"question": "What are the names and cities of bank branches that offer loans for business?", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'", "arabic": "ما هي أسماء فروع البنوك التي قدمت قرضًا لأي عميل يكون درجة ائتمانه أقل من 100؟", "db_id": "loan_1"}
{"question": "Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100", "arabic": "ما هي أسماء البنوك التي قدمت قروضًا لعملاء يكون درجات ائتمانهم أقل من 100؟", "db_id": "loan_1"}
{"question": "What are the names of banks that have loaned money to customers with credit scores below 100?", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100", "arabic": "ما هو إجمالي مبلغ القروض التي قدمتها فروع البنوك في ولاية نيويورك؟", "db_id": "loan_1"}
{"question": "Find the total amount of loans provided by bank branches in the state of New York.", "query": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'", "arabic": "ما هو إجمالي مبلغ الأموال المُقَرَضة من البنوك في ولاية نيويورك؟", "db_id": "loan_1"}
{"question": "What is the total amount of money loaned by banks in New York state?", "query": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'", "arabic": "ما هو متوسط ​​درجة الائتمان للعملاء الذين لديهم بعض القروض؟", "db_id": "loan_1"}
{"question": "Find the average credit score of the customers who have some loan.", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)", "arabic": "ما هو متوسط ​​درجة الائتمان للعملاء الذين قاموا بأخذ قرض؟", "db_id": "loan_1"}
{"question": "What is the average credit score for customers who have taken a loan?", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)", "arabic": "ما هو متوسط درجة الائتمان للعملاء الذين لا يمتلكون أي قرض؟", "db_id": "loan_1"}
{"question": "Find the average credit score of the customers who do not have any loan.", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)", "arabic": "ما هو متوسط درجة الائتمان للعملاء الذين لم يأخذوا قرضًا؟", "db_id": "loan_1"}
{"question": "What is the average credit score for customers who have never taken a loan?", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)", "arabic": "كم عدد ملاحظات التقييم بشكل إجمالي؟", "db_id": "loan_1"}
{"question": "How many assessment notes are there in total?", "query": "SELECT count(*) FROM ASSESSMENT_NOTES", "arabic": "ما هي تواريخ ملاحظات التقييم؟", "db_id": "behavior_monitoring"}
{"question": "What are the dates of the assessment notes?", "query": "SELECT date_of_notes FROM Assessment_Notes", "arabic": "كم عدد العناوين التي لديها الرمز البريدي 197؟", "db_id": "behavior_monitoring"}
{"question": "How many addresses have zip code 197?", "query": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\"", "arabic": "كم عدد أكواد أنواع الحوادث المميزة؟", "db_id": "behavior_monitoring"}
{"question": "How many distinct incident type codes are there?", "query": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident", "arabic": "أعيد جميع أكواد أنواع الاحتجاز المميزة.", "db_id": "behavior_monitoring"}
{"question": "Return all distinct detention type codes.", "query": "SELECT DISTINCT detention_type_code FROM Detention", "arabic": "ما هي تواريخ بداية ونهاية الحوادث ذات رمز نوع الحادث \"الضوضاء\"؟", "db_id": "behavior_monitoring"}
{"question": "What are the start and end dates for incidents with incident type code \"NOISE\"?", "query": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\"", "arabic": "ما هي جميع ملخصات الاحتجاز؟", "db_id": "behavior_monitoring"}
{"question": "Return all detention summaries.", "query": "SELECT detention_summary FROM Detention", "arabic": "ما هو رقم الهاتف المحمول وعنوان البريد الإلكتروني لجميع الطلاب؟", "db_id": "behavior_monitoring"}
{"question": "Return the cell phone number and email address for all students.", "query": "SELECT cell_mobile_number ,  email_address FROM STUDENTS", "arabic": "ما هو البريد الإلكتروني للطالبة التي يكون اسمها \"إيما\" واسم عائلتها \"روهان\"؟", "db_id": "behavior_monitoring"}
{"question": "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?", "query": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\"", "arabic": "كم عدد الطلاب المميزين الذين كانوا في الاحتجاز؟", "db_id": "behavior_monitoring"}
{"question": "How many distinct students have been in detention?", "query": "SELECT count(DISTINCT student_id) FROM Students_in_Detention", "arabic": "ما هو جنس المعلم الذي يحمل اسم العائلة \"ميدهيرست\"؟", "db_id": "behavior_monitoring"}
{"question": "What is the gender of the teacher with last name \"Medhurst\"?", "query": "SELECT gender FROM TEACHERS WHERE last_name  =  \"Medhurst\"", "arabic": "ما هو وصف نوع الحادث لنوع الحادث برمز \"العنف\"؟", "db_id": "behavior_monitoring"}
{"question": "What is the incident type description for the incident type with code \"VIOLENCE\"?", "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\"", "arabic": "ما هو الحد الأقصى والحد الأدنى للإيجار الشهري لجميع عناوين الطلاب؟", "db_id": "behavior_monitoring"}
{"question": "Find the maximum and minimum monthly rental for all student addresses.", "query": "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses", "arabic": "ما هي أسماء المعلمين الذين يحتوي عنوان بريدهم الإلكتروني على كلمة \"رجل\"؟", "db_id": "behavior_monitoring"}
{"question": "Find the first names of teachers whose email address contains the word \"man\".", "query": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'", "arabic": "ما هي جميع المعلومات حول ملاحظات التقييم مرتبة حسب التاريخ بترتيب تصاعدي؟", "db_id": "behavior_monitoring"}
{"question": "List all information about the assessment notes sorted by date in ascending order.", "query": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC", "arabic": "ما هي جميع مدن العناوين مرتبة ترتيباً أبجدياً؟", "db_id": "behavior_monitoring"}
{"question": "List all cities of addresses in alphabetical order.", "query": "SELECT city FROM Addresses ORDER BY city", "arabic": "ما هي أسماء الأول والأخير للمعلمين مرتبة ترتيباً أبجدياً حسب الاسم الأخير؟", "db_id": "behavior_monitoring"}
{"question": "Find the first names and last names of teachers in alphabetical order of last name.", "query": "SELECT first_name ,  last_name FROM Teachers ORDER BY last_name", "arabic": "ما هي جميع المعلومات عن عناوين الطلاب، وصُنف حسب الإيجار الشهري بترتيب تنازلي؟", "db_id": "behavior_monitoring"}
{"question": "Find all information about student addresses, and sort by monthly rental in descending order.", "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC", "arabic": "ما هو الرقم التعريفي والاسم الأول للطالب الذي لديه أكبر عدد من ملاحظات التقييم؟", "db_id": "behavior_monitoring"}
{"question": "Find the id and first name of the student that has the most number of assessment notes?", "query": "SELECT T1.student_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي معرّفات وأسماء الأولى للمعلمين الثلاثة الذين لديهم أكبر عدد من ملاحظات التقييم؟", "db_id": "behavior_monitoring"}
{"question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?", "query": "SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هو معرّف واسم العائلة للطالب الذي لديه أكبر عدد من حوادث السلوك؟", "db_id": "behavior_monitoring"}
{"question": "Find the id and last name of the student that has the most behavior incidents?", "query": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرّف واسم العائلة للمعلم الذي لديه أكبر عدد من الحجوزات بنوع الحجز \"بعد الدوام\"؟", "db_id": "behavior_monitoring"}
{"question": "Find the id and last name of the teacher that has the most detentions with detention type code \"AFTER\"?", "query": "SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  \"AFTER\" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي معرّفات وأسماء الأولى للطالب الذين تتواجد عناوينهم بأعلى متوسط إيجار شهري؟", "db_id": "behavior_monitoring"}
{"question": "What are the id and first name of the student whose addresses have the highest average monthly rental?", "query": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1", "arabic": "ما هو معرّف ومدينة عنوان الطالب الذي يمتلك أعلى متوسط إيجار شهري؟", "db_id": "behavior_monitoring"}
{"question": "Find the id and city of the student address with the highest average monthly rental.", "query": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1", "arabic": "ما هي الرمز والوصف لنوع حادث السلوك الأكثر تكراراً؟", "db_id": "behavior_monitoring"}
{"question": "What are the code and description of the most frequent behavior incident type?", "query": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الرمز والوصف لنوع الحجز الأقل تكرارًا؟", "db_id": "behavior_monitoring"}
{"question": "What are the code and description of the least frequent detention type ?", "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هي تواريخ ملاحظات التقييم للطلاب الذين يحملون اسم الأول \"فاني\"؟", "db_id": "behavior_monitoring"}
{"question": "Find the dates of assessment notes for students with first name \"Fanny\".", "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"", "arabic": "ما هي النصوص لملاحظات التقييم للمعلمين الذين يحملون اسم العائلة \"شوستر\"؟", "db_id": "behavior_monitoring"}
{"question": "Find the texts of assessment notes for teachers with last name \"Schuster\".", "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\"", "arabic": "ما هي تواريخ البداية والنهاية لحوادث السلوك للطلاب الذين يحملون اسم العائلة \"فاهي\"؟", "db_id": "behavior_monitoring"}
{"question": "Find the start and end dates of behavior incidents of students with last name \"Fahey\".", "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"", "arabic": "ما هي تواريخ البداية والنهاية للحجوزات للمعلمين الذين يحملون اسم العائلة \"شولتز\"؟", "db_id": "behavior_monitoring"}
{"question": "Find the start and end dates of detentions of teachers with last name \"Schultz\".", "query": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\"", "arabic": "ما هي معرّف ورمز الرمز البريدي للعنوان الذي يمتلك أعلى إيجار شهري؟", "db_id": "behavior_monitoring"}
{"question": "What are the id and zip code of the address with the highest monthly rental?", "query": "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1", "arabic": "ما هو رقم الهاتف الخلوي للطالب الذي يمتلك عنوانه أقل إيجار شهري؟", "db_id": "behavior_monitoring"}
{"question": "What is the cell phone number of the student whose address has the lowest monthly rental?", "query": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1", "arabic": "ما هي إيجارات الشهرية لعناوين الطلاب في ولاية تكساس؟", "db_id": "behavior_monitoring"}
{"question": "What are the monthly rentals of student addresses in Texas state?", "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\"", "arabic": "ما هي الأسماء الأولى وأسماء العائلة للطلاب الذين لديهم عناوين في ولاية ويسكونسن؟", "db_id": "behavior_monitoring"}
{"question": "What are the first names and last names of students with address in Wisconsin state?", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\"", "arabic": "ما هي السطر 1 ومتوسط الإيجارات الشهرية لجميع عناوين الطلاب؟", "db_id": "behavior_monitoring"}
{"question": "What are the line 1 and average monthly rentals of all student addresses?", "query": "SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id", "arabic": "ما هو رمز الرمز البريدي للعنوان الذي يعيش فيه المعلم الذي يحمل الاسم الأول \"ليلا\"؟", "db_id": "behavior_monitoring"}
{"question": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\"", "arabic": "ما هي عناوين البريد الإلكتروني للمعلمين الذين يكون عنوانهم البريدي \"918\"؟", "db_id": "behavior_monitoring"}
{"question": "What are the email addresses of teachers whose address has zip code \"918\"?", "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  \"918\"", "arabic": "كم عدد الطلاب الذين لم يتورطوا في أي حادث سلوكي؟", "db_id": "behavior_monitoring"}
{"question": "How many students are not involved in any behavior incident?", "query": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )", "arabic": "ما هي أسماء العائلة للمعلمين الذين لم يتورطوا في أي حجز؟", "db_id": "behavior_monitoring"}
{"question": "Find the last names of teachers who are not involved in any detention.", "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id", "arabic": "ما هي السطر 1 من العناوين المشتركة بين بعض الطلاب وبعض المعلمين؟", "db_id": "behavior_monitoring"}
{"question": "What are the line 1 of addresses shared by some students and some teachers?", "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id", "arabic": "أي الأصول التي تحتوي على جزئين وتحتوي على أقل من 2 سجل عيوب؟ عرّف قيمة معرف الأصل والتفاصيل.", "db_id": "behavior_monitoring"}
{"question": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.", "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2", "arabic": "كم عدد الأصول التي تحتوي عليها كل عقد صيانة؟ قم بسرد عدد الأصول ومعرف العقد.", "db_id": "assets_maintenance"}
{"question": "How many assets does each maintenance contract contain? List the number and the contract id.", "query": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id", "arabic": "كم عدد الأصول التي تمتلكها كل شركة طرف ثالث؟ قم بسرد العدد ومعرف الشركة.", "db_id": "assets_maintenance"}
{"question": "How many assets does each third party company supply? List the count and the company id.", "query": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id", "arabic": "أيّ شركات طرف ثالث تحتوي على مهندسي صيانة بعدد لا يقل عن 2 أو تمتلك عقود صيانة بعدد لا يقل عن 2؟ قم بسرد معرف الشركة والاسم.", "db_id": "assets_maintenance"}
{"question": "Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name.", "query": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2", "arabic": "ما هو اسم ومعرّف الموظف الذي سجل سجل العيب ولم يتواصل مع أي من المهندسين الزائرين؟", "db_id": "assets_maintenance"}
{"question": "What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers?", "query": "SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id", "arabic": "أي مهندس قام بزيارة أكبر عدد من المرات؟ أظهر معرّف المهندس والاسم الأول واسم العائلة.", "db_id": "assets_maintenance"}
{"question": "Which engineer has visited the most times? Show the engineer id, first name and last name.", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي الأجزاء التي تحتوي على أكثر من 2 عيوب؟ أظهر اسم الجزء ومعرّفه.", "db_id": "assets_maintenance"}
{"question": "Which parts have more than 2 faults? Show the part name and id.", "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2", "arabic": "اكتب جميع أسماء المهندسين، وأسمائهم الأخيرة، وتفاصيلهم، ووصف المهارة المقابلة.", "db_id": "assets_maintenance"}
{"question": "List all every engineer's first name, last name, details and coresponding skill description.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id", "arabic": "ما هي جميع وصفات المهارات المطلوبة لإصلاح جميع العيوب المختلفة للأجزاء؟ قم بسرد اسماء العيوب ووصف المهارة.", "db_id": "assets_maintenance"}
{"question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.", "query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id", "arabic": "كم عدد الأصول التي يمكن استخدام كل جزء فيها؟ قم بسرد اسم الجزء والعدد.", "db_id": "assets_maintenance"}
{"question": "How many assets can each parts be used in? List the part name and the number.", "query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name", "arabic": "ما هي جميع وصفات العيوب وحالة العيب لجميع العيوب المسجلة في السجلات؟", "db_id": "assets_maintenance"}
{"question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?", "query": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id", "arabic": "كم زيارة مطلوبة على الأكثر لفنيين لتسجيل عيب واحد؟ أذكر العدد ومعرف إدخال السجل.", "db_id": "assets_maintenance"}
{"question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.", "query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي جميع الأسماء الأخيرة المميزة لجميع المهندسين؟", "db_id": "assets_maintenance"}
{"question": "What are all the distinct last names of all the engineers?", "query": "SELECT DISTINCT last_name FROM Maintenance_Engineers", "arabic": "كم عدد أكواد حالة الأعطال المسجلة في جدول أجزاء سجل الأعطال؟", "db_id": "assets_maintenance"}
{"question": "How many fault status codes are recorded in the fault log parts table?", "query": "SELECT DISTINCT fault_status FROM Fault_Log_Parts", "arabic": "أي المهندسين لم يزر أبدًا لصيانة الأصول؟ أذكر الاسم الأول والاسم الأخير للمهندس.", "db_id": "assets_maintenance"}
{"question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.", "query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)", "arabic": "أذكر معرف الأصل، والتفاصيل، والصنع والنموذج لكل أصل.", "db_id": "assets_maintenance"}
{"question": "List the asset id, details, make and model for every asset.", "query": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets", "arabic": "متى تم اكتساب أول أصل؟", "db_id": "assets_maintenance"}
{"question": "When was the first asset acquired?", "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1", "arabic": "أي جزء من الأعطال يتطلب أكبر عدد من المهارات لإصلاحه؟ أذكر معرف الجزء والاسم.", "db_id": "assets_maintenance"}
{"question": "Which part fault requires the most number of skills to fix? List part id and name.", "query": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من الأجزاء يحتوي على أقل عدد من الأعطال؟ أذكر اسم الجزء.", "db_id": "assets_maintenance"}
{"question": "Which kind of part has the least number of faults? List the part name.", "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1", "arabic": "من بين تلك المهندسين الذين قاموا بالزيارة، أي مهندس يقوم بأقل عدد من الزيارات؟ أذكر معرف المهندس، الاسم الأول، والاسم الأخير.", "db_id": "assets_maintenance"}
{"question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1", "arabic": "أي الموظفين تواصلوا مع أي المهندسين؟ أذكر اسم الموظف والاسم الأول والاسم الأخير للمهندس.", "db_id": "assets_maintenance"}
{"question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.", "query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id", "arabic": "أي سجل أعطال تضمن أكبر عدد من الأجزاء المعيبة؟ أذكر معرف سجل العطل، الوصف ووقت السجل.", "db_id": "assets_maintenance"}
{"question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.", "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي مهارة تستخدم في إصلاح أكبر عدد من الأعطال؟ أذكر معرف المهارة والوصف.", "db_id": "assets_maintenance"}
{"question": "Which skill is used in fixing the most number of faults? List the skill id and description.", "query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي جميع النماذج المميزة للأصول؟", "db_id": "assets_maintenance"}
{"question": "What are all the distinct asset models?", "query": "SELECT DISTINCT asset_model FROM Assets", "arabic": "أذكر جميع تفاصيل الصنع والنموذج والتفاصيل حسب تاريخ التصرف بترتيب تصاعدي.", "db_id": "assets_maintenance"}
{"question": "List the all the assets make, model, details by the disposed date ascendingly.", "query": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC", "arabic": "أي جزء يحمل أقل مبلغ مدفوع؟ أذكر معرف الجزء والمبلغ.", "db_id": "assets_maintenance"}
{"question": "Which part has the least chargeable amount? List the part id and amount.", "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1", "arabic": "أي شركة بدأت أقرب عقد صيانة؟ عرض اسم الشركة.", "db_id": "assets_maintenance"}
{"question": "Which company started the earliest the maintenance contract? Show the company name.", "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1", "arabic": "ما هو وصف نوع الشركة التي اختتمت عقودها مؤخرًا بشكل أكبر؟", "db_id": "assets_maintenance"}
{"question": "What is the description of the type of the company who concluded its contracts most recently?", "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1", "arabic": "أي جنس يشكل غالبية الموظفين؟", "db_id": "assets_maintenance"}
{"question": "Which gender makes up the majority of the staff?", "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عدد المهندسين الذين تواصل معهم كل موظف؟ أذكر اسم الموظف وعدد المهندسين الذين تم التواصل معهم.", "db_id": "assets_maintenance"}
{"question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.", "query": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name", "arabic": "أي الأصول لم يُحدث لها أي سجل عطل؟ أذكر نموذج الأصل.", "db_id": "assets_maintenance"}
{"question": "Which assets did not incur any fault log? List the asset model.", "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)", "arabic": "ما هي السلطات المحلية والخدمات المقدمة من قبل جميع المحطات؟", "db_id": "assets_maintenance"}
{"question": "list the local authorities and services provided by all stations.", "query": "SELECT local_authority ,  services FROM station", "arabic": "أظهر جميع أرقام القطارات والأسماء مرتبة حسب وقتها من الأبكر إلى الأحر.", "db_id": "station_weather"}
{"question": "show all train numbers and names ordered by their time from early to late.", "query": "SELECT train_number ,  name FROM train ORDER BY TIME", "arabic": "أعطني الأوقات والأرقام لجميع القطارات التي تذهب إلى تشيناي، مرتبة حسب الوقت.", "db_id": "station_weather"}
{"question": "Give me the times and numbers of all trains that go to Chennai, ordered by time.", "query": "SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME", "arabic": "كم عدد القطارات التي تحتوي على كلمة \"Express\" في أسمائها؟", "db_id": "station_weather"}
{"question": "How many trains have 'Express' in their names?", "query": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\"", "arabic": "ابحث عن رقم ووقت القطار الذي يذهب من تشيناي إلى غوروفايور.", "db_id": "station_weather"}
{"question": "Find the number and time of the train that goes from Chennai to Guruvayur.", "query": "SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur'", "arabic": "ما هو عدد القطارات التي تبدأ من كل نقطة انطلاق؟", "db_id": "station_weather"}
{"question": "Find the number of trains starting from each origin.", "query": "SELECT origin ,  count(*) FROM train GROUP BY origin", "arabic": "ما هو اسم القطار الذي يمر مساره عبر أكبر عدد من المحطات؟", "db_id": "station_weather"}
{"question": "Find the name of the train whose route runs through greatest number of stations.", "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن عدد القطارات لكل محطة، بالإضافة إلى اسم شبكة المحطة والخدمات.", "db_id": "station_weather"}
{"question": "Find the number of trains for each station, as well as the station network name and services.", "query": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id", "arabic": "ما هي متوسط درجة الحرارة العالية لكل يوم من أيام الأسبوع؟", "db_id": "station_weather"}
{"question": "What is the average high temperature for each day of week?", "query": "SELECT avg(high_temperature) ,  day_of_week FROM weekly_weather GROUP BY day_of_week", "arabic": "أعطني أقصى درجة حرارة منخفضة ومتوسط هطول الأمطار في محطة أمرشام.", "db_id": "station_weather"}
{"question": "Give me the maximum low temperature and average precipitation at the Amersham station.", "query": "SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\"", "arabic": "ابحث عن أسماء وأوقات القطارات التي تمر عبر المحطات للسلطة المحلية Chiltern.", "db_id": "station_weather"}
{"question": "Find names and times of trains that run through stations for the local authority Chiltern.", "query": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"", "arabic": "كم عدد الخدمات المختلفة التي يقدمها جميع المحطات؟", "db_id": "station_weather"}
{"question": "How many different services are provided by all stations?", "query": "SELECT count(DISTINCT services) FROM station", "arabic": "ما هو الرقم التعريفي والسلطة المحلية للمحطة التي تمتلك أعلى متوسط درجة حرارة عالية؟", "db_id": "station_weather"}
{"question": "Find the id and local authority of the station with has the highest average high temperature.", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1", "arabic": "ما هو الرقم التعريفي والسلطة المحلية للمحطة التي تتجاوز كمية الهطول القصوى لديها الـ 50؟", "db_id": "station_weather"}
{"question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50", "arabic": "ما هي أدنى درجة حرارة منخفضة وأعلى سرعة للرياح بالأميال في الساعة؟", "db_id": "station_weather"}
{"question": "show the lowest low temperature and highest wind speed in miles per hour.", "query": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather", "arabic": "من فضلك, أوجد منابع التي تبدأ منها أكثر من قطار واحد؟", "db_id": "station_weather"}
{"question": "Find the origins from which more than 1 train starts.", "query": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1", "arabic": "ما هو عدد أساتذة قسم المحاسبة؟", "db_id": "station_weather"}
{"question": "Find the number of professors in accounting department.", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\"", "arabic": "كم عدد الأساتذة في قسم المحاسبة؟", "db_id": "college_1"}
{"question": "How many professors are in the accounting dept?", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\"", "arabic": "كم عدد الأساتذة الذين يدرسون الصف برمز ACCT-211؟", "db_id": "college_1"}
{"question": "How many professors are teaching class with code ACCT-211?", "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"", "arabic": "كم عدد الأساتذة الذين يدرسون صفًا برمز ACCT-211؟", "db_id": "college_1"}
{"question": "How many professors teach a class with the code ACCT-211?", "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"", "arabic": "ما هو الاسم الأول والأخير للأستاذ في قسم البيولوجيا؟", "db_id": "college_1"}
{"question": "What is the first and last name of the professor in biology department?", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"", "arabic": "ما هي الأسماء الأولى والأخيرة لجميع أساتذة البيولوجيا؟", "db_id": "college_1"}
{"question": "What are the first and last name of all biology professors?", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"", "arabic": "ما هي الأسماء الأولى وتاريخ الميلاد للأساتذة الذين يدرسون مقرر ACCT-211؟", "db_id": "college_1"}
{"question": "What are the first names and date of birth of professors teaching course ACCT-211?", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"", "arabic": "ما هي الأسماء الأولى وتواريخ الميلاد للأساتذة المسؤولين عن مقرر ACCT-211؟", "db_id": "college_1"}
{"question": "What are the first names and birthdates of the professors in charge of ACCT-211?", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"", "arabic": "كم عدد الفصول التي يقوم بتدريسها البروفيسور الذي يحمل اسم العائلة \"جرازتيفسكي\"؟", "db_id": "college_1"}
{"question": "How many classes are professor whose last name is Graztevski has?", "query": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'", "arabic": "كم عدد الفصول التي يدرسها البروفيسور الذي يحمل اسم العائلة \"جرازتيفسكي\"؟", "db_id": "college_1"}
{"question": "How many classes does the professor whose last name is Graztevski teach?", "query": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'", "arabic": "ما هو رمز المدرسة التي ينتمي إليها قسم المحاسبة؟", "db_id": "college_1"}
{"question": "What is the code of the school where the accounting department belongs to?", "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"", "arabic": "ما هو رمز المدرسة لقسم المحاسبة؟", "db_id": "college_1"}
{"question": "What is the school code of the accounting department?", "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"", "arabic": "كم عدد الوحدات الدراسية للمقرر CIS-220، وما هو وصفه؟", "db_id": "college_1"}
{"question": "How many credits does course CIS-220 have, and what its description?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'", "arabic": "ما هو الوصف للمقرر CIS-220 وكم عدد الوحدات الدراسية التي يمتلكها؟", "db_id": "college_1"}
{"question": "What is the description for the CIS-220 and how many credits does it have?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'", "arabic": "ما هو عنوان قسم التاريخ؟", "db_id": "college_1"}
{"question": "what is the address of history department?", "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'", "arabic": "أين يقع قسم التاريخ؟", "db_id": "college_1"}
{"question": "Where is the history department?", "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'", "arabic": "كم موقع مختلف للمدرسة التي يكون لديها الرمز BUS؟", "db_id": "college_1"}
{"question": "How many different locations does the school with code BUS has?", "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'", "arabic": "ما هي المواقع المختلفة للمدرسة التي لديها الرمز BUS؟", "db_id": "college_1"}
{"question": "What are the different locations of the school with the code BUS?", "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'", "arabic": "كم موقعًا مختلفًا لكل مدرسة؟", "db_id": "college_1"}
{"question": "How many different locations does each school have?", "query": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code", "arabic": "احسب عناوين المدارس المختلفة.", "db_id": "college_1"}
{"question": "Count different addresses of each school.", "query": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code", "arabic": "ما هو الوصف وعدد الوحدات الدراسية للمقرر QM-261؟", "db_id": "college_1"}
{"question": "Find the description and credit for the course QM-261?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'", "arabic": "ما هو وصف المقرر وعدد الوحدات الدراسية للمقرر QM-261؟", "db_id": "college_1"}
{"question": "What is the course description and number of credits for QM-261?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'", "arabic": "اعثر على عدد الأقسام في كل مدرسة.", "db_id": "college_1"}
{"question": "Find the number of departments in each school.", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code", "arabic": "كم عدد الأقسام في كل مدرسة؟", "db_id": "college_1"}
{"question": "How many departments are in each school?", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code", "arabic": "ابحث عن عدد الأقسام المختلفة في كل مدرسة التي يكون عددها أقل من 5.", "db_id": "college_1"}
{"question": "Find the number of different departments in each school whose number of different departments is less than 5.", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5", "arabic": "كم عدد الأقسام المختلفة في كل مدرسة التي تحتوي على أقل من 5 شقق؟", "db_id": "college_1"}
{"question": "How many different departments are there in each school that has less than 5 apartments?", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5", "arabic": "كم عدد الأقسام التي يحتوي عليها كل مقرر؟", "db_id": "college_1"}
{"question": "How many sections does each course has?", "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code", "arabic": "كم عدد الأقسام التي يحتوي عليها كل مقرر؟", "db_id": "college_1"}
{"question": "How many sections does each course have?", "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code", "arabic": "ما هو إجمالي الوحدات الدراسية التي تقدمها كل قسم؟", "db_id": "college_1"}
{"question": "What is the total credit does each department offer?", "query": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code", "arabic": "كم عدد الوحدات الدراسية التي يقدمها القسم؟", "db_id": "college_1"}
{"question": "How many credits does the department offer?", "query": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code", "arabic": "ابحث عن عدد الفصول المقدمة لجميع الغرف الدراسية التي استضافت على الأقل 2 فصول.", "db_id": "college_1"}
{"question": "Find the number of classes offered for all class rooms that held at least 2 classes.", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2", "arabic": "لكل فصل دراسي بحد أقل فصلين، كم عدد الفصول المقدمة؟", "db_id": "college_1"}
{"question": "For each classroom with at least 2 classes, how many classes are offered?", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2", "arabic": "ابحث عن عدد الفصول في كل قسم.", "db_id": "college_1"}
{"question": "Find the number of classes in each department.", "query": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code", "arabic": "كم عدد الفصول التي تُعقد في كل قسم؟", "db_id": "college_1"}
{"question": "How many classes are held in each department?", "query": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code", "arabic": "ابحث عن عدد الفصول في كل مدرسة.", "db_id": "college_1"}
{"question": "Find the number of classes in each school.", "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code", "arabic": "كم عدد الفصول الموجودة لكل مدرسة؟", "db_id": "college_1"}
{"question": "How many classes exist for each school?", "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code", "arabic": "ما هو عدد أعضاء هيئة التدريس للمدارس المختلفة؟", "db_id": "college_1"}
{"question": "What is the number of professors for different school?", "query": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code", "arabic": "كم عدد أعضاء هيئة التدريس المختلفين للمدارس المختلفة؟", "db_id": "college_1"}
{"question": "How many different professors are there for the different schools?", "query": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code", "arabic": "ما هو عدد ورمز الوظيفة التي تمتلك أكبر عدد من الموظفين؟", "db_id": "college_1"}
{"question": "Find the count and code of the job has most employees.", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو العدد والرمز للوظيفة التي تمتلك أكبر عدد من الموظفين؟", "db_id": "college_1"}
{"question": "What is the count and code of the job with the most employee?", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "arabic": "أي مدرسة لديها أقل عدد من الأساتذة؟", "db_id": "college_1"}
{"question": "Which school has the smallest amount of professors?", "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1", "arabic": "أي مدرسة لديها أقل عدد من الأساتذة؟", "db_id": "college_1"}
{"question": "Which school has the fewest professors?", "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1", "arabic": "ما هو عدد الأساتذة الذين يحملون درجة الدكتوراه في كل قسم؟", "db_id": "college_1"}
{"question": "Find the number of professors with a Ph.D. degree in each department.", "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code", "arabic": "كم عدد الأساتذة الذين يحملون درجة الدكتوراه في كل قسم؟", "db_id": "college_1"}
{"question": "How many professors have a Ph.D. in each department?", "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code", "arabic": "كم عدد الطلاب في كل قسم؟", "db_id": "college_1"}
{"question": "Find the number of students for each department.", "query": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code", "arabic": "كم عدد الطلاب في كل قسم؟", "db_id": "college_1"}
{"question": "How many students are in each department?", "query": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code", "arabic": "ما هو إجمالي عدد الساعات التي أنجزها جميع الطلاب في كل قسم؟", "db_id": "college_1"}
{"question": "Find the total number of hours have done for all students in each department.", "query": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code", "arabic": "كم ساعة يقضي الطلاب في الدراسة في كل قسم؟", "db_id": "college_1"}
{"question": "How many hours do the students spend studying in each department?", "query": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code", "arabic": "ما هو أعلى، المتوسط، وأدنى معدل تراكمي لجميع الطلاب في كل قسم؟", "db_id": "college_1"}
{"question": "Find the max, average, and minimum gpa of all students in each department.", "query": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code", "arabic": "ما هو أعلى، الأدنى، والمتوسط لمعدل النجاح لكل قسم؟", "db_id": "college_1"}
{"question": "What is the highest, lowest, and average student GPA for every department?", "query": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code", "arabic": "ما هو اسم والمتوسط لمعدل النجاح للقسم الذي لديه أعلى متوسط لمعدل النجاح؟", "db_id": "college_1"}
{"question": "What is the name and the average gpa of department whose students have the highest average gpa?", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1", "arabic": "أي قسم يمتلك أعلى متوسط لمعدل النجاح للطلاب، وما هو متوسط ​​معدل النجاح؟", "db_id": "college_1"}
{"question": "Which department has the highest average student GPA, and what is the average gpa?", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1", "arabic": "كم عدد المدارس الموجودة بشكل إجمالي؟", "db_id": "college_1"}
{"question": "how many schools exist in total?", "query": "SELECT count(DISTINCT school_code) FROM department", "arabic": "كم عدد المدارس الموجودة في القسم؟", "db_id": "college_1"}
{"question": "How many schools are there in the department?", "query": "SELECT count(DISTINCT school_code) FROM department", "arabic": "كم عدد الفصول المختلفة؟", "db_id": "college_1"}
{"question": "How many different classes are there?", "query": "SELECT count(DISTINCT class_code) FROM CLASS", "arabic": "كم عدد الفصول الفريدة المقدمة؟", "db_id": "college_1"}
{"question": "How many unique classes are offered?", "query": "SELECT count(DISTINCT class_code) FROM CLASS", "arabic": "كم عدد الدورات المقدمة؟", "db_id": "college_1"}
{"question": "How many courses are offered?", "query": "SELECT count(DISTINCT crs_code) FROM CLASS", "arabic": "ما هو عدد أكواد الدورات المختلفة؟", "db_id": "college_1"}
{"question": "What are the number of different course codes?", "query": "SELECT count(DISTINCT crs_code) FROM CLASS", "arabic": "كم عدد الأقسام التي يمتلكها الكلية؟", "db_id": "college_1"}
{"question": "How many departments does the college has?", "query": "SELECT count(DISTINCT dept_name) FROM department", "arabic": "كم عدد الأقسام المختلفة؟", "db_id": "college_1"}
{"question": "How many different departments are there?", "query": "SELECT count(DISTINCT dept_name) FROM department", "arabic": "كم عدد الدورات التي يُقَدَّمُها قسم نظم المعلومات الحاسوبية؟", "db_id": "college_1"}
{"question": "How many courses are offered by the Computer Info. Systems department?", "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"", "arabic": "كم عدد الدورات التي يُقَدِّمُها قسم نظم المعلومات الحاسوبية؟", "db_id": "college_1"}
{"question": "How many courses does the department of Computer Information Systmes offer?", "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"", "arabic": "كم عدد الأقسام التي تحتوي عليها الدورة ACCT-211؟", "db_id": "college_1"}
{"question": "How many sections does course ACCT-211 has?", "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'", "arabic": "ما هو عدد الأقسام الصفية المختلفة المُقدمة في الدورة ACCT-211؟", "db_id": "college_1"}
{"question": "What is the number of different class sections offered in the course ACCT-211?", "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'", "arabic": "كم إجمالي الوحدات الدراسية لجميع الفصول المقدمة من قبل كل قسم؟", "db_id": "college_1"}
{"question": "Find the total credits of all classes offered by each department.", "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code", "arabic": "ما هو إجمالي عدد الوحدات الدراسية المقدمة من قبل كل قسم؟", "db_id": "college_1"}
{"question": "What are the total number of credits offered by each department?", "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code", "arabic": "ما هو اسم القسم الذي يقدم أكبر عدد من الوحدات الدراسية لجميع الفصول؟", "db_id": "college_1"}
{"question": "Find the name of the department that offers the largest number of credits of all classes.", "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1", "arabic": "أي قسم يقدم أكبر عدد من الوحدات الدراسية بشكل عام؟", "db_id": "college_1"}
{"question": "Which department offers the most credits all together?", "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1", "arabic": "كم عدد الطلاب المسجلين في الصف ACCT-211؟", "db_id": "college_1"}
{"question": "How many students enrolled in class ACCT-211?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'", "arabic": "ما هو إجمالي عدد الطلاب المسجلين في ACCT-211؟", "db_id": "college_1"}
{"question": "What are the total number of students enrolled in ACCT-211?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'", "arabic": "ما هو الاسم الأول لكل طالب مسجل في الصف ACCT-211؟", "db_id": "college_1"}
{"question": "What is the first name of each student enrolled in class ACCT-211?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'", "arabic": "ما هي الأسماء الأولى لجميع الطلاب في الدورة ACCT-211؟", "db_id": "college_1"}
{"question": "What are the first names of all students in course ACCT-211?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'", "arabic": "ما هو الاسم الأول للطلاب المسجلين في صف الدورة ACCT-211 وحصلوا على درجة C؟", "db_id": "college_1"}
{"question": "What is the first name of students enrolled in class ACCT-211 and got grade C?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'", "arabic": "ما هي أسماء الطلاب الأولية الذين أخذوا ACCT-211 وحصلوا على C؟", "db_id": "college_1"}
{"question": "What are the first names of all students who took ACCT-211 and received a C?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'", "arabic": "ما هو إجمالي عدد الموظفين؟", "db_id": "college_1"}
{"question": "Find the total number of employees.", "query": "SELECT count(*) FROM employee", "arabic": "كم عدد الموظفين بالمجموع؟", "db_id": "college_1"}
{"question": "How many employees are there all together?", "query": "SELECT count(*) FROM employee", "arabic": "كم عدد الأساتذة الذين يحملون درجة الدكتوراه؟", "db_id": "college_1"}
{"question": "How many professors do have a Ph.D. degree?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'", "arabic": "ما هو إجمالي عدد الأساتذة الذين يحملون درجة الدكتوراه؟", "db_id": "college_1"}
{"question": "What is the total number of professors with a Ph.D. ?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'", "arabic": "كم عدد الطلاب المسجلين في الصف الذي يدرسه أحد الأساتذة من قسم المحاسبة؟", "db_id": "college_1"}
{"question": "How many students are enrolled in the class taught by some professor from the accounting department?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'", "arabic": "كم عدد الطلاب المسجلين في بعض الصفوف التي يدرسها أستاذ محاسبة؟", "db_id": "college_1"}
{"question": "How many students are enrolled in some classes that are taught by an accounting professor?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'", "arabic": "ما هو اسم القسم الذي يحتوي على أكبر عدد من الطلاب المسجلين؟", "db_id": "college_1"}
{"question": "What is the name of the department that has the largest number of students enrolled?", "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم القسم الذي يسجّل فيه أكبر عدد من الطلاب؟", "db_id": "college_1"}
{"question": "What is the name of the department with the most students enrolled?", "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء جميع الأقسام مرتبة حسب أسمائها؟", "db_id": "college_1"}
{"question": "list names of all departments ordered by their names.", "query": "SELECT dept_name FROM department ORDER BY dept_name", "arabic": "ما هي أسماء جميع الأقسام مرتبة ترتيباً أبجدياً؟", "db_id": "college_1"}
{"question": "What are the names of all departments in alphabetical order?", "query": "SELECT dept_name FROM department ORDER BY dept_name", "arabic": "ما هي أكواد جميع الدورات التي تجري في الغرفة KLR209؟", "db_id": "college_1"}
{"question": "List the codes of all courses that take place in room KLR209.", "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'", "arabic": "ما هي أكواد جميع الدورات التي توجد في الغرفة KLR209؟", "db_id": "college_1"}
{"question": "What are the codes of all the courses that are located in room KLR209?", "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'", "arabic": "ما هي أسماء العائلة الأولى لجميع الموظفين ذوي رمز الوظيفة PROF مرتبة حسب تاريخ ميلادهم؟", "db_id": "college_1"}
{"question": "List the first name of all employees with job code PROF ordered by their date of birth.", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob", "arabic": "ما هي أسماء العائلة الأولى لجميع الموظفين الذين يعملون كأساتذة مرتبة حسب تاريخ ميلادهم؟", "db_id": "college_1"}
{"question": "What are the first names of all employees that are professors ordered by date of birth?", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob", "arabic": "ما هي أسماء العائلة الأولى والمكاتب لجميع الأساتذة مرتبة حسب ترتيب أبجدي لأسمائهم الأولى؟", "db_id": "college_1"}
{"question": "Find the first names and offices of all professors sorted by alphabetical order of their first name.", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname", "arabic": "ما هي أسماء العائلة الأولى ومواقع المكاتب لجميع الأساتذة مرتبة حسب ترتيب أبجدي لأسمائهم الأولى؟", "db_id": "college_1"}
{"question": "What are the first names and office locations for all professors sorted alphabetically by first name?", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname", "arabic": "ما هو الاسم الأول والأخير لأكبر سناً من بين الموظفين؟", "db_id": "college_1"}
{"question": "What is the first and last name of the oldest employee?", "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1", "arabic": "ما هي الأسماء الأولية والأخيرة للموظف ذو التاريخ الأقدم للميلاد؟", "db_id": "college_1"}
{"question": "What are the first and last names of the employee with the earliest date of birth?", "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1", "arabic": "ما هي الأسماء الأولية والأخيرة ومعدل النجاح لأصغر طالب بين الطلاب الذين يكون معدلهم فوق 3؟", "db_id": "college_1"}
{"question": "What is the first, last name, gpa of the youngest one among students whose GPA is above 3?", "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1", "arabic": "ما هي الأسماء الأولية والأخيرة لأصغر طالب بمعدل نجاح أعلى من 3، وما هو معدلهم؟", "db_id": "college_1"}
{"question": "What is the first and last name of the youngest student with a GPA above 3, and what is their GPA?", "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1", "arabic": "ما هي أسماء العائلة للطلاب الذين حصلوا على الدرجة C في أي صف؟", "db_id": "college_1"}
{"question": "What is the first name of students who got grade C in any class?", "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'", "arabic": "ما هي أسماء العائلة لجميع الطلاب الذين حصلوا على الدرجة C في صف دراسي؟", "db_id": "college_1"}
{"question": "What are the first names of all students who got a grade C in a class?", "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'", "arabic": "ما هو اسم القسم الذي يحتوي على أقل عدد من الأساتذة؟", "db_id": "college_1"}
{"question": "What is the name of department where has the smallest number of professors?", "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1", "arabic": "ما هو اسم القسم الذي يحتوي على أقل عدد من الأساتذة؟", "db_id": "college_1"}
{"question": "What is the name of the department with the fewest professors?", "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1", "arabic": "ما هو اسم القسم الذي يحتوي على أكبر عدد من الأساتذة الذين يحملون شهادة الدكتوراه؟", "db_id": "college_1"}
{"question": "What is the name of department where has the largest number of professors with a Ph.D. degree?", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي قسم يحتوي على أكبر عدد من الأساتذة الذين يحملون شهادة الدكتوراه؟", "db_id": "college_1"}
{"question": "Which department has the most professors with a Ph.D.?", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي الأسماء الأولى للأساتذة الذين لا يدرسون صفًا؟", "db_id": "college_1"}
{"question": "What are the first names of the professors who do not teach a class.", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num", "arabic": "ما هي الأسماء الأولى لجميع الأساتذة الذين لا يدرسون أي صفوف؟", "db_id": "college_1"}
{"question": "What are the first names of all professors not teaching any classes?", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num", "arabic": "ما هي الأسماء الأولى للأساتذة من قسم التاريخ الذين لا يدرسون صفًا؟", "db_id": "college_1"}
{"question": "What is the first names of the professors from the history department who do not teach a class.", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num", "arabic": "ما هي الأسماء الأولى لجميع أساتذة التاريخ الذين لا يدرسون؟", "db_id": "college_1"}
{"question": "What are the first names of all history professors who do not teach?", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num", "arabic": "ما هو الاسم الأخير ومكتب الأستاذ من قسم التاريخ؟", "db_id": "college_1"}
{"question": "What is the last name and office of the professor from the history department?", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'", "arabic": "ما هي أسماء العائلة ومكاتب جميع أساتذة التاريخ؟", "db_id": "college_1"}
{"question": "What are the last name and office of all history professors?", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'", "arabic": "ما هو اسم القسم والمكتب للأستاذ الذي يحمل اسم العائلة \"هيفينغتون\"؟", "db_id": "college_1"}
{"question": "What is department name and office for the professor whose last name is Heffington?", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'", "arabic": "ما هو اسم القسم وموقع المكتب للأستاذ الذي يحمل اسم العائلة \"هيفينغتون\"؟", "db_id": "college_1"}
{"question": "What is the name of the department and office location for the professor with the last name of Heffington?", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'", "arabic": "ما هي اسم العائلة وتاريخ التوظيف للأستاذ الذي يتواجد في المكتب DRE 102؟", "db_id": "college_1"}
{"question": "Find the last name and hire date of the professor who is in office DRE 102.", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'", "arabic": "ما هو اسم العائلة للأستاذ الذي يتواجد مكتبه في DRE 102، ومتى تم توظيفهم؟", "db_id": "college_1"}
{"question": "What is the last name of the professor whose office is located in DRE 102, and when were they hired?", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'", "arabic": "ما هو رمز الدورة التي دراستها الطالب الذي يحمل اسم العائلة \"سميثسون\"؟", "db_id": "college_1"}
{"question": "What is the code of the course which the student whose last name is Smithson took?", "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'", "arabic": "ما هي رموز الدورات لكل صف درسه الطالب الذي يحمل اسم العائلة \"سميثسون\"؟", "db_id": "college_1"}
{"question": "What are the course codes for every class that the student with the last name Smithson took?", "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'", "arabic": "ما هي الوصف وعدد الساعات المعتمدة للدورة التي دراستها الطالب الذي يحمل اسم العائلة \"سميثسون\"؟", "db_id": "college_1"}
{"question": "What are the description and credit of the course which the student whose last name is Smithson took?", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'", "arabic": "كم عدد الساعات المعتمدة للدورة التي دراستها الطالب الذي يحمل اسم العائلة \"سميثسون\"، وما هو وصفها؟", "db_id": "college_1"}
{"question": "How many credits is the course that the student with the last name Smithson took, and what is its description?", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'", "arabic": "كم عدد الأساتذة الذين يحملون درجة الدكتوراه (Ph.D.) أو الماجستير (MA)؟", "db_id": "college_1"}
{"question": "How many professors who has a either Ph.D. or MA degree?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'", "arabic": "كم عدد الأساتذة الذين حصلوا على درجة الدكتوراه (Ph.D.) أو الماجستير؟", "db_id": "college_1"}
{"question": "How many professors attained either Ph.D. or Masters degrees?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'", "arabic": "كم عدد الأساتذة الذين ينتمون إلى قسم المحاسبة أو قسم البيولوجيا؟", "db_id": "college_1"}
{"question": "How many professors who are from either Accounting or Biology department?", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'", "arabic": "ما هو عدد الأساتذة الذين ينتمون إلى أقسام المحاسبة أو البيولوجيا؟", "db_id": "college_1"}
{"question": "What is the number of professors who are in the Accounting or Biology departments?", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'", "arabic": "ما هو الاسم الأول للأستاذ الذي يدرس مقررين برمزي الدورة CIS-220 و QM-261؟", "db_id": "college_1"}
{"question": "Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261.", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'", "arabic": "ما هو الاسم الأول للأستاذ الذي يدرس CIS-220 و QM-261؟", "db_id": "college_1"}
{"question": "What is the first name of the professor who is teaching CIS-220 and QM-261?", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'", "arabic": "ما هو الاسم الأول للطالب الذي يدرس مواد من أقسام المحاسبة ونظم المعلومات الحاسوبية؟", "db_id": "college_1"}
{"question": "Find the first name of student who is taking classes from accounting and Computer Info. Systems departments", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'", "arabic": "ما هي الأسماء الأولى لجميع الطلاب الذين يدرسون مواد المحاسبة وأنظمة معلومات الحاسوب؟", "db_id": "college_1"}
{"question": "What are the first names of all students taking accoutning and Computer Information Systems classes?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'", "arabic": "ما هو متوسط معدل النقاط التراكمي (GPA) للطلاب المسجلين في الدورة ذات الرمز ACCT-211؟", "db_id": "college_1"}
{"question": "What is the average gpa of the students enrolled in the course with code ACCT-211?", "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'", "arabic": "ما هو متوسط معدل النقاط التراكمي (GPA) للطلاب الذين يدرسون ACCT-211؟", "db_id": "college_1"}
{"question": "What is the average GPA of students taking ACCT-211?", "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'", "arabic": "ما هي الأسماء الأولى، ومتوسط معدل النقاط التراكمي (GPA)، وأرقام الهواتف لأفضل ٥ طلاب بأعلى معدل نقاط تراكمي؟", "db_id": "college_1"}
{"question": "What is the first name, gpa and phone number of the top 5 students with highest gpa?", "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5", "arabic": "ما هي الأسماء الأولى، ومتوسط معدل النقاط التراكمي (GPA)، وأرقام الهواتف لأفضل ٥ طلاب بأعلى معدل نقاط تراكمي؟", "db_id": "college_1"}
{"question": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?", "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5", "arabic": "ما هو اسم القسم الذي ينتمي إليه الطلاب الذين يمتلكون أقل معدل نقاط تراكمي؟", "db_id": "college_1"}
{"question": "What is the department name of the students with lowest gpa belongs to?", "query": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1", "arabic": "ما هو اسم القسم الذي ينتمي إليه الطالب الذي يمتلك أقل معدل نقاط تراكمي؟", "db_id": "college_1"}
{"question": "What is the name of the department with the student that has the lowest GPA?", "query": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1", "arabic": "ما هي الأسماء الأولى ومعدل النقاط التراكمي (GPA) للطلاب الذين يمتلكون معدل نقاط أقل من متوسط معدل النقاط التراكمي لجميع الطلاب؟", "db_id": "college_1"}
{"question": "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students.", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)", "arabic": "ما هي الأسماء الأولى ومعدل النقاط التراكمي (GPA) لكل طالب لديه معدل نقاط أقل من المتوسط؟", "db_id": "college_1"}
{"question": "What is the first name and GPA of every student that has a GPA lower than average?", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)", "arabic": "ما هو اسم وعنوان القسم الذي يحتوي على أعلى عدد من الطلاب؟", "db_id": "college_1"}
{"question": "Find the name and address of the department that has the highest number of students.", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم وعنوان القسم الذي يحتوي على أكبر عدد من الطلاب؟", "db_id": "college_1"}
{"question": "What is the name and address of the department with the most students?", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم القسم، وعنوانه، وعدد الطلاب في الأقسام التي تحتوي على أعلى ٣ أعداد من الطلاب؟", "db_id": "college_1"}
{"question": "Find the name, address, number of students in the departments that have the top 3 highest number of students.", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هو اسم القسم، وعنوانه، وعدد الطلاب في الأقسام التي تحتوي على أكبر ٣ أعداد من الطلاب؟", "db_id": "college_1"}
{"question": "What is the name, address, and number of students in the departments that have the 3 most students?", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هو الاسم الأول والمكتب للأستاذ الذي ينتمي إلى قسم التاريخ ويمتلك درجة الدكتوراه؟", "db_id": "college_1"}
{"question": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'", "arabic": "ما هي الأسماء الأولى والمكاتب للأساتذة الذين ينتمون إلى قسم التاريخ ويمتلكون درجة الدكتوراه؟", "db_id": "college_1"}
{"question": "What are the first names and office of the professors who are in the history department and have a Ph.D?", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'", "arabic": "ما هي الأسماء الأولى لجميع المدرسين الذين قاموا بتدريس بعض الدورات ورمز الدورة؟", "db_id": "college_1"}
{"question": "Find the first names of all instructors who have taught some course and the course code.", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num", "arabic": "ما هي الأسماء الأولى لجميع المدرسين الذين قاموا بتدريس دورة ورموز الدورات المقابلة؟", "db_id": "college_1"}
{"question": "What are the first names of all teachers who have taught a course and the corresponding course codes?", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num", "arabic": "ما هي الأسماء الأولى لجميع المدرسين الذين قاموا بتدريس دورة ما ووصف الدورة؟", "db_id": "college_1"}
{"question": "Find the first names of all instructors who have taught some course and the course description.", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "arabic": "ما هي الأسماء الأولى لجميع المدرسين الذين قاموا بتدريس دورة والأوصاف المقابلة؟", "db_id": "college_1"}
{"question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "arabic": "ما هي الأسماء الأولى والمكاتب لجميع المدرسين الذين قاموا بتدريس دورة معينة وأيضًا العثور على وصف الدورة؟", "db_id": "college_1"}
{"question": "Find the first names and offices of all instructors who have taught some course and also find the course description.", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "arabic": "ما هي الأسماء الأولى ومواقع المكاتب لجميع المحاضرين الذين قاموا بتدريس دورة معينة؟", "db_id": "college_1"}
{"question": "What are the first names, office locations of all lecturers who have taught some course?", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "arabic": "ما هي الأسماء الأولى ومواقع المكاتب لجميع المدرسين الذين قاموا بتدريس دورة معينة، ووصف الدورة، واسم القسم؟", "db_id": "college_1"}
{"question": "Find the first names and offices of all instructors who have taught some course and the course description and the department name.", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code", "arabic": "ما هي الأسماء الأولى، ومواقع المكاتب، والأقسام لجميع المدرسين، وأيضًا ما هي وصف الدورات التي يدرسون؟", "db_id": "college_1"}
{"question": "What are the first names, office locations, and departments of all instructors, and also what are the descriptions of the courses they teach?", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code", "arabic": "ما هي أسماء جميع الطلاب الذين أخذوا دورة معينة ووصف الدورة؟", "db_id": "college_1"}
{"question": "Find names of all students who took some course and the course description.", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "arabic": "ما هي أسماء جميع الطلاب الذين أخذوا صفًا وأوصاف الدورات المقابلة؟", "db_id": "college_1"}
{"question": "What are the names of all students who took a class and the corresponding course descriptions?", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "arabic": "ما هي أسماء جميع الطلاب الذين أخذوا دورة معينة وحصلوا على درجة A أو C؟", "db_id": "college_1"}
{"question": "Find names of all students who took some course and got A or C.", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'", "arabic": "ما هي أسماء جميع الطلاب الذين يتخذون دورة وحصلوا على درجة A أو C؟", "db_id": "college_1"}
{"question": "What are the names of all students taking a course who received an A or C?", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'", "arabic": "ما هي أسماء جميع الأساتذة في قسم المحاسبة الذين يقومون بتدريس بعض الدورات والصف الدراسي؟", "db_id": "college_1"}
{"question": "Find the first names of all professors in the Accounting department who is teaching some course and the class room.", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'", "arabic": "ما هي أسماء جميع أساتذة المحاسبة الذين يدرسون وما هي الصفوف الدراسية للدورات التي يدرسونها؟", "db_id": "college_1"}
{"question": "What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach?", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'", "arabic": "ما هي أسماء الأساتذة ودرجاتهم الأكاديمية الذين يدرسون بقسم نظم المعلومات الحاسوبية؟", "db_id": "college_1"}
{"question": "Find the first names and degree of all professors who are teaching some class in Computer Info. Systems department.", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'", "arabic": "ما هي الأسماء الأولى المختلفة وأعلى درجة أكاديمية حصل عليها الأساتذة الذين يدرسون في قسم نظم المعلومات الحاسوبية؟", "db_id": "college_1"}
{"question": "What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department?", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'", "arabic": "ما هو الاسم الأخير للطالب الذي حصل على درجة \"أ\" في الصف برمز 10018؟", "db_id": "college_1"}
{"question": "What is the last name of the student who got a grade A in the class with code 10018.", "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018", "arabic": "ما هو الاسم الأخير للطالب الذي حصل على درجة \"أ\" في الصف برمز 10018؟", "db_id": "college_1"}
{"question": "What is the last name of the student who received an A in the class with the code 10018?", "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018", "arabic": "ما هو الاسم الأول ومكتب أستاذ التاريخ الذي لم يحصل على درجة الدكتوراه؟", "db_id": "college_1"}
{"question": "Find the first name and office of history professor who did not get a Ph.D. degree.", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'", "arabic": "ما هي الأسماء الأولى والمكاتب لأساتذة التاريخ الذين ليس لديهم درجة الدكتوراه؟", "db_id": "college_1"}
{"question": "What are the first names and offices of history professors who don't have Ph.D.s?", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'", "arabic": "ما هي الأسماء الأولى للأساتذة الذين يدرسون أكثر من صف؟", "db_id": "college_1"}
{"question": "Find the first names of professors who are teaching more than one class.", "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1", "arabic": "ما هي الأسماء الأولى لجميع الأساتذة الذين يدرسون أكثر من صف؟", "db_id": "college_1"}
{"question": "What are the first names of all professors who teach more than one class?", "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1", "arabic": "ما هي الأسماء الأولى للطلاب الذين أخذوا صفًا واحدًا تمامًا؟", "db_id": "college_1"}
{"question": "Find the first names of students who took exactly one class.", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1", "arabic": "ما هي الأسماء الأولى للطلاب الذين أخذوا دورة واحدة فقط؟", "db_id": "college_1"}
{"question": "What are the first names of student who only took one course?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1", "arabic": "ما هو اسم القسم الذي يقدم الصف الذي يحتوي وصف الدراسات؟", "db_id": "college_1"}
{"question": "Find the name of department that offers the class whose description has the word \"Statistics\".", "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'", "arabic": "ما هو اسم القسم الذي يقدم دورة تحتوي وصفها على كلمة \"الإحصاء\"؟", "db_id": "college_1"}
{"question": "What is the name of the department that offers a course that has a description including the word \"Statistics\"?", "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'", "arabic": "ما هو اسم الطالب الذي يبدأ اسمه بالحرف \"S\" ويدرس صف الـ ACCT-211؟", "db_id": "college_1"}
{"question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'", "arabic": "ما هو الاسم الأول للطالب الذي يبدأ اسم عائلته بالحرف \"S\" ويدرس ACCT-211؟", "db_id": "college_1"}
{"question": "What is the first name of the student whose last name starts with the letter S and is taking ACCT-211?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'", "arabic": "كم عدد الأندية؟", "db_id": "college_1"}
{"question": "How many clubs are there?", "query": "SELECT count(*) FROM club", "arabic": "ما هو العدد الإجمالي للأندية؟", "db_id": "sports_competition"}
{"question": "What is the total number of clubs?", "query": "SELECT count(*) FROM club", "arabic": "ما هي المنطقة المميزة للأندية بترتيب أبجدي تصاعدي؟", "db_id": "sports_competition"}
{"question": "List the distinct region of clubs in ascending alphabetical order.", "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC", "arabic": "ما هي المناطق المختلفة للأندية بترتيب أبجدي تصاعدي؟", "db_id": "sports_competition"}
{"question": "What are the different regions of clubs in ascending alphabetical order?", "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC", "arabic": "ما هو متوسط عدد الميداليات الذهبية للأندية؟", "db_id": "sports_competition"}
{"question": "What is the average number of gold medals for clubs?", "query": "SELECT avg(Gold) FROM club_rank", "arabic": "ما هو متوسط عدد الميداليات الذهبية للنادي؟", "db_id": "sports_competition"}
{"question": "What is the average number of gold medals for a club?", "query": "SELECT avg(Gold) FROM club_rank", "arabic": "ما هي أنواع وبلدان المسابقات؟", "db_id": "sports_competition"}
{"question": "What are the types and countries of competitions?", "query": "SELECT Competition_type ,  Country FROM competition", "arabic": "ما هي أنواع كل مسابقة وفي أي دول تقع؟", "db_id": "sports_competition"}
{"question": "What are the types of every competition and in which countries are they located?", "query": "SELECT Competition_type ,  Country FROM competition", "arabic": "ما هي السنوات المميزة التي لا يكون فيها نوع المسابقات \"بطولة\"؟", "db_id": "sports_competition"}
{"question": "What are the distinct years in which the competitions type is not \"Tournament\"?", "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"", "arabic": "ما هي السنوات المختلفة لجميع المسابقات التي ليست من نوع \"بطولة\"؟", "db_id": "sports_competition"}
{"question": "What are the different years for all competitions that are not of type equal to tournament?", "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"", "arabic": "ما هو الحد الأقصى والحد الأدنى لعدد الميداليات الفضية للأندية؟", "db_id": "sports_competition"}
{"question": "What are the maximum and minimum number of silver medals for clubs.", "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank", "arabic": "ما هو الحد الأقصى والحد الأدنى لعدد الميداليات الفضية لجميع الأندية؟", "db_id": "sports_competition"}
{"question": "What are the maximum and minimum number of silver medals for all the clubs?", "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank", "arabic": "كم عدد الأندية التي لديها مجموع الميداليات أقل من 10؟", "db_id": "sports_competition"}
{"question": "How many clubs have total medals less than 10?", "query": "SELECT count(*) FROM club_rank WHERE Total  <  10", "arabic": "ما هو إجمالي عدد الأندية التي تمتلك أقل من 10 ميداليات في المجموع؟", "db_id": "sports_competition"}
{"question": "What is the total number of clubs that have less than 10 medals in total?", "query": "SELECT count(*) FROM club_rank WHERE Total  <  10", "arabic": "ما هي قائمة أسماء الأندية بترتيب تصاعدي حسب سنة البدء؟", "db_id": "sports_competition"}
{"question": "List all club names in ascending order of start year.", "query": "SELECT name FROM club ORDER BY Start_year ASC", "arabic": "ما هي أسماء جميع الأندية التي تبدأ من الأقدم؟", "db_id": "sports_competition"}
{"question": "What are the names of all the clubs starting with the oldest?", "query": "SELECT name FROM club ORDER BY Start_year ASC", "arabic": "ما هي قائمة أسماء الأندية بترتيب أبجدي تنازلي؟", "db_id": "sports_competition"}
{"question": "List all club names in descending alphabetical order.", "query": "SELECT name FROM club ORDER BY name DESC", "arabic": "ما هي أسماء جميع الأندية مرتبة بترتيب أبجدي تنازلي؟", "db_id": "sports_competition"}
{"question": "What are the names of all the clubs ordered in descending alphabetical order?", "query": "SELECT name FROM club ORDER BY name DESC", "arabic": "من فضلك، أظهر أسماء ولاعبي الأندية.", "db_id": "sports_competition"}
{"question": "Please show the names and the players of clubs.", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "arabic": "ما هي أسماء واللاعبون لجميع الأندية؟", "db_id": "sports_competition"}
{"question": "What are the names and players of all the clubs?", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "arabic": "أظهر أسماء الأندية التي لديها لاعبون بمركز \"Right Wing\".", "db_id": "sports_competition"}
{"question": "Show the names of clubs that have players with position \"Right Wing\".", "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"", "arabic": "ما هي أسماء الأندية التي لديها لاعبون في مركز \"Right Wing\"؟", "db_id": "sports_competition"}
{"question": "What are the names of the clubs that have players in the position of \"Right Wing\"?", "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"", "arabic": "ما هو متوسط نقاط اللاعبين من النادي بالاسم \"AIB\"؟", "db_id": "sports_competition"}
{"question": "What is the average points of players from club with name \"AIB\".", "query": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\"", "arabic": "ما هو متوسط عدد النقاط للاعبين من نادي \"AIB\"؟", "db_id": "sports_competition"}
{"question": "What is the average number of points for players from the \"AIB\" club?", "query": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\"", "arabic": "ما هي أوضاع اللاعبين وما هو متوسط عدد النقاط لكل وضع للاعبين؟", "db_id": "sports_competition"}
{"question": "List the position of players and the average number of points of players of each position.", "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION", "arabic": "لكل وضع، ما هو متوسط عدد النقاط للاعبين في تلك الوضع؟", "db_id": "sports_competition"}
{"question": "For each position, what is the average number of points for players in that position?", "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION", "arabic": "ما هي أوضاع اللاعبين مع متوسط عدد النقاط المُسجَّلة من قبل اللاعبين في تلك الوضع أكبر من 20؟", "db_id": "sports_competition"}
{"question": "List the position of players with average number of points scored by players of that position bigger than 20.", "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20", "arabic": "ما هي أوضاع اللاعبين الذين يكون متوسط عدد النقاط المُسجَّلة من قبل تلك الوضع أكبر من 20؟", "db_id": "sports_competition"}
{"question": "What are the positions of players whose average number of points scored by that position is larger than 20?", "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20", "arabic": "ما هي أنواع المنافسات وعدد المنافسات لكل نوع؟", "db_id": "sports_competition"}
{"question": "List the types of competition and the number of competitions of each type.", "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type", "arabic": "ما هي أنواع المنافسات وعدد المنافسات لهذا النوع؟", "db_id": "sports_competition"}
{"question": "What are the types of competition and number of competitions for that type?", "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type", "arabic": "ما هو أكثر نوع شيوعًا للمنافسات؟", "db_id": "sports_competition"}
{"question": "List the most common type of competition.", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو نوع المنافسة الأكثر شيوعاً؟", "db_id": "sports_competition"}
{"question": "What is the most common competition type?", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي أنواع المنافسات التي تحتوي على خمس منافسات على الأكثر من هذا النوع؟", "db_id": "sports_competition"}
{"question": "List the types of competition that have at most five competitions of that type.", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5", "arabic": "ما هي أنواع المنافسات التي تحتوي على خمس منافسات على الأكثر لهذا النوع؟", "db_id": "sports_competition"}
{"question": "What are the types of competition that have most 5 competitions for that type?", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5", "arabic": "ما هي أسماء الأندية التي لا تحتوي على أي لاعبين؟", "db_id": "sports_competition"}
{"question": "List the names of clubs that do not have any players.", "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "arabic": "ما هي أسماء جميع الأندية التي لا تحتوي على أي لاعبين؟", "db_id": "sports_competition"}
{"question": "What are the names of all clubs that do not have any players?", "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "arabic": "ما هي المراكز التي يمتلك فيها كل لاعب أكثر من 20 نقطة وأقل من 10 نقاط؟", "db_id": "sports_competition"}
{"question": "What are the positions with both players having more than 20 points and less than 10 points.", "query": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10", "arabic": "ما هي أوضاع كل من اللاعبين اللذين يمتلكان أكثر من 20 نقطة وأقل من 10 نقاط؟", "db_id": "sports_competition"}
{"question": "What are the positions of both players that have more than 20 20 points and less than 10 points?", "query": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10", "arabic": "ما مجموع النقاط لجميع اللاعبين؟", "db_id": "sports_competition"}
{"question": "Show total points of all players.", "query": "SELECT sum(Points) FROM player", "arabic": "ما هو العدد الإجمالي للنقاط لجميع اللاعبين؟", "db_id": "sports_competition"}
{"question": "What is the total number of points for all players?", "query": "SELECT sum(Points) FROM player", "arabic": "كم هو عدد مواقع اللعب المختلفة؟", "db_id": "sports_competition"}
{"question": "how many different positions are there?", "query": "SELECT count(DISTINCT POSITION) FROM player", "arabic": "كم عدد المواقع المختلفة للاعبين المُدرجة؟", "db_id": "sports_competition"}
{"question": "How many different position for players are listed?", "query": "SELECT count(DISTINCT POSITION) FROM player", "arabic": "ما هي أسماء اللاعبين الذين يحصلون على أكثر من متوسط النقاط؟", "db_id": "sports_competition"}
{"question": "what are the name of players who get more than the average points.", "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)", "arabic": "ما هي أسماء جميع اللاعبين الذين حصلوا على أكثر من متوسط عدد النقاط؟", "db_id": "sports_competition"}
{"question": "What are the names of all players that got more than the average number of points?", "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)", "arabic": "ما هو عدد اللاعبين الذين نقاطهم أقل من 30 في كل موقع؟", "db_id": "sports_competition"}
{"question": "find the number of players whose points are lower than 30 in each position.", "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION", "arabic": "ما هو عدد اللاعبين الذين يمتلكون نقاط أقل من 30 لكل موقع؟", "db_id": "sports_competition"}
{"question": "What is the number of players who have points less than 30 for each position?", "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION", "arabic": "أي بلد شارك في أكبر عدد من مسابقات البطولة؟", "db_id": "sports_competition"}
{"question": "which country did participated in the most number of Tournament competitions?", "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم البلد الذي شارك في أكبر عدد من مسابقات البطولة؟", "db_id": "sports_competition"}
{"question": "what is the name of the country that participated in the most tournament competitions?", "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي البلدان التي شاركت في كل من المسابقات الودية ومسابقات البطولة؟", "db_id": "sports_competition"}
{"question": "which countries did participated in both Friendly and Tournament type competitions.", "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'", "arabic": "ما هي البلدان التي شاركت في كل من المسابقات الودية ومسابقات البطولة؟", "db_id": "sports_competition"}
{"question": "What are the countries that participated in both friendly and tournament type competitions?", "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'", "arabic": "ابحث عن البلدان التي لم تشارك أبدًا في أي مسابقة من نوع الودية.", "db_id": "sports_competition"}
{"question": "Find the countries that have never participated in any competition with Friendly type.", "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'", "arabic": "ما هي البلدان التي لم تشارك في أي مسابقات من نوع الودية؟", "db_id": "sports_competition"}
{"question": "What are the countries that have never participated in any friendly-type competitions?", "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'", "arabic": "كم عدد مكونات الأثاث بالإجمالي؟", "db_id": "sports_competition"}
{"question": "How many furniture components are there in total?", "query": "SELECT sum(num_of_component) FROM furniture", "arabic": "ما هو اسم ومعرّف الأثاث ذو أعلى معدل سوقي؟", "db_id": "manufacturer"}
{"question": "Return the name and id of the furniture with the highest market rate.", "query": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1", "arabic": "ابحث عن القيمة السوقية الإجمالية للأثاث الذي يمتلك أعلى حصتين في السوق.", "db_id": "manufacturer"}
{"question": "find the total market rate of the furnitures that have the top 2 market shares.", "query": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2", "arabic": "ابحث عن مبالغ المكونات وأسماء جميع الأثاث الذي يحتوي على أكثر من 10 مكونات.", "db_id": "manufacturer"}
{"question": "Find the component amounts and names of all furnitures that have more than 10 components.", "query": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10", "arabic": "ابحث عن اسم وكمية المكونات لأقل شهرة للأثاث.", "db_id": "manufacturer"}
{"question": "Find the name and component amount of the least popular furniture.", "query": "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1", "arabic": "ابحث عن أسماء الأثاث الذين تكون أسعارهم أقل من أعلى سعر.", "db_id": "manufacturer"}
{"question": "Find the names of furnitures whose prices are lower than the highest price.", "query": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)", "arabic": "أيُّ صانع يمتلك أكبر عدد من المتاجر؟ اذكر اسمه وسنة افتتاحه.", "db_id": "manufacturer"}
{"question": "Which manufacturer has the most number of shops? List its name and year of opening.", "query": "SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1", "arabic": "ما هو متوسط عدد المصانع للمصنعين الذين يمتلكون أكثر من 20 متجرًا؟", "db_id": "manufacturer"}
{"question": "Find the average number of factories for the manufacturers that have more than 20 shops.", "query": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20", "arabic": "اعرض أسماء ومعرفات جميع الشركات المصنعة مرتبة حسب سنة افتتاحها.", "db_id": "manufacturer"}
{"question": "List all manufacturer names and ids ordered by their opening year.", "query": "SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year", "arabic": "أعطني اسم وسنة افتتاح الشركات المصنعة التي لديها إما أقل من 10 مصانع أو أكثر من 10 متاجر.", "db_id": "manufacturer"}
{"question": "Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops.", "query": "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10", "arabic": "ما هو المتوسط ​​لعدد المصانع وأقصى عدد للمتاجر للشركات المصنعة التي تم فتحها قبل عام 1990؟", "db_id": "manufacturer"}
{"question": "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.", "query": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990", "arabic": "ما هو رقم الهوية وعدد المتاجر للشركة التي تنتج أغلى الأثاث؟", "db_id": "manufacturer"}
{"question": "Find the id and number of shops for the company that produces the most expensive furniture.", "query": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1", "arabic": "ما هو عدد أنواع الأثاث التي ينتجها كل منتج بالإضافة إلى أسماء الشركات؟", "db_id": "manufacturer"}
{"question": "Find the number of funiture types produced by each manufacturer as well as the company names.", "query": "SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id", "arabic": "ما هي أسماء وأسعار الأثاث الذي تقوم بتصنيعه بعض الشركات؟", "db_id": "manufacturer"}
{"question": "Give me the names and prices of furnitures which some companies are manufacturing.", "query": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID", "arabic": "ما هي حصص السوق وأسماء الأثاث الذي لا تنتجه أي شركة في سجلاتنا؟", "db_id": "manufacturer"}
{"question": "Find the market shares and names of furnitures which no any company is producing in our records.", "query": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)", "arabic": "ما هو اسم الشركة التي تنتج كل من الأثاث الذي يحتوي على أقل من 6 مكونات والأثاث الذي يحتوي على أكثر من 10 مكونات؟", "db_id": "manufacturer"}
{"question": "Find the name of the company that produces both furnitures with less than 6 components and furnitures with more than 10 components.", "query": "SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10", "arabic": "ما هو اسم القسم والقسم الذي يتبع له كل موظف؟", "db_id": "manufacturer"}
{"question": "Display the first name and department name for each employee.", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "arabic": "ما هي الاسم الأول واسم القسم لجميع الموظفين؟", "db_id": "hr_1"}
{"question": "What are the first name and department name of all employees?", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "arabic": "اعرض الاسم الكامل (الاسم الأول والاسم الأخير)، والراتب لتلك الموظفين الذين يكسبون أقل من 6000.", "db_id": "hr_1"}
{"question": "List the full name (first and last name), and salary for those employees who earn below 6000.", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000", "arabic": "ما هي الأسماء الكاملة والرواتب لأي موظفين يكسبون أقل من 6000؟", "db_id": "hr_1"}
{"question": "What are the full names and salaries for any employees earning less than 6000?", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000", "arabic": "ما هو الاسم الأول، ورقم القسم لجميع الموظفين الذين يكون لقبهم الأخير \"McEwen\"؟", "db_id": "hr_1"}
{"question": "Display the first name, and department number for all employees whose last name is \"McEwen\".", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'", "arabic": "ما هي الأسماء الأولى وأرقام القسم للموظفين الذين لديهم اسم العائلة \"McEwen\"؟", "db_id": "hr_1"}
{"question": "What are the first names and department numbers for employees with last name McEwen?", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'", "arabic": "ما هي جميع المعلومات لجميع الموظفين دون أي رقم قسم؟", "db_id": "hr_1"}
{"question": "Return all the information for all employees without any department number.", "query": "SELECT * FROM employees WHERE department_id  =  \"null\"", "arabic": "ما هي جميع الموظفين بدون رقم قسم؟", "db_id": "hr_1"}
{"question": "What are all the employees without a department number?", "query": "SELECT * FROM employees WHERE department_id  =  \"null\"", "arabic": "ما هي جميع المعلومات حول قسم التسويق؟", "db_id": "hr_1"}
{"question": "Display all the information about the department Marketing.", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "arabic": "ما هي جميع المعلومات حول قسم التسويق؟", "db_id": "hr_1"}
{"question": "What is all the information about the Marketing department?", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "arabic": "متى تاريخ التوظيف لتلك الموظفين الذين لا يحتوي اسمهم الأول على الحرف M؟", "db_id": "hr_1"}
{"question": "when is the hire date for those employees whose first name does not containing the letter M?", "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'", "arabic": "في أي التواريخ تم توظيف الموظفين الذين لا يحتوون على الحرف M في أسمائهم الأولى؟", "db_id": "hr_1"}
{"question": "On what dates were employees without the letter M in their first names hired?", "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'", "arabic": "عرض الاسم الكامل (الأول والأخير)، تاريخ التوظيف، الراتب، ورقم القسم لتلك الموظفين الذين لا يحتوون على الحرف M في أسمائهم الأولى.", "db_id": "hr_1"}
{"question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", "arabic": "ما هي الاسم الكامل، تاريخ التوظيف، الراتب، ومعرّف القسم للموظفين الذين لا يحتوون على الحرف M في أسمائهم الأولى؟", "db_id": "hr_1"}
{"question": "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", "arabic": "ما هي الاسم الكامل (الأول والأخير)، تار", "db_id": "hr_1"}
{"question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id", "arabic": "ما هي الاسم الكامل، تاريخ التوظيف، الراتب، ورقم القسم للموظفين الذين لا يحتوون على الحرف M في أسمائهم الأولى، مرتبة تصاعديًا حسب رقم القسم؟", "db_id": "hr_1"}
{"question": "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id", "arabic": "ما هو رقم الهاتف للموظفين الذين يتقاضون رواتب تتراوح بين 8000 و 12000؟", "db_id": "hr_1"}
{"question": "what is the phone number of employees whose salary is in the range of 8000 and 12000?", "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000", "arabic": "ما هي أرقام الهواتف للموظفين الذين يتقاضون رواتب تتراوح بين 8000 و 12000؟", "db_id": "hr_1"}
{"question": "Return the phone numbers of employees with salaries between 8000 and 12000.", "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000", "arabic": "ما هي جميع المعلومات عن الموظفين الذين يتقاضون رواتب تتراوح بين 8000 و 12000 والعمولة غير فارغة أو رقم القسم لا يساوي 40؟", "db_id": "hr_1"}
{"question": "display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40.", "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40", "arabic": "ما هي جميع المعلومات عن الموظفين الذين يتقاضون رواتب تتراوح بين 8000 و 12000 وحيث أن العمولة ليست فارغة أو حيث أن رقم قسمهم ليس 40؟", "db_id": "hr_1"}
{"question": "Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40.", "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40", "arabic": "ما هي الاسم الكامل (الاسم الأول والاسم الأخير) والراتب لجميع الموظفين الذين لا يمتلكون أي قيمة للعمولة؟", "db_id": "hr_1"}
{"question": "What are the full name (first and last name) and salary for all employees who does not have any value for commission?", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"", "arabic": "ما هي الأسماء الكاملة والرواتب للموظفين الذين لديهم قيمة \"null\" للعمولة؟", "db_id": "hr_1"}
{"question": "Return the full names and salaries of employees with null commissions.", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"", "arabic": "ما هي الاسم الأول والاسم الأخير، والراتب لتلك الموظفين الذين ينتهي اسمهم الأول بالحرف \"m\"؟", "db_id": "hr_1"}
{"question": "Display the first and last name, and salary for those employees whose first name is ending with the letter m.", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "arabic": "ما هي الأسماء الكاملة والرواتب للموظفين الذين ينتهي اسمهم الأول بالحرف \"m\"؟", "db_id": "hr_1"}
{"question": "Return the full names and salaries for employees with first names that end with the letter m.", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "arabic": "ما هي معرّف الوظيفة وتاريخ التوظيف لتلك الموظفين الذين تم توظيفهم بين الخامس من نوفمبر، 2007 والخامس من يوليو، 2009؟", "db_id": "hr_1"}
{"question": "Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", "arabic": "ما هي معرّفات الوظائف وتواريخ التوظيف للموظفين الذين تم توظيفهم بعد الخامس من نوفمبر، 2007 وقبل الخامس من يوليو، 2009؟", "db_id": "hr_1"}
{"question": "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", "arabic": "ما هي الاسم الأول والاسم الأخير لتلك الموظفين الذين يعملون إما في القسم 70 أو القسم 90؟", "db_id": "hr_1"}
{"question": "What are the first and last name for those employees who works either in department 70 or 90?", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "arabic": "ما هي الأسماء الكاملة للموظفين الذين يعملون في القسم 70 أو 90؟", "db_id": "hr_1"}
{"question": "What are the full names of employees who with in department 70 or 90?", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "arabic": "ما هي الراتب ورقم المدير لتلك الموظفين الذين يعملون تحت إشراف مدير؟", "db_id": "hr_1"}
{"question": "Find the salary and manager number for those employees who is working under a manager.", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"", "arabic": "ما هي الرواتب ومعرّفات المدير للموظفين الذين يمتلكون مديرًا؟", "db_id": "hr_1"}
{"question": "What are the salaries and manager ids for employees who have managers?", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"", "arabic": "ما هي جميع التفاصيل من جدول الموظفين لتلك الموظفين الذين تم توظيفهم قبل تاريخ 2002-06-21؟", "db_id": "hr_1"}
{"question": "display all the details from Employees table for those employees who was hired before 2002-06-21.", "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'", "arabic": "ما هي جميع المعلومات عن الموظفين الذين تم توظيفهم قبل 21 يونيو 2002؟", "db_id": "hr_1"}
{"question": "What is all the information about employees hired before June 21, 2002?", "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'", "arabic": "ما هي جميع المعلومات عن جميع الموظفين الذين يحتوون على الحروف \"D\" أو \"S\" في اسمهم الأول، وكذلك ترتيب النتائج بترتيب تنازلي حسب الراتب؟", "db_id": "hr_1"}
{"question": "display all the information for all employees who have the letters D or S in their first name and also arrange the result in descending order by salary.", "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC", "arabic": "ما هي جميع المعلومات عن الموظفين الذين يحتوون على الحروف \"D\" أو \"S\" في اسمهم الأول، مرتبة ترتيبًا بترتيب تنازلي حسب الراتب؟", "db_id": "hr_1"}
{"question": "What is all the information about employees with D or S in their first name, ordered by salary descending?", "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC", "arabic": "من فضلك، ما هي بيانات الموظفين الذين انضموا بعد السابع من سبتمبر، 1987؟", "db_id": "hr_1"}
{"question": "display those employees who joined after 7th September, 1987.", "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'", "arabic": "أي الموظفين تم توظيفهم بعد السابع من سبتمبر، 1987؟", "db_id": "hr_1"}
{"question": "Which employees were hired after September 7th, 1987?", "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'", "arabic": "من فضلك، أعرض عناوين الوظائف التي يكون راتبها الأدنى أكبر من 9000؟", "db_id": "hr_1"}
{"question": "display the job title of jobs which minimum salary is greater than 9000.", "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000", "arabic": "أي العناوين الوظيفية تتوافق مع الوظائف التي يكون راتبها أكثر من 9000؟", "db_id": "hr_1"}
{"question": "Which job titles correspond to jobs with salaries over 9000?", "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000", "arabic": "من فضلك، أعرض عنوان الوظيفة والفارق بين الحد الأدنى والحد الأقصى للرواتب لتلك الوظائف التي تكون الحد الأقصى للراتب في نطاق 12000 إلى 18000؟", "db_id": "hr_1"}
{"question": "display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "arabic": "ما هي عناوين الوظائف ونطاق الرواتب للوظائف التي يكون الحد الأقصى للراتب في النطاق بين 12000 و 18000؟", "db_id": "hr_1"}
{"question": "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "arabic": "من فضلك، أعرض عناوين البريد الإلكتروني للموظفين الذين ليس لديهم نسبة عمولة والذين يتقاضون رواتب في النطاق بين 7000 و 12000 ويعملون في القسم الذي رقمه 50.", "db_id": "hr_1"}
{"question": "display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.", "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50", "arabic": "ما هي عناوين البريد الإلكتروني للموظفين الذين يمتلكون قيمة \"null\" للعمولة، ويتقاضون رواتب في النطاق بين 7000 و 12000، ويعملون في القسم رقم 50؟", "db_id": "hr_1"}
{"question": "What are the emails of employees with null commission, salary between 7000 and 12000, and who work in department 50?", "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50", "arabic": "من فضلك، أعرض معرّف الموظف لكل موظف وتاريخ انتهاء وظيفته السابقة.", "db_id": "hr_1"}
{"question": "display the employee ID for each employee and the date on which he ended his previous job.", "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id", "arabic": "ما هي معرّفات الموظفين لكل موظف وتواريخ انتهاء العمل النهائية في وظيفتهم الأخيرة؟", "db_id": "hr_1"}
{"question": "What are the employee ids for each employee and final dates of employment at their last job?", "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id", "arabic": "من فضلك، أعرض تلك الأقسام التي يعمل فيها أكثر من عشرة موظفين حصلوا على نسبة عمولة.", "db_id": "hr_1"}
{"question": "display those departments where more than ten employees work who got a commission percentage.", "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10", "arabic": "ما هي معرّفات الأقسام التي كان لديها أكثر من 10 موظفين حصلوا على عمولة؟", "db_id": "hr_1"}
{"question": "What are the department ids for which more than 10 employees had a commission?", "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10", "arabic": "ما هي معرّفات الأقسام حيث يدير أي مدير 4 أو أكثر من الموظفين؟", "db_id": "hr_1"}
{"question": "Find the ids of the departments where any manager is managing 4 or more employees.", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4", "arabic": "ما هي معرّفات الأقسام للأقسام التي يدير فيها المديرون أكثر من 3 موظفين؟", "db_id": "hr_1"}
{"question": "What are department ids for departments with managers managing more than 3 employees?", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4", "arabic": "من فضلك، أعرض المتوسط السريع للرواتب للموظفين في كل قسم يحصلون على نسبة عمولة.", "db_id": "hr_1"}
{"question": "display the average salary of employees for each department who gets a commission percentage.", "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id", "arabic": "ما هو المتوسط السريع لرواتب الموظفين الذين لديهم نسبة عمولة غير فارغة؟", "db_id": "hr_1"}
{"question": "What is the average salary of employees who have a commission percentage that is not null?", "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id", "arabic": "من فضلك، أعرض معرّف البلد وعدد المدن لكل بلد.", "db_id": "hr_1"}
{"question": "display the country ID and number of cities for each country.", "query": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id", "arabic": "ما هو معرّف البلد والعدد المقابل للمدن في كل بلد؟", "db_id": "hr_1"}
{"question": "Give the country id and corresponding count of cities in each country.", "query": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id", "arabic": "ما هو معرّف الوظيفة لتلك الوظائف التي تمت ممارستها بواسطة شخصين أو أكثر لأكثر من 300 يوم؟", "db_id": "hr_1"}
{"question": "display job ID for those jobs that were done by two or more for more than 300 days.", "query": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2", "arabic": "ما هي معرّفات الوظائف للوظائف التي تم ممارستها أكثر من مرة لمدة تزيد عن 300 يوم؟", "db_id": "hr_1"}
{"question": "What are the job ids for jobs done more than once for a period of more than 300 days?", "query": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2", "arabic": "ما هو معرّف الموظف لتلك الموظفين الذين قاموا بعمل وظيفتين أو أكثر في الماضي؟", "db_id": "hr_1"}
{"question": "display the ID for those employees who did two or more jobs in the past.", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "arabic": "ما هي معرّفات الموظفين لتلك الموظفين الذين شغلوا وظيفتين أو أكثر؟", "db_id": "hr_1"}
{"question": "What are the employee ids for employees who have held two or more jobs?", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "arabic": "من فضلك، اعثر على الموظف بمعرّفه واسم البلد حالياً حيث يعمل فيه.", "db_id": "hr_1"}
{"question": "Find employee with ID and name of the country presently where (s)he is working.", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "arabic": "ما هي جميع معرّفات الموظفين وأسماء البلدان التي يعملون فيها؟", "db_id": "hr_1"}
{"question": "What are all the employee ids and the names of the countries in which they work?", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "arabic": "من فضلك، أعرض اسم القسم وعدد الموظفين في كل قسم.", "db_id": "hr_1"}
{"question": "display the department name and number of employees in each of the department.", "query": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name", "arabic": "ما هو اسم كل قسم وعدد الموظفين في كل واحد؟", "db_id": "hr_1"}
{"question": "Give the name of each department and the number of employees in each.", "query": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name", "arabic": "هل يمكنك إرجاع كل تفاصيل الوظائف التي تمت من قبل أي من الموظفين الذين يكسبون حاليًا راتبًا على أو أعلى من 12000؟", "db_id": "hr_1"}
{"question": "Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000?", "query": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000", "arabic": "ما هي جميع معلومات تاريخ الوظائف التي تمت من قبل الموظفين الذين يحصلون على راتب أكبر من أو يساوي 12000؟", "db_id": "hr_1"}
{"question": "What is all the job history info done by employees earning a salary greater than or equal to 12000?", "query": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000", "arabic": "من فضلك، أعرض عنوان الوظيفة والراتب المتوسط للموظفين.", "db_id": "hr_1"}
{"question": "display job title and average salary of employees.", "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title", "arabic": "ما هو الراتب المتوسط لكل عنوان وظيفي؟", "db_id": "hr_1"}
{"question": "What is the average salary for each job title?", "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title", "arabic": "ما هو الاسم الكامل (الاسم الأول والاسم الأخير) لتلك الموظفين الذين يحصلون على راتب أعلى من الموظف الذي يحمل رقم 163؟", "db_id": "hr_1"}
{"question": "What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )", "arabic": "ما هي الأسماء الكاملة للموظفين الذين يكسبون أكثر من الموظف الذي لديه رقم 163؟", "db_id": "hr_1"}
{"question": "Provide the full names of employees earning more than the employee with id 163.", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )", "arabic": "ما هو أقل راتب لكل قسم؟", "db_id": "hr_1"}
{"question": "return the smallest salary for every departments.", "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id", "arabic": "ما هو الحد الأدنى للراتب في كل قسم؟", "db_id": "hr_1"}
{"question": "What is the minimum salary in each department?", "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id", "arabic": "ما هي الأسماء الأولى والأخيرة ومعرّف القسم لتلك الموظفين الذين يكسبون مبلغ الراتب الذي هو أصغر راتب في أي من الأقسام؟", "db_id": "hr_1"}
{"question": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)", "arabic": "ما هي الأسماء الكاملة ومعرّفات الأقسام لأقل العاملين أجراً عبر جميع الأقسام؟", "db_id": "hr_1"}
{"question": "What are the full names and department ids for the lowest paid employees across all departments.", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)", "arabic": "ما هو معرف الموظف لجميع الموظفين الذين يكسبون أكثر من المعدل الراتبي؟", "db_id": "hr_1"}
{"question": "Find the employee id for all employees who earn more than the average salary.", "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)", "arabic": "ما هي معرّفات الموظفين الذين يكسبون أكثر من المتوسط؟", "db_id": "hr_1"}
{"question": "What are the employee ids for employees who make more than the average?", "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)", "arabic": "ما هي معرّفات الموظفين والرواتب لجميع الموظفين الذين يتبعون لـ Payam (الاسم الأول)؟", "db_id": "hr_1"}
{"question": "display the employee id and salary of all employees who report to Payam (first name).", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )", "arabic": "ما هي معرّفات الموظفين الذين يتبعون لـ Payam، وما هي رواتبهم؟", "db_id": "hr_1"}
{"question": "What are the employee ids of employees who report to Payam, and what are their salaries?", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )", "arabic": "ما هي أسماء جميع الأقسام التي لديها فعلاً موظف واحد أو أكثر معيّنين لها؟", "db_id": "hr_1"}
{"question": "find the name of all departments that do actually have one or more employees assigned to them.", "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "arabic": "ما هي أسماء الأقسام التي تحتوي على موظف واحد على الأقل؟", "db_id": "hr_1"}
{"question": "What are the names of departments that have at least one employee.", "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "arabic": "ما هي تفاصيل الموظفين الذين يديرون قسمًا؟", "db_id": "hr_1"}
{"question": "get the details of employees who manage a department.", "query": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id", "arabic": "ما هي جميع المعلومات المتعلقة بالموظفين الذين يعملون كمدراء؟", "db_id": "hr_1"}
{"question": "What is all the information regarding employees who are managers?", "query": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id", "arabic": "ما هي جميع المعلومات عن قسم التسويق؟", "db_id": "hr_1"}
{"question": "display all the information about the department Marketing.", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "arabic": "ما هي جميع المعلومات حول قسم التسويق؟", "db_id": "hr_1"}
{"question": "What is all the information about the Marketing department?", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "arabic": "ما هو هوية العاملين الذين قاموا بعمل وظيفين أو أكثر في الماضي؟", "db_id": "hr_1"}
{"question": "display the ID for those employees who did two or more jobs in the past.", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "arabic": "ما هي هويات الموظفين الذين قاموا بعمل وظيفتين أو أكثر؟", "db_id": "hr_1"}
{"question": "What are the employee ids for those who had two or more jobs.", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "arabic": "ما هي الهويات الفريدة لتلك الأقسام حيث يدير أي مدير 4 موظفين أو أكثر؟", "db_id": "hr_1"}
{"question": "What are the unique ids of those departments where any manager is managing 4 or more employees.", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4", "arabic": "ما هي الهويات المميزة لأقسام تديرها مدير يشرف على ٤ موظفين أو أكثر؟", "db_id": "hr_1"}
{"question": "Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4", "arabic": "ما هو هوية الوظيفة لتلك الوظائف التي تتجاوز متوسط الراتب فيها ٨٠٠٠؟", "db_id": "hr_1"}
{"question": "Find the job ID for those jobs which average salary is above 8000.", "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000", "arabic": "ما هي هويات الوظيفة المتوافقة مع الوظائف التي يتجاوز متوسط الراتب فيها ٨٠٠٠؟", "db_id": "hr_1"}
{"question": "What are the job ids corresponding to jobs with average salary above 8000?", "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000", "arabic": "ما هي هويات الموظفين وأسماء الوظائف لجميع تلك الوظائف في القسم ٨٠؟", "db_id": "hr_1"}
{"question": "display the employee ID and job name for all those jobs in department 80.", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80", "arabic": "ما هي هويات الموظفين والوظائف للموظفين في القسم 80؟", "db_id": "hr_1"}
{"question": "what are the employee ids and job titles for employees in department 80?", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80", "arabic": "ما هو الاسم الأول ومعرّف الوظيفة لجميع الموظفين في قسم المالية؟", "db_id": "hr_1"}
{"question": "What is the first name and job id for all employees in the Finance department?", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", "arabic": "ما هو الاسم الأول ومعرّف الوظيفة لجميع الموظفين في قسم المالية؟", "db_id": "hr_1"}
{"question": "Give the first name and job id for all employees in the Finance department.", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", "arabic": "ما هي جميع المعلومات عن الموظفين الذين يكون راتبهم في نطاق الراتب الأدنى و 2500؟", "db_id": "hr_1"}
{"question": "display all the information of the employees whose salary if within the range of smallest salary and 2500.", "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500", "arabic": "ما هي جميع المعلومات المتعلقة بالموظفين الذين يحصلون على رواتب تزيد عن الحد الأدنى وتقل عن 2500؟", "db_id": "hr_1"}
{"question": "What is all the information regarding employees with salaries above the minimum and under 2500?", "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500", "arabic": "ما هي معرّفات الموظفين الذين لا يعملون في تلك الأقسام حيث يعمل بعض الموظفين ومعرّف مديرهم في نطاق 100 إلى 200؟", "db_id": "hr_1"}
{"question": "Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.", "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "arabic": "ما هي معرّفات الموظفين الذين لا يعملون في الأقسام التي تحتوي على مدراء لهم معرّفات بين 100 و 200؟", "db_id": "hr_1"}
{"question": "What are the ids for employees who do not work in departments with managers that have ids between 100 and 200?", "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "arabic": "ما هي أسماء الموظفين (الاسم الأول والاسم الأخير) وتاريخ التوظيف لجميع الموظفين في نفس القسم كما كلارا؟", "db_id": "hr_1"}
{"question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")", "arabic": "ما هي الأسماء الكاملة وتاريخ التوظيف للموظفين في نفس القسم كمن لديهم الاسم الأول كلارا؟", "db_id": "hr_1"}
{"question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara?", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")", "arabic": "ما هي أسماء الموظفين (الاسم الأول والاسم الأخير) وتاريخ التوظيف لجميع الموظفين في نفس القسم كما كلارا باستثناء كلارا؟", "db_id": "hr_1"}
{"question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"", "arabic": "ما هي الأسماء الكاملة وتاريخ التوظيف للموظفين في نفس القسم كمن لديهم الاسم الأول كلارا، باستثناء كلارا؟", "db_id": "hr_1"}
{"question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"", "arabic": "ما هو رقم الموظف والاسم (الاسم الأول والاسم الأخير) لجميع الموظفين الذين يعملون في قسم يحتوي على أي موظف يحتوي اسمه على 'ت'؟", "db_id": "hr_1"}
{"question": "display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a ’T’.", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )", "arabic": "ما هي المعرّفات والأسماء الكاملة للموظفين الذين يعملون في قسم يحتوي على شخص لديه الاسم الأول يحتوي على الحرف \"ت\"؟", "db_id": "hr_1"}
{"question": "What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )", "arabic": "ما هو رقم الموظف، والاسم (الاسم الأول والاسم الأخير)، والراتب لجميع الموظفين الذين يكسبون أكثر من المتوسط ​​للراتب والذين يعملون في قسم يحتوي على أي موظف لديه الحرف 'ج' في اسمه الأول؟", "db_id": "hr_1"}
{"question": "display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')", "arabic": "ما هي المعرّفات والأسماء الكاملة، والرواتب للموظفين الذين يكسبون أكثر من المتوسط والذين يعملون في قسم مع موظفين لديهم الحرف J في اسمهم الأول؟", "db_id": "hr_1"}
{"question": "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')", "arabic": "ما هو رقم الموظف ومعرّف الوظيفة لجميع الموظفين الذين رواتبهم أقل من أي راتب لتلك الموظفين الذين يكون عنوان وظيفتهم MK_MAN؟", "db_id": "hr_1"}
{"question": "display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )", "arabic": "ما هي معرّفات الموظفين ومعرّفات الوظائف للموظفين الذين يكسبون أقل من أقل موظف يكسب راتب مع وظيفة MK_MAN؟", "db_id": "hr_1"}
{"question": "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )", "arabic": "ما هو رقم الموظف، والاسم (الاسم الأول والاسم الأخير)، وعنوان الوظيفة لجميع الموظفين الذين رواتبهم أعلى من أي راتب لتلك الموظفين الذين يكون عنوان وظيفتهم PU_MAN؟", "db_id": "hr_1"}
{"question": "display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )", "arabic": "ما هي معرّفات الموظفين، والأسماء الكاملة، ومعرّفات الوظائف للموظفين الذين يكسبون أكثر من أعلى موظف يكسب راتب مع وظيفة PU_MAN؟", "db_id": "hr_1"}
{"question": "What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )", "arabic": "ما هو معرّف القسم وإجمالي الراتب لتلك الأقسام التي تحتوي على ما لا يقل عن موظفين اثنين؟", "db_id": "hr_1"}
{"question": "display the department id and the total salary for those departments which contains at least two employees.", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2", "arabic": "ما هو إجمالي الرواتب ومعرّف القسم لكل قسم يحتوي على أكثر من موظفين اثنين؟", "db_id": "hr_1"}
{"question": "What are total salaries and department id for each department that has more than 2 employees?", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2", "arabic": "ما هي جميع المعلومات عن تلك الموظفين الذين لم يكون لديهم أي وظيفة في الماضي؟", "db_id": "hr_1"}
{"question": "display all the information of those employees who did not have any job in the past.", "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "arabic": "ما هي جميع المعلومات حول الموظفين الذين لم يكونوا لديهم أبدًا وظيفة في الماضي؟", "db_id": "hr_1"}
{"question": "What is all the information about employees who have never had a job in the past?", "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "arabic": "ما هو معرّف القسم، والاسم الكامل (الاسم الأول والاسم الأخير)، والراتب لتلك الموظفين الذين يحصلون على أعلى راتب في كل قسم؟", "db_id": "hr_1"}
{"question": "display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.", "query": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id", "arabic": "ما هي معرّفات الأقسام، والأسماء الكاملة، والرواتب للموظفين الذين يحصلون على أعلى رواتب في أقسامهم؟", "db_id": "hr_1"}
{"question": "What are the department ids, full names, and salaries for employees who make the most in their departments?", "query": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id", "arabic": "ما هي الاسم الأول والاسم الأخير، والقسم، والمدينة، والولاية أو المقاطعة لكل موظف؟", "db_id": "hr_1"}
{"question": "display the first and last name, department, city, and state province for each employee.", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", "arabic": "ما هي الأسماء الكاملة، والأقسام، والمدن، والولايات أو المقاطعات لكل موظف؟", "db_id": "hr_1"}
{"question": "What are the full names, departments, cities, and state provinces for each employee?", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", "arabic": "من فضلك أعرض الموظفين الذين يحتوون على حرف \"ز\" في اسمهم الأول، وعرض أيضًا أسمائهم الأخيرة والمدينة.", "db_id": "hr_1"}
{"question": "display those employees who contain a letter z to their first name and also display their last name, city.", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'", "arabic": "ما هي الأسماء الكاملة والمدن للموظفين الذين لديهم الحرف \"ز\" في أسمائهم الأولى؟", "db_id": "hr_1"}
{"question": "What are the full names and cities of employees who have the letter Z in their first names?", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'", "arabic": "من فضلك أعرض اسم القسم، والمدينة، وولاية أو مقاطعة لكل قسم.", "db_id": "hr_1"}
{"question": "display the department name, city, and state province for each department.", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id", "arabic": "ما هي أسماء الأقسام، والمدن، والولايات أو المقاطعات لكل قسم؟", "db_id": "hr_1"}
{"question": "What are the department names, cities, and state provinces for each department?", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id", "arabic": "من فضلك أعرض الاسم الكامل (الاسم الأول والاسم الأخير) للموظف مع معرّفه واسم البلد حاليًا حيث يعمل.", "db_id": "hr_1"}
{"question": "display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "arabic": "ما هي الأسماء الكاملة والمعرّفات لكل موظف، واسم البلد الذي يتواجدون فيه؟", "db_id": "hr_1"}
{"question": "What the full names, ids of each employee and the name of the country they are in?", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "arabic": "من فضلك أعرض اسم القسم وعدد الموظفين في كل قسم.", "db_id": "hr_1"}
{"question": "display the department name and number of employees in each of the department.", "query": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name", "arabic": "ما هي أسماء الأقسام وعدد الموظفين الذين يعملون في كل منها؟", "db_id": "hr_1"}
{"question": "What are the department names and how many employees work in each of them?", "query": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name", "arabic": "من فضلك أعرض الاسم الكامل (الاسم الأول والاسم الأخير)، والراتب لتلك الموظفين الذين يعملون في أي قسم يقع في لندن.", "db_id": "hr_1"}
{"question": "display the full name (first and last name), and salary of those employees who working in any department located in London.", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", "arabic": "ما هي الأسماء الكاملة والرواتب للموظفين العاملين في مدينة لندن؟", "db_id": "hr_1"}
{"question": "What are full names and salaries of employees working in the city of London?", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", "arabic": "ما هو اسم الأغنية التي تم إصدارها في العام الأحدث؟", "db_id": "hr_1"}
{"question": "What is the name of the song that was released in the most recent year?", "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1", "arabic": "ما هو اسم الأغنية التي تم إصدارها مؤخرًا بشكل أكبر؟", "db_id": "music_1"}
{"question": "What is the name of the song that was released most recently?", "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1", "arabic": "ما هو معرّف الأغنية الأطول؟", "db_id": "music_1"}
{"question": "What is the id of the longest song?", "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1", "arabic": "ما هو معرّف الأغنية التي تدوم لأطول فترة؟", "db_id": "music_1"}
{"question": "Find the id of the song that lasts the longest.", "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1", "arabic": "ما هي أسماء جميع الأغاني الإنجليزية؟", "db_id": "music_1"}
{"question": "Find the names of all English songs.", "query": "SELECT song_name FROM song WHERE languages  =  \"english\"", "arabic": "ما هي أسماء جميع الأغاني باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the names of all songs in English?", "query": "SELECT song_name FROM song WHERE languages  =  \"english\"", "arabic": "ما هي معرّفات الأغاني التي يكون تنسيقها mp3؟", "db_id": "music_1"}
{"question": "What are the id of songs whose format is mp3.", "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"", "arabic": "ما هي معرّفات جميع الملفات بتنسيق mp3؟", "db_id": "music_1"}
{"question": "What are the id of all the files in mp3 format?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"", "arabic": "ما هي قائمة الأسماء وبلد الأصل لجميع المطربين الذين أنتجوا أغاني بتقييم أعلى من 9؟", "db_id": "music_1"}
{"question": "List the name and country of origin for all singers who have produced songs with rating above 9.", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9", "arabic": "ما هي الأسماء المختلفة وبلدان الأصل لجميع الفنانين الذين تقييم أغانيهم أعلى من 9؟", "db_id": "music_1"}
{"question": "What are the different names and countries of origins for all artists whose song ratings are above 9?", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9", "arabic": "ما هي أحجام الملف والتنسيق لجميع الأغاني التي تحتوي على دقة أقل من 800؟", "db_id": "music_1"}
{"question": "List the file size and format for all songs that have resolution lower than 800.", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800", "arabic": "ما هي أحجام الملفات والتنسيقات لجميع الأغاني التي تحتوي على دقة أقل من 800؟", "db_id": "music_1"}
{"question": "What are the file sizes and formats for all songs with a resolution lower than 800?", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800", "arabic": "ما هو اسم الفنان الذي أنتج أقصر أغنية؟", "db_id": "music_1"}
{"question": "What is the name of the artist who produced the shortest song?", "query": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1", "arabic": "ما هي أسماء الفنانين الذين غنوا أقصر أغنية؟", "db_id": "music_1"}
{"question": "What are the names of the artists who sang the shortest song?", "query": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1", "arabic": "ما هي أسماء وبلدان أصل الفنانين الذين أنتجوا أعلى ثلاث أغاني مصنفة بتقييم عالٍ؟", "db_id": "music_1"}
{"question": "What are the names and countries of origin for the artists who produced the top three highly rated songs.", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3", "arabic": "ما هي أسماء المطربين الذين قاموا بأداء أعلى 3 أغاني مصنفة بأعلى تقييم، ومن أي بلد ينحدرون؟", "db_id": "music_1"}
{"question": "What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3", "arabic": "كم عدد الأغاني التي يبلغ مدتها 4 دقائق؟", "db_id": "music_1"}
{"question": "How many songs have 4 minute duration?", "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"", "arabic": "ما هو عدد الأغاني التي تستمر لمدة تقريبية 4 دقائق؟", "db_id": "music_1"}
{"question": "What is the count of the songs that last approximately 4 minutes?", "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"", "arabic": "كم عدد الفنانين الذين هم من بنغلاديش؟", "db_id": "music_1"}
{"question": "How many artists are from Bangladesh?", "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"", "arabic": "كم عدد الفنانين البنغلاديشيين المُدرجين؟", "db_id": "music_1"}
{"question": "How many Bangladeshi artists are listed?", "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"", "arabic": "ما هو متوسط تقييم الأغاني التي أنتجتها الفنانات؟", "db_id": "music_1"}
{"question": "What is the average rating of songs produced by female artists?", "query": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\"", "arabic": "كم عدد الأغاني، في المتوسط، التي تغنيها الفنانة؟", "db_id": "music_1"}
{"question": "How many songs, on average, are sung by a female artist?", "query": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\"", "arabic": "ما هو أكثر تنسيق ملف شعبية؟", "db_id": "music_1"}
{"question": "What is the most popular file format?", "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1", "arabic": "ما هو تنسيق الملف الذي يتم استخدامه بواسطة معظم الملفات؟", "db_id": "music_1"}
{"question": "Find the file format that is used by the most files.", "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1", "arabic": "ما هي أسماء الفنانين الذين هم من المملكة المتحدة وقد أنتجوا أغاني باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "Find the names of the artists who are from UK and have produced English songs.", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\"", "arabic": "ما هي أسماء الفنانين الذين هم من المملكة المتحدة وقد غنوا أغاني باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the names of the artists that are from the UK and sang songs in English?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\"", "arabic": "ما هو مُعرّف الأغاني المتاحة بتنسيق mp4 والتي تحتوي على دقة أقل من 1000؟", "db_id": "music_1"}
{"question": "Find the id of songs that are available in mp4 format and have resolution lower than 1000.", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000", "arabic": "ما هو مُعرّف الملفات المتاحة بتنسيق mp4 ودقة أقل من 1000؟", "db_id": "music_1"}
{"question": "What is the id of the files that are available in the format of mp4 and a resolution smaller than 1000?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000", "arabic": "ما هي بلد المنشأ للفنانة التي هي أنثى وأنتجت أغنية بالبنغالية؟", "db_id": "music_1"}
{"question": "What is the country of origin of the artist who is female and produced a song in Bangla?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"", "arabic": "ما هي الدول التي تنتمي إليها الفنانات الإناث اللاتي قدمن الأغاني باللغة البنغالية؟", "db_id": "music_1"}
{"question": "What countries are the female artists who sung in the language Bangla from?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"", "arabic": "ما هو المتوسط ​​الزمني للأغاني التي تحمل تنسيق mp3 وبدقة أقل من 800؟", "db_id": "music_1"}
{"question": "What is the average duration of songs that have mp3 format and resolution below 800?", "query": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800", "arabic": "ما هو متوسط مدة الأغاني التي تكون في تنسيق mp3 ودقتها أقل من 800؟", "db_id": "music_1"}
{"question": "What is the average song duration for the songs that are in mp3 format and whose resolution below 800?", "query": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800", "arabic": "ما هو عدد الفنانين لكل نوع؟", "db_id": "music_1"}
{"question": "What is the number of artists for each gender?", "query": "SELECT count(*) ,  gender FROM artist GROUP BY gender", "arabic": "كم عدد الفنانين الذكور وكم عددهم من الإناث؟", "db_id": "music_1"}
{"question": "How many artists are male and how many are female?", "query": "SELECT count(*) ,  gender FROM artist GROUP BY gender", "arabic": "ما هو المتوسط التقييمي للأغاني لكل لغة؟", "db_id": "music_1"}
{"question": "What is the average rating of songs for each language?", "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages", "arabic": "ما هو متوسط تقييم الأغاني لكل لغة؟", "db_id": "music_1"}
{"question": "What is the average song rating for each language?", "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages", "arabic": "ما هو جنس الفنان واسمه الذي أنتج الأغنية ذات الدقة الأدنى؟", "db_id": "music_1"}
{"question": "Return the gender and name of artist who produced the song with the lowest resolution.", "query": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1", "arabic": "ما هو جنس الفنان واسمه الذي غنى الأغنية بأقل دقة؟", "db_id": "music_1"}
{"question": "What is the gender and name of the artist who sang the song with the smallest resolution?", "query": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1", "arabic": "لكل تنسيق ملف، ما عدد الفنانين الذين أصدروا أغاني في ذلك التنسيق؟", "db_id": "music_1"}
{"question": "For each file format, return the number of artists who released songs in that format.", "query": "SELECT count(*) ,  formats FROM files GROUP BY formats", "arabic": "كم عدد الأغاني التي تم إصدارها لكل تنسيق؟", "db_id": "music_1"}
{"question": "How many songs were released for each format?", "query": "SELECT count(*) ,  formats FROM files GROUP BY formats", "arabic": "ما هي أسماء الأغاني المميزة التي تمتلك دقة أعلى من بعض الأغاني باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "Find the distinct names of all songs that have a higher resolution than some songs in English.", "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")", "arabic": "ما هي الأسماء المختلفة لجميع الأغاني التي تمتلك دقة أعلى من الأغاني الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the different names for all songs that have a higher resolution than English songs?", "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")", "arabic": "ما هي أسماء جميع الأغاني التي تمتلك تقييمًا أقل من بعض الأغاني في نوع البلوز؟", "db_id": "music_1"}
{"question": "What are the names of all songs that have a lower rating than some song of blues genre?", "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")", "arabic": "ما هي أسماء الأغاني التي تمتلك تقييمًا أقل على الأقل من أغنية واحدة في نوع البلوز؟", "db_id": "music_1"}
{"question": "What are the names of the songs that have a lower rating than at least one blues song?", "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")", "arabic": "ما هو اسم وبلد المنشأ للفنان الذي أصدر أغنية تحتوي على \"الحب\" في عنوانها؟", "db_id": "music_1"}
{"question": "What is the name and country of origin of the artist who released a song that has \"love\" in its title?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"", "arabic": "ما هي أسماء الفنانين الذين أصدروا أغنية تحتوي على كلمة \"الحب\" في عنوانها، ومن أين يأتون الفنانون؟", "db_id": "music_1"}
{"question": "What are the names of the artists who released a song that has the word love in its title, and where are the artists from?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"", "arabic": "ما هي قائمة الأسماء والجنس لجميع الفنانين الذين أصدروا أغاني في شهر مارس؟", "db_id": "music_1"}
{"question": "List the name and gender for all artists who released songs in March.", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"", "arabic": "ما هي أسماء وأجناس جميع الفنانين الذين أصدروا أغاني في شهر مارس؟", "db_id": "music_1"}
{"question": "What are the names and genders of all artists who released songs in the month of March?", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"", "arabic": "ما هي قائمة أسماء جميع الأنواع بالترتيب الأبجدي، جنبًا إلى جنب مع تقييماتها؟", "db_id": "music_1"}
{"question": "List the names of all genres in alphabetical oder, together with its ratings.", "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name", "arabic": "ما هي أسماء جميع الأنواع بالترتيب الأبجدي، مع دمج تقييماتها؟", "db_id": "music_1"}
{"question": "What are the names of all genres in alphabetical order, combined with its ratings?", "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name", "arabic": "من فضلك، أعطني قائمة بأسماء جميع الأغاني مرتبة حسب دقتها.", "db_id": "music_1"}
{"question": "Give me a list of the names of all songs ordered by their resolution.", "query": "SELECT song_name FROM song ORDER BY resolution", "arabic": "ما هي أسماء جميع الأغاني التي تم ترتيبها حسب أرقام دقتها؟", "db_id": "music_1"}
{"question": "What are the names of all songs that are ordered by their resolution numbers?", "query": "SELECT song_name FROM song ORDER BY resolution", "arabic": "ما هي مُعرفات الأغاني المتوفرة إما بتنسيق mp4 أو لديها دقة أعلى من 720؟", "db_id": "music_1"}
{"question": "What are the ids of songs that are available in either mp4 format or have resolution above 720?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720", "arabic": "ما هي مُعرّفات جميع الأغاني المتاحة على تنسيق mp4 أو لديها دقة أعلى من 720؟", "db_id": "music_1"}
{"question": "What are the ids of all songs that are available on mp4 or have a higher resolution than 720?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720", "arabic": "ما هي قائمة أسماء جميع الأغاني التي تستمر لمدة 4 دقائق أو تكون باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "List the names of all songs that have 4 minute duration or are in English.", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\"", "arabic": "ما هي أسماء جميع الأغاني التي تستمر لمدة تقريبية 4 دقائق أو تكون باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the names of all songs that are approximately 4 minutes long or are in English?", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\"", "arabic": "ما هي اللغة المستخدمة بشكل أكثر شيوعًا في الأغاني؟", "db_id": "music_1"}
{"question": "What is the language used most often in the songs?", "query": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي اللغات التي يتم استخدامها بشكل أكثر شيوعًا في الأغاني؟", "db_id": "music_1"}
{"question": "What are the languages that are used most often in songs?", "query": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي اللغة التي تم استخدامها بشكل أكثر شيوعًا في الأغاني التي تحمل دقة أعلى من 500؟", "db_id": "music_1"}
{"question": "What is the language that was used most often in songs with resolution above 500?", "query": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم الفنان، لكل لغة، الذي يمتلك أكثر عدد من الأغاني بدقة أعلى من 500؟", "db_id": "music_1"}
{"question": "What is the name of the artist, for each language, that has the most songs with a higher resolution than 500?", "query": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء الفنانين الذكور الذين ينتمون إلى المملكة المتحدة؟", "db_id": "music_1"}
{"question": "What are the names of artists who are Male and are from UK?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"", "arabic": "ما هي أسماء جميع الفنانين البريطانيين الذكور؟", "db_id": "music_1"}
{"question": "What are the names of all male British artists?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"", "arabic": "ما هي أسماء الأغاني التي يكون نوعها معاصرًا أو لغتها الإنجليزية؟", "db_id": "music_1"}
{"question": "Find the names of songs whose genre is modern or language is English.", "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"", "arabic": "ما هي أسماء الأغاني التي هي معاصرة أو تُغنى باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the names of the songs that are modern or sung in English?", "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"", "arabic": "ما هي أسماء الأغاني التي يكون تنسيقها mp3 ودقتها أقل من 1000؟", "db_id": "music_1"}
{"question": "Return the names of songs for which format is mp3 and resolution is below 1000.", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000", "arabic": "ما هي أسماء جميع الأغاني التي تكون بتنسيق mp3 وتمتلك دقة أقل من 1000؟", "db_id": "music_1"}
{"question": "What are the names of all songs that are in mp3 format and have a resolution lower than 1000?", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000", "arabic": "ما هي أسماء المطربين الذين ينتمون إلى المملكة المتحدة وأصدروا أغنية باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "Return the names of singers who are from UK and released an English song.", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"", "arabic": "ما هي أسماء جميع المطربين الذين ينتمون إلى المملكة المتحدة وقد أصدروا أغنية باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the names of all singers that are from the UK and released a song in English?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"", "arabic": "ما هي التقييم والدقة المتوسطة للأغاني التي تكون باللغة البنغالية؟", "db_id": "music_1"}
{"question": "What are the average rating and resolution of songs that are in Bangla?", "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"", "arabic": "ما هي التقييم والدقة المتوسطة لجميع الأغاني البنغالية؟", "db_id": "music_1"}
{"question": "What is the average rating and resolution of all bangla songs?", "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"", "arabic": "ما هي الدقة القصوى والدقة الدنيا للأغاني التي تستمر لمدة 3 دقائق؟", "db_id": "music_1"}
{"question": "What are the maximum and minimum resolution of songs whose duration is 3 minutes?", "query": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"", "arabic": "ما هي الدقة القصوى والدقة الدنيا لجميع الأغاني التي تستمر لمدة تقريبية 3 دقائق؟", "db_id": "music_1"}
{"question": "What is the maximum and minimum resolution of all songs that are approximately 3 minutes long?", "query": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"", "arabic": "ما هي المدة القصوى والدقة القصوى للأغاني مُجمعة ومرتبة حسب اللغات؟", "db_id": "music_1"}
{"question": "What are the maximum duration and resolution of songs grouped and ordered by languages?", "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages", "arabic": "ما هي المدة القصوى والدقة القصوى لجميع الأغاني، لكل لغة، مرتبة أبجديًا حسب اللغة؟", "db_id": "music_1"}
{"question": "What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?", "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages", "arabic": "ما هي أقصر مدة وأدنى تقييم للأغاني، مُجمعة حسب النوع، ومرتبة حسب النوع؟", "db_id": "music_1"}
{"question": "What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is", "arabic": "ما هي أقصر الأغاني وأقل تقييمًا لكل نوع، مرتبة أبجديًا حسب النوع؟", "db_id": "music_1"}
{"question": "What is the shortest and most poorly rated song for each genre, ordered alphabetically by genre?", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is", "arabic": "ما هي أسماء وعدد أعمال جميع الفنانين الذين لديهم على الأقل أغنية واحدة باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "Find the names and number of works of all artists who have at least one English songs.", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "arabic": "ما هي أسماء وعدد الأعمال لجميع الفنانين الذين قاموا بغناء على الأقل أغنية واحدة باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the names and number of works for all artists who have sung at least one song in English?", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "arabic": "ما هو اسم الفنان وبلد الأصل لجميع الفنانين الذين قاموا بإصدار على الأقل أغنية بدقة تتجاوز 900؟", "db_id": "music_1"}
{"question": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1", "arabic": "ما هو اسم الفنان وبلد الأصل لكل فنان قام بإصدار أغنية بدقة أعلى من 900؟", "db_id": "music_1"}
{"question": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1", "arabic": "ما هي أسماء وعدد أعمال أكثر ثلاثة فنانين قاموا بإنتاج الأغاني؟", "db_id": "music_1"}
{"question": "Find the names and number of works of the three artists who have produced the most songs.", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هي أسماء الفنانين الثلاثة الذين قاموا بإنتاج أكبر عدد من الأعمال، وكم عدد الأعمال التي قاموا بإنتاجها؟", "db_id": "music_1"}
{"question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هو بلد الأصل للفنان الذي أنتج أقل عدد من الأغاني؟", "db_id": "music_1"}
{"question": "Find the country of origin for the artist who made the least number of songs?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1", "arabic": "ما هو بلد الفنان الذي أنتج أقل عدد من الأغاني؟", "db_id": "music_1"}
{"question": "What country is the artist who made the fewest songs from?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1", "arabic": "ما هي أسماء الأغاني التي يكون تقييمها أقل من تقييم جميع الأغاني باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What are the names of the songs whose rating is below the rating of all songs in English?", "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')", "arabic": "ما هي أسماء الأغاني لكل أغنية يكون تقييمها أقل من أدنى تقييم للأغاني باللغة الإنجليزية؟", "db_id": "music_1"}
{"question": "What is the id of every song that has a resolution higher than that of a song with a rating below 8?", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)", "arabic": "ما هي معرفات ال", "db_id": "music_1"}
{"question": "What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre?", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")", "arabic": "1. ما هو معرف كل أغنية لديها دقة أعلى من ذلك لأغنية لها تقييم أقل من 8؟\n2. ما هي معرفات الأغاني التي تكون فيها الدقة أعلى من متوسط الدقة في نوع الأغاني الحديث؟\n3. ما هي معرفات جميع الأغاني التي تحتوي على دقة أعلى من متوسط الدقة في نوع الأغاني الحديث؟", "db_id": "music_1"}
{"question": "What are the ids of all songs that have higher resolution of the average resolution in the modern genre?", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")", "arabic": "ما هي أعلى 3 فنانين لديهم أكبر عدد من الأعمال الغنائية باللغة البنغالية؟", "db_id": "music_1"}
{"question": "Find the top 3 artists who have the largest number of songs works whose language is Bangla.", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هي أعلى 3 فنانين لديهم أكبر عدد من الأغاني باللغة البنغالية؟", "db_id": "music_1"}
{"question": "What are the top 3 artists with the largest number of songs in the language Bangla?", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هي قائمة معرفات الأغاني والأنواع وأسماء الفنانين للأغاني الإنجليزية مرتبة حسب التقييم؟", "db_id": "music_1"}
{"question": "List the id, genre and artist name of English songs ordered by rating.", "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating", "arabic": "ما هو معرف الأغنية والنوع واسم الفنان لكل أغنية إنجليزية مرتبة حسب التقييم بترتيب تصاعدي؟", "db_id": "music_1"}
{"question": "What is the id, genre, and name of the artist for every English song ordered by ascending rating?", "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating", "arabic": "ما هو مدة الأغنية وحجم الملف والتنسيق للأغاني التي يكون نوعها \"بوب\"، مرتبة حسب العنوان؟", "db_id": "music_1"}
{"question": "List the duration, file size and format of songs whose genre is pop, ordered by title?", "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name", "arabic": "ما هي مدة الأغنية وحجم الملف وتنسيق الأغنية لكل أغنية \"بوب\"، مرتبة حسب العنوان أبجديًا؟", "db_id": "music_1"}
{"question": "What is the duration, file size, and song format for every pop song, ordered by title alphabetically?", "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name", "arabic": "ما هي أسماء الفنانين الذين قاموا بإنتاج أغاني إنجليزية ولم يتلقوا تقييمًا يزيد عن 8؟", "db_id": "music_1"}
{"question": "Find the names of the artists who have produced English songs but have never received rating higher than 8.", "query": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8", "arabic": "ما هي أسماء الفنانين المختلفين الذين قاموا بإنتاج أغنية باللغة الإنجليزية ولم يتلقوا تقييمًا يزيد عن 8؟", "db_id": "music_1"}
{"question": "What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8?", "query": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8", "arabic": "ما هي أسماء الفنانين الذين هم من بنغلاديش ولم يتلقوا تقييمًا يزيد عن 7؟", "db_id": "music_1"}
{"question": "Find the names of the artists who are from Bangladesh and have never received rating higher than 7.", "query": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7", "arabic": "ما هي أسماء الفنانين المختلفين من بنغلاديش الذين لم يتلقوا تقييمًا أعلى من 7؟", "db_id": "music_1"}
{"question": "What are the names of the different artists from Bangladesh who never received a rating higher than a 7?", "query": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7", "arabic": "ما هو الاسم الكامل والمعرف للكلية التي تمتلك أكبر عدد من لاعبي البيسبول؟", "db_id": "music_1"}
{"question": "what is the full name and id of the college with the largest number of baseball players?", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;", "arabic": "ما هو الاسم الكامل والمعرف للكلية التي تمتلك أكبر عدد من لاعبي البيسبول؟", "db_id": "baseball_1"}
{"question": "Find the full name and id of the college that has the most baseball players.", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;", "arabic": "ما هو متوسط راتب اللاعبين في الفريق المسمى \"بوسطن ريد ستوكينجز\"؟", "db_id": "baseball_1"}
{"question": "What is average salary of the players in the team named 'Boston Red Stockings' ?", "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'", "arabic": "ما هو متوسط رواتب اللاعبين في الفريق المسمى \"بوسطن ريد ستوكينجز\"؟", "db_id": "baseball_1"}
{"question": "Compute the average salary of the players in the team called 'Boston Red Stockings'.", "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'", "arabic": "ما هي الأسماء الأولى والأخيرة للاعبين المشاركين في مباراة النجوم في عام 1998؟", "db_id": "baseball_1"}
{"question": "What are first and last names of players participating in all star game in 1998?", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998", "arabic": "اكتب الاسم الأول والأخير للاعبين الذين شاركوا في مباراة النجوم في عام 1998.", "db_id": "baseball_1"}
{"question": "List the first and last name for players who participated in all star game in 1998.", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998", "arabic": "ما هي الاسم الأول، الاسم الأخير والمعرف للاعب الذي لديه أكبر تجارب في مباريات النجوم؟ كما يتم سرد العدد.", "db_id": "baseball_1"}
{"question": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count.", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "arabic": "أي لاعب لديه أكبر تجارب في مباريات النجوم؟ أعطني الاسم الأول، الاسم الأخير والمعرف للاعب، بالإضافة إلى عدد مرات مشاركة اللاعب في مباراة النجوم.", "db_id": "baseball_1"}
{"question": "Which player has the most all star game experiences? Give me the first name, last name and id of the player, as well as the number of times the player participated in all star game.", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "arabic": "كم لاعبا يدخلون قاعة المشاهير كل عام؟", "db_id": "baseball_1"}
{"question": "How many players enter hall of fame each year?", "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;", "arabic": "عدد اللاعبين الذين يدخلون قاعة المشاهير لكل عام؟", "db_id": "baseball_1"}
{"question": "Count the number of players who enter hall of fame for each year.", "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;", "arabic": "ما هو متوسط عدد الحضور في مباريات الفريق المحلية لكل عام؟", "db_id": "baseball_1"}
{"question": "What is the average number of attendance at home games for each year?", "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;", "arabic": "لكل عام، ما هو العام ومتوسط عدد الحضور في مباريات الفريق المحلية؟", "db_id": "baseball_1"}
{"question": "For each year, return the year and the average number of attendance at home games.", "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;", "arabic": "في عام 2014، ما هو الرقم التعريفي والتصنيف للفريق الذي يمتلك أكبر متوسط عدد من الحضور؟", "db_id": "baseball_1"}
{"question": "What are the manager's first name, last name and id who won the most manager award?", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;", "arabic": "أي مدير فاز بأكبر عدد من جوائز المدير؟ قدم لي الاسم الأول والاسم الأخير والهوية الخاصة بالمدير.", "db_id": "baseball_1"}
{"question": "Which manager won the most manager award? Give me the manager's first name, last name and id.", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;", "arabic": "كم عدد الحدائق في ولاية نيويورك؟", "db_id": "baseball_1"}
{"question": "How many parks are there in the state of NY?", "query": "SELECT count(*) FROM park WHERE state  =  'NY';", "arabic": "أرني عدد الحدائق التي تمتلكها ولاية نيويورك.", "db_id": "baseball_1"}
{"question": "Show me the number of parks the state of NY has.", "query": "SELECT count(*) FROM park WHERE state  =  'NY';", "arabic": "أي اللاعبين الثلاثة فازوا بأكبر عدد من جوائز اللاعب؟ قم بسرد أسمائهم الكاملة وهوياتهم.", "db_id": "baseball_1"}
{"question": "Which 3 players won the most player awards? List their full name and id.", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;", "arabic": "ابحث عن الاسم الأول والاسم الأخير والهوية لأفضل ثلاثة لاعبين فازوا بأكبر عدد من جوائز اللاعب.", "db_id": "baseball_1"}
{"question": "Find the first name, last name and id for the top three players won the most player awards.", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;", "arabic": "اذكر ثلاث دول هي أصل أقل عدد من اللاعبين.", "db_id": "baseball_1"}
{"question": "List three countries which are the origins of the least players.", "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;", "arabic": "ما هي الدول الثلاث التي يأتي منها أقل عدد من اللاعبين؟", "db_id": "baseball_1"}
{"question": "What are the three countries that the least players are from?", "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;", "arabic": "ابحث عن أسماء اللاعبين الأولى والأخيرة الذين لديهم سجل وفاة فارغ.", "db_id": "baseball_1"}
{"question": "Find all the players' first name and last name who have empty death record.", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';", "arabic": "ما هي الأسماء الأولى والأخيرة للاعبين الذين تكون سجلات وفاتهم فارغة؟", "db_id": "baseball_1"}
{"question": "What are the first name and last name of the players whose death record is empty?", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';", "arabic": "كم عدد اللاعبين المولودين في الولايات المتحدة الأمريكية والذين هم من الضرب باليد اليمنى؟ أي أن لديهم قيمة \"R\" كلاعبين للضرب.", "db_id": "baseball_1"}
{"question": "How many players born in USA are right-handed batters? That is, have the batter value 'R'.", "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';", "arabic": "عدد اللاعبين الذين وُلدوا في الولايات المتحدة الأمريكية ويحملون معلومات عن الضرب باليد اليمنى \"R\".", "db_id": "baseball_1"}
{"question": "Count the number of players who were born in USA and have bats information 'R'.", "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';", "arabic": "ما هو متوسط طول اللاعبين الذين ينتمون إلى الكلية المسماة \"جامعة ييل\"؟", "db_id": "baseball_1"}
{"question": "What is the average height of the players from the college named 'Yale University'?", "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';", "arabic": "ابحث عن متوسط طول اللاعبين الذين ينتمون إلى الكلية المعروفة باسم \"جامعة ييل\".", "db_id": "baseball_1"}
{"question": "Find the average height of the players who belong to the college called 'Yale University'.", "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';", "arabic": "ما هو أعلى راتب في كل فريق؟ قم بسرد اسم الفريق والهوية والراتب الأقصى.", "db_id": "baseball_1"}
{"question": "What is the highest salary among each team? List the team name, id and maximum salary.", "query": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;", "arabic": "لكل فريق، أرجو إعادة اسم الفريق والهوية وأعلى راتب في الفريق.", "db_id": "baseball_1"}
{"question": "For each team, return the team name, id and the maximum salary among the team.", "query": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;", "arabic": "ما هي الاسم والهوية للفريق الذي يقدم أدنى متوسط راتب؟", "db_id": "baseball_1"}
{"question": "What are the name and id of the team offering the lowest average salary?", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;", "arabic": "أي فريق يقدم أدنى متوسط راتب؟ قدم لي اسم الفريق والهوية الخاصة به.", "db_id": "baseball_1"}
{"question": "Which team offers the lowest average salary? Give me the name and id of the team.", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;", "arabic": "ابحث عن الأسماء الأولى والأخيرة للاعبين الذين فازوا بجوائز في كل من عام 1960 وعام 1961.", "db_id": "baseball_1"}
{"question": "Find the players' first name and last name who won award both in 1960 and in 1961.", "query": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961", "arabic": "أي لاعبين فازوا بجوائز في كل من عام 1960 وعام 1961؟ الرجاء إعادة أسمائهم الأولى والأخيرة.", "db_id": "baseball_1"}
{"question": "Which players won awards in both 1960 and 1961? Return their first names and last names.", "query": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961", "arabic": "سجل أسماء اللاعبين الأولى والأخيرة الذين يمتلكون وزنًا أكبر من 220 أو طولًا أقل من 75.", "db_id": "baseball_1"}
{"question": "List players' first name and last name who have weight greater than 220 or height shorter than 75.", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "arabic": "ما هي الأسماء الأولى والأخيرة لللاعبين الذين يمتلكون وزنًا فوق 220 أو طولًا أقل من 75؟", "db_id": "baseball_1"}
{"question": "What are the first name and last name of the players who have weight above 220 or height below 75?", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "arabic": "سجل أقصى نقاط لفريق بوسطن ريد ستوكينغز عندما فاز الفريق في مرحلة ما بعد الموسم؟", "db_id": "baseball_1"}
{"question": "List the maximum scores of the team Boston Red Stockings when the team won in postseason?", "query": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';", "arabic": "ما هي أقصى النقاط التي حصل عليها فريق بوسطن ريد ستوكينغز عندما فاز الفريق في مرحلة ما بعد الموسم؟", "db_id": "baseball_1"}
{"question": "What are the maximum scores the team Boston Red Stockings got when the team won in postseason?", "query": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';", "arabic": "كم مرة خسر فريق بوسطن ريد ستوكينغز في مرحلة ما بعد الموسم في عام 2009؟", "db_id": "baseball_1"}
{"question": "How many times did Boston Red Stockings lose in 2009 postseason?", "query": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;", "arabic": "عدد مرات خسارة فريق \"بوسطن ريد ستوكينغز\" في مرحلة ما بعد الموسم في عام 2009.", "db_id": "baseball_1"}
{"question": "Count the number of times the team \"Boston Red Stockings\" lost in 2009 postseason.", "query": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;", "arabic": "ما هي الاسم والهوية للفريق الذي حقق أكبر عدد من الانتصارات في مرحلة ما بعد الموسم في عام 2008؟", "db_id": "baseball_1"}
{"question": "What are the name and id of the team with the most victories in 2008 postseason?", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "arabic": "ابحث عن اسم وهوية الفريق الذي فاز بأكبر عدد من المرات في مرحلة ما بعد الموسم في عام 2008.", "db_id": "baseball_1"}
{"question": "Find the name and id of the team that won the most times in 2008 postseason.", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "arabic": "ما هو عدد الانتصارات التي حققها فريق \"بوسطن ريد ستوكينغز\" في مراحل ما بعد الموسم كل عام في التاريخ؟", "db_id": "baseball_1"}
{"question": "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history?", "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year", "arabic": "لكل عام، أرجو إعادة العام وعدد مرات فوز فريق \"بوسطن ريد ستوكينغز\" في مراحل ما بعد الموسم.", "db_id": "baseball_1"}
{"question": "For each year, return the year and the number of times the team Boston Red Stockings won in the postseasons.", "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year", "arabic": "ما هو إجمالي عدد مباريات مرحلة ما بعد الموسم التي شارك فيها فريق \"بوسطن ريد ستوكينغز\"؟", "db_id": "baseball_1"}
{"question": "What is the total number of postseason games that team Boston Red Stockings participated in?", "query": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );", "arabic": "كم مرة شارك فريق \"بوسطن ريد ستوكينغز\" في مباريات مرحلة ما بعد الموسم بشكل إجمالي؟", "db_id": "baseball_1"}
{"question": "How many times in total did the team Boston Red Stockings participate in postseason games?", "query": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );", "arabic": "كم مباراة في مرحلة ما بعد الموسم في عام 1885 انتهت بالتعادل (أي أن قيمة \"ties\" هي '1')؟", "db_id": "baseball_1"}
{"question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?", "query": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;", "arabic": "ابحث عن عدد المباريات التي انتهت بالتعادل (أي أن قيمة \"ties\" هي '1') في مرحلة ما بعد الموسم في عام 1885.", "db_id": "baseball_1"}
{"question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.", "query": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;", "arabic": "ما هو إجمالي الراتب الذي دفعه فريق \"بوسطن ريد ستوكينغز\" في عام 2010؟", "db_id": "baseball_1"}
{"question": "What is the total salary paid by team Boston Red Stockings in 2010?", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010", "arabic": "ما هي نفقات الراتب الإجمالية لفريق Boston Red Stockings في عام 2010؟", "db_id": "baseball_1"}
{"question": "What is the total salary expenses of team Boston Red Stockings in 2010?", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010", "arabic": "كم كان عدد اللاعبين في فريق Boston Red Stockings في عام 2000؟", "db_id": "baseball_1"}
{"question": "How many players were in the team Boston Red Stockings in 2000?", "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000", "arabic": "كم كان عدد اللاعبين الذين كانوا في فريق Boston Red Stockings في عام 2000؟", "db_id": "baseball_1"}
{"question": "How many players did Boston Red Stockings have in 2000?", "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000", "arabic": "اذكر أعلى 3 رواتب للاعبين في عام 2001؟", "db_id": "baseball_1"}
{"question": "List the 3 highest salaries of the players in 2001?", "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;", "arabic": "كم كان راتب أعلى 3 لاعبين مأجورين في عام 2001؟", "db_id": "baseball_1"}
{"question": "How much salary did the top 3 well-paid players get in 2001?", "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;", "arabic": "ما هي جميع قيم الرواتب للاعبين في عامي 2010 و 2001؟", "db_id": "baseball_1"}
{"question": "What were all the salary values of players in 2010 and 2001?", "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001", "arabic": "اذكر جميع قيم الرواتب التي تلقاها اللاعبون في عامي 2010 و 2001؟", "db_id": "baseball_1"}
{"question": "List all the salary values players received in 2010 and 2001.", "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001", "arabic": "في أي عام دخل أقل عدد من الأشخاص في قاعة المشاهير؟", "db_id": "baseball_1"}
{"question": "In which year did the least people enter hall of fame?", "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;", "arabic": "ابحث عن العام الذي دخل فيه أقل عدد من الأشخاص في قاعة المشاهير.", "db_id": "baseball_1"}
{"question": "Find the year in which the least people enter hall of fame.", "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;", "arabic": "كم هو عدد الحدائق في مدينة أتلانتا؟", "db_id": "baseball_1"}
{"question": "How many parks are there in Atlanta city?", "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';", "arabic": "كم عدد الحدائق التي تمتلكها مدينة أتلانتا؟", "db_id": "baseball_1"}
{"question": "How many parks does Atlanta city have?", "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';", "arabic": "كم عدد المباريات التي لعبت في ملعب \"Columbia Park\" في عام 1907؟", "db_id": "baseball_1"}
{"question": "How many games were played in park \"Columbia Park\" in 1907?", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';", "arabic": "حساب عدد المباريات التي أُقيمت في ملعب \"Columbia Park\" في عام 1907.", "db_id": "baseball_1"}
{"question": "Count the number of games taken place in park \"Columbia Park\" in 1907.", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';", "arabic": "كم كان عدد المباريات التي لعبت في مدينة أتلانتا في عام 2000؟", "db_id": "baseball_1"}
{"question": "How many games were played in city Atlanta in 2000?", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';", "arabic": "ابحث عن عدد المباريات التي أُقيمت في مدينة أتلانتا في عام 2000.", "db_id": "baseball_1"}
{"question": "Find the number of games taken place in city Atlanta in 2000.", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';", "arabic": "ما هو إجمالي حضور الجماهير في المباريات الداخلية لفريق Boston Red Stockings من عام 2000 إلى 2010؟", "db_id": "baseball_1"}
{"question": "What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?", "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;", "arabic": "كم كان إجمالي عدد المباريات التي حضرها فريق Boston Red Stockings من عام 2000 إلى 2010؟", "db_id": "baseball_1"}
{"question": "How many games in total did team Boston Red Stockings attend from 2000 to 2010?", "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;", "arabic": "كم كان إجمالي ربح اللاعب الذي يحمل الاسم الأول Len والاسم الأخير Barker بين عامي 1985 و 1990؟", "db_id": "baseball_1"}
{"question": "How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;", "arabic": "حساب الراتب الإجمالي الذي تلقاه اللاعب الذي يحمل الاسم الأول Len والاسم الأخير Barker بين عامي 1985 و 1990.", "db_id": "baseball_1"}
{"question": "Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990.", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;", "arabic": "اذكر أسماء اللاعبين، الاسم الأول والاسم الأخير، الذين تلقوا رواتب من فريق Washington Nationals في كل من عامي 2005 و 2007.", "db_id": "baseball_1"}
{"question": "List players' first name and last name who received salary from team Washington Nationals in both 2005 and 2007.", "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'", "arabic": "\"ما هي الأسماء الأولى والأخيرة للاعبين الذين تم دفع رواتب لهم من قبل فريق واشنطن ناشيونالز في عامي 2005 و 2007؟\"", "db_id": "baseball_1"}
{"question": "What are the first name and last name of the players who were paid salary by team Washington Nationals in both 2005 and 2007?", "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'", "arabic": "\"كم مباراة منزلية لعب فريق بوسطن ريد ستوكينغز من عام 1990 إلى عام 2000 بإجمالي؟\"", "db_id": "baseball_1"}
{"question": "How many home games did the team Boston Red Stockings play from 1990 to 2000 in total?", "query": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;", "arabic": "\"حساب إجمالي عدد المباريات التي حضرها فريق بوسطن ريد ستوكينغز من عام 1990 إلى عام 2000.\"", "db_id": "baseball_1"}
{"question": "Count the total number of games the team Boston Red Stockings attended from 1990 to 2000.", "query": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;", "arabic": "\"أي فريق كان لديه أقل عدد من الحضور في المباريات المنزلية في عام 1980؟\"", "db_id": "baseball_1"}
{"question": "Which team had the least number of attendances in home games in 1980?", "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;", "arabic": "\"العثور على الفريق الذي حضر أقل عدد من المباريات المنزلية في عام 1980.\"", "db_id": "baseball_1"}
{"question": "Find the team that attended the least number of home games in 1980.", "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;", "arabic": "\"قائمة أسماء الولايات التي تحتوي على أكثر من حديقتين.\"", "db_id": "baseball_1"}
{"question": "List the names of states that have more than 2 parks.", "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;", "arabic": "\"أي الولايات تحتوي على أكثر من حديقتين؟\"", "db_id": "baseball_1"}
{"question": "Which states have more than 2 parks?", "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;", "arabic": "\"كم عدد الفرق الرياضية التي تعمل حاليًا، بقيمة 'Y' نشطة؟\"", "db_id": "baseball_1"}
{"question": "How many team franchises are active, with active value 'Y'?", "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';", "arabic": "\"العثور على عدد الفرق الرياضية التي هي نشطة (تحتوي على 'Y' كمعلومات 'active').\"", "db_id": "baseball_1"}
{"question": "Find the number of team franchises that are active (have 'Y' as \"active\" information).", "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';", "arabic": "\"أي المدن التي تحتوي على 2 إلى 4 حدائق؟\"", "db_id": "baseball_1"}
{"question": "Which cities have 2 to 4 parks?", "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;", "arabic": "\"العثور على جميع المدن التي تحتوي على 2 إلى 4 حدائق.\"", "db_id": "baseball_1"}
{"question": "Find all the cities that have 2 to 4 parks.", "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;", "arabic": "\"أي حديقة حظيت بأكبر حضور في عام 2008؟\"", "db_id": "baseball_1"}
{"question": "Which park had most attendances in 2008?", "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;", "arabic": "\"أي حديقة حضرها أكبر عدد من الأشخاص في عام 2008؟\"", "db_id": "baseball_1"}
{"question": "Which park did the most people attend in 2008?", "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;", "arabic": "\"كم عدد عدسات الكاميرا التي تمتلك طول بؤري أطول من 15 ملم؟\"", "db_id": "baseball_1"}
{"question": "How many camera lenses have a focal length longer than 15 mm?", "query": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15", "arabic": "\"العثور على العلامة التجارية والاسم لكل عدسة كاميرا، وترتيبها بترتيب تنازلي حسب الفتحة القصوى.\"", "db_id": "mountain_photos"}
{"question": "Find the brand and name for each camera lens, and sort in descending order of maximum aperture.", "query": "SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC", "arabic": "\"قائمة بالمعرف، ونظام الألوان، والاسم لجميع الصور.\"", "db_id": "mountain_photos"}
{"question": "List the id, color scheme, and name for all the photos.", "query": "SELECT id ,  color ,  name FROM photos", "arabic": "\"ما هي أقصى ارتفاع وارتفاع متوسط للجبال؟\"", "db_id": "mountain_photos"}
{"question": "What are the maximum and average height of the mountains?", "query": "SELECT max(height) ,  avg(height) FROM mountain", "arabic": "\"ما هو ارتفاع البروز المتوسط للجبال في البلد 'المغرب'؟\"", "db_id": "mountain_photos"}
{"question": "What are the average prominence of the mountains in country 'Morocco'?", "query": "SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'", "arabic": "\"ما هي الأسماء والارتفاع والبروز للجبال التي لا تنتمي إلى سلسلة 'Aberdare Range'؟\"", "db_id": "mountain_photos"}
{"question": "What are the name, height and prominence of mountains which do not belong to the range 'Aberdare Range'?", "query": "SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'", "arabic": "\"ما هي المعرف والاسم للصور الخاصة بالجبال؟\"", "db_id": "mountain_photos"}
{"question": "What are the id and name of the photos for mountains?", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000", "arabic": "\"ما هي المعرف والاسم للجبال التي تحتوي على ما لا يقل عن صورتين؟\"", "db_id": "mountain_photos"}
{"question": "What are the id and name of the mountains that have at least 2 photos?", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2", "arabic": "\"ما هي أسماء الكاميرات التي التقطت صوراً لمعظم الجبال؟\"", "db_id": "mountain_photos"}
{"question": "What are the names of the cameras that have taken picture of the most mountains?", "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ما هي أسماء الصور التي تم التقاطها بواسطة عدسة العلامة التجارية 'Sigma' أو 'Olympus'؟\"", "db_id": "mountain_photos"}
{"question": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?", "query": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'", "arabic": "\"كم عدد أنواع مختلفة من علامات العدسات موجودة؟\"", "db_id": "mountain_photos"}
{"question": "How many different kinds of lens brands are there?", "query": "SELECT count(DISTINCT brand) FROM camera_lens", "arabic": "\"كم عدد عدسات الكاميرا التي لم يتم استخدامها في التقاط أي صور؟\"", "db_id": "mountain_photos"}
{"question": "How many camera lenses are not used in taking any photos?", "query": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )", "arabic": "\"كم عدد أنواع العدسات المختلفة التي تستخدم لتصوير الجبال في البلد 'إثيوبيا'؟\"", "db_id": "mountain_photos"}
{"question": "How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'?", "query": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'", "arabic": "\"قائمة بعلامات العدسات التي التقطت صورة للجبال في سلسلة 'Toubkal Atlas' وصورة للجبال في سلسلة 'Lasta Massif'.\"", "db_id": "mountain_photos"}
{"question": "List the brands of lenses that took both a picture of mountains with range 'Toubkal Atlas' and a picture of mountains with range 'Lasta Massif'", "query": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'", "arabic": "\"عرض الاسم والبروز للجبال التي لم يتم التقاط صورة لها بواسطة عدسة من علامة 'Sigma'.\"", "db_id": "mountain_photos"}
{"question": "Show the name and prominence of the mountains whose picture is not taken by a lens of brand 'Sigma'.", "query": "SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  'Sigma'", "arabic": "\"قائمة بأسماء عدسات الكاميرا التي تحتوي على متغير فرعي 'Digital'.\"", "db_id": "mountain_photos"}
{"question": "List the camera lens names containing substring \"Digital\".", "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"", "arabic": "\"ما هو اسم كل عدسة كاميرا وعدد الصور التي تم التقاطها بها؟ قم بترتيب النتيجة حسب عدد الصور.\"", "db_id": "mountain_photos"}
{"question": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.", "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)", "arabic": "\"العثور على أسماء القنوات التي لا تمتلكها CCTV.\"", "db_id": "mountain_photos"}
{"question": "Find the names of channels that are not owned by CCTV.", "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'", "arabic": "\"أي القنوات لا تمتلكها CCTV؟ قدم لي أسماء القنوات.\"", "db_id": "program_share"}
{"question": "Which channels are not owned by CCTV? Give me the channel names.", "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'", "arabic": "\"قائمة بأسماء جميع القنوات مرتبة حسب تصنيفها بالنسبة المئوية من الأكبر إلى الأصغر.\"", "db_id": "program_share"}
{"question": "List all channel names ordered by their rating in percent from big to small.", "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC", "arabic": "\"قدم لي قائمة بأسماء جميع القنوات مرتبة حسب تصنيف القناة بترتيب تنازلي.\"", "db_id": "program_share"}
{"question": "Give me a list of all the channel names sorted by the channel rating in descending order.", "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC", "arabic": "\"من هو مالك القناة التي تحمل أعلى نسبة تقييم؟\"", "db_id": "program_share"}
{"question": "What is the owner of the channel that has the highest rating ratio?", "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1", "arabic": "\"أرني مالك القناة ذات التقييم الأعلى.\"", "db_id": "program_share"}
{"question": "Show me the owner of the channel with the highest rating.", "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1", "arabic": "\"كم عدد البرامج؟\"", "db_id": "program_share"}
{"question": "how many programs are there?", "query": "SELECT count(*) FROM program", "arabic": "\"عدد البرامج هو كم؟\"", "db_id": "program_share"}
{"question": "Count the number of programs.", "query": "SELECT count(*) FROM program", "arabic": "\"قائمة بأسماء جميع البرامج، مرتبة حسب وقت الإطلاق.\"", "db_id": "program_share"}
{"question": "list all the names of programs, ordering by launch time.", "query": "SELECT name FROM program ORDER BY launch", "arabic": "\"ما هو قائمة أسماء البرامج، مرتبة حسب ترتيب تاريخ الإطلاق؟\"", "db_id": "program_share"}
{"question": "What is the list of program names, sorted by the order of launch date?", "query": "SELECT name FROM program ORDER BY launch", "arabic": "\"قائمة بأسماء ومصدر ومالك كل برنامج.\"", "db_id": "program_share"}
{"question": "List the name, origin and owner of each program.", "query": "SELECT name ,  origin ,  OWNER FROM program", "arabic": "\"ما هي أسماء ومصدر ومالك كل برنامج؟\"", "db_id": "program_share"}
{"question": "What are the name, origin and owner of each program?", "query": "SELECT name ,  origin ,  OWNER FROM program", "arabic": "\"العثور على اسم البرنامج الذي تم إطلاقه مؤخرًا بشكل أكبر.\"", "db_id": "program_share"}
{"question": "find the name of the program that was launched most recently.", "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1", "arabic": "\"أي برنامج تم إطلاقه مؤخرًا بشكل أكبر؟ الرجاء إرجاع اسم البرنامج.\"", "db_id": "program_share"}
{"question": "Which program was launched most recently? Return the program name.", "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1", "arabic": "\"العثور على الحصة الإجمالية في النسبة المئوية لجميع القنوات التي تمتلكها CCTV.\"", "db_id": "program_share"}
{"question": "find the total percentage share of all channels owned by CCTV.", "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'", "arabic": "\"ما هي الحصة الإجمالية (بالنسبة المئوية) لجميع القنوات التي تمتلكها CCTV؟\"", "db_id": "program_share"}
{"question": "What is the total share (in percent) of all the channels owned by CCTV?", "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'", "arabic": "\"العثور على أسماء القنوات التي تبث في الصباح.\"", "db_id": "program_share"}
{"question": "Find the names of the channels that are broadcast in the morning.", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'", "arabic": "\"القنوات التي تُبث في الصباح؟ الرجاء إعطائي أسماء القنوات.\"", "db_id": "program_share"}
{"question": "Which channels are broadcast in the morning? Give me the channel names.", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'", "arabic": "\"ما هي أسماء القنوات التي تُبث في الصباح والليل؟\"", "db_id": "program_share"}
{"question": "what are the names of the channels that broadcast in both morning and night?", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'", "arabic": "\"ما هي القنوات التي تُبث في الصباح وفي الليل؟ قدم لي أسماء القنوات.\"", "db_id": "program_share"}
{"question": "Which channels broadcast both in the morning and at night? Give me the channel names.", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'", "arabic": "\"كم برنامج يتم بثه في كل فترة من فترات اليوم؟\"", "db_id": "program_share"}
{"question": "how many programs are broadcast in each time section of the day?", "query": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day", "arabic": "\"عدد البرامج التي تُبث في كل فترة من فترات اليوم؟\"", "db_id": "program_share"}
{"question": "Count the number of programs broadcast for each time section of a day.", "query": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day", "arabic": "\"ابحث عن عدد البرامج المختلفة التي تُبث خلال فترة الليل؟\"", "db_id": "program_share"}
{"question": "find the number of different programs that are broadcast during night time.", "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'", "arabic": "\"كم برنامج متميز يتم بثه في وقت 'الليل'؟\"", "db_id": "program_share"}
{"question": "How many distinct programs are broadcast at \"Night\" time?", "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'", "arabic": "\"ابحث عن أسماء البرامج التي لا يتم بثها أبدًا في فترة الصباح؟\"", "db_id": "program_share"}
{"question": "Find the names of programs that are never broadcasted in the morning.", "query": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\"", "arabic": "\"ما هي البرامج التي لا يتم بثها أبدًا في فترة الصباح؟ أعطني أسماء البرامج.\"", "db_id": "program_share"}
{"question": "Which programs are never broadcasted in the morning? Give me the names of the programs.", "query": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\"", "arabic": "\"ابحث عن مالكي البرامج الذين لديهم بعض البرامج في فترتي الصباح والليل.\"", "db_id": "program_share"}
{"question": "find the program owners that have some programs in both morning and night time.", "query": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\"", "arabic": "\"من هم أصحاب البرامج التي تُبث في الصباح وفي الليل؟\"", "db_id": "program_share"}
{"question": "Who are the owners of the programs that broadcast both in the morning and at night?", "query": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\"", "arabic": "\"أورد جميع أصول البرامج بالترتيب الأبجدي؟\"", "db_id": "program_share"}
{"question": "List all program origins in the alphabetical order.", "query": "SELECT origin FROM program ORDER BY origin", "arabic": "\"ما هو قائمة أصول البرامج مرتبة أبجديًا؟\"", "db_id": "program_share"}
{"question": "What is the list of program origins ordered alphabetically?", "query": "SELECT origin FROM program ORDER BY origin", "arabic": "\"ما هو عدد مالكي القنوات المختلفة؟\"", "db_id": "program_share"}
{"question": "what is the number of different channel owners?", "query": "SELECT count(DISTINCT OWNER) FROM channel", "arabic": "\"عدد مالكي القنوات المتميزة؟\"", "db_id": "program_share"}
{"question": "Count the number of distinct channel owners.", "query": "SELECT count(DISTINCT OWNER) FROM channel", "arabic": "\"ابحث عن أسماء البرامج التي لا تنشأ من بكين؟\"", "db_id": "program_share"}
{"question": "find the names of programs whose origin is not in Beijing.", "query": "SELECT name FROM program WHERE origin != 'Beijing'", "arabic": "\"ما هي برامج التي لا تأتي من 'بكين'؟ أعطني أسماء البرامج.\"", "db_id": "program_share"}
{"question": "Which programs' origins are not \"Beijing\"? Give me the program names.", "query": "SELECT name FROM program WHERE origin != 'Beijing'", "arabic": "\"ما هي أسماء القنوات التي تمتلكها CCTV أو HBS؟\"", "db_id": "program_share"}
{"question": "What are the names of the channels owned by CCTV or HBS?", "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'", "arabic": "\"أذكر أسماء جميع القنوات التي تمتلكها إما CCTV أو HBS.\"", "db_id": "program_share"}
{"question": "List the names of all the channels owned by either CCTV or HBS", "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'", "arabic": "\"ابحث عن نسبة التقييم الإجمالية لكل مالك قناة.\"", "db_id": "program_share"}
{"question": "Find the total rating ratio for each channel owner.", "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER", "arabic": "\"ما هو التقييم الإجمالي للقناة لكل مالك قناة؟\"", "db_id": "program_share"}
{"question": "What is the total rating of channel for each channel owner?", "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER", "arabic": "\"ما هو اسم البرنامج الذي يتم بثه بشكل أكثر تواترًا؟\"", "db_id": "program_share"}
{"question": "Find the name of the program that is broadcast most frequently.", "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"أي برنامج يتم بثه بشكل أكثر تواترًا؟ أعطني اسم البرنامج.\"", "db_id": "program_share"}
{"question": "Which program is broadcast most frequently? Give me the program name.", "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"كم عدد الدورات بشكل إجمالي؟\"", "db_id": "program_share"}
{"question": "How many courses are there in total?", "query": "SELECT count(*) FROM COURSES", "arabic": "\"ابحث عن العدد الإجمالي للدورات المقدمة.\"", "db_id": "e_learning"}
{"question": "Find the total number of courses offered.", "query": "SELECT count(*) FROM COURSES", "arabic": "\"ما هي وصفيات الدورات التي تحمل اسم 'قاعدة البيانات'؟\"", "db_id": "e_learning"}
{"question": "What are the descriptions of the courses with name \"database\"?", "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"", "arabic": "\"ارجع الوصف للدورات التي تحمل اسم 'قاعدة البيانات'.\"", "db_id": "e_learning"}
{"question": "Return the description for the courses named \"database\".", "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"", "arabic": "ما هي عناوين مؤلفي أو معلمي الدورات ذوي الاسم الشخصي \"كاثرين\"؟", "db_id": "e_learning"}
{"question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"", "arabic": "ما هي عناوين مؤلفي أو معلمي الدورات الذين يحملون اسم \"كاثرين\"؟", "db_id": "e_learning"}
{"question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"", "arabic": "اذكر عناوين جميع مؤلفي أو معلمي الدورات.", "db_id": "e_learning"}
{"question": "List the addresses of all the course authors or tutors.", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors", "arabic": "ما هو عنوان كل مؤلف أو معلم للدورة؟", "db_id": "e_learning"}
{"question": "What is the address of each course author or tutor?", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors", "arabic": "اذكر جميع أسماء الدخول وأسماء العائلة لمؤلفي الدورات والمعلمين.", "db_id": "e_learning"}
{"question": "List all the login names and family names of course author and tutors.", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors", "arabic": "ما هي أسماء الدخول وأسماء العائلة لمؤلفي الدورات والمعلمين؟", "db_id": "e_learning"}
{"question": "What are the login names and family names of course author and tutors?", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors", "arabic": "اذكر جميع تواريخ التسجيل والانتهاء للطلاب.", "db_id": "e_learning"}
{"question": "List all the dates of enrollment and completion of students.", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "arabic": "ما هي جميع تواريخ التسجيل والانتهاء في السجل؟", "db_id": "e_learning"}
{"question": "What are all the dates of enrollment and completion in record?", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "arabic": "كم عدد الطلاب المميزين الذين تم تسجيلهم في الدورات؟", "db_id": "e_learning"}
{"question": "How many distinct students are enrolled in courses?", "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment", "arabic": "ابحث عن عدد الطلاب المميزين الذين تم تسجيلهم في الدورات.", "db_id": "e_learning"}
{"question": "Find the number of distinct students enrolled in courses.", "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment", "arabic": "كم عدد الدورات المميزة التي تم تسجيل الطلاب فيها؟", "db_id": "e_learning"}
{"question": "How many distinct courses are enrolled in by students?", "query": "SELECT count(course_id) FROM Student_Course_Enrolment", "arabic": "ابحث عن عدد الدورات المميزة التي تم تسجيل الطلاب فيها.", "db_id": "e_learning"}
{"question": "Find the number of distinct courses that have enrolled students.", "query": "SELECT count(course_id) FROM Student_Course_Enrolment", "arabic": "ابحث عن تواريخ الاختبارات التي تم إجراؤها بنتيجة \"ناجح\".", "db_id": "e_learning"}
{"question": "Find the dates of the tests taken with result \"Pass\".", "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"", "arabic": "أي الاختبارات لديها نتائج \"ناجحة\"؟ قم بإرجاع التواريخ عندما تم إجراء الاختبارات.", "db_id": "e_learning"}
{"question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.", "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"", "arabic": "كم عدد الاختبارات التي كانت نتيجتها \"رسوب\"؟", "db_id": "e_learning"}
{"question": "How many tests have result \"Fail\"?", "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\"", "arabic": "حسب عدد الاختبارات التي كانت نتيجتها \"رسوب\".", "db_id": "e_learning"}
{"question": "Count the number of tests with \"Fail\" result.", "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\"", "arabic": "ما هي أسماء الدخول للطلاب ذوي العائلة \"وارد\"؟", "db_id": "e_learning"}
{"question": "What are the login names of the students with family name \"Ward\"?", "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"", "arabic": "أرجو إعادة أسماء الدخول للطلاب الذين يحملون اسم العائلة \"وارد\".", "db_id": "e_learning"}
{"question": "Return the login names of the students whose family name is \"Ward\".", "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"", "arabic": "ما هي تواريخ أحدث تسجيل دخول للطلاب ذوي العائلة \"جاسكولسكي\" أو \"لانغوش\"؟", "db_id": "e_learning"}
{"question": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?", "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"", "arabic": "ابحث عن أحدث تاريخ تسجيل دخول للطلاب الذين يحملون اسم العائلة \"جاسكولسكي\" أو \"لانغوش\".", "db_id": "e_learning"}
{"question": "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".", "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"", "arabic": "كم عدد الطلاب الذين يحملون أسماء شخصية تحتوي على كلمة \"ابن\"؟", "db_id": "e_learning"}
{"question": "How many students have personal names that contain the word \"son\"?", "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"", "arabic": "ابحث عن عدد الطلاب الذين يحملون كلمة \"ابن\" في أسمائهم الشخصية.", "db_id": "e_learning"}
{"question": "Find the number of students who have the word \"son\" in their personal names.", "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"", "arabic": "اذكر جميع أسماء المواضيع.", "db_id": "e_learning"}
{"question": "List all the subject names.", "query": "SELECT subject_name FROM SUBJECTS", "arabic": "ما هي أسماء جميع المواضيع؟", "db_id": "e_learning"}
{"question": "What are the names of all the subjects.", "query": "SELECT subject_name FROM SUBJECTS", "arabic": "اذكر جميع المعلومات حول مؤلفي الدورات والمعلمين بترتيب أبجدي للأسماء الشخصية.", "db_id": "e_learning"}
{"question": "List all the information about course authors and tutors in alphabetical order of the personal name.", "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name", "arabic": "فرز المعلومات حول مؤلفي الدورات والمعلمين بترتيب أبجدي للأسماء الشخصية.", "db_id": "e_learning"}
{"question": "Sort the information about course authors and tutors in alphabetical order of the personal name.", "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name", "arabic": "اذكر أسماء الأفراد وأسماء العائلة لجميع الطلاب بترتيب أبجدي للاسم العائلي.", "db_id": "e_learning"}
{"question": "List the personal names and family names of all the students in alphabetical order of family name.", "query": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name", "arabic": "ما هي أسماء الأفراد وأسماء العائلة للطلاب؟ قم بفرز النتيجة بترتيب أبجدي للاسم العائلي.", "db_id": "e_learning"}
{"question": "What are the personal names and family names of the students? Sort the result in alphabetical order of the family name.", "query": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name", "arabic": "اذكر كل نتيجة اختبار وعددها بترتيب تنازلي حسب العدد.", "db_id": "e_learning"}
{"question": "List each test result and its count in descending order of count.", "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC", "arabic": "لكل نتيجة اختبار مميزة، ابحث عن عدد الطلاب الذين حصلوا على هذه النتيجة.", "db_id": "e_learning"}
{"question": "For each distinct test result, find the number of students who got the result.", "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC", "arabic": "ابحث عن اسم الدخول لمؤلف الدورة الذي يدرس الدورة بالاسم \"قاعدة بيانات متقدمة\".", "db_id": "e_learning"}
{"question": "Find the login name of the course author that teaches the course with name \"advanced database\".", "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"", "arabic": "أي مؤلف للدورة يدرس دورة \"قاعدة بيانات متقدمة\"؟ أعطني اسم دخوله أو دخولها.", "db_id": "e_learning"}
{"question": "Which course author teaches the \"advanced database\" course? Give me his or her login name.", "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"", "arabic": "ابحث عن عناوين مؤلفي الدورة الذين يدرسون الدورة بأسماء \"نظام التشغيل\" أو \"هيكل البيانات\".", "db_id": "e_learning"}
{"question": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\".", "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"", "arabic": "ما هي عناوين مؤلفي الدورة الذين يدرسون إما \"نظام التشغيل\" أو \"هيكل البيانات\".", "db_id": "e_learning"}
{"question": "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course.", "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"", "arabic": "ابحث عن الاسم الشخصي واسم العائلة ومعرف المؤلف لمؤلف الدورة الذي يدرس أكبر عدد من الدورات.", "db_id": "e_learning"}
{"question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي الاسم الشخصي، واسم العائلة، ومعرف المؤلف لمؤلف الدورة الذي يدرس أكبر عدد من الدورات؟", "db_id": "e_learning"}
{"question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ابحث عن عناوين ومعرفات المؤلفين للدورات الذين يدرسون ما لا يقل عن اثنتين من الدورات.", "db_id": "e_learning"}
{"question": "Find the addresses and author IDs of the course authors that teach at least two courses.", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2", "arabic": "أيّ من مؤلفي الدورات يدرّسون دورتين أو أكثر؟ قدّم لي عناوينهم ومعرّفاتهم.", "db_id": "e_learning"}
{"question": "Which course authors teach two or more courses? Give me their addresses and author IDs.", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2", "arabic": "ما هي أسماء الدورات التي يدرّسها المعلّم الذي يحمل اسم \"جوليو\"؟", "db_id": "e_learning"}
{"question": "Find the names of courses taught by the tutor who has personal name \"Julio\".", "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"", "arabic": "ما هي أسماء الدورات التي يدرّسها المعلّم الذي يحمل اسم \"جوليو\"؟", "db_id": "e_learning"}
{"question": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?", "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"", "arabic": "ابحث عن أسماء ووصف الدورات التي تنتمي إلى الموضوع المسمى \"علوم الحاسوب\".", "db_id": "e_learning"}
{"question": "Find the names and descriptions of courses that belong to the subject named \"Computer Science\".", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"", "arabic": "ما هي أسماء ووصفو الدورات تحت موضوع \"علوم الحاسوب\"؟", "db_id": "e_learning"}
{"question": "What are the names and descriptions of the all courses under the \"Computer Science\" subject?", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"", "arabic": "اعثر على معرف الموضوع واسم الموضوع، وعدد الدورات المتاحة المقابلة لكل موضوع.", "db_id": "e_learning"}
{"question": "Find the subject ID, subject name, and the corresponding number of available courses for each subject.", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id", "arabic": "ما هي معرّف الموضوع، اسم الموضوع، وعدد الدورات المتاحة المقابلة لكل موضوع؟", "db_id": "e_learning"}
{"question": "What are the subject ID, subject name, and the number of available courses for each subject?", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id", "arabic": "ما هي معرّف الموضوع، اسم الموضوع، وعدد الدورات المقابلة لكل موضوع؟ وقم بالترتيب حسب عدد الدورات بترتيب تصاعدي.", "db_id": "e_learning"}
{"question": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order.", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "arabic": "ما هي قائمة معرّف الموضوع، اسم الموضوع، وعدد الدورات المتاحة لكل موضوع بترتيب تصاعدي حسب عدد الدورات؟", "db_id": "e_learning"}
{"question": "List the subject ID, name of subject and the number of courses available for each subject in ascending order of the course counts.", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "arabic": "ما هو تاريخ التسجيل في الدورة المسماة \"Spanish\"؟", "db_id": "e_learning"}
{"question": "What is the date of enrollment of the course named \"Spanish\"?", "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"", "arabic": "ابحث عن تاريخ التسجيل في الدورة \"Spanish\".", "db_id": "e_learning"}
{"question": "Find the the date of enrollment of the \"Spanish\" course.", "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"", "arabic": "ما هو اسم الدورة التي تحتوي على أكبر عدد من الطلاب المسجلين؟", "db_id": "e_learning"}
{"question": "What is the name of the course that has the most student enrollment?", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي دورة يتم تسجيل أكبر عدد من الطلاب فيها؟ أعطني اسم الدورة.", "db_id": "e_learning"}
{"question": "Which course is enrolled in by the most students? Give me the course name.", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي أسماء الدورات التي يكون لديها تسجيل طالب واحد بالضبط؟", "db_id": "e_learning"}
{"question": "What are the names of the courses that have exactly 1 student enrollment?", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1", "arabic": "ابحث عن أسماء الدورات التي تحتوي على تسجيل طالب واحد فقط.", "db_id": "e_learning"}
{"question": "Find the names of the courses that have just one student enrollment.", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1", "arabic": "ما هي الوصفيات وأسماء الدورات التي تحتوي على تسجيل طلاب أكبر من 2؟", "db_id": "e_learning"}
{"question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "arabic": "ارجع بوصفيات وأسماء الدورات التي يتم تسجيل أكثر من طالبين فيها.", "db_id": "e_learning"}
{"question": "Return the descriptions and names of the courses that have more than two students enrolled in.", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "arabic": "ما هو اسم كل دورة وعدد الطلاب المسجلين فيها؟", "db_id": "e_learning"}
{"question": "What is the name of each course and the corresponding number of student enrollment?", "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name", "arabic": "قائمة بأسماء الدورات وعدد الطلاب المسجلين في كل دورة.", "db_id": "e_learning"}
{"question": "List the name and the number of enrolled student for each course.", "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name", "arabic": "ما هي تواريخ التسجيل لجميع الاختبارات التي حصلت نتيجتها على \"ناجح\"؟", "db_id": "e_learning"}
{"question": "What are the enrollment dates of all the tests that have result \"Pass\"?", "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"", "arabic": "ابحث عن تاريخ التسجيل لجميع الاختبارات التي حققت نتيجتها \"ناجح\".", "db_id": "e_learning"}
{"question": "Find the enrollment date for all the tests that have \"Pass\" result.", "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"", "arabic": "ما هي تواريخ الانتهاء لجميع الاختبارات التي حققت نتيجتها \"رسوب\"؟", "db_id": "e_learning"}
{"question": "What are the completion dates of all the tests that have result \"Fail\"?", "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"", "arabic": "ارجع بتاريخ الانتهاء لجميع الاختبارات التي حققت نتيجتها \"رسوب\".", "db_id": "e_learning"}
{"question": "Return the completion date for all the tests that have \"Fail\" result.", "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"", "arabic": "قم بسرد تواريخ التسجيل والانتهاء للطالب الذي يحمل اسم \"Karson\".", "db_id": "e_learning"}
{"question": "List the dates of enrollment and completion of the student with personal name \"Karson\".", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "arabic": "في أي تواريخ قام الطالب الذي يحمل الاسم الشخصي \"Karson\" بالتسجيل في واستكمال الدورات؟", "db_id": "e_learning"}
{"question": "On what dates did the student whose personal name is \"Karson\" enroll in and complete the courses?", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "arabic": "أذكر تواريخ التسجيل والإكمال للطالب الذي يحمل اسم العائلة \"Zieme\" والاسم الشخصي \"Bernie\".", "db_id": "e_learning"}
{"question": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"", "arabic": "في أي تواريخ سجل الطالب الذي يحمل اسم العائلة \"Zieme\" والاسم الشخصي \"Bernie\" في الدورات وأكملها؟", "db_id": "e_learning"}
{"question": "On what dates did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"", "arabic": "ابحث عن هوية الطالب واسم تسجيل الدخول للطالب الذي يمتلك أكبر عدد من التسجيلات في الدورات.", "db_id": "e_learning"}
{"question": "Find the student ID and login name of the student with the most course enrollments", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي هوية الطالب واسم تسجيل الدخول للطالب الذين مسجلين في أكبر عدد من الدورات؟", "db_id": "e_learning"}
{"question": "What are the student ID and login name of the student who are enrolled in the most courses?", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي هوية الطالب والاسم الشخصي للطالب الذي لديه على الأقل تسجيلين؟", "db_id": "e_learning"}
{"question": "Find the student ID and personal name of the student with at least two enrollments.", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2", "arabic": "\"أي طالب مسجل في ما لا يقل عن مقررين؟ أعطني رقم الطالب والاسم الشخصي.\"", "db_id": "e_learning"}
{"question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2", "arabic": "\"ابحث عن رقم الطالب والاسم الأوسط لجميع الطلاب الذين لديهم أقل من اثنين من التسجيلات.\"", "db_id": "e_learning"}
{"question": "Find the student ID and middle name for all the students with at most two enrollments.", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "arabic": "\"ما هي رقم الطالب وأسماؤهم الأوسطى للطلاب المسجلين في ما لا يزيد عن مقررين؟\"", "db_id": "e_learning"}
{"question": "What are the student IDs and middle names of the students enrolled in at most two courses?", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "arabic": "\"ابحث عن أسماء الطلاب الذين لم يسجلوا في أي مقرر.\"", "db_id": "e_learning"}
{"question": "Find the personal names of students not enrolled in any course.", "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id", "arabic": "\"أي الطلاب غير مسجلين في أي مقرر؟ ابحث عن أسمائهم الشخصية.\"", "db_id": "e_learning"}
{"question": "Which students not enrolled in any course? Find their personal names.", "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id", "arabic": "\"كم عدد الطلاب الذين لم يكونوا لديهم أي تسجيل في مقرر؟\"", "db_id": "e_learning"}
{"question": "How many students did not have any course enrollment?", "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)", "arabic": "\"عد عدد الطلاب الذين لم يسجلوا في أي مقرر.\"", "db_id": "e_learning"}
{"question": "Count the number of students who did not enroll in any course.", "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)", "arabic": "\"ابحث عن اسم تسجيل الدخول المشترك بين مؤلفي المقررات والطلاب.\"", "db_id": "e_learning"}
{"question": "Find the common login name of course authors and students.", "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students", "arabic": "\"ما هي أسماء تسجيل الدخول المستخدمة من قبل بعض مؤلفي المقررات وبعض الطلاب؟\"", "db_id": "e_learning"}
{"question": "What are the login names used both by some course authors and some students?", "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students", "arabic": "\"ابحث عن الاسم الشخصي المشترك بين مؤلفي المقررات والطلاب.\"", "db_id": "e_learning"}
{"question": "Find the common personal name of course authors and students.", "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students", "arabic": "\"ما هي الأسماء الشخصية المستخدمة من قبل بعض مؤلفي المقررات وبعض الطلاب؟\"", "db_id": "e_learning"}
{"question": "What are the personal names used both by some course authors and some students?", "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students", "arabic": "\"أي المطالبات تسببت في أكثر من تسوية أو لديها قيمة مطالبة قصوى؟ قم بسرد تاريخ تقديم المطالبة ومعرف المطالبة.\"", "db_id": "e_learning"}
{"question": "Which claims caused more than 2 settlements or have the maximum claim value? List the date the claim was made and the claim id.", "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )", "arabic": "\"ابحث عن المطالبات التي أدت إلى أكثر من تسويةين أو لديها قيمة مطالبة قصوى. لكل منها، أرجع تاريخ تقديم المطالبة ومعرف المطالبة.\"", "db_id": "insurance_policies"}
{"question": "Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the date the claim was made and the id of the claim.", "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )", "arabic": "\"أي عميل كان لديه ما لا يقل عن م polيصتين ولكنه لم يقدم أي مطالب؟ قم بسرد تفاصيل العميل والمعرف.\"", "db_id": "insurance_policies"}
{"question": "Which customer had at least 2 policies but did not file any claims? List the customer details and id.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id", "arabic": "\"قدم لي تفاصيل العميل والمعرف للعملاء الذين كان لديهم اثنتين أو أكثر من الوثائق ولكنهم لم يقدموا أي مطالب.\"", "db_id": "insurance_policies"}
{"question": "Give me the the customer details and id for the customers who had two or more policies but did not file any claims.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id", "arabic": "\"قم بسرد الطريقة والتاريخ والمبلغ لجميع المدفوعات، بترتيب تصاعدي حسب التاريخ.\"", "db_id": "insurance_policies"}
{"question": "List the method, date and amount of all the payments, in ascending order of date.", "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC", "arabic": "\"ما هي الطريقة والتاريخ والمبلغ لكل دفعة؟ قم بفرز القائمة بترتيب تصاعدي حسب التاريخ.\"", "db_id": "insurance_policies"}
{"question": "What are the method, date and amount of each payment? Sort the list in ascending order of date.", "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC", "arabic": "\"من بين جميع المطالبات، ما هو مبلغ التسوية للمطالبة ذات أعلى مبلغ مطالبة؟ قم بسرد كل من مبلغ التسوية ومبلغ المطالبة.\"", "db_id": "insurance_policies"}
{"question": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1", "arabic": "\"ابحث عن مبلغ التسوية للمطالبة ذات أعلى مبلغ مطالبة. أظهر كل من مبلغ التسوية ومبلغ المطالبة.\"", "db_id": "insurance_policies"}
{"question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1", "arabic": "\"من بين جميع المطالبات، ما هو المبلغ المطلوب في المطالبة ذات أقل مبلغ تسوية؟ قم بسرد كل من مبلغ التسوية ومبلغ المطالبة.\"", "db_id": "insurance_policies"}
{"question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1", "arabic": "\"ابحث عن المبلغ المطلوب في المطالبة ذات أقل مبلغ تسوية. أظهر كل من مبلغ التسوية ومبلغ المطالبة.\"", "db_id": "insurance_policies"}
{"question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1", "arabic": "\"من بين جميع المطالبات، أي المطالبات لديها مبلغ مطلوب أكبر من المتوسط؟ قم بسرد تاريخ تقديم المطالبة وتاريخ تسويتها.\"", "db_id": "insurance_policies"}
{"question": "Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled.", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "arabic": "\"قدم لي تاريخ المطالبة وتاريخ التسوية لجميع المطالبات التي يكون مبلغها المطلوب أكبر من المتوسط.\"", "db_id": "insurance_policies"}
{"question": "Give me the claim date, settlement date for all the claims whose claimed amount is larger than the average.", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "arabic": "\"من بين جميع المطالبات، أي التسويات التي يكون مبلغ المطالبة فيها لا يتجاوز المتوسط؟ قم بسرد تاريخ بدء المطالبة.\"", "db_id": "insurance_policies"}
{"question": "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date.", "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )", "arabic": "\"ارجع تاريخ بدء المطالبة لتلك المطالبات التي يكون مبلغ المطالبة فيها لا يتجاوز المتوسط.\"", "db_id": "insurance_policies"}
{"question": "Return the claim start date for the claims whose claimed amount is no more than the average", "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )", "arabic": "\"كم عدد التسويات التي تتوافق مع كل مطالبة؟ قم بسرد معرف المطالبة وعدد التسويات.\"", "db_id": "insurance_policies"}
{"question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.", "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id", "arabic": "\"ابحث عن عدد التسويات التي تتوافق مع كل مطالبة. أظهر العدد مع معرف المطالبة.\"", "db_id": "insurance_policies"}
{"question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.", "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id", "arabic": "\"أي مطالبة تكبدت أكبر عدد من التسويات؟ قم بسرد معرف المطالبة وتاريخ تقديم المطالبة، والعدد.\"", "db_id": "insurance_policies"}
{"question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ابحث عن معرف المطالبة وتاريخ المطالبة للمطالبة التي تكبدت أكبر عدد من التسويات. قل لي أيضًا العدد.\"", "db_id": "insurance_policies"}
{"question": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"كم عدد التسويات التي تمت على المطالبة ذات تاريخ تسوية أحدث؟ قم بسرد العدد ومعرف المطالبة.\"", "db_id": "insurance_policies"}
{"question": "How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id.", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1", "arabic": "\"ابحث عن معرف المطالبة وعدد التسويات التي تمت على المطالبة ذات تاريخ تسوية أحدث.\"", "db_id": "insurance_policies"}
{"question": "Find the claim id and the number of settlements made for the claim with the most recent settlement date.", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1", "arabic": "\"من بين جميع المطالبات، ما هو أقرب تاريخ عندما تم تقديم أي مطالبة؟\"", "db_id": "insurance_policies"}
{"question": "Of all the claims, what was the earliest date when any claim was made?", "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1", "arabic": "\"قل لي تاريخ تقديم أول مطالبة.\"", "db_id": "insurance_policies"}
{"question": "Tell me the the date when the first claim was made.", "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1", "arabic": "\"ما هو إجمالي مبلغ التسوية الذي تم لجميع التسويات؟\"", "db_id": "insurance_policies"}
{"question": "What is the total amount of settlement made for all the settlements?", "query": "SELECT sum(Amount_Settled) FROM Settlements", "arabic": "\"حسب إجمالي مبلغ التسوية عبر جميع التسويات.\"", "db_id": "insurance_policies"}
{"question": "Compute the total amount of settlement across all the settlements.", "query": "SELECT sum(Amount_Settled) FROM Settlements", "arabic": "\"من هم العملاء الذين كان لديهم أكثر من وثيقة واحدة؟ قم بسرد تفاصيل العميل والمعرف.\"", "db_id": "insurance_policies"}
{"question": "Who are the customers that had more than 1 policy? List the customer details and id.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1", "arabic": "\"ابحث عن تفاصيل العميل ومعرفه للعملاء الذين كانت لديهم أكثر من وثيقة واحدة.\"", "db_id": "insurance_policies"}
{"question": "Find the the customer details and id for the customers who had more than one policy.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1", "arabic": "\"ما هي تواريخ التقديم وتواريخ التسوية لجميع التسويات؟\"", "db_id": "insurance_policies"}
{"question": "What are the claim dates and settlement dates of all the settlements?", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements", "arabic": "\"قل لي تاريخ تقديم المطالبة وتاريخ التسوية لكل حالة تسوية.\"", "db_id": "insurance_policies"}
{"question": "Tell me the the claim date and settlement date for each settlement case.", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements", "arabic": "\"ما هو أكثر طريقة دفع شعبية؟\"", "db_id": "insurance_policies"}
{"question": "What is the most popular payment method?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "\"أي طريقة دفع تستخدم بشكل أكثر تواترًا؟\"", "db_id": "insurance_policies"}
{"question": "Which payment method is used the most often?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "\"مع أي نوع من طرق الدفع تمت معالجة أقل عدد من المدفوعات؟\"", "db_id": "insurance_policies"}
{"question": "With which kind of payment method were the least number of payments processed?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو وسيلة الدفع التي تم استخدامها بأقل تواتر؟", "db_id": "insurance_policies"}
{"question": "What is the payment method that were used the least often?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو إجمالي مبلغ الدفع؟", "db_id": "insurance_policies"}
{"question": "What is the total amount of payment?", "query": "SELECT sum(Amount_Payment) FROM Payments", "arabic": "ما هو إجمالي مبلغ الدفع المعالَج؟", "db_id": "insurance_policies"}
{"question": "Compute the total amount of payment processed.", "query": "SELECT sum(Amount_Payment) FROM Payments", "arabic": "ما هي جميع التفاصيل المميزة للعملاء؟", "db_id": "insurance_policies"}
{"question": "What are all the distinct details of the customers?", "query": "SELECT DISTINCT customer_details FROM Customers", "arabic": "ما هي التفاصيل المميزة للعملاء؟", "db_id": "insurance_policies"}
{"question": "Return the distinct customer details.", "query": "SELECT DISTINCT customer_details FROM Customers", "arabic": "أي نوع من أنواع السياسات تم اختياره من قبل معظم العملاء؟", "db_id": "insurance_policies"}
{"question": "Which kind of policy type was chosen by the most customers?", "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن نوع السياسة الذي يختاره معظم العملاء.", "db_id": "insurance_policies"}
{"question": "Find the policy type the most customers choose.", "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عدد المستوطنات بالمجموع؟", "db_id": "insurance_policies"}
{"question": "How many settlements are there in total?", "query": "SELECT count(*) FROM Settlements", "arabic": "عدد إجمالي المستوطنات المُنشأة.", "db_id": "insurance_policies"}
{"question": "Count the total number of settlements made.", "query": "SELECT count(*) FROM Settlements", "arabic": "أي المدفوعات تم معالجتها باستخدام فيزا؟ قم بسرد رقم الدفعة، والتاريخ، والمبلغ.", "db_id": "insurance_policies"}
{"question": "Which Payments were processed with Visa? List the payment Id, the date and the amount.", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'", "arabic": "قدم لي رقم الدفعة، والتاريخ، والمبلغ لجميع المدفوعات التي تم معالجتها باستخدام فيزا.", "db_id": "insurance_policies"}
{"question": "Give me the payment Id, the date and the amount for all the payments processed with Visa.", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'", "arabic": "سرِّر تفاصيل العملاء الذين ليس لديهم أي سياسات.", "db_id": "insurance_policies"}
{"question": "List the details of the customers who do not have any policies.", "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "أي العملاء الذين ليس لديهم أي سياسات؟ ابحث عن تفاصيل هؤلاء العملاء.", "db_id": "insurance_policies"}
{"question": "Which customers do not have any policies? Find the details of these customers.", "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "سرِّر تاريخ تقديم الطلب، وتاريخ تسوية الطلب، والمبلغ المسوّى لجميع الطلبات التي كانت لديها تسوية واحدة تمامًا.", "db_id": "insurance_policies"}
{"question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1", "arabic": "أي الطلبات كانت لديها تسوية واحدة تمامًا؟ لكل منها، أخبرني عن تاريخ تقديم الطلب، وتاريخ تسوية الطلب، والمبلغ المسوى.", "db_id": "insurance_policies"}
{"question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1", "arabic": "ابحث عن الإجمالي للمبلغ المطالب به في جميع الطلبات.", "db_id": "insurance_policies"}
{"question": "Find the total claimed amount of all the claims.", "query": "SELECT sum(Amount_Claimed) FROM Claims", "arabic": "ما هو إجمالي المبلغ المطالب به، مُجمعًا عبر جميع الطلبات؟", "db_id": "insurance_policies"}
{"question": "What is total amount claimed summed across all the claims?", "query": "SELECT sum(Amount_Claimed) FROM Claims", "arabic": "أي قسم يحتوي على أكبر عدد من الموظفين؟", "db_id": "insurance_policies"}
{"question": "Which department has the largest number of employees?", "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;", "arabic": "ابحث عن القسم الذي يحتوي على أكبر عدد من الموظفين.", "db_id": "hospital_1"}
{"question": "Find the department with the most employees.", "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;", "arabic": "ما هو معرِّف الموظف للرئيس الذي يتبعه قسم يحتوي على أقل عدد من الموظفين؟", "db_id": "hospital_1"}
{"question": "What is the employee id of the head whose department has the least number of employees?", "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "arabic": "أخبرني بمعرِّف الموظف لرئيس القسم الذي يحتوي على أقل عدد من الموظفين.", "db_id": "hospital_1"}
{"question": "Tell me the employee id of the head of the department with the least employees.", "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "arabic": "ما هو اسم والمنصب للرئيس الذي يدير قسم يحتوي على أقل عدد من الموظفين؟", "db_id": "hospital_1"}
{"question": "what is the name and position of the head whose department has least number of employees?", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "arabic": "ابحث عن اسم والمنصب لرئيس القسم الذي يحتوي على أقل عدد من الموظفين.", "db_id": "hospital_1"}
{"question": "Find the name and position of the head of the department with the least employees.", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "arabic": "ما هي أسماء المرضى الذين قاموا بحجز موعد؟", "db_id": "hospital_1"}
{"question": "What are names of patients who made an appointment?", "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn", "arabic": "سرِّر أسماء المرضى الذين قاموا بحجز مواعيدهم.", "db_id": "hospital_1"}
{"question": "List the names of patients who have made appointments.", "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn", "arabic": "ما هي أسماء وأرقام الهواتف للمرضى الذين قاموا بأكثر من موعد؟", "db_id": "hospital_1"}
{"question": "what are name and phone number of patients who had more than one appointment?", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1", "arabic": "أي المرضى قاموا بأكثر من موعد؟ أخبرني عن اسم ورقم الهاتف لهؤلاء المرضى.", "db_id": "hospital_1"}
{"question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1", "arabic": "ابحث عن معرِّف الموعد الذي يحمل أحدث تاريخ بدء.", "db_id": "hospital_1"}
{"question": "Find the id of the appointment with the most recent start date?", "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1", "arabic": "ما هو معرِّف الموعد الذي بدأ مؤخرًا بشكل أكثر؟", "db_id": "hospital_1"}
{"question": "What is the id of the appointment that started most recently?", "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1", "arabic": "سرِّر أسماء الأطباء الذين أخذوا بعض المواعيد.", "db_id": "hospital_1"}
{"question": "List the name of physicians who took some appointment.", "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID", "arabic": "ما هي أسماء جميع الأطباء الذين أخذوا مواعيد؟", "db_id": "hospital_1"}
{"question": "What are the names of all the physicians who took appointments.", "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID", "arabic": "سرِّر أسماء الأطباء الذين لم يأخذوا أي مواعيد.", "db_id": "hospital_1"}
{"question": "List the name of physicians who never took any appointment.", "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID", "arabic": "أي الأطباء الذين لم يأخذوا أي مواعيد؟ ابحث عن أسمائهم.", "db_id": "hospital_1"}
{"question": "Which physicians have never taken any appointment? Find their names.", "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID", "arabic": "ابحث عن أسماء جميع الأطباء وأسماء أقسامهم التابعين الرئيسيين.", "db_id": "hospital_1"}
{"question": "Find the names of all physicians and their primary affiliated departments' names.", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1", "arabic": "ما هو اسم كل طبيب واسم القسم التابع الرئيسي له؟", "db_id": "hospital_1"}
{"question": "What are the name and primarily affiliated department name of each physician?", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1", "arabic": "ما هو اسم المريض الذي قام بآخر موعد؟", "db_id": "hospital_1"}
{"question": "What is the name of the patient who made the most recent appointment?", "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1", "arabic": "ابحث عن اسم المريض الذي قام بحجز الموعد بتاريخ بدء أحدث.", "db_id": "hospital_1"}
{"question": "Find the name of the patient who made the appointment with the most recent start date.", "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1", "arabic": "كم عدد المرضى الذين يقيمون في الغرفة 112؟", "db_id": "hospital_1"}
{"question": "How many patients stay in room 112?", "query": "SELECT count(patient) FROM stay WHERE room  =  112", "arabic": "عدد المرضى الذين قاموا بالإقامة في الغرفة 112؟", "db_id": "hospital_1"}
{"question": "Count the number of patients who stayed in room 112.", "query": "SELECT count(patient) FROM stay WHERE room  =  112", "arabic": "كم عدد وصفات المرضى التي تم إعدادها بواسطة الطبيب جون دوريان؟", "db_id": "hospital_1"}
{"question": "How many patients' prescriptions are made by physician John Dorian?", "query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"", "arabic": "ابحث عن عدد وصفات المرضى التي قام الطبيب جون دوريان بإعدادها.", "db_id": "hospital_1"}
{"question": "Find the number of patients' prescriptions physician John Dorian made.", "query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"", "arabic": "ابحث عن اسم الدواء الذي يتم استخدامه على المريض الذي يقيم في الغرفة 111؟", "db_id": "hospital_1"}
{"question": "Find the name of medication used on the patient who stays in room 111?", "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111", "arabic": "ما هو اسم الدواء الذي يتم استخدامه للمريض الذي يقيم في الغرفة 111؟", "db_id": "hospital_1"}
{"question": "What is the name of the medication used for the patient staying in room 111?", "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111", "arabic": "ابحث عن المريض الذي قام بالإقامة في الغرفة 111 بشكل أحدث.", "db_id": "hospital_1"}
{"question": "Find the patient who most recently stayed in room 111.", "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1", "arabic": "ما هو معرِّف المريض الذي قام بالإقامة في الغرفة 111 بشكل أحدث؟", "db_id": "hospital_1"}
{"question": "What is the id of the patient who stayed in room 111 most recently?", "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1", "arabic": "ما هو اسم الممرضة التي لديها أكبر عدد من المواعيد؟", "db_id": "hospital_1"}
{"question": "What is the name of the nurse has the most appointments?", "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن اسم الممرضة التي لديها أكبر عدد من المواعيد.", "db_id": "hospital_1"}
{"question": "Find the name of the nurse who has the largest number of appointments.", "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عدد المرضى الذين يعتني بهم كل طبيب؟ قم بتقديم أسمائهم وعدد المرضى الذين يعتنون بهم.", "db_id": "hospital_1"}
{"question": "How many patients do each physician take care of? List their names and number of patients they take care of.", "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid", "arabic": "ارجع بأسماء كل طبيب وعدد المرضى الذين يعالجونهم.", "db_id": "hospital_1"}
{"question": "Return the name of each physician and the number of patients he or she treats.", "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid", "arabic": "ابحث عن أسماء الأطباء الذين يتولون مسؤولية أكثر من مريض واحد.", "db_id": "hospital_1"}
{"question": "Find the name of physicians who are in charge of more than one patient.", "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1", "arabic": "أي الأطباء مسؤولون عن أكثر من مريض؟ قدم لي أسمائهم.", "db_id": "hospital_1"}
{"question": "Which physicians are in charge of more than one patient? Give me their names.", "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1", "arabic": "ابحث عن عدد الغرف الموجودة في كل طابق للكتلة.", "db_id": "hospital_1"}
{"question": "Find the number of rooms located on each block floor.", "query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor", "arabic": "كم عدد الغرف التي يحتوي عليها كل طابق في الكتلة؟", "db_id": "hospital_1"}
{"question": "How many rooms does each block floor have?", "query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor", "arabic": "اعثر على عدد الغرف لأكواد الكتل المختلفة؟", "db_id": "hospital_1"}
{"question": "Find the number of rooms for different block code?", "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode", "arabic": "كم عدد الغرف الموجودة لكل رمز كتلة؟", "db_id": "hospital_1"}
{"question": "How many rooms are located for each block code?", "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode", "arabic": "ما هي رموز الكتل الفريدة التي تحتوي على غرف متاحة؟", "db_id": "hospital_1"}
{"question": "What are the unique block codes that have available rooms?", "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0", "arabic": "قل لي رموز الكتل المتميزة حيث تتوفر بعض الغرف.", "db_id": "hospital_1"}
{"question": "Tell me the distinct block codes where some rooms are available.", "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0", "arabic": "كم هو عدد أنواع الغرف المختلفة؟", "db_id": "hospital_1"}
{"question": "How many different types of rooms are there?", "query": "SELECT count(DISTINCT roomtype) FROM room", "arabic": "ما هو عدد أنواع الغرف المختلفة المتاحة؟", "db_id": "hospital_1"}
{"question": "Find the number of distinct room types available.", "query": "SELECT count(DISTINCT roomtype) FROM room", "arabic": "ما هي أسماء الأطباء الذين يصفون دواء Thesisin؟", "db_id": "hospital_1"}
{"question": "What is the names of the physicians who prescribe medication Thesisin?", "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"", "arabic": "عرض أسماء جميع الأطباء الذين يصفون دواء Thesisin.", "db_id": "hospital_1"}
{"question": "List the names of all the physicians who prescribe Thesisin as medication.", "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"", "arabic": "البحث عن اسم ووظيفة الأطباء الذين يصفون بعض الأدوية التي تحمل علامة \"X\".", "db_id": "hospital_1"}
{"question": "Find the name and position of physicians who prescribe some medication whose brand is X?", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"", "arabic": "أي أطباء يصفون دواء من العلامة التجارية \"X؟\" قدم لي أسماء ووظائف تلك الأطباء.", "db_id": "hospital_1"}
{"question": "Which physicians prescribe a medication of brand X? Tell me the name and position of those physicians.", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"", "arabic": "العدد الكلي للأدوية الموصوفة لكل علامة تجارية؟", "db_id": "hospital_1"}
{"question": "Find the number of medications prescribed for each brand.", "query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand", "arabic": "كم عدد الأدوية التي تم وصفها لكل علامة تجارية؟", "db_id": "hospital_1"}
{"question": "How many medications are prescribed for each brand?", "query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand", "arabic": "ابحث عن أسماء الأطباء الذين يحتوي عنوان وظيفتهم على كلمة 'senior'.", "db_id": "hospital_1"}
{"question": "Find the name of physicians whose position title contains the word 'senior'.", "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'", "arabic": "ما هي أسماء الأطباء الذين يحملون عنوان \"senior\" في مراكزهم؟", "db_id": "hospital_1"}
{"question": "What are the names of the physicians who have 'senior' in their titles.", "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'", "arabic": "من هو المريض الذي يتلقى العلاج حاليًا بناءً على آخر تحديث؟", "db_id": "hospital_1"}
{"question": "Find the patient who has the most recent undergoing treatment?", "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1", "arabic": "أي مريض يتلقى أحدث علاج؟", "db_id": "hospital_1"}
{"question": "Which patient is undergoing the most recent treatment?", "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1", "arabic": "التالي: \"ابحث عن أسماء جميع المرضى الذين يخضعون لعلاج ويقيمون في الغرفة 111؟\"", "db_id": "hospital_1"}
{"question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111", "arabic": "التالي: \"ما هي أسماء المرضى الذين يقيمون في الغرفة 111 ويخضعون لعلاج؟\"", "db_id": "hospital_1"}
{"question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111", "arabic": "\"اذكر أسماء جميع الممرضات المتميزات مرتبة ترتيباً تسلسلياً حسب الترتيب الأبجدي؟\"", "db_id": "hospital_1"}
{"question": "List the names of all distinct nurses ordered by alphabetical order?", "query": "SELECT DISTINCT name FROM nurse ORDER BY name", "arabic": "ما هو القائمة المرتبة ترتيباً أبجدياً لجميع الأسماء المميزة للممرضات؟", "db_id": "hospital_1"}
{"question": "What is the alphabetically ordered list of all the distinct names of nurses?", "query": "SELECT DISTINCT name FROM nurse ORDER BY name", "arabic": "ابحث عن أسماء الممرضات اللاتي يقدمن الرعاية للمرضى الذين يخضعون لعلاج؟", "db_id": "hospital_1"}
{"question": "Find the names of nurses who are nursing an undergoing treatment.", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID", "arabic": "أي من الممرضات مسؤولة عن المرضى الذين يخضعون لعلاج؟", "db_id": "hospital_1"}
{"question": "Which nurses are in charge of patients undergoing treatments?", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID", "arabic": "اذكر أسماء جميع الأدوية المميزة، مرتبة ترتيباً أبجدياً.", "db_id": "hospital_1"}
{"question": "List the names of all distinct medications, ordered in an alphabetical order.", "query": "SELECT DISTINCT name FROM medication ORDER BY name", "arabic": "ما هي القائمة المرتبة أبجدياً لجميع الأدوية المميزة؟", "db_id": "hospital_1"}
{"question": "What is the alphabetically ordered list of all distinct medications?", "query": "SELECT DISTINCT name FROM medication ORDER BY name", "arabic": "ما هي أسماء الأطباء الذين وصفوا أعلى جرعة؟", "db_id": "hospital_1"}
{"question": "What are the names of the physician who prescribed the highest dose?", "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1", "arabic": "ابحث عن الطبيب الذي وصف أعلى جرعة. ما هو اسمه أو اسمها؟", "db_id": "hospital_1"}
{"question": "Find the physician who prescribed the highest dose. What is his or her name?", "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1", "arabic": "اذكر معرف الموظف للأطباء مع معرف أقسام انتمائهم الأساسية.", "db_id": "hospital_1"}
{"question": "List the physicians' employee ids together with their primary affiliation departments' ids.", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1", "arabic": "ما هي معرّف الموظف ومعرّف القسم الذي ينتمي إليه كل طبيب أساسًا؟", "db_id": "hospital_1"}
{"question": "What are each physician's employee id and department id primarily affiliated.", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1", "arabic": "اذكر أسماء الأقسام التي ينتمي إليها بشكل أساسي بعض الأطباء.", "db_id": "hospital_1"}
{"question": "List the names of departments where some physicians are primarily affiliated with.", "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1", "arabic": "ما هي أسماء الأقسام التي ينتمي إليها أطباء بشكل أساسي؟", "db_id": "hospital_1"}
{"question": "What are the names of departments that have primarily affiliated physicians.", "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1", "arabic": "أي ممرضات هي في الاستعداد مع الطابق رقم 1 وكود البلوك رقم 1؟ قل لي أسمائهن.", "db_id": "hospital_1"}
{"question": "What nurses are on call with block floor 1 and block code 1? Tell me their names.", "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1", "arabic": "ابحث عن معرفات الممرضات اللاتي في الاستعداد في الطابق رقم 1 وكود البلوك رقم 1.", "db_id": "hospital_1"}
{"question": "Find the ids of the nurses who are on call in block floor 1 and block code 1.", "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1", "arabic": "ما هي التكلفة الأعلى، والتكلفة الأدنى، والتكلفة المتوسطة للإجراءات؟", "db_id": "hospital_1"}
{"question": "What are the highest cost, lowest cost and average cost of procedures?", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures", "arabic": "قل لي عن التكلفة الأعلى، والتكلفة الأدنى، والتكلفة المتوسطة للإجراءات.", "db_id": "hospital_1"}
{"question": "Tell me the highest, lowest, and average cost of procedures.", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures", "arabic": "اذكر اسم وتكلفة جميع الإجراءات مرتبة حسب التكلفة من الأعلى إلى الأدنى.", "db_id": "hospital_1"}
{"question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.", "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC", "arabic": "صِنف قائمة الأسماء والتكاليف لجميع الإجراءات بترتيب تنازلي حسب التكلفة.", "db_id": "hospital_1"}
{"question": "Sort the list of names and costs of all procedures in the descending order of cost.", "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC", "arabic": "ابحث عن الإجراءات الثلاث الأكثر تكلفة.", "db_id": "hospital_1"}
{"question": "Find the three most expensive procedures.", "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3", "arabic": "ما هي الإجراءات الثلاث الأكثر تكلفة؟", "db_id": "hospital_1"}
{"question": "What are the three most costly procedures?", "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3", "arabic": "ابحث عن الأطباء الذين تم تدريبهم في إجراء يكلف أكثر من 5000.", "db_id": "hospital_1"}
{"question": "Find the physicians who are trained in a procedure that costs more than 5000.", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000", "arabic": "أي الأطباء تم تدريبهم في إجراءات تكلف أكثر من 5000؟", "db_id": "hospital_1"}
{"question": "Which physicians are trained in procedures that are more expensive than 5000?", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000", "arabic": "ابحث عن الطبيب الذي تم تدريبه في أغلى إجراء.", "db_id": "hospital_1"}
{"question": "Find the physician who was trained in the most expensive procedure?", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1", "arabic": "أي الأطباء تم تدريبه في الإجراء الذي يكلف الأكثر؟", "db_id": "hospital_1"}
{"question": "Which physician was trained in the procedure that costs the most.", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1", "arabic": "ما هي التكلفة المتوسطة للإجراءات التي تم تدريب الطبيب جون وين فيها؟", "db_id": "hospital_1"}
{"question": "What is the average cost of procedures that physician John Wen was trained in?", "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "حساب السعر المتوسط للإجراءات التي تم تدريب الطبيب جون وين فيها.", "db_id": "hospital_1"}
{"question": "Compute the mean price of procedures physician John Wen was trained in.", "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ابحث عن أسماء الإجراءات التي تم تدريب الطبيب جون وين فيها.", "db_id": "hospital_1"}
{"question": "Find the names of procedures which physician John Wen was trained in.", "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ما هي أسماء الإجراءات التي تم تدريب الطبيب جون وين فيها؟", "db_id": "hospital_1"}
{"question": "What are the names of procedures physician John Wen was trained in?", "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ابحث عن جميع الإجراءات التي تكلف أكثر من 1000 أو التي تم تدريب الطبيب جون وين فيها.", "db_id": "hospital_1"}
{"question": "Find all procedures which cost more than 1000 or which physician John Wen was trained in.", "query": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ما هي الإجراءات التي تكلف أكثر من 1000 أو يتخصص فيها الطبيب جون وين؟", "db_id": "hospital_1"}
{"question": "What are the procedures that cost more than 1000 or are specialized in by physician John Wen?", "query": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ابحث عن أسماء جميع الإجراءات التي تكلف أكثر من 1000 ولكن الطبيب جون وين لم يتم تدريبه فيها.", "db_id": "hospital_1"}
{"question": "Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?", "query": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "من بين الإجراءات التي تكلف أكثر من 1000، أيها لم يتخصص فيها الطبيب جون وين؟", "db_id": "hospital_1"}
{"question": "Among the procedures that cost more than 1000, which were not specialized in by physician John Wen?", "query": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ابحث عن أسماء جميع الإجراءات بحيث تكون التكلفة أقل من 5000 وكان الطبيب جون وين قد تم تدريبه فيها.", "db_id": "hospital_1"}
{"question": "Find the names of all procedures such that the cost is less than 5000 and physician John Wen was trained in.", "query": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ما هي الإجراءات التي تكلف أقل من 5000 والتي يكون الطبيب جون وين قد تم تدريبه فيها؟", "db_id": "hospital_1"}
{"question": "What procedures cost less than 5000 and have John Wen as a trained physician?", "query": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "arabic": "ابحث عن أسماء الأطباء الذين ينتمون إلى كل من أقسام الجراحة وعلم النفس.", "db_id": "hospital_1"}
{"question": "Find the name of physicians who are affiliated with both Surgery and Psychiatry departments.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'", "arabic": "أي الأطباء ينتمون إلى كل من أقسام الجراحة وعلم النفس؟ قل لي أسمائهم.", "db_id": "hospital_1"}
{"question": "Which physicians are affiliated with both Surgery and Psychiatry departments? Tell me their names.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'", "arabic": "ابحث عن أسماء الأطباء الذين ينتمون إلى إما قسم الجراحة أو علم النفس.", "db_id": "hospital_1"}
{"question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'", "arabic": "أي الأطباء ينتمون إلى إما قسم الجراحة أو علم النفس؟ أعطني أسمائهم.", "db_id": "hospital_1"}
{"question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'", "arabic": "ابحث عن أسماء المرضى الذين لا يستخدمون دواء \"بروكراستين-إكس\".", "db_id": "hospital_1"}
{"question": "Find the names of patients who are not using the medication of Procrastin-X.", "query": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'", "arabic": "ما هي أسماء المرضى الذين لا يتناولون دواء \"بروكراستين-إكس\"؟", "db_id": "hospital_1"}
{"question": "What are the names of patients who are not taking the medication of Procrastin-X.", "query": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'", "arabic": "ابحث عن عدد المرضى الذين لا يستخدمون دواء \"بروكراستين-إكس\".", "db_id": "hospital_1"}
{"question": "Find the number of patients who are not using the medication of Procrastin-X.", "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )", "arabic": "كم عدد المرضى الذين لا يستخدمون \"بروكراستين-إكس\" كدواء؟", "db_id": "hospital_1"}
{"question": "How many patients are not using Procrastin-X as medication?", "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )", "arabic": "كم عدد المواعيد؟", "db_id": "hospital_1"}
{"question": "How many appointments are there?", "query": "SELECT count(*) FROM appointment", "arabic": "حساب عدد المواعيد التي تم إجراؤها بشكل إجمالي.", "db_id": "hospital_1"}
{"question": "Count how many appointments have been made in total.", "query": "SELECT count(*) FROM appointment", "arabic": "ابحث عن أسماء الممرضات اللاتي يكونن في خدمة الاستدعاء.", "db_id": "hospital_1"}
{"question": "Find the names of nurses who are on call.", "query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse", "arabic": "ما هي الأسماء المميزة للممرضات في خدمة الاستدعاء؟", "db_id": "hospital_1"}
{"question": "What are the distinct names of nurses on call?", "query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse", "arabic": "كم عدد السفن؟", "db_id": "hospital_1"}
{"question": "How many ships are there?", "query": "SELECT count(*) FROM ship", "arabic": "ما هو عدد السفن؟", "db_id": "ship_mission"}
{"question": "What is the number of ships?", "query": "SELECT count(*) FROM ship", "arabic": "قائمة أسماء السفن بترتيب تصاعدي حسب الوزن.", "db_id": "ship_mission"}
{"question": "List the name of ships in ascending order of tonnage.", "query": "SELECT Name FROM ship ORDER BY Tonnage ASC", "arabic": "ما هي أسماء السفن المرتبة حسب الوزن بترتيب تصاعدي؟", "db_id": "ship_mission"}
{"question": "what are the names of the ships ordered by ascending tonnage?", "query": "SELECT Name FROM ship ORDER BY Tonnage ASC", "arabic": "ما هو نوع وجنسية السفن؟", "db_id": "ship_mission"}
{"question": "What are the type and nationality of ships?", "query": "SELECT TYPE ,  Nationality FROM ship", "arabic": "ما هي أنواع وجنسيات كل سفينة؟", "db_id": "ship_mission"}
{"question": "What are the types and nationalities of every ship?", "query": "SELECT TYPE ,  Nationality FROM ship", "arabic": "أذكر أسماء السفن التي لا تحمل الجنسية \"الولايات المتحدة\".", "db_id": "ship_mission"}
{"question": "List the name of ships whose nationality is not \"United States\".", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "arabic": "ما هي أسماء السفن التي ليست من الولايات المتحدة؟", "db_id": "ship_mission"}
{"question": "What are the names of the ships that are not from the United States?", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "arabic": "أظهر أسماء السفن التي تكون جنسيتها إما من الولايات المتحدة أو المملكة المتحدة؟", "db_id": "ship_mission"}
{"question": "Show the name of ships whose nationality is either United States or United Kingdom.", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "arabic": "ما هي أسماء السفن التي تكون جنسيتها إما من الولايات المتحدة أو المملكة المتحدة؟", "db_id": "ship_mission"}
{"question": "What are the names of the ships  that are from either the US or the UK?", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "arabic": "ما هي أسماء السفن التي تأتي من الولايات المتحدة أو المملكة المتحدة؟", "db_id": "ship_mission"}
{"question": "What is the name of the ship with the largest tonnage?", "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1", "arabic": "ما هو اسم السفينة ذات أكبر حمولة؟", "db_id": "ship_mission"}
{"question": "What is the ship with the largest amount of tonnage called?", "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1", "arabic": "أظهر أنواع السفن المختلفة وعدد السفن من كل نوع.", "db_id": "ship_mission"}
{"question": "Show different types of ships and the number of ships of each type.", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "arabic": "لكل نوع، كم عدد السفن؟", "db_id": "ship_mission"}
{"question": "For each type, how many ships are there?", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "arabic": "يرجى إظهار النوع الأكثر شيوعًا من السفن.", "db_id": "ship_mission"}
{"question": "Please show the most common type of ships.", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو النوع الأكثر شيوعًا من السفن؟", "db_id": "ship_mission"}
{"question": "What is the most common type of ships?", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "اذكر الدول التي لديها أكثر من سفينتين.", "db_id": "ship_mission"}
{"question": "List the nations that have more than two ships.", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "arabic": "ما هي الدول التي لديها أكثر من سفينتين؟", "db_id": "ship_mission"}
{"question": "What are the nations that have more than two ships?", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "arabic": "أظهر أنواع السفن المختلفة والحمولة المتوسطة للسفن من كل نوع.", "db_id": "ship_mission"}
{"question": "Show different types of ships and the average tonnage of ships of each type.", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "arabic": "لكل نوع، ما هي الحمولة المتوسطة؟", "db_id": "ship_mission"}
{"question": "For each type, what is the average tonnage?", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "arabic": "أظهر الرموز والمصائر للمهمات، وأسماء السفن المتورطة.", "db_id": "ship_mission"}
{"question": "Show codes and fates of missions, and names of ships involved.", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "arabic": "ما هي رموز المهمات، والمصائر، وأسماء السفن المتورطة؟", "db_id": "ship_mission"}
{"question": "What are the mission codes, fates, and names of the ships involved?", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "arabic": "أظهر أسماء السفن المشاركة في مهمة تم إطلاقها بعد عام 1928.", "db_id": "ship_mission"}
{"question": "Show names of ships involved in a mission launched after 1928.", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "arabic": "ما هي أسماء السفن التي شاركت في مهمة تم إطلاقها بعد عام 1928؟", "db_id": "ship_mission"}
{"question": "What are the names of ships that were involved in a mission launched after 1928?", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "arabic": "أظهر مصير متميز للمهام التي تشمل سفنًا بجنسية \"الولايات المتحدة\".", "db_id": "ship_mission"}
{"question": "Show the distinct fate of missions that involve ships with nationality \"United States\"", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "arabic": "ما هي المصائر المختلفة للمهمة التي شاركت فيها سفن من الولايات المتحدة؟", "db_id": "ship_mission"}
{"question": "What are the different fates of the mission that involved ships from the United States?", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "arabic": "اذكر أسماء السفن التي لم تشترك في أي مهمة.", "db_id": "ship_mission"}
{"question": "List the name of ships that are not involved in any mission", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "arabic": "ما هي أسماء السفن التي لم تشترك في أي مهمات؟", "db_id": "ship_mission"}
{"question": "What are the names of the ships that are not involved in any missions?", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "arabic": "أظهر أنواع السفن التي تحتوي على سفن ذات حمولة أكبر من 6000 وسفن ذات حمولة أصغر من 4000.", "db_id": "ship_mission"}
{"question": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.", "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000", "arabic": "ما هي أنواع السفن التي تحتوي على سفن ذات حمولة أكبر من 6000 وأخرى ذات حمولة أقل من 4000؟", "db_id": "ship_mission"}
{"question": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?", "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000", "arabic": "ابحث عن عدد الطلاب بالكلية.", "db_id": "ship_mission"}
{"question": "Find the number of students in total.", "query": "SELECT count(*) FROM list", "arabic": "كم عدد الطلاب؟", "db_id": "student_1"}
{"question": "How many students are there?", "query": "SELECT count(*) FROM list", "arabic": "ابحث عن أسماء العائلة للطلاب الدارسين في الغرفة 111.", "db_id": "student_1"}
{"question": "Find the last names of students studying in room 111.", "query": "SELECT lastname FROM list WHERE classroom  =  111", "arabic": "ما هي أسماء العائلة للطلاب في الغرفة 111؟", "db_id": "student_1"}
{"question": "What are the last names of students in room 111?", "query": "SELECT lastname FROM list WHERE classroom  =  111", "arabic": "ابحث عن أسماء الطلاب الذين يدرسون في الغرفة 108.", "db_id": "student_1"}
{"question": "Find the first names of students studying in room 108.", "query": "SELECT firstname FROM list WHERE classroom  =  108", "arabic": "ما هي أسماء الطلاب في الغرفة 108؟", "db_id": "student_1"}
{"question": "What are the first names of students in room 108?", "query": "SELECT firstname FROM list WHERE classroom  =  108", "arabic": "ما هي أسماء الطلاب الذين يدرسون في الغرفة 107؟", "db_id": "student_1"}
{"question": "What are the first names of students studying in room 107?", "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107", "arabic": "اذكر أسماء الطلاب الأولى في الغرفة 107.", "db_id": "student_1"}
{"question": "List the first names of all the students in room 107.", "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107", "arabic": "ما هو رقم الصف ورقم الفصل الدراسي لكل فصل؟", "db_id": "student_1"}
{"question": "For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.", "query": "SELECT DISTINCT classroom ,  grade FROM list", "arabic": "ما هي أرقام الصف وأرقام الفصل الدراسي لكل فصل في القائمة؟", "db_id": "student_1"}
{"question": "What are the grade number and classroom number of each class in the list?", "query": "SELECT DISTINCT classroom ,  grade FROM list", "arabic": "أي درجة تدرس في الفصل 103؟", "db_id": "student_1"}
{"question": "Which grade is studying in classroom 103?", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103", "arabic": "ابحث عن الصف الذي يُدرَّس في الفصل 103.", "db_id": "student_1"}
{"question": "Find the grade taught in classroom 103.", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103", "arabic": "ابحث عن الصف الدراسي في الغرفة 105.", "db_id": "student_1"}
{"question": "Find the grade studying in room 105.", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105", "arabic": "أي درجة تدرس في الغرفة 105؟", "db_id": "student_1"}
{"question": "Which grade is studying in room 105?", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105", "arabic": "أي الفصول الدراسية تُستخدَم من قبل الصف الرابع؟", "db_id": "student_1"}
{"question": "Which classrooms are used by grade 4?", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4", "arabic": "ابحث عن الفصول الدراسية التي يدرس فيها الصف الرابع.", "db_id": "student_1"}
{"question": "Find the classrooms in which grade 4 is studying.", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4", "arabic": "أي الفصول الدراسية تُستخدم من قبل الصف الخامس؟", "db_id": "student_1"}
{"question": "Which classrooms are used by grade 5?", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5", "arabic": "أظهر لي الفصول الدراسية التي يستخدمها الصف الخامس.", "db_id": "student_1"}
{"question": "Show me the classrooms grade 5 is using.", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5", "arabic": "ابحث عن أسماء العائلة للمعلمين الذين يدرسون الصف الخامس.", "db_id": "student_1"}
{"question": "Find the last names of the teachers that teach fifth grade.", "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5", "arabic": "ما هي أسماء العائلة للمعلمين الذين يدرسون الصف الخامس؟", "db_id": "student_1"}
{"question": "what are the last names of the teachers who teach grade 5?", "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5", "arabic": "ابحث عن أسماء الأولاد للمعلمين الذين يدرسون الصف الأول.", "db_id": "student_1"}
{"question": "Find the first names of the teachers that teach first grade.", "query": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1", "arabic": "ما هي أسماء الأولاد للمعلمين الذين يدرسون الصف الأول؟", "db_id": "student_1"}
{"question": "What are the first names of the teachers who teach grade 1?", "query": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1", "arabic": "ابحث عن أسماء الأولاد لجميع المعلمين الذين يدرسون في الفصل 110.", "db_id": "student_1"}
{"question": "Find the first names of all the teachers that teach in classroom 110.", "query": "SELECT firstname FROM teachers WHERE classroom  =  110", "arabic": "ما هما أسماء المعلمين الذين يدرسون في الفصل 110؟ أعطني أسماؤهم الأولى.", "db_id": "student_1"}
{"question": "Which teachers teach in classroom 110? Give me their first names.", "query": "SELECT firstname FROM teachers WHERE classroom  =  110", "arabic": "ابحث عن أسماء العائلة للمعلمين الذين يدرسون في الفصل 109.", "db_id": "student_1"}
{"question": "Find the last names of teachers teaching in classroom 109.", "query": "SELECT lastname FROM teachers WHERE classroom  =  109", "arabic": "أي المعلمين يدرسون في الفصل 109؟ أعطني أسماء عائلاتهم.", "db_id": "student_1"}
{"question": "Which teachers teach in classroom 109? Give me their last names.", "query": "SELECT lastname FROM teachers WHERE classroom  =  109", "arabic": "أعطني الاسم الأول والاسم الأخير لجميع المعلمين.", "db_id": "student_1"}
{"question": "Report the first name and last name of all the teachers.", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers", "arabic": "ما هي الاسم الأول والاسم الأخير لجميع المعلمين؟", "db_id": "student_1"}
{"question": "What are the first name and last name of all the teachers?", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers", "arabic": "أعطني الاسم الأول والاسم الأخير لجميع الطلاب.", "db_id": "student_1"}
{"question": "Report the first name and last name of all the students.", "query": "SELECT DISTINCT firstname ,  lastname FROM list", "arabic": "أظهر اسم العائلة والاسم الأول لكل طالب.", "db_id": "student_1"}
{"question": "Show each student's first name and last name.", "query": "SELECT DISTINCT firstname ,  lastname FROM list", "arabic": "ابحث عن جميع الطلاب الذين يدرسهم \"OTHA MOYER\". أظهر الاسم الأول والاسم الأخير للطلاب.", "db_id": "student_1"}
{"question": "Find all students taught by OTHA MOYER. Output the first and last names of the students.", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "arabic": "أي الطلاب يدرسون تحت إشراف المعلم المسمى \"OTHA MOYER\"؟ أعطني الاسم الأول والاسم الأخير للطلاب.", "db_id": "student_1"}
{"question": "Which students study under the teacher named OTHA MOYER? Give me the first and last names of the students.", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "arabic": "ابحث عن جميع الطلاب الذين يدرسهم \"MARROTTE KIRK\". أظهر الاسم الأول والاسم الأخير للطلاب.", "db_id": "student_1"}
{"question": "Find all students taught by MARROTTE KIRK. Output first and last names of students.", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"", "arabic": "ما هي الأسماء الأولية والعائلية للطلاب الذين يدرسهم \"MARROTTE KIRK\"؟", "db_id": "student_1"}
{"question": "Which are the first and last names of the students taught by MARROTTE KIRK?", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"", "arabic": "ابحث عن الاسم الأول والعائلي لجميع المعلمين الذين يدرسون \"EVELINA BROMLEY\".", "db_id": "student_1"}
{"question": "Find the first and last name of all the teachers that teach EVELINA BROMLEY.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"", "arabic": "أي المعلمين يدرسون الطالب المسمى \"EVELINA BROMLEY\"؟ أعطني الاسم الأول والعائلي للمعلمين.", "db_id": "student_1"}
{"question": "Which teachers teach the student named EVELINA BROMLEY? Give me the first and last name  of the teachers.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"", "arabic": "ابحث عن أسماء العائلة لجميع المعلمين الذين يدرسون \"GELL TAMI\".", "db_id": "student_1"}
{"question": "Find the last names of all the teachers that teach GELL TAMI.", "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\"", "arabic": "ما هي أسماء العائلة للمعلمين الذين يدرسون الطالب المسمى \"GELL TAMI\"؟", "db_id": "student_1"}
{"question": "What are the last names of the teachers who teach the student called GELL TAMI?", "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\"", "arabic": "كم طالبا يدرسهم LORIA ONDERSMA؟", "db_id": "student_1"}
{"question": "How many students does LORIA ONDERSMA teaches?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\"", "arabic": "عدد طلاب المعلم LORIA ONDERSMA.", "db_id": "student_1"}
{"question": "Count the number of students the teacher LORIA ONDERSMA teaches.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\"", "arabic": "كم طالبا يدرسهم KAWA GORDON؟", "db_id": "student_1"}
{"question": "How many students does KAWA GORDON teaches?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\"", "arabic": "ابحث عن عدد الطلاب الذين يدرسهم المعلم KAWA GORDON.", "db_id": "student_1"}
{"question": "Find the number of students taught by the teacher KAWA GORDON.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\"", "arabic": "ابحث عن عدد الطلاب الذين يدرسهم TARRING LEIA.", "db_id": "student_1"}
{"question": "Find the number of students taught by TARRING LEIA.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\"", "arabic": "كم طالبا يدرسهم المعلم TARRING LEIA؟", "db_id": "student_1"}
{"question": "How many students are taught by teacher TARRING LEIA?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\"", "arabic": "كم معلما يدرس الطالب المسمى CHRISSY NABOZNY؟", "db_id": "student_1"}
{"question": "How many teachers does the student named CHRISSY NABOZNY have?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"CHRISSY\" AND T1.lastname  =  \"NABOZNY\"", "arabic": "ابحث عن عدد المعلمين الذين يدرسون الطالب المسمى CHRISSY NABOZNY.", "db_id": "student_1"}
{"question": "Find the number of teachers who teach the student called CHRISSY NABOZNY.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"CHRISSY\" AND T1.lastname  =  \"NABOZNY\"", "arabic": "كم معلما يدرس الطالب المسمى MADLOCK RAY؟", "db_id": "student_1"}
{"question": "How many teachers does the student named MADLOCK RAY have?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\"", "arabic": "ابحث عن عدد المعلمين الذين يدرسون الطالب المسمى MADLOCK RAY.", "db_id": "student_1"}
{"question": "Find the number of teachers who teach the student called MADLOCK RAY.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\"", "arabic": "ابحث عن جميع الطلاب في الصف الأول الذين لا يدرسهم OTHA MOYER. أبلغ عن أسمائهم الأولية والعائلية.", "db_id": "student_1"}
{"question": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names.", "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "arabic": "ما هي الأسماء الأولية والعائلية لطلاب الصف الأول الذين لا يدرسهم المعلم OTHA MOYER؟", "db_id": "student_1"}
{"question": "What are the first and last names of the first-grade students who are NOT taught by teacher OTHA MOYER?", "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "arabic": "ابحث عن أسماء العائلة للطلاب في الصف الثالث الذين لا يدرسهم COVIN JEROME.", "db_id": "student_1"}
{"question": "Find the last names of the students in third grade that are not taught by COVIN JEROME.", "query": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\"", "arabic": "أي الطلاب في الصف الثالث لا يدرسهم المعلم COVIN JEROME؟ أعطني أسماء العائلة للطلاب.", "db_id": "student_1"}
{"question": "Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students.", "query": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\"", "arabic": "لكل صف، أبلغ عن الصف وعدد الفصول التي يُدرّس فيها والعدد الإجمالي للطلاب في الصف.", "db_id": "student_1"}
{"question": "For each grade, report the grade, the number of classrooms in which it is taught and the total number of students in the grade.", "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade", "arabic": "لكل صف، ارجع رقم الصف، وعدد الفصول المستخدمة للصف، والعدد الإجمالي للطلاب المسجلين في الصف.", "db_id": "student_1"}
{"question": "For each grade, return the grade number, the number of classrooms used for the grade, and the total number of students enrolled in the grade.", "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade", "arabic": "لكل فصل دراسي، أبلغ عن رقم الفصل الدراسي وعدد الصفوف التي تستخدمه.", "db_id": "student_1"}
{"question": "For each classroom, report the classroom number and the number of grades using it.", "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom", "arabic": "لكل فصل دراسي، أظهر رقم الفصل الدراسي واحسب عدد الصفوف المميزة التي تستخدم الغرفة.", "db_id": "student_1"}
{"question": "For each classroom, show the classroom number and count the number of distinct grades that use the room.", "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom", "arabic": "أي فصل دراسي يحتوي على أكبر عدد من الطلاب؟", "db_id": "student_1"}
{"question": "Which classroom has the most students?", "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن الفصل الدراسي الذي يستخدمه أكبر عدد من الطلاب.", "db_id": "student_1"}
{"question": "Find the classroom that the most students use.", "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1", "arabic": "أبلغ عن عدد الطلاب في كل فصل دراسي.", "db_id": "student_1"}
{"question": "Report the number of students in each classroom.", "query": "SELECT classroom ,  count(*) FROM list GROUP BY classroom", "arabic": "لكل فصل دراسي، أظهر رقم الفصل الدراسي وابحث عن عدد الطلاب الذين يستخدمونه.", "db_id": "student_1"}
{"question": "For each classroom, show the classroom number and find how many students are using it.", "query": "SELECT classroom ,  count(*) FROM list GROUP BY classroom", "arabic": "لكل فصل دراسي في الصف الأول، أبلغ عن العدد الإجمالي للطلاب.", "db_id": "student_1"}
{"question": "For each grade 0 classroom, report the total number of students.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom", "arabic": "لكل فصل دراسي في الصف الأول، ارجع رقم الفصل الدراسي وعدد الطلاب.", "db_id": "student_1"}
{"question": "For each grade 0 classroom, return the classroom number and the count of students.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom", "arabic": "أبلغ عن العدد الإجمالي للطلاب في كل فصل دراسي من الصف الرابع.", "db_id": "student_1"}
{"question": "Report the total number of students for each fourth-grade classroom.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom", "arabic": "لكل فصل دراسي في الصف الرابع، أظهر رقم الفصل الدراسي والعدد الإجمالي للطلاب الذين يستخدمونه.", "db_id": "student_1"}
{"question": "For each fourth-grade classroom, show the classroom number and the total number of students using it.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom", "arabic": "ابحث عن اسم المعلم الذي يدرس أكبر عدد من الطلاب.", "db_id": "student_1"}
{"question": "Find the name of the teacher who teaches the largest number of students.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "أي معلم يدرس أكبر عدد من الطلاب؟ أعطني الاسم الأول واسم العائلة للمعلم.", "db_id": "student_1"}
{"question": "Which teacher teaches the most students? Give me the first name and last name of the teacher.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن عدد الطلاب في فصل واحد.", "db_id": "student_1"}
{"question": "Find the number of students in one classroom.", "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom", "arabic": "كم عدد الطلاب في فصل واحد؟", "db_id": "student_1"}
{"question": "How many students does one classroom have?", "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom", "arabic": "كم عدد الشركات التي يقع مقرها الرئيسي في الولايات المتحدة؟", "db_id": "student_1"}
{"question": "How many companies are headquartered in the US?", "query": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'", "arabic": "قائمة أسماء الشركات بترتيب تصاعدي حسب عدد المبيعات.", "db_id": "company_employee"}
{"question": "List the names of companies by ascending number of sales.", "query": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC", "arabic": "ما هي المقرات الرئيسية والصناعات لجميع الشركات؟", "db_id": "company_employee"}
{"question": "What are the headquarters and industries of all companies?", "query": "SELECT Headquarters ,  Industry FROM company", "arabic": "أظهر أسماء الشركات في صناعة البنوك أو التجزئة؟", "db_id": "company_employee"}
{"question": "Show the names of companies in the banking or retailing industry?", "query": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\"", "arabic": "ما هو الحد الأقصى والحد الأدنى لقيمة السوق للشركات؟", "db_id": "company_employee"}
{"question": "What is the maximum and minimum market value of companies?", "query": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company", "arabic": "ما هي المقر الرئيسي للشركة التي تحقق أكبر مبيعات؟", "db_id": "company_employee"}
{"question": "What is the headquarter of the company with the largest sales?", "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1", "arabic": "أظهر المقرات الرئيسية المختلفة وعدد الشركات في كل مقر.", "db_id": "company_employee"}
{"question": "Show the different headquarters and number of companies at each headquarter.", "query": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters", "arabic": "أظهر المقر الرئيسي الأكثر شيوعًا للشركات.", "db_id": "company_employee"}
{"question": "Show the most common headquarter for companies.", "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر المقرات الرئيسية التي تحتوي على ما لا يقل عن شركتين.", "db_id": "company_employee"}
{"question": "Show the headquarters that have at least two companies.", "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2", "arabic": "أظهر المقرات الرئيسية التي تحتوي على شركات في صناعة البنوك وشركات في صناعة النفط والغاز.", "db_id": "company_employee"}
{"question": "Show the headquarters that have both companies in banking industry and companies in oil and gas industry.", "query": "SELECT Headquarters FROM company WHERE Industry  =  \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Oil and gas\"", "arabic": "أظهر أسماء الشركات وأسماء الموظفين.", "db_id": "company_employee"}
{"question": "Show the names of companies and of employees.", "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID", "arabic": "أظهر أسماء الشركات وأسماء الموظفين بترتيب تنازلي حسب عدد سنوات العمل للموظف ذلك.", "db_id": "company_employee"}
{"question": "Show names of companies and that of employees in descending order of number of years working for that employee.", "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working", "arabic": "أظهر أسماء الموظفين الذين يعملون لدى شركات تفوق مبيعاتها 200.", "db_id": "company_employee"}
{"question": "Show the names of employees that work for companies with sales bigger than 200.", "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200", "arabic": "أظهر أسماء الشركات وعدد الموظفين الذين يعملون بها.", "db_id": "company_employee"}
{"question": "Show the names of companies and the number of employees they have", "query": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name", "arabic": "قائمة أسماء الأشخاص الذين لا يعملون لدى أي شركة.", "db_id": "company_employee"}
{"question": "List the names of people that are not employed by any company", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)", "arabic": "ما هي أسماء الشركات التي تحقق مبيعات تزيد عن 200 بترتيب تنازلي حسب المبيعات والأرباح؟", "db_id": "company_employee"}
{"question": "list the names of the companies with more than 200 sales in the descending order of sales and profits.", "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC", "arabic": "كم فيلم هناك؟", "db_id": "company_employee"}
{"question": "How many film are there?", "query": "SELECT count(*) FROM film", "arabic": "عدد الأفلام.", "db_id": "film_rank"}
{"question": "Count the number of films.", "query": "SELECT count(*) FROM film", "arabic": "قائمة بمخرجي الأفلام المختلفين.", "db_id": "film_rank"}
{"question": "List the distinct director of all films.", "query": "SELECT DISTINCT Director FROM film", "arabic": "ما هي مخرجي الأفلام المختلفين؟", "db_id": "film_rank"}
{"question": "What are the different film Directors?", "query": "SELECT DISTINCT Director FROM film", "arabic": "ما هو المتوسط ​​لإجمالي مبيعات التذاكر بالدولار للأفلام؟", "db_id": "film_rank"}
{"question": "What is the average ticket sales gross in dollars of films?", "query": "SELECT avg(Gross_in_dollar) FROM film", "arabic": "ما هو المتوسط ​​لإجمالي مبيعات التذاكر بالدولار عبر جميع الأفلام؟", "db_id": "film_rank"}
{"question": "Return the average gross sales in dollars across all films.", "query": "SELECT avg(Gross_in_dollar) FROM film", "arabic": "ما هي التقديرات المنخفضة والعالية لأسواق الأفلام؟", "db_id": "film_rank"}
{"question": "What are the low and high estimates of film markets?", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation", "arabic": "عائدات التقديرات المنخفضة والعالية لجميع أسواق الأفلام.", "db_id": "film_rank"}
{"question": "Return the low and high estimates for all film markets.", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation", "arabic": "ما هي أنواع تقديرات سوق الأفلام في عام 1995؟", "db_id": "film_rank"}
{"question": "What are the types of film market estimations in year 1995?", "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995", "arabic": "أنواع تقديرات سوق الأفلام في عام 1995.", "db_id": "film_rank"}
{"question": "Return the types of film market estimations in 1995.", "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995", "arabic": "ما هو الحد الأقصى والحد الأدنى لعدد المدن في جميع الأسواق؟", "db_id": "film_rank"}
{"question": "What are the maximum and minimum number of cities in all markets.", "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market", "arabic": "الحد الأقصى والحد الأدنى لعدد المدن عبر جميع الأسواق.", "db_id": "film_rank"}
{"question": "Return the maximum and minimum number of cities across all markets.", "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market", "arabic": "كم عدد الأسواق التي يبلغ عدد المدن فيها أقل من 300؟", "db_id": "film_rank"}
{"question": "How many markets have number of cities smaller than 300?", "query": "SELECT count(*) FROM market WHERE Number_cities  <  300", "arabic": "عدد الأسواق التي يكون فيها عدد المدن أقل من 300.", "db_id": "film_rank"}
{"question": "Count the number of markets that have a number of cities lower than 300.", "query": "SELECT count(*) FROM market WHERE Number_cities  <  300", "arabic": "ما هي جميع الدول للأسواق بترتيب تصاعدي أبجديًا؟", "db_id": "film_rank"}
{"question": "List all countries of markets in ascending alphabetical order.", "query": "SELECT Country FROM market ORDER BY Country ASC", "arabic": "ما هي الدول لكل سوق، مرتبة ترتيباً أبجدياً؟", "db_id": "film_rank"}
{"question": "What are the countries for each market, ordered alphabetically?", "query": "SELECT Country FROM market ORDER BY Country ASC", "arabic": "ما هي جميع الدول للأسواق بترتيب تنازلي حسب عدد المدن؟", "db_id": "film_rank"}
{"question": "List all countries of markets in descending order of number of cities.", "query": "SELECT Country FROM market ORDER BY Number_cities DESC", "arabic": "ما هي الدول لكل سوق مرتبة بترتيب تنازلي حسب عدد المدن؟", "db_id": "film_rank"}
{"question": "What are the countries for each market ordered by decreasing number of cities?", "query": "SELECT Country FROM market ORDER BY Number_cities DESC", "arabic": "يرجى عرض عناوين الأفلام وأنواع تقديرات السوق.", "db_id": "film_rank"}
{"question": "Please show the titles of films and the types of market estimations.", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID", "arabic": "ما هي عناوين الأفلام وأنواع تقديرات السوق المقابلة؟", "db_id": "film_rank"}
{"question": "What are the titles of films and corresponding types of market estimations?", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID", "arabic": "أظهر مخرجي الأفلام المتميزين مع تقديرات السوق في عام 1995.", "db_id": "film_rank"}
{"question": "Show the distinct director of films with market estimation in the year of 1995.", "query": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995", "arabic": "من هم المخرجون المختلفون للأفلام التي كانت لها تقديرات سوقية في عام 1995؟", "db_id": "film_rank"}
{"question": "Who are the different directors of films which had market estimation in 1995?", "query": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995", "arabic": "ما هو المتوسط ​​لعدد المدن للأسواق ذات تقدير سوقي منخفض أكبر من 10000؟", "db_id": "film_rank"}
{"question": "What is the average number of cities of markets with low film market estimate bigger than 10000?", "query": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000", "arabic": "أعط متوسط ​​عدد المدن داخل الأسواق التي كان لها تقدير سوقي منخفض أكبر من 10000؟", "db_id": "film_rank"}
{"question": "Give the average number of cities within markets that had a low market estimation larger than 10000?", "query": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000", "arabic": "يرجى سرد الدول والسنوات لتقديرات أسواق الأفلام.", "db_id": "film_rank"}
{"question": "Please list the countries and years of film market estimations.", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID", "arabic": "ما هي الدول للأسواق وسنوات تقديراتها السوقية المقابلة؟", "db_id": "film_rank"}
{"question": "What are the countries of markets and their corresponding years of market estimation?", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID", "arabic": "يرجى سرد سنوات تقديرات أسواق الأفلام عندما تكون السوق في اليابان بترتيب تنازلي.", "db_id": "film_rank"}
{"question": "Please list the years of film market estimations when the market is in country \"Japan\" in descending order.", "query": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC", "arabic": "ما هي سنوات تقدير سوق الأفلام لسوق اليابان، مرتبة حسب ترتيب تنازلي للسنة؟", "db_id": "film_rank"}
{"question": "What are the years of film market estimation for the market of Japan, ordered by year descending?", "query": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC", "arabic": "قائمة الاستديوهات لكل فيلم وعدد الأفلام التي أنتجتها تلك الاستوديو.", "db_id": "film_rank"}
{"question": "List the studios of each film and the number of films produced by that studio.", "query": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio", "arabic": "كيف يتم إنتاج الأفلام من قبل كل استوديو؟", "db_id": "film_rank"}
{"question": "How films are produced by each studio?", "query": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio", "arabic": "قائمة أسماء استوديو الأفلام الذي لديه أكبر عدد من الأفلام.", "db_id": "film_rank"}
{"question": "List the name of film studio that have the most number of films.", "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو اسم الاستوديو الذي أنتج أكبر عدد من الأفلام؟", "db_id": "film_rank"}
{"question": "What is the name of teh studio that created the most films?", "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "قائمة أسماء الاستوديوهات التي لديها ما لا يقل عن اثنين من الأفلام.", "db_id": "film_rank"}
{"question": "List the names of studios that have at least two films.", "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2", "arabic": "ما هي أسماء الاستوديوهات التي أنتجت على الأقل فيلمين أو أكثر؟", "db_id": "film_rank"}
{"question": "What are the names of studios that have made two or more films?", "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2", "arabic": "قائمة عناوين الأفلام التي لا تحتوي على أي تقديرات سوقية.", "db_id": "film_rank"}
{"question": "List the title of films that do not have any market estimation.", "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)", "arabic": "ما هي عناوين الأفلام التي ليس لها تقديرات سوقية؟", "db_id": "film_rank"}
{"question": "What are the titles of films that do not have a film market estimation?", "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)", "arabic": "أظهر الاستوديوهات التي أنتجت أفلامًا بإخراج \"نيكولاس ماير\" و \"والتر هيل\".", "db_id": "film_rank"}
{"question": "Show the studios that have produced films with director \"Nicholas Meyer\" and \"Walter Hill\".", "query": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"", "arabic": "ما هي أسماء الاستوديوهات التي أنتجت أفلامًا بكل من نيكولاس ماير ووالتر هيل؟", "db_id": "film_rank"}
{"question": "What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill?", "query": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"", "arabic": "ابحث عن عناوين واستوديوهات الأفلام التي تم إنتاجها من قبل بعض استوديوهات الأفلام التي تحتوي على كلمة \"يونيفرسال\".", "db_id": "film_rank"}
{"question": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"", "arabic": "ما هي عناوين واستوديوهات الأفلام التي تم إنتاجها من قبل استوديو يحتوي على كلمة \"يونيفرسال\" في اسمه؟", "db_id": "film_rank"}
{"question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"", "arabic": "أظهر الاستوديوهات التي لم تنتج أفلامًا بإخراج \"والتر هيل\".", "db_id": "film_rank"}
{"question": "Show the studios that have not produced films with director \"Walter Hill\".", "query": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"", "arabic": "أي الاستوديوهات لم تعمل أبدًا مع المخرج والتر هيل؟", "db_id": "film_rank"}
{"question": "Which studios have never worked with the director Walter Hill?", "query": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"", "arabic": "قائمة الاستوديوهات التي متوسط إجمالي العائد لديها أعلى من 4500000.", "db_id": "film_rank"}
{"question": "List the studios which average gross is above 4500000.", "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000", "arabic": "أي الاستوديوهات لديها متوسط إجمالي أعلى من 4500000؟", "db_id": "film_rank"}
{"question": "Which studios have an average gross of over 4500000?", "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000", "arabic": "ما هو عنوان الفيلم الذي يحمل أعلى تقدير سوقي عالي؟", "db_id": "film_rank"}
{"question": "What is the title of the film that has the highest high market estimation.", "query": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1", "arabic": "ما هو عنوان الفيلم الذي يحمل أعلى تقدير سوقي عالي؟", "db_id": "film_rank"}
{"question": "Return the title of the film with the highest high estimate?", "query": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1", "arabic": "ما هي عناوين الأفلام والمخرجين الذين لم يتم عرض أفلامهم في الصين؟", "db_id": "film_rank"}
{"question": "What are the titles and directors of the films were never presented in China?", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "arabic": "ما هي عناوين الأفلام والمخرجين الذين لم تكن أفلامهم في سوق الصين؟", "db_id": "film_rank"}
{"question": "Return the titles and directors of films that were never in the market of China.", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "arabic": "كم عدد عناصر التقويم لدينا؟", "db_id": "film_rank"}
{"question": "How many calendar items do we have?", "query": "SELECT count(*) FROM Ref_calendar", "arabic": "عدد عناصر التقويم كلها.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Count the number of all the calendar items.", "query": "SELECT count(*) FROM Ref_calendar", "arabic": "أظهر جميع تواريخ التقويم وأرقام الأيام.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show all calendar dates and day Numbers.", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "arabic": "ما هي جميع تواريخ التقويم وأرقام الأيام؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are all the calendar dates and day Numbers?", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "arabic": "أظهر عدد أنواع المستندات.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the number of document types.", "query": "SELECT count(*) FROM Ref_document_types", "arabic": "كم عدد أنواع المستندات؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "How many document types are there?", "query": "SELECT count(*) FROM Ref_document_types", "arabic": "قائمة جميع أكواد أنواع المستندات وأسماء أنواع المستندات.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "List all document type codes and document type names.", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types", "arabic": "ما هي جميع أكواد أنواع المستندات وأسماء أنواع المستندات؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are all the document type codes and document type names?", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types", "arabic": "ما هو اسم ووصف كود نوع المستند RV؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the name and description for document type code RV?", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"", "arabic": "أعطني اسم ووصف كود نوع المستند RV.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Give me the name and description of the document type code RV.", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"", "arabic": "ما هو كود نوع المستند لنوع المستند \"ورقة\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the document type code for document type \"Paper\"?", "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"", "arabic": "ما هو رمز نوع المستند \"ورقة\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the code of the document type \"Paper\".", "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"", "arabic": "أظهر عدد الوثائق برمز نوع المستند CV أو BK.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the number of documents with document type code CV or BK.", "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\"", "arabic": "كم عدد الوثائق التي لها رمز نوع المستند CV أو BK؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "How many documents have document type code CV or BK?", "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\"", "arabic": "ما هو تاريخ تخزين المستند \"Marry CV\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the date when the document \"Marry CV\" was stored?", "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"", "arabic": "متى تم تخزين المستند المسمى \"Marry CV\"؟ أعطني التاريخ.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "When was the document named \"Marry CV\" stored? Give me the date.", "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"", "arabic": "ما هو رقم اليوم والتاريخ لجميع المستندات؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the day Number and date of all the documents?", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date", "arabic": "أعد الرقم اليومي والتاريخ المخزن لجميع المستندات.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Return the day Number and stored date for all the documents.", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date", "arabic": "ما هو اسم نوع المستند للمستند بالاسم \"كيفية قراءة كتاب\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the document type name for the document with name \"How to read a book\"?", "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"", "arabic": "ابحث عن اسم نوع المستند للمستند بالاسم \"كيفية قراءة كتاب\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the document type name of the document named \"How to read a book\".", "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"", "arabic": "أظهر عدد المواقع.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the number of locations.", "query": "SELECT count(*) FROM Ref_locations", "arabic": "كم عدد المواقع المدرجة في قاعدة البيانات؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "How many locations are listed in the database?", "query": "SELECT count(*) FROM Ref_locations", "arabic": "قائمة جميع رموز المواقع وأسماء المواقع.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "List all location codes and location names.", "query": "SELECT location_code ,  location_name FROM Ref_locations", "arabic": "ما هي جميع رموز المواقع وأسماء المواقع؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are all the location codes and location names?", "query": "SELECT location_code ,  location_name FROM Ref_locations", "arabic": "ما هي الاسم والوصف لرمز الموقع X؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the name and description for location code x?", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"", "arabic": "أعطني الاسم والوصف للموقع ذو الرمز X.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Give me the name and description of the location with code x.", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"", "arabic": "ما هو رمز الموقع للبلد \"كندا\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the location code for the country \"Canada\"?", "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"", "arabic": "أظهر رمز الموقع للبلد \"كندا\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the location code of the country \"Canada\".", "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"", "arabic": "كم عدد الأدوار؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "How many roles are there?", "query": "SELECT count(*) FROM ROLES", "arabic": "احسب العدد الإجمالي للأدوار المدرجة.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Count the total number of roles listed.", "query": "SELECT count(*) FROM ROLES", "arabic": "قائمة جميع رموز الأدوار وأسماء الأدوار ووصف الأدوار.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "List all role codes, role names, and role descriptions.", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES", "arabic": "ما هي جميع رموز الأدوار وأسماء الأدوار ووصف الأدوار؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are all the role codes, role names, and role descriptions?", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES", "arabic": "ما هي الاسم والوصف لرمز الدور \"MG\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the name and description for role code \"MG\"?", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"", "arabic": "اعثر على الاسم والوصف للدور ذو الرمز \"MG\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the name and description of the role with code \"MG\".", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"", "arabic": "أظهر الوصف لاسم الدور \"Proof Reader\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the description for role name \"Proof Reader\".", "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"", "arabic": "ما هو الوصف للاسم الدور \"Proof Reader\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the description of the role named \"Proof Reader\"?", "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"", "arabic": "كم عدد الموظفين لدينا؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "How many employees do we have?", "query": "SELECT count(*) FROM Employees", "arabic": "ابحث عن عدد الموظفين لدينا.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the number of employees we have.", "query": "SELECT count(*) FROM Employees", "arabic": "أظهر الاسم ورمز الدور وتاريخ الميلاد للموظف بالاسم 'أرماني'.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the name, role code, and date of birth for the employee with name 'Armani'.", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'", "arabic": "ما هي الاسم ورمز الدور وتاريخ الميلاد للموظف بالاسم 'أرماني'؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the name, role code, and date of birth of the employee named 'Armani'?", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'", "arabic": "ما هو الهوية للموظف المسمى إيبا؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the id for the employee called Ebba?", "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"", "arabic": "ما هو رمز الموظف بالاسم إيبا؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the id of the employee named Ebba.", "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"", "arabic": "أظهر أسماء جميع الموظفين ذوي الدور \"HR\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the names of all the employees with role \"HR\".", "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"", "arabic": "أي موظفين لديهم الدور برمز \"HR\"؟ ابحث عن أسمائهم.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Which employees have the role with code \"HR\"? Find their names.", "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"", "arabic": "أظهر جميع رموز الأدوار وعدد الموظفين في كل دور.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show all role codes and the number of employees in each role.", "query": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code", "arabic": "ما هو رمز كل دور وعدد الموظفين في كل دور؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the code of each role and the number of employees in each role?", "query": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code", "arabic": "ما هو رمز الدور الذي يحتوي على أكبر عدد من الموظفين؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the role code with the largest number of employees?", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن رمز الدور الذي يحتوي على أكبر عدد من الموظفين.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the code of the role that have the most employees.", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر جميع رموز الأدوار التي تحتوي على ما لا يقل عن 3 موظفين.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show all role codes with at least 3 employees.", "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3", "arabic": "ما هي الأدوار التي يوجد فيها ثلاثة أو أكثر من الموظفين؟ أعطني رموز الأدوار.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the roles with three or more employees? Give me the role codes.", "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3", "arabic": "أظهر رمز الدور الذي يحتوي على أقل عدد من الموظفين.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the role code with the least employees.", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو الدور الذي يحتوي على أقل عدد من الموظفين؟ ابحث عن رموز الأدوار.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the role with the smallest number of employees? Find the role codes.", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو اسم الدور ووصف الدور للموظف المسمى إيبا؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the role name and role description for employee called Ebba?", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"", "arabic": "أظهر اسم ووصف الدور الذي يلعبه الموظف بالاسم إيبا.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the name and description of the role played by the employee named Ebba.", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"", "arabic": "أظهر أسماء الموظفين ذوي الدور الذي يسمى \"Editor\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the names of employees with role name Editor.", "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"", "arabic": "ابحث عن أسماء جميع الموظفين الذين يكون اسم دورهم \"Editor\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the names of all the employees whose the role name is \"Editor\".", "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"", "arabic": "أظهر معرّفات الموظفين لجميع الموظفين ذوي اسم الدور \"Human Resource\" أو \"Manager\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\".", "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"", "arabic": "ما هي معرّفات الموظفين الذين يحملون اسم الدور \"Human Resource\" أو \"Manager\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the employee ids of the employees whose role name is \"Human Resource\" or \"Manager\"?", "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"", "arabic": "ما هي رموز المواقع المختلفة للوثائق؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the different location codes for documents?", "query": "SELECT DISTINCT location_code FROM Document_locations", "arabic": "أعطني كل رموز المواقع المميزة للوثائق.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Give me all the distinct location codes for documents.", "query": "SELECT DISTINCT location_code FROM Document_locations", "arabic": "أظهر اسم الموقع للوثيقة \"Robin CV\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the location name for document \"Robin CV\".", "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"", "arabic": "ما هو اسم الموقع للوثيقة \"Robin CV\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the location name of the document \"Robin CV\"?", "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"", "arabic": "أظهر رمز الموقع وتاريخ البدء وتاريخ الانتهاء في ذلك الموقع لجميع الوثائق.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the location code, the starting date and ending data in that location for all the documents.", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations", "arabic": "ما هي رموز المواقع وتواريخ البدء والانتهاء في تلك المواقع لكل وثيقة؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are each document's location code, and starting date and ending data in that location?", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations", "arabic": "ما هي \"التاريخ في الموقع من\" و \"التاريخ في الموقع إلى\" للوثيقة بالاسم \"Robin CV\"؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"", "arabic": "ابحث عن تاريخ البدء وتاريخ الانتهاء في الموقع للوثيقة المسماة \"Robin CV\".", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the starting date and ending data in location for the document named \"Robin CV\".", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"", "arabic": "أظهر رموز المواقع وعدد الوثائق في كل موقع.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the location codes and the number of documents in each location.", "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code", "arabic": "ما هو رمز كل موقع وعدد الوثائق في ذلك الموقع؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the code of each location and the number of documents in that location?", "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code", "arabic": "ما هو رمز الموقع الذي يحتوي على أكبر عدد من الوثائق؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What is the location code with the most documents?", "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن رمز الموقع الذي يحتوي على أكبر عدد من الوثائق.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Find the code of the location with the largest number of documents.", "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر رموز المواقع التي تحتوي على ما لا يقل عن 3 وثائق.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the location codes with at least 3 documents.", "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3", "arabic": "ما هي رموز المواقع التي تحتوي على ما لا يقل عن ثلاث وثائق؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the codes of the locations with at least three documents?", "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3", "arabic": "أظهر اسم الموقع ورمزه الذي يحتوي على أقل عدد من الوثائق.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the location name and code with the least documents.", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هي الاسم والرمز للموقع الذي يحتوي على أقل عدد من الوثائق؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the name and code of the location with the smallest number of documents?", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هي أسماء الموظفين الذين أذنوا بتدمير الوثائق والموظفين الذين قاموا بتدمير الوثائق المقابلة؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;", "arabic": "قم بسرد أسماء الموظفين الذين أذنوا بتدمير الوثائق والموظفين الذين قاموا بتدمير الوثائق المقابلة.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents.", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;", "arabic": "أظهر معرّف كل موظف وعدد الوثائق التي تم تدميرها بموافقة ذلك الموظف.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the id of each employee and the number of document destruction authorised by that employee.", "query": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID", "arabic": "ما هي معرّفات كل موظف وعدد الوثائق التي تم تدميرها بموافقة ذلك الموظف؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the id of each employee and the number of document destruction authorised by that employee?", "query": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID", "arabic": "أظهر معرّفات الموظفين وعدد الوثائق التي تم تدميرها بواسطة كل موظف.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the employee ids and the number of documents destroyed by each employee.", "query": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID", "arabic": "ما هي معرّفات كل موظف وعدد الوثائق التي تم تدميرها بواسطة ذلك الموظف؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the id of each employee and the number of document destroyed by that employee?", "query": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID", "arabic": "أظهر معرّفات الموظفين الذين لم يوافقوا على تدمير أي وثيقة.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the ids of the employees who don't authorize destruction for any document.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "ما هي الموظفين الذين لم يوافقوا على تدمير أي وثيقة؟ أعطني معرّفاتهم.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Which employees do not authorize destruction for any document? Give me their employee ids.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "أظهر معرّفات جميع الموظفين الذين وافقوا على تدمير الوثائق.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the ids of all employees who have authorized destruction.", "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "ما هي معرّفات جميع الموظفين الذين وافقوا على تدمير الوثائق؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the ids of all the employees who authorize document destruction?", "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "أظهر معرّفات جميع الموظفين الذين قاموا بتدمير وثيقة.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the ids of all employees who have destroyed a document.", "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "ما هي معرّفات جميع الموظفين الذين قاموا بتدمير الوثائق؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "What are the ids of all the employees who have destroyed documents?", "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "ما هي معرّفات جميع الموظفين الذين لا يدمرون أي وثيقة؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the ids of all employees who don't destroy any document.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "أي الموظفين لا يدمرون أي وثيقة؟ ابحث عن معرّفاتهم.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Which employees do not destroy any document? Find their employee ids.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "أظهر معرّفات جميع الموظفين الذين قاموا بتدمير وثيقة أو قاموا بالموافقة على ذلك.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Show the ids of all employees who have either destroyed a document or made an authorization to do this.", "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "من الموظفين الذين قاموا بتدمير وثيقة أو قاموا بالموافقة على ذلك؟ أعد معرّفاتهم.", "db_id": "cre_Doc_Tracking_DB"}
{"question": "Which employees have either destroyed a document or made an authorization to do so? Return their employee ids.", "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "arabic": "كم نادياً هنا؟", "db_id": "cre_Doc_Tracking_DB"}
{"question": "How many clubs are there?", "query": "SELECT count(*) FROM club", "arabic": "ما مجموع عدد النوادي؟", "db_id": "club_1"}
{"question": "Count the total number of clubs.", "query": "SELECT count(*) FROM club", "arabic": "ما هي أسماء جميع النوادي؟", "db_id": "club_1"}
{"question": "What are the names of all clubs?", "query": "SELECT clubname FROM club", "arabic": "أعطني اسم كل نادٍ.", "db_id": "club_1"}
{"question": "Give me the name of each club.", "query": "SELECT clubname FROM club", "arabic": "كم طالب هنا؟", "db_id": "club_1"}
{"question": "How many students are there?", "query": "SELECT count(*) FROM student", "arabic": "ما مجموع عدد الطلاب؟", "db_id": "club_1"}
{"question": "Count the total number of students.", "query": "SELECT count(*) FROM student", "arabic": "ما هي أسماء الطلاب جميعاً؟", "db_id": "club_1"}
{"question": "What are the first names of all the students?", "query": "SELECT DISTINCT fname FROM student", "arabic": "اعثر على اسم الطالب الأول.", "db_id": "club_1"}
{"question": "Find each student's first name.", "query": "SELECT DISTINCT fname FROM student", "arabic": "اعثر على أسماء العائلة لأعضاء نادي \"Bootup Baltimore\".", "db_id": "club_1"}
{"question": "Find the last names of the members of the club \"Bootup Baltimore\".", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "arabic": "من هم أعضاء نادي يحمل اسم \"Bootup Baltimore\"؟ أعطني أسماءهم الأخيرة.", "db_id": "club_1"}
{"question": "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names.", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "arabic": "من هم أعضاء نادي يحمل اسم \"Hopkins Student Enterprises\"؟ أظهر اسم العائلة.", "db_id": "club_1"}
{"question": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name.", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "arabic": "ما هو الاسم الأخير لأعضاء النادي المسمى \"Hopkins Student Enterprises\"؟", "db_id": "club_1"}
{"question": "Return the last name for the members of the club named \"Hopkins Student Enterprises\".", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "arabic": "كم عدد الأعضاء في نادي \"Tennis Club\"؟", "db_id": "club_1"}
{"question": "How many members does the club \"Tennis Club\" has?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"", "arabic": "عد أعضاء نادي \"Tennis Club\".", "db_id": "club_1"}
{"question": "Count the members of the club \"Tennis Club\".", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"", "arabic": "اعثر على عدد أعضاء نادي \"Pen and Paper Gaming\".", "db_id": "club_1"}
{"question": "Find the number of members of club \"Pen and Paper Gaming\".", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Pen and Paper Gaming\"", "arabic": "كم عدد الأشخاص الذين لديهم عضوية في نادي \"Pen and Paper Gaming\"؟\r\n\r", "db_id": "club_1"}
{"question": "How many people have membership in the club \"Pen and Paper Gaming\"?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Pen and Paper Gaming\"", "arabic": "كم ناديًا ينتمي \"ليندا سميث\" إليه؟", "db_id": "club_1"}
{"question": "How many clubs does \"Linda Smith\" belong to?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\"", "arabic": "كم ناديًا يمتلك \"ليندا سميث\" عضوية فيه؟\r\n\r", "db_id": "club_1"}
{"question": "How many clubs does \"Linda Smith\" have membership for?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\"", "arabic": "اعثر على عدد النوادي التي يكون \"تريسي كيم\" عضوًا فيها.", "db_id": "club_1"}
{"question": "Find the number of clubs where \"Tracy Kim\" is a member.", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Tracy\" AND t3.lname  =  \"Kim\"", "arabic": "لكم نادٍ يكون \"تريسي كيم\" عضوًا فيه؟\r\n\r", "db_id": "club_1"}
{"question": "For how many clubs is \"Tracy Kim\" a member?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Tracy\" AND t3.lname  =  \"Kim\"", "arabic": "ابحث عن جميع الأعضاء الإناث في نادي \"Bootup Baltimore\". أظهر الاسم الأول والاسم الأخير.", "db_id": "club_1"}
{"question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "arabic": "أعطني الاسم الأول والاسم الأخير لجميع الأعضاء الإناث في نادي \"Bootup Baltimore\".", "db_id": "club_1"}
{"question": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "arabic": "ابحث عن جميع الأعضاء الذكور في نادي \"Hopkins Student Enterprises\". أظهر الاسم الأول والاسم الأخير.", "db_id": "club_1"}
{"question": "Find all the male members of club \"Hopkins Student Enterprises\". Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"", "arabic": "ما هي الأسماء الأولى والأسماء الأخيرة لكل من الأعضاء الذكور في نادي \"Hopkins Student Enterprises\"؟", "db_id": "club_1"}
{"question": "What are the first name and last name of each male member in club \"Hopkins Student Enterprises\"?", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"", "arabic": "ابحث عن جميع أعضاء \"Bootup Baltimore\" الذين يدرسون \"600\". أظهر الاسم الأول والاسم الأخير.", "db_id": "club_1"}
{"question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"", "arabic": "من هم أعضاء \"Bootup Baltimore\" الذين يدرسون \"600\"؟ أعطني أسمائهم الأولى وأسمائهم الأخيرة.", "db_id": "club_1"}
{"question": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their first names and last names.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"", "arabic": "أي نادٍ يمتلك أكبر عدد من الأعضاء الذين يدرسون \"600\"؟", "db_id": "club_1"}
{"question": "Which club has the most members majoring in \"600\"?", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "arabic": "اعثر على النادي الذي يمتلك أكبر عدد من الأعضاء الذين يدرسون \"600\".", "db_id": "club_1"}
{"question": "Find the club which has the largest number of members majoring in \"600\".", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن اسم النادي الذي يمتلك أكبر عدد من الطالبات.", "db_id": "club_1"}
{"question": "Find the name of the club that has the most female students.", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نادٍ يمتلك أكبر عدد من الطالبات كأعضاء له؟ أعطني اسم النادي.", "db_id": "club_1"}
{"question": "Which club has the most female students as their members? Give me the name of the club.", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو وصف النادي المسمى \"Tennis Club\"؟", "db_id": "club_1"}
{"question": "What is the description of the club named \"Tennis Club\"?", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"", "arabic": "ابحث عن وصف النادي المسمى \"Tennis Club\".", "db_id": "club_1"}
{"question": "Find the description of the club called \"Tennis Club\".", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"", "arabic": "ابحث عن وصف النادي \"Pen and Paper Gaming\".", "db_id": "club_1"}
{"question": "Find the description of the club \"Pen and Paper Gaming\".", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "arabic": "ما هو وصف النادي \"Pen and Paper Gaming\"؟", "db_id": "club_1"}
{"question": "What is the description of the club \"Pen and Paper Gaming\"?", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "arabic": "ما هو موقع النادي المسمى \"Tennis Club\"؟", "db_id": "club_1"}
{"question": "What is the location of the club named \"Tennis Club\"?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"", "arabic": "أين يقع النادي المسمى \"Tennis Club\"؟", "db_id": "club_1"}
{"question": "Where us the club named \"Tennis Club\" located?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"", "arabic": "ابحث عن موقع النادي \"Pen and Paper Gaming\".", "db_id": "club_1"}
{"question": "Find the location of the club \"Pen and Paper Gaming\".", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "arabic": "أين يقع النادي \"Pen and Paper Gaming\"؟", "db_id": "club_1"}
{"question": "Where is the club \"Pen and Paper Gaming\" located?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "arabic": "أين يقع النادي \"Pen and Paper Gaming\"؟", "db_id": "club_1"}
{"question": "Where is the club \"Hopkins Student Enterprises\" located?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"", "arabic": "أخبرني عن موقع النادي \"Hopkins Student Enterprises\".", "db_id": "club_1"}
{"question": "Tell me the location of the club \"Hopkins Student Enterprises\".", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"", "arabic": "ابحث عن اسم جميع النوادي في \"AKW\".\n\n\n\n\n\n", "db_id": "club_1"}
{"question": "Find the name of all the clubs at \"AKW\".", "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"", "arabic": "أي النوادي موجودة في \"AKW\"؟ أعد أسماء النوادي.", "db_id": "club_1"}
{"question": "Which clubs are located at \"AKW\"? Return the club names.", "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"", "arabic": "كم عدد النوادي الموجودة في \"HHH\"؟", "db_id": "club_1"}
{"question": "How many clubs are located at \"HHH\"?", "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\"", "arabic": "عد عدد النوادي الموجودة في \"HHH\".", "db_id": "club_1"}
{"question": "Count the number of clubs located at \"HHH\".", "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\"", "arabic": "ما هي الاسم واللقب لرئيس نادي \"Bootup Baltimore\"؟", "db_id": "club_1"}
{"question": "What are the first and last name of the president of the club \"Bootup Baltimore\"?", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"", "arabic": "من هو رئيس نادي \"Bootup Baltimore\"؟ أعطني الاسم الأول واللقب.", "db_id": "club_1"}
{"question": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"", "arabic": "من هو \"CTO\" لنادي \"Hopkins Student Enterprises\"؟ أظهر الاسم الأول واللقب.", "db_id": "club_1"}
{"question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "arabic": "ابحث عن الاسم الأول واللقب لـ \"CTO\" لنادي \"Hopkins Student Enterprises\".", "db_id": "club_1"}
{"question": "Find the first name and last name for the \"CTO\" of the club \"Hopkins Student Enterprises\"?", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "arabic": "كم عدد الأدوار المختلفة في نادي \"Bootup Baltimore\"؟", "db_id": "club_1"}
{"question": "How many different roles are there in the club \"Bootup Baltimore\"?", "query": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\"", "arabic": "عد عدد المواقع المختلفة في نادي \"Bootup Baltimore\".", "db_id": "club_1"}
{"question": "Count the number of different positions in the club \"Bootup Baltimore\".", "query": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\"", "arabic": "كم عدد أعضاء \"Bootup Baltimore\" الذين تتجاوز أعمارهم 18 عامًا؟", "db_id": "club_1"}
{"question": "How many members of \"Bootup Baltimore\" are older than 18?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18", "arabic": "عد عدد الأعضاء في نادي \"Bootup Baltimore\" الذين تزيد أعمارهم عن 18 عامًا.", "db_id": "club_1"}
{"question": "Count the number of members in club \"Bootup Baltimore\" whose age is above 18.", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18", "arabic": "كم عدد أعضاء نادي \"Bootup Baltimore\" الذين أصغر من 18 عامًا؟", "db_id": "club_1"}
{"question": "How many members of club \"Bootup Baltimore\" are younger than 18?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  <  18", "arabic": "عد عدد الأعضاء في نادي \"Bootup Baltimore\" الذين أقل من 18 عامًا.", "db_id": "club_1"}
{"question": "Count the number of members in club \"Bootup Baltimore\" whose age is below 18.", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  <  18", "arabic": "ابحث عن أسماء جميع النوادي التي يوجد لديها عضو على الأقل من المدينة التي يكون لديها رمز المدينة \"BAL\".", "db_id": "club_1"}
{"question": "Find the names of all the clubs that have at least a member from the city with city code \"BAL\".", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\"", "arabic": "أي النوادي التي يمتلك أحد أعضائها من المدينة التي يكون لها الرمز \"BAL\"؟ أعطني أسماء النوادي.", "db_id": "club_1"}
{"question": "Which clubs have one or more members from the city with code \"BAL\"? Give me the names of the clubs.", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\"", "arabic": "ما هي أسماء النوادي التي يوجد لديها عضو على الأقل من المدينة التي يكون لديها رمز المدينة \"HOU\"؟", "db_id": "club_1"}
{"question": "Find the names of the clubs that have at least a member from the city with city code \"HOU\".", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\"", "arabic": "أي النوادي التي يمتلك أحد أعضائها من المدينة التي يكون لها الرمز \"HOU\"؟ أعطني أسماء النوادي.", "db_id": "club_1"}
{"question": "Which clubs have one or more members from the city with code \"HOU\"? Give me the names of the clubs.", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\"", "arabic": "كم نادي ينتمي الطالب المسمى \"Eric Tai\" إليه؟", "db_id": "club_1"}
{"question": "How many clubs does the student named \"Eric Tai\" belong to?", "query": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\"", "arabic": "عد عدد النوادي التي ينتمي إليها الطالب المسمى \"Eric Tai\".", "db_id": "club_1"}
{"question": "Count the number of clubs for which the student named \"Eric Tai\" is a member.", "query": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\"", "arabic": "أورد النوادي التي لديها \"Davis Steven\" كعضو.", "db_id": "club_1"}
{"question": "List the clubs having \"Davis Steven\" as a member.", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"", "arabic": "ما هي أسماء النوادي التي لديها \"Davis Steven\" كعضو؟", "db_id": "club_1"}
{"question": "What are the names of the clubs that have \"Davis Steven\" as a member?", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"", "arabic": "أورد النوادي التي يوجد لديها عضو على الأقل مع مستشار \"1121\".", "db_id": "club_1"}
{"question": "List the clubs that have at least a member with advisor \"1121\".", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121", "arabic": "أي النوادي التي يمتلك أحد أعضائها مستشارًا \"1121\"؟ أعطني أسماء النوادي.", "db_id": "club_1"}
{"question": "Which clubs have one or more members whose advisor is \"1121\"?", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121", "arabic": "ما هو متوسط العمر لأعضاء نادي \"Bootup Baltimore\"؟", "db_id": "club_1"}
{"question": "What is the average age of the members of the club \"Bootup Baltimore\"?", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "arabic": "ابحث عن المتوسط العمري لأعضاء نادي \"Bootup Baltimore\".", "db_id": "club_1"}
{"question": "Find the average age of the members in the club \"Bootup Baltimore\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "arabic": "ابحث عن المتوسط العمري لأعضاء نادي \"Hopkins Student Enterprises\".", "db_id": "club_1"}
{"question": "Find the average age of members of the club \"Hopkins Student Enterprises\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "arabic": "في المتوسط، كم هو عمر أعضاء نادي \"Hopkins Student Enterprises\"؟", "db_id": "club_1"}
{"question": "On average, how old are the members in the club \"Hopkins Student Enterprises\"?", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "arabic": "استرجع المتوسط العمري لأعضاء نادي \"Tennis Club\".", "db_id": "club_1"}
{"question": "Retrieve the average age of members of the club \"Tennis Club\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"", "arabic": "حسب المتوسط، ما هو عمر أعضاء نادي \"Tennis Club\"؟", "db_id": "club_1"}
{"question": "Compute the average age of the members in the club \"Tennis Club\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"", "arabic": "ما هي المبالغ الممنوحة المميزة للمنح حيث تم إرسال المستندات قبل '1986-08-26 20:49:27' وانتهت المنحة بعد '1989-03-16 18:27:16'؟", "db_id": "club_1"}
{"question": "What are the distinct grant amount for the grants where the documents were sent before '1986-08-26 20:49:27' and grant were ended after '1989-03-16 18:27:16'?", "query": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'", "arabic": "ما هي مبالغ المنح المختلفة للمستندات التي تم إرسالها قبل '1986-08-26 20:49:27' وبعد انتهاء المنحة في '1989-03-16 18:27:16'؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the different grant amounts for documents sent before '1986-08-26 20:49:27' and after the grant ended on '1989-03-16 18:27:16'?", "query": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'", "arabic": "أورد تفاصيل المشروع الذي ينتج كل من براءة اختراع وورقة كنتيجة.", "db_id": "tracking_grants_for_research"}
{"question": "List the project details of the project both producing patent and paper as outcomes.", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'", "arabic": "ما هي تفاصيل المشروع الذي ينتج كل من البراءات والأوراق كنتيجة؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the details of the project that is producing both patents and papers as outcomes?", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'", "arabic": "ما هو إجمالي مبلغ المنح للمؤسسات المصنفة كبحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the total grant amount of the organisations described as research?", "query": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'", "arabic": "ما هو إجمالي مبلغ المنح للأبحاث؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the total amount of grant money for research?", "query": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'", "arabic": "عرّف من تاريخ وحتى تاريخ يعمل هؤلاء الموظفون: موظفو المشروع الذي يوظف أكبر عدد من الموظفين.", "db_id": "tracking_grants_for_research"}
{"question": "List from which date and to which date these staff work: project staff of the project which hires the most staffs", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'", "arabic": "من أي تاريخ وحتى أي تاريخ يعمل الموظفون في مشروع يحتوي على أكبر عدد من الموظفين ويحتوي على موظفين في دور قائد؟", "db_id": "tracking_grants_for_research"}
{"question": "From what date and to what date do the staff work on a project that has the most staff and has staff in a leader role?", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'", "arabic": "ابحث عن معرفات المنظمات وتفاصيل المنظمات التي شاركت في.", "db_id": "tracking_grants_for_research"}
{"question": "Find the organisation ids and details of the organisations which are involved in", "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000", "arabic": "ما هي المعرفات والتفاصيل لجميع المؤسسات التي لديها منح بأكثر من 6000 دولار؟\r\n\r", "db_id": "tracking_grants_for_research"}
{"question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?", "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000", "arabic": "ما هو نوع المؤسسة والمعرّف للمؤسسة التي تمتلك أكبر عدد من موظفي البحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the organisation type and id of the organisation which has the most number of research staff?", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو نوع ومعرّف المنظمة التي تمتلك أكبر عدد من موظفي البحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the type and id of the organization that has the most research staff?", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من المؤسسات يوظف أكثر موظفي البحث؟", "db_id": "tracking_grants_for_research"}
{"question": "Which organisation type hires most research staff?", "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو نوع المنظمة التي تمتلك أكبر عدد من موظفي البحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the type of the organization with the most research staff?", "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1", "arabic": "اكتشف تواريخ إرسال المستندات التي تمنح بمبلغ أكثر من 5000 والتي تمنحها نوع المنظمة الموصوف.", "db_id": "tracking_grants_for_research"}
{"question": "Find out the send dates of the documents with the grant amount of more than 5000 were granted by organisation type described", "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'", "arabic": "ما هي تواريخ الإرسال لجميع المستندات التي لديها مبلغ من المنح أكبر من 5000 وتشارك في البحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the send dates for all documents that have a grant amount of more than 5000 and are involved in research?", "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'", "arabic": "ما هي تواريخ استلام الردود للمستندات الموصوفة بأنها 'عادية' أو التي تمنح بأكثر من 100 دولار؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the response received dates for the documents described as 'Regular' or granted with more than 100?", "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100", "arabic": "ما هو تاريخ استلام الرد للمستند الموصوف بأنه عادي تمنح أكثر من 100 دولار؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the response received date for the document described as Regular that was granted more than 100 dollars?", "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100", "arabic": "أورد تفاصيل المشاريع التي لم توظف أي موظف لأداء دور الباحث.", "db_id": "tracking_grants_for_research"}
{"question": "List the project details of the projects which did not hire any staff for a researcher role.", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )", "arabic": "ما هي التفاصيل لجميع المشاريع التي لم توظف أي موظف في دور البحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the details for all projects that did not hire any staff in a research role?", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )", "arabic": "ما هي تفاصيل المهمة ومعرف المهمة ومعرف المشروع للمشاريع المفصلة على أنها 'omnis' أو لديها أكثر من 2 نتيجة؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?", "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2", "arabic": "ما هي تفاصيل المهمة ومعرف المهمة ومعرف المشروع للمشاريع المفصلة على أنها 'omnis' أو لديها على الأقل 3 نتائج؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the task details, task ids, and project ids for the progrects that are detailed as 'omnis' or have at least 3 outcomes?", "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2", "arabic": "متى يبدأ جميع الموظفين في دور الباحث بالعمل، ومتى يتوقفون عن العمل؟", "db_id": "tracking_grants_for_research"}
{"question": "When do all the researcher role staff start to work, and when do they stop working?", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'", "arabic": "متى بدأ الباحثون في العمل ومتى توقفوا عن العمل؟", "db_id": "tracking_grants_for_research"}
{"question": "When did researchers start and stop working?", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'", "arabic": "كم نوعًا من الأدوار متوفرة للموظفين؟", "db_id": "tracking_grants_for_research"}
{"question": "How many kinds of roles are there for the staff?", "query": "SELECT count(DISTINCT role_code) FROM Project_Staff", "arabic": "كم نوعًا مختلفًا من الأدوار لديها فريق المشروع؟", "db_id": "tracking_grants_for_research"}
{"question": "How many different roles are there on the project staff?", "query": "SELECT count(DISTINCT role_code) FROM Project_Staff", "arabic": "ما هو المبلغ الإجمالي للمنح الممنوحة من كل المؤسسات؟ كما قم بتقديم قائمة بمعرف المؤسسة.", "db_id": "tracking_grants_for_research"}
{"question": "What is the total amount of grants given by each organisations? Also list the organisation id.", "query": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id", "arabic": "ما هو إجمالي مبلغ المنح الممنوحة لكل منظمة وما هو معرفها؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the total amount of grant money given to each organization and what is its id?", "query": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id", "arabic": "أورد تفاصيل المشاريع التي تحتوي على نتيجة بحث مفصلة بالجزء الفرعي 'نشرت'.", "db_id": "tracking_grants_for_research"}
{"question": "List the project details of the projects with the research outcome described with the substring 'Published'.", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'", "arabic": "ما هي التفاصيل للمشروع الذي تم نشر بحثه؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the details for the project whose research has been published?", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'", "arabic": "كم عدد الموظفين في كل مشروع؟ قم بتقديم معرف المشروع والعدد بترتيب تصاعدي.", "db_id": "tracking_grants_for_research"}
{"question": "How many staff does each project has? List the project id and the number in an ascending order.", "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "arabic": "كم عدد الموظفين لكل معرف مشروع؟ قم بتقديمها في ترتيب تصاعدي.", "db_id": "tracking_grants_for_research"}
{"question": "For each project id, how many staff does it have? List them in increasing order.", "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "arabic": "ما هو الوصف الكامل لدور الباحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the complete description of the researcher role.", "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'", "arabic": "ما هو الوصف الكامل لوظيفة الباحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the complete description of the job of a researcher?", "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'", "arabic": "متى بدأ العامل الأول في المشاريع بالعمل؟", "db_id": "tracking_grants_for_research"}
{"question": "When did the first staff for the projects started working?", "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1", "arabic": "متى بدأ أول عضو في الفريق بالعمل؟", "db_id": "tracking_grants_for_research"}
{"question": "When did the first staff member start working?", "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1", "arabic": "أي مشروع أنتج أكبر عدد من النتائج؟ قم بتقديم تفاصيل المشروع ومعرف المشروع.", "db_id": "tracking_grants_for_research"}
{"question": "Which project made the most number of outcomes? List the project details and the project id.", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي التفاصيل ومعرف المشروع الذي يحتوي على أكبر عدد من النتائج؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the details and id of the project with the most outcomes?", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي المشاريع ليس لديها نتائج؟ قم بتقديم تفاصيل المشروع.", "db_id": "tracking_grants_for_research"}
{"question": "Which projects have no outcome? List the project details.", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )", "arabic": "ما هي تفاصيل المشروع الذي ليس لديه نتائج؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the details of the project with no outcomes?", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )", "arabic": "أي منظمة قامت بتوظيف أكبر عدد من موظفي البحث؟ قم بتقديم معرف المنظمة والنوع والتفاصيل.", "db_id": "tracking_grants_for_research"}
{"question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي المعرفات والأنواع والتفاصيل للمنظمة التي تم توظيف أكبر عدد من موظفي البحث؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the ids, types, and details of the organization with the most research staff?", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "arabic": "عرض وصف الدور ومعرف موظف المشروع المشارك في أكبر عدد من نتائج المشروع؟", "db_id": "tracking_grants_for_research"}
{"question": "Show the role description and the id of the project staff involved in most number of project outcomes?", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "arabic": "لكل معرف موظف، ما هو وصف الدور الذي يشارك في أكبر عدد من المشاريع؟", "db_id": "tracking_grants_for_research"}
{"question": "For each staff id, what is the description of the role that is involved with the most number of projects?", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من المستندات يتم وصفه ببادئة 'Initial'؟", "db_id": "tracking_grants_for_research"}
{"question": "Which document type is described with the prefix 'Initial'?", "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'", "arabic": "ما هو نوع المستند الذي تبدأ وصفه بكلمة 'Initial'؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the type of the document whose description starts with the word 'Initial'?", "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'", "arabic": "ما هي تواريخ بداية المنح التي تحتوي على مستندات تم وصفها بـ 'Regular' ومستندات تم وصفها بـ 'Initial Application'؟", "db_id": "tracking_grants_for_research"}
{"question": "For grants with both documents described as 'Regular' and documents described as 'Initial Application', list its start date.", "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'", "arabic": "ما هي تواريخ بداية المنح التي لها وصف 'Regular' و 'Initial Applications'؟", "db_id": "tracking_grants_for_research"}
{"question": "For grants that have descriptions of Regular and Initial Applications, what are their start dates?", "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'", "arabic": "كم عدد المستندات التي يمكن أن تحتوي عليها منحة واحدة على الأكثر؟ قم بتقديم معرف المنحة والعدد.", "db_id": "tracking_grants_for_research"}
{"question": "How many documents can one grant have at most? List the grant id and number.", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1", "arabic": "لكل معرف منحة، كم عدد المستندات التي تحتوي عليها، وأي واحدة منها تحتوي على أكبر عدد؟", "db_id": "tracking_grants_for_research"}
{"question": "For each grant id, how many documents does it have, and which one has the most?", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1", "arabic": "اعثر على وصف نوع المنظمة للمنظمة الموضحة بـ 'quo'.", "db_id": "tracking_grants_for_research"}
{"question": "Find the organisation type description of the organisation detailed as 'quo'.", "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'", "arabic": "ما هو وصف نوع المنظمة التي يتم تفاصيلها كـ 'quo'؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the type description of the organization whose detail is listed as 'quo'?", "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'", "arabic": "ما هي جميع التفاصيل للمنظمات الموضحة كـ 'Sponsor'؟ قم بترتيب النتائج بترتيب تصاعدي.", "db_id": "tracking_grants_for_research"}
{"question": "What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order.", "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details", "arabic": "ما هي تفاصيل جميع المنظمات التي يتم وصفها بأنها الراعي؟ وقم بترتيب النتائج بترتيب تصاعدي.", "db_id": "tracking_grants_for_research"}
{"question": "What are the details of all organizations that are described as Sponsors and sort the results in ascending order?", "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details", "arabic": "كم عدد نتائج براءات الاختراع التي تم إنشاؤها من جميع المشاريع؟", "db_id": "tracking_grants_for_research"}
{"question": "How many Patent outcomes are generated from all the projects?", "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'", "arabic": "كم عدد نتائج براءات الاختراع التي تمت إدراجها لجميع المشاريع؟", "db_id": "tracking_grants_for_research"}
{"question": "How many patents outcomes were listed for all the projects?", "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'", "arabic": "كم عدد موظفي المشروع الذين عملوا كقادة أو بدأوا العمل قبل '1989-04-24 23:51:54'؟", "db_id": "tracking_grants_for_research"}
{"question": "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?", "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'", "arabic": "كم عدد أعضاء المشروع الذين عملوا كقادة أو بدأوا العمل قبل '1989-04-24 23:51:54'؟", "db_id": "tracking_grants_for_research"}
{"question": "How many project members were leaders or started working before '1989-04-24 23:51:54'?", "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'", "arabic": "ما هي آخر تاريخ لمغادرة الموظفين للمشاريع؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the last date of the staff leaving the projects?", "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1", "arabic": "ما هو آخر تاريخ غادر فيه عضو فريق مشروع؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the last date that a staff member left a project?", "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1", "arabic": "ما هي وصف نتائج المشروع الذي يتضمن التفاصيل 'sint'؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the result description of the project whose detail is 'sint'?", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'", "arabic": "ما هو الوصف للنتائج التي يكون تفاصيل المشروع الخاص بها 'sint'؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the description for the results whose project detail is 'sint'?", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'", "arabic": "قم بتقديم معرف المنظمة مع أقصى عدد للنتائج، وعددها.", "db_id": "tracking_grants_for_research"}
{"question": "List the organisation id with the maximum outcome count, and the count.", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو معرف المنظمة ذات العدد الأقصى من النتائج وكم عدد النتائج؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "arabic": "قم بتقديم تفاصيل المشروعات التي تم إطلاقها بواسطة المنظمة.", "db_id": "tracking_grants_for_research"}
{"question": "List the project details of the projects launched by the organisation", "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )", "arabic": "ما هي التفاصيل للمشاريع التي تم إطلاقها بواسطة المنظمة التي لديها أكبر عدد من المشاريع؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the details for the projects which were launched by the organization with the most projects?", "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )", "arabic": "قم بتقديم تفاصيل موظفي البحث، وقم بترتيبها بترتيب تصاعدي.", "db_id": "tracking_grants_for_research"}
{"question": "List the research staff details, and order in ascending order.", "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC", "arabic": "ما هي التفاصيل المتعلقة بموظفي البحث؟ قم بتقديم النتائج بترتيب أبجدي تصاعدي.", "db_id": "tracking_grants_for_research"}
{"question": "What details are there on the research staff? List the result in ascending alphabetical order.", "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC", "arabic": "كم عدد المهام بالمجموع؟", "db_id": "tracking_grants_for_research"}
{"question": "How many tasks are there in total?", "query": "SELECT count(*) FROM Tasks", "arabic": "كم عدد المهام؟", "db_id": "tracking_grants_for_research"}
{"question": "How many tasks are there?", "query": "SELECT count(*) FROM Tasks", "arabic": "كم عدد المهام الموجودة في كل مشروع؟ قم بتقديم عدد المهام وتفاصيل المشروع.", "db_id": "tracking_grants_for_research"}
{"question": "How many tasks does each project have? List the task count and the project detail.", "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id", "arabic": "لكل معرف مشروع، كم عدد المهام الموجودة؟", "db_id": "tracking_grants_for_research"}
{"question": "For each project id, how many tasks are there?", "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id", "arabic": "ما هي أدوار الموظفين الذين...", "db_id": "tracking_grants_for_research"}
{"question": "What are the staff roles of the staff who", "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'", "arabic": "ما هي الأدوار التي قام بها أعضاء الفريق بين '2003-04-19 15:06:20' و '2016-03-15 00:33:18'؟", "db_id": "tracking_grants_for_research"}
{"question": "What roles did staff members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?", "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'", "arabic": "ما هي الوصف لجميع نتائج المشروعات؟", "db_id": "tracking_grants_for_research"}
{"question": "What are the descriptions of all the project outcomes?", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code", "arabic": "قم بتقديم الوصف لنتائج جميع المشاريع.", "db_id": "tracking_grants_for_research"}
{"question": "List the description of the outcomes for all projects.", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code", "arabic": "أي دور هو الأكثر شيوعًا بالنسبة للموظفين؟", "db_id": "tracking_grants_for_research"}
{"question": "Which role is most common for the staff?", "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الدور الأكثر شيوعًا بالنسبة للموظفين؟", "db_id": "tracking_grants_for_research"}
{"question": "What is the most common role for the staff?", "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عدد الأصدقاء الذي يمتلكهم دان؟", "db_id": "tracking_grants_for_research"}
{"question": "How many friends does Dan have?", "query": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'", "arabic": "كم عدد الأصدقاء الذي يمتلكهم دان؟", "db_id": "network_2"}
{"question": "How many friends does Dan have?", "query": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'", "arabic": "كم عدد الإناث الذي يوجد في هذا الشبكة؟", "db_id": "network_2"}
{"question": "How many females does this network has?", "query": "SELECT count(*) FROM Person WHERE gender  =  'female'", "arabic": "كم عدد الإناث في الشبكة؟", "db_id": "network_2"}
{"question": "How many females are in the network?", "query": "SELECT count(*) FROM Person WHERE gender  =  'female'", "arabic": "ما هو متوسط العمر لجميع الأشخاص؟", "db_id": "network_2"}
{"question": "What is the average age for all person?", "query": "SELECT avg(age) FROM Person", "arabic": "ما هو متوسط العمر لجميع الأشخاص في الجدول؟", "db_id": "network_2"}
{"question": "What is the average age for all people in the table?", "query": "SELECT avg(age) FROM Person", "arabic": "كم عدد المدن المختلفة التي يأتون منها؟", "db_id": "network_2"}
{"question": "How many different cities are they from?", "query": "SELECT count(DISTINCT city) FROM Person", "arabic": "كم عدد المدن المختلفة التي يأتي منها الأشخاص؟", "db_id": "network_2"}
{"question": "How many different cities do people originate from?", "query": "SELECT count(DISTINCT city) FROM Person", "arabic": "كم نوع من الوظائف يمتلكون؟", "db_id": "network_2"}
{"question": "How many type of jobs do they have?", "query": "SELECT count(DISTINCT job) FROM Person", "arabic": "كم عدد الوظائف المختلفة المذكورة؟", "db_id": "network_2"}
{"question": "How many different jobs are listed?", "query": "SELECT count(DISTINCT job) FROM Person", "arabic": "من هو أكبر شخص سنًا؟", "db_id": "network_2"}
{"question": "Who is the oldest person?", "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)", "arabic": "ما هو اسم الشخص الأكبر سنًا؟", "db_id": "network_2"}
{"question": "What is the name of the person who is the oldest?", "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)", "arabic": "من هو أكبر شخص سنًا وظيفته طالب؟", "db_id": "network_2"}
{"question": "Who is the oldest person whose job is student?", "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )", "arabic": "ما اسم أكبر طالب؟", "db_id": "network_2"}
{"question": "What is the name of the oldest student?", "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )", "arabic": "من هو أصغر رجل؟", "db_id": "network_2"}
{"question": "Who is the youngest male?", "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )", "arabic": "ما اسم أصغر رجل؟", "db_id": "network_2"}
{"question": "What is the name of the youngest male?", "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )", "arabic": "كم عمر الطبيب الذي يدعى زاك؟", "db_id": "network_2"}
{"question": "How old is the doctor named Zach?", "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'", "arabic": "ما هو عمر الطبيب الذي يدعى زاك؟", "db_id": "network_2"}
{"question": "What is the age of the doctor named Zach?", "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'", "arabic": "من هو الشخص الذي يكون عمره دون الثلاثين؟", "db_id": "network_2"}
{"question": "Who is the person whose age is below 30?", "query": "SELECT name FROM Person WHERE age  <  30", "arabic": "ما اسم الشخص الذي يكون عمره دون الثلاثين؟", "db_id": "network_2"}
{"question": "What is the name of the person whose age is below 30?", "query": "SELECT name FROM Person WHERE age  <  30", "arabic": "كم عدد الأشخاص الذين تزيد أعمارهم عن 30 عامًا ويكونون مهنة هندسية؟", "db_id": "network_2"}
{"question": "How many people whose age is greater 30 and job is engineer?", "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'", "arabic": "كم عدد المهندسين الذين تجاوزوا سن الثلاثين؟", "db_id": "network_2"}
{"question": "HOw many engineers are older than 30?", "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'", "arabic": "ما هو متوسط العمر لكل جنس؟", "db_id": "network_2"}
{"question": "What is the average age for each gender?", "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender", "arabic": "كم عمر كل جنس، في المتوسط؟", "db_id": "network_2"}
{"question": "How old is each gender, on average?", "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender", "arabic": "ما هو متوسط العمر لعناوين الوظائف المختلفة؟", "db_id": "network_2"}
{"question": "What is average age for different job title?", "query": "SELECT avg(age) ,  job FROM Person GROUP BY job", "arabic": "كم عمر الشخص المتوسط لكل وظيفة؟", "db_id": "network_2"}
{"question": "How old is the average person for each job?", "query": "SELECT avg(age) ,  job FROM Person GROUP BY job", "arabic": "ما هو متوسط عمر الذكور لعناوين الوظائف المختلفة؟", "db_id": "network_2"}
{"question": "What is average age of male for different job title?", "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job", "arabic": "ما هو متوسط العمر للذكور في كل وظيفة؟", "db_id": "network_2"}
{"question": "What is the average age for a male in each job?", "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job", "arabic": "ما هو أقل عمر لعناوين الوظائف المختلفة؟", "db_id": "network_2"}
{"question": "What is minimum age for different job title?", "query": "SELECT min(age) ,  job FROM Person GROUP BY job", "arabic": "كم عمر أصغر شخص لكل وظيفة؟", "db_id": "network_2"}
{"question": "How old is the youngest person for each job?", "query": "SELECT min(age) ,  job FROM Person GROUP BY job", "arabic": "اعثر على عدد الأشخاص الذين تقل أعمارهم عن 40 لكل جنس.", "db_id": "network_2"}
{"question": "Find the number of people who is under 40 for each gender.", "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender", "arabic": "كم عدد الأشخاص الذين تقل أعمارهم عن 40 لكل جنس؟", "db_id": "network_2"}
{"question": "How many people are under 40 for each gender?", "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender", "arabic": "اعثر على اسم الأشخاص الذين يكون عمرهم أكبر من أي مهندس وترتيبهم حسب عمرهم.", "db_id": "network_2"}
{"question": "Find the name of people whose age is greater than any engineer sorted by their age.", "query": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age", "arabic": "ما هي أسماء جميع الأشخاص الذين هم أكبر سنا من مهندس واحد على الأقل؟ قم بترتيبهم حسب العمر.", "db_id": "network_2"}
{"question": "What is the name of all the people who are older than at least one engineer? Order them by age.", "query": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age", "arabic": "اعثر على عدد الأشخاص الذين يكون عمرهم أكبر من جميع المهندسين.", "db_id": "network_2"}
{"question": "Find the number of people whose age is greater than all engineers.", "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')", "arabic": "كم عدد الأشخاص الذين يكون عمرهم أكبر من كل مهندس؟", "db_id": "network_2"}
{"question": "How many people are older than every engineer?", "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')", "arabic": "قائمة بأسماء وعناوين وظائف جميع الأشخاص مرتبة حسب أسمائهم.", "db_id": "network_2"}
{"question": "list the name, job title of all people ordered by their names.", "query": "SELECT name ,  job FROM Person ORDER BY name", "arabic": "ما هي أسماء وعناوين وظائف جميع الأشخاص مرتبة أبجديًا حسب الاسم؟", "db_id": "network_2"}
{"question": "What are the names and job titles of every person ordered alphabetically by name?", "query": "SELECT name ,  job FROM Person ORDER BY name", "arabic": "اعثر على أسماء جميع الأشخاص مرتبة تنازليًا باستخدام العمر.", "db_id": "network_2"}
{"question": "Find the names of all person sorted in the descending order using age.", "query": "SELECT name FROM Person ORDER BY age DESC", "arabic": "ما هي أسماء الجميع مرتبة حسب العمر بترتيب تنازلي؟", "db_id": "network_2"}
{"question": "What are the names of everybody sorted by age in descending order?", "query": "SELECT name FROM Person ORDER BY age DESC", "arabic": "اعثر على اسم وعمر جميع الذكور مرتبة حسب عمرهم.", "db_id": "network_2"}
{"question": "Find the name and age of all males in order of their age.", "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age", "arabic": "ما هو اسم وعمر كل ذكر؟ قم بترتيب النتائج حسب العمر.", "db_id": "network_2"}
{"question": "What is the name and age of every male? Order the results by age.", "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age", "arabic": "اعثر على اسم وعمر الشخص الذي هو صديق لكل من دان وأليس.", "db_id": "network_2"}
{"question": "Find the name and age of the person who is a friend of both Dan and Alice.", "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'", "arabic": "ما هي أسماء وأعمار كل شخص يكون صديقًا لدان وأليس؟", "db_id": "network_2"}
{"question": "What are the names and ages of every person who is a friend of both Dan and Alice?", "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'", "arabic": "اعثر على اسم وعمر الشخص الذي هو صديق لدان أو أليس؟", "db_id": "network_2"}
{"question": "Find the name and age of the person who is a friend of Dan or Alice.", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'", "arabic": "ما هي الأسماء والأعمار المختلفة لكل صديق لدان أو أليس؟", "db_id": "network_2"}
{"question": "What are the different names and ages of every friend of either Dan or alice?", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'", "arabic": "اعثر على اسم الشخص الذي لديه أصدقاء بعمر يزيد عن 40 وأقل من 30؟", "db_id": "network_2"}
{"question": "Find the name of the person who has friends with age above 40 and under age 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)", "arabic": "ما هي أسماء كل شخص لديه صديق يبلغ من العمر أكثر من 40 وأقل من 30؟", "db_id": "network_2"}
{"question": "What are the names of every person who has a friend over 40 and under 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)", "arabic": "اعثر على اسم الشخص الذي لديه أصدقاء بعمر يزيد عن 40 ولكن ليس أقل من 30؟", "db_id": "network_2"}
{"question": "Find the name of the person who has friends with age above 40 but not under age 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)", "arabic": "ما هي أسماء الأشخاص الذين يبلغون من العمر 40 عامًا وليس لديهم أصدقاء أقل من 30 عامًا؟", "db_id": "network_2"}
{"question": "What are the names of the people who are older 40 but no friends under age 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)", "arabic": "اعثر على اسم الشخص الذي ليس لديه أصدقاء طلاب؟", "db_id": "network_2"}
{"question": "Find the name of the person who has no student friends.", "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'", "arabic": "ما هي أسماء الأشخاص الذين ليس لديهم أصدقاء يكونون طلابًا؟", "db_id": "network_2"}
{"question": "What are the names of the people who have no friends who are students?", "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'", "arabic": "اعثر على الشخص الذي لديه صديق واحد فقط؟", "db_id": "network_2"}
{"question": "Find the person who has exactly one friend.", "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1", "arabic": "ما هي أسماء الأشخاص الذين لديهم صديق واحد فقط؟", "db_id": "network_2"}
{"question": "What are the names of everybody who has exactly one friend?", "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1", "arabic": "من هم أصدقاء بوب؟", "db_id": "network_2"}
{"question": "Who are the friends of Bob?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'", "arabic": "من هم أصدقاء بوب؟", "db_id": "network_2"}
{"question": "Who are Bob's friends?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'", "arabic": "اعثر على أسماء الأشخاص الذين يكونون أصدقاء لبوب؟", "db_id": "network_2"}
{"question": "Find the name of persons who are friends with Bob.", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'", "arabic": "ما هي أسماء جميع أصدقاء بوب؟", "db_id": "network_2"}
{"question": "What are the names of all of Bob's friends?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'", "arabic": "ما هي أسماء الإناث اللواتي هن صديقات مع زاك؟", "db_id": "network_2"}
{"question": "Find the names of females who are friends with Zach", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'", "arabic": "ما هي أسماء جميع الإناث اللواتي هن صديقات مع زاك؟", "db_id": "network_2"}
{"question": "What are the names of all females who are friends with Zach?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'", "arabic": "ابحث عن صديقات أليس الإناث.", "db_id": "network_2"}
{"question": "Find the female friends of Alice.", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'", "arabic": "ما هي جميع الأصدقاء الإناث لأليس؟", "db_id": "network_2"}
{"question": "What are all the friends of Alice who are female?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'", "arabic": "ابحث عن صديق أليس الذكر الذي يعمل كطبيب؟", "db_id": "network_2"}
{"question": "Find the male friend of Alice whose job is a doctor?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'", "arabic": "من هم أصدقاء أليس الذين هم أطباء؟", "db_id": "network_2"}
{"question": "Who are the friends of Alice that are doctors?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'", "arabic": "من لديه صديق قادم من مدينة نيويورك؟", "db_id": "network_2"}
{"question": "Who has a friend that is from new york city?", "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'", "arabic": "ما هي أسماء جميع الأصدقاء القادمين من نيويورك؟", "db_id": "network_2"}
{"question": "What are the names of all friends who are from New York?", "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'", "arabic": "من لديه أصدقاء أصغر سنًا من العمر المتوسط؟", "db_id": "network_2"}
{"question": "Who has friends that are younger than the average age?", "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)", "arabic": "ما هي الأسماء المختلفة للأصدقاء الأصغر سنًا من العمر المتوسط لصديق؟", "db_id": "network_2"}
{"question": "What are the different names of friends who are younger than the average age for a friend?", "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)", "arabic": "من لديه أصدقاء أكبر سنًا من العمر المتوسط؟ اطبع أصدقاءهم وأعمارهم أيضًا.", "db_id": "network_2"}
{"question": "Who has friends that are older than the average age? Print their friends and their ages as well", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "arabic": "ما هي أسماء الأصدقاء والأعمار لجميع الأشخاص الذين هم أكبر سنًا من العمر المتوسط للشخص؟", "db_id": "network_2"}
{"question": "Whare the names, friends, and ages of all people who are older than the average age of a person?", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "arabic": "من هو صديق زاك الذي يمتلك أطول علاقة بالسنين؟", "db_id": "network_2"}
{"question": "Who is the friend of Zach with longest year relationship?", "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "arabic": "أي صديق لزاك لديه صداقة تدوم لأطول فترة؟", "db_id": "network_2"}
{"question": "Which friend of Zach has the longest-lasting friendship?", "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "arabic": "ما هو عمر صديق زاك الذي لديه أطول علاقة بالسنين؟", "db_id": "network_2"}
{"question": "What is the age of the friend of Zach with longest year relationship?", "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "arabic": "ما هي أعمار جميع أصدقاء زاك الذين يمتلكون أطول علاقة؟", "db_id": "network_2"}
{"question": "What are the ages of all of Zach's friends who are in the longest relationship?", "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "arabic": "ابحث عن أسماء الأشخاص الذين هم أصدقاء مع أليس لأقصر سنوات.", "db_id": "network_2"}
{"question": "Find the name of persons who are friends with Alice for the shortest years.", "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "arabic": "ما هي أسماء جميع الأشخاص الذين هم أصدقاء مع أليس لأقصر فترة زمنية؟", "db_id": "network_2"}
{"question": "What are the names of all people who are friends with Alice for the shortest amount of time?", "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "arabic": "ابحث عن الاسم والعمر وعنوان الوظيفة للأشخاص الذين هم أصدقاء مع أليس لأطول سنوات.", "db_id": "network_2"}
{"question": "Find the name, age, and job title of persons who are friends with Alice for the longest years.", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "arabic": "ما هي أسماء وأعمار ووظائف جميع الأشخاص الذين هم أصدقاء مع أليس لأطول فترة زمنية؟", "db_id": "network_2"}
{"question": "What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "arabic": "من هو الشخص الذي ليس لديه صديق؟", "db_id": "network_2"}
{"question": "Who is the person that has no friend?", "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend", "arabic": "ما هي أسماء جميع الأشخاص الذين ليس لديهم أصدقاء؟", "db_id": "network_2"}
{"question": "What are the names of all people who do not have friends?", "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend", "arabic": "من الشخص الذي لأصدقائه أكبر متوسط عمر؟", "db_id": "network_2"}
{"question": "Which person whose friends have the oldest average age?", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "arabic": "ما هو اسم الشخص الذي لأصدقائه أكبر متوسط عمر، وما هو ذلك المتوسط؟", "db_id": "network_2"}
{"question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "arabic": "ما هو العدد الإجمالي للأشخاص الذين ليس لديهم أصدقاء يعيشون في مدينة أوستن؟", "db_id": "network_2"}
{"question": "What is the total number of people who has no friend living in the city of Austin.", "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')", "arabic": "ما هو العدد الإجمالي للأشخاص الذين ليس لديهم أصدقاء يعيشون في أوستن؟", "db_id": "network_2"}
{"question": "What is the total number of people who have no friends living in Austin?", "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')", "arabic": "ابحث عن أصدقاء أصدقاء أليس.", "db_id": "network_2"}
{"question": "Find Alice's friends of friends.", "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'", "arabic": "ما هي أسماء جميع أصدقاء أصدقاء أليس؟", "db_id": "network_2"}
{"question": "What are the names of all of Alice's friends of friends?", "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'", "arabic": "كم عدد الأعضاء؟", "db_id": "network_2"}
{"question": "How many members are there?", "query": "SELECT count(*) FROM member", "arabic": "قم بتقديم أسماء الأعضاء بترتيب أبجدي تصاعدي.", "db_id": "decoration_competition"}
{"question": "List the names of members in ascending alphabetical order.", "query": "SELECT Name FROM member ORDER BY Name ASC", "arabic": "ما هي أسماء الأعضاء وبلدانهم؟", "db_id": "decoration_competition"}
{"question": "What are the names and countries of members?", "query": "SELECT Name ,  Country FROM member", "arabic": "أظهر أسماء الأعضاء الذين ينتمون إلى \"الولايات المتحدة\" أو \"كندا\".", "db_id": "decoration_competition"}
{"question": "Show the names of members whose country is \"United States\" or \"Canada\".", "query": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\"", "arabic": "أظهر البلدان المختلفة وعدد الأعضاء من كل بلد.", "db_id": "decoration_competition"}
{"question": "Show the different countries and the number of members from each.", "query": "SELECT Country ,  COUNT(*) FROM member GROUP BY Country", "arabic": "أظهر البلد الأكثر شيوعًا بين الأعضاء.", "db_id": "decoration_competition"}
{"question": "Show the most common country across members.", "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي البلدان التي يوجد فيها أكثر من عضوين؟", "db_id": "decoration_competition"}
{"question": "Which countries have more than two members?", "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2", "arabic": "أظهر أسماء القادة ومواقع الكليات.", "db_id": "decoration_competition"}
{"question": "Show the leader names and locations of colleges.", "query": "SELECT Leader_Name ,  College_Location FROM college", "arabic": "أظهر أسماء الأعضاء وأسماء الكليات التي ينتمون إليها.", "db_id": "decoration_competition"}
{"question": "Show the names of members and names of colleges they go to.", "query": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID", "arabic": "أظهر أسماء الأعضاء ومواقع الكليات التي ينتمون إليها مرتبة تصاعديًا حسب أسماء الأعضاء.", "db_id": "decoration_competition"}
{"question": "Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names.", "query": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC", "arabic": "أظهر أسماء القادة المميزة للكليات المرتبطة بأعضاء من بلد \"كندا\".", "db_id": "decoration_competition"}
{"question": "Show the distinct leader names of colleges associated with members from country \"Canada\".", "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Canada\"", "arabic": "أظهر أسماء الأعضاء وثيمات التزيين التي يمتلكونها.", "db_id": "decoration_competition"}
{"question": "Show the names of members and the decoration themes they have.", "query": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID", "arabic": "أظهر أسماء الأعضاء الذين لديهم رتبة في الجولة أعلى من 3.", "db_id": "decoration_competition"}
{"question": "Show the names of members that have a rank in round higher than 3.", "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3", "arabic": "أظهر أسماء الأعضاء مرتبة تصاعديًا حسب رتبتهم في الجولات.", "db_id": "decoration_competition"}
{"question": "Show the names of members in ascending order of their rank in rounds.", "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC", "arabic": "قائمة أسماء الأعضاء الذين لم يشاركوا في أي جولة.", "db_id": "decoration_competition"}
{"question": "List the names of members who did not participate in any round.", "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round)", "arabic": "ما هي أسماء جميع المستندات، بالإضافة إلى عدد الوصولات لكل منها، مرتبة أبجديًا؟", "db_id": "decoration_competition"}
{"question": "Find the name and access counts of all documents, in alphabetic order of the document name.", "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name", "arabic": "ما هي أسماء جميع المستندات، بالإضافة إلى عدد الوصولات لكل منها، مرتبة أبجديًا؟", "db_id": "document_management"}
{"question": "What are the names of all the documents, as well as the access counts of each, ordered alphabetically?", "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name", "arabic": "ما هو اسم المستند الذي تم الوصول إليه بأكبر عدد من المرات، بالإضافة إلى عدد مرات الوصول؟", "db_id": "document_management"}
{"question": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?", "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1", "arabic": "ما هو اسم المستند الذي تم الوصول إليه أكثر عدد من المرات، بالإضافة إلى عدد مرات الوصول؟", "db_id": "document_management"}
{"question": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?", "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1", "arabic": "ابحث عن أنواع المستندات التي يوجد منها أكثر من 4 مستندات.", "db_id": "document_management"}
{"question": "Find the types of documents with more than 4 documents.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4", "arabic": "ما هي أكواد أنواع المستندات التي يوجد منها 4 أو أكثر؟", "db_id": "document_management"}
{"question": "What are the codes of types of documents of which there are for or more?", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4", "arabic": "ابحث عن إجمالي عدد الوصول لجميع المستندات في نوع المستند الأكثر شيوعًا.", "db_id": "document_management"}
{"question": "Find the total access count of all documents in the most popular document type.", "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو إجمالي عدد الوصول للمستندات التي هي من نوع المستند الأكثر شيوعًا؟", "db_id": "document_management"}
{"question": "What is the total access count of documents that are of the most common document type?", "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو متوسط عدد الوصول للمستندات؟", "db_id": "document_management"}
{"question": "What is the average access count of documents?", "query": "SELECT avg(access_count) FROM documents", "arabic": "ابحث عن متوسط عدد الوصول عبر جميع المستندات؟", "db_id": "document_management"}
{"question": "Find the average access count across all documents?", "query": "SELECT avg(access_count) FROM documents", "arabic": "ما هي هيكلية المستند الذي تم الوصول إليه بأقل عدد من المرات؟", "db_id": "document_management"}
{"question": "What is the structure of the document with the least number of accesses?", "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أعد وصف هيكل المستند الذي تم الوصول إليه بأقل عدد من المرات.", "db_id": "document_management"}
{"question": "Return the structure description of the document that has been accessed the fewest number of times.", "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو نوع المستند المسمى \"David CV\"؟", "db_id": "document_management"}
{"question": "What is the type of the document named \"David CV\"?", "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"", "arabic": "أعد رمز نوع المستند المسمى \"David CV\".", "db_id": "document_management"}
{"question": "Return the type code of the document named \"David CV\".", "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"", "arabic": "ابحث عن قائمة المستندات التي تنتمي إلى النوع الأكثر شيوعًا الثلاثة وتحتوي على أكثر ثلاث هياكل شيوعًا.", "db_id": "document_management"}
{"question": "Find the list of documents that are both in the most three popular type and have the most three popular structure.", "query": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هي أسماء المستندات التي تحتوي على أحد أنواع المستندات الثلاثة الأكثر شيوعًا وأحد الهياكل الثلاثة الأكثر شيوعًا؟", "db_id": "document_management"}
{"question": "What are the names of documents that have both one of the three most common types and one of three most common structures?", "query": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3", "arabic": "أي أنواع المستندات تحتوي على أكثر من 10000 إجمالي عدد وصول؟", "db_id": "document_management"}
{"question": "What document types do have more than 10000 total access number.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000", "arabic": "ما هي رموز أنواع المستندات التي لا تمتلك إجمالي عدد وصول يتجاوز 10000؟", "db_id": "document_management"}
{"question": "Return the codes of the document types that do not have a total access count of over 10000.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000", "arabic": "ما هي جميع عناوين الأقسام في المستند المسمى \"David CV\"؟", "db_id": "document_management"}
{"question": "What are all the section titles of the document named \"David CV\"?", "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"", "arabic": "أعط عناوين الأقسام في المستند الذي يحمل اسم \"David CV\".", "db_id": "document_management"}
{"question": "Give the section titles of the document with the name \"David CV\".", "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"", "arabic": "ابحث عن جميع أسماء المستندات التي ليس لديها أي أقسام.", "db_id": "document_management"}
{"question": "Find all the name of documents without any sections.", "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)", "arabic": "ما هي أسماء المستندات التي ليس لديها أي أقسام؟", "db_id": "document_management"}
{"question": "What are the names of documents that do not have any sections?", "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)", "arabic": "سرّر كافة أسماء المستخدمين وكلمات المرور للمستخدمين ذوي الدور الأكثر شيوعًا.", "db_id": "document_management"}
{"question": "List all the username and passwords of users with the most popular role.", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء المستخدمين وكلمات المرور للمستخدمين الذين لديهم الدور الأكثر شيوعًا؟", "db_id": "document_management"}
{"question": "What are the usernames and passwords of users that have the most common role?", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن متوسط عدد الوصول للمستندات ذات المجال الوظيفي \"Acknowledgement\".", "db_id": "document_management"}
{"question": "Find the average access counts of documents with functional area \"Acknowledgement\".", "query": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\"", "arabic": "ما هو متوسط عدد الوصول للمستندات التي تحتوي على وصف المجال الوظيفي \"Acknowledgement\"؟", "db_id": "document_management"}
{"question": "What are the average access counts of documents that have the functional area description \"Acknowledgement\"?", "query": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\"", "arabic": "ابحث عن أسماء المستندات بدون أي صور.", "db_id": "document_management"}
{"question": "Find names of the document without any images.", "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id", "arabic": "ما هي أسماء المستندات التي لا تحتوي على أي صور؟", "db_id": "document_management"}
{"question": "What are the names of documents that do not have any images?", "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id", "arabic": "ما هو اسم المستند الذي يحتوي على أكبر عدد من الأقسام؟", "db_id": "document_management"}
{"question": "What is the name of the document with the most number of sections?", "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أعد اسم المستند الذي يحتوي على أكبر عدد من الأقسام.", "db_id": "document_management"}
{"question": "Return the name of the document that has the most sections.", "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1", "arabic": "قائمة بجميع أسماء المستندات التي تحتوي على \"CV\".", "db_id": "document_management"}
{"question": "List all the document names which contains \"CV\".", "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"", "arabic": "ما هي أسماء المستندات التي تحتوي على السلسلة الفرعية \"CV\"؟", "db_id": "document_management"}
{"question": "What are the names of documents that contain the substring \"CV\"?", "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"", "arabic": "كم عدد المستخدمين المسجلين الآن؟", "db_id": "document_management"}
{"question": "How many users are logged in?", "query": "SELECT count(*) FROM users WHERE user_login  =  1", "arabic": "احسب عدد المستخدمين المسجلين.", "db_id": "document_management"}
{"question": "Count the number of users that are logged in.", "query": "SELECT count(*) FROM users WHERE user_login  =  1", "arabic": "ابحث عن وصف الدور الأكثر شيوعًا بين المستخدمين الذين قاموا بتسجيل الدخول.", "db_id": "document_management"}
{"question": "Find the description of the most popular role among the users that have logged in.", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هو وصف الدور الأكثر شيوعًا بين المستخدمين الذين قاموا بتسجيل الدخول؟", "db_id": "document_management"}
{"question": "What is the description of the most popular role among users that have logged in?", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)", "arabic": "ابحث عن متوسط عدد الوصول للمستندات ذات الهيكل الأقل شيوعًا.", "db_id": "document_management"}
{"question": "Find the average access count of documents with the least popular structure.", "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو متوسط عدد الوصول للمستندات التي تحمل الهيكل الأقل شيوعًا؟", "db_id": "document_management"}
{"question": "What is the average access count of documents that have the least common structure?", "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1", "arabic": "قائمة بأسماء الصور وعناوين URL في ترتيب أسمائها.", "db_id": "document_management"}
{"question": "List all the image name and URLs in the order of their names.", "query": "SELECT image_name ,  image_url FROM images ORDER BY image_name", "arabic": "ما هي أسماء الصور وعناوين URL، مرتبة ترتيباً أبجدياً؟", "db_id": "document_management"}
{"question": "What are the names and urls of images, sorted alphabetically?", "query": "SELECT image_name ,  image_url FROM images ORDER BY image_name", "arabic": "ابحث عن عدد المستخدمين في كل دور.", "db_id": "document_management"}
{"question": "Find the number of users in each role.", "query": "SELECT count(*) ,  role_code FROM users GROUP BY role_code", "arabic": "ما هي رموز الأدوار المختلفة للمستخدمين، وكم عدد المستخدمين في كل منها؟", "db_id": "document_management"}
{"question": "What are the different role codes for users, and how many users have each?", "query": "SELECT count(*) ,  role_code FROM users GROUP BY role_code", "arabic": "ما هي أنواع المستندات التي تمتلك أكثر من 2 مستند مقابل لكل منها؟", "db_id": "document_management"}
{"question": "What document types have more than 2 corresponding documents?", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2", "arabic": "أعط رموز أنواع المستندات التي تحتوي على أكثر من 2 مستند مقابل لكل منها.", "db_id": "document_management"}
{"question": "Give the codes of document types that have more than 2 corresponding documents.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2", "arabic": "كم عدد الشركات؟", "db_id": "document_management"}
{"question": "How many companies are there?", "query": "SELECT count(*) FROM Companies", "arabic": "احسب عدد الشركات.", "db_id": "company_office"}
{"question": "Count the number of companies.", "query": "SELECT count(*) FROM Companies", "arabic": "قائمة بأسماء الشركات بترتيب تنازلي حسب القيمة السوقية.", "db_id": "company_office"}
{"question": "List the names of companies in descending order of market value.", "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC", "arabic": "مرتبة أسماء الشركات بترتيب تنازلي حسب قيمة السوق للشركة.", "db_id": "company_office"}
{"question": "Sort the company names in descending order of the company's market value.", "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC", "arabic": "ما هي أسماء الشركات التي مقراتها ليست في \"الولايات المتحدة الأمريكية\"؟", "db_id": "company_office"}
{"question": "What are the names of companies whose headquarters are not \"USA\"?", "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'", "arabic": "ابحث عن أسماء الشركات التي مقراتها ليست موجودة في \"الولايات المتحدة الأمريكية\".", "db_id": "company_office"}
{"question": "Find the names of the companies whose headquarters are not located in \"USA\".", "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'", "arabic": "ما هي أسماء الشركات والأصول لكل شركة، مرتبة ترتيبًا تصاعديًا حسب اسم الشركة؟", "db_id": "company_office"}
{"question": "What are the name and assets of each company, sorted in ascending order of company name?", "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC", "arabic": "قائمة بأسماء الشركات والأصول لكل شركة، مرتبة ترتيبًا تصاعديًا حسب اسم الشركة.", "db_id": "company_office"}
{"question": "List the name and assets of each company in ascending order of company name.", "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC", "arabic": "ما هو متوسط أرباح الشركات؟", "db_id": "company_office"}
{"question": "What are the average profits of companies?", "query": "SELECT avg(Profits_billion) FROM Companies", "arabic": "احسب المتوسط لأرباح الشركات.", "db_id": "company_office"}
{"question": "Compute the average profits companies make.", "query": "SELECT avg(Profits_billion) FROM Companies", "arabic": "ما هي أقصى وأدنى مبيعات للشركات التي ليست في \"المصرفية\".", "db_id": "company_office"}
{"question": "What are the maximum and minimum sales of the companies whose industries are not \"Banking\".", "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"", "arabic": "ابحث عن أقصى وأدنى مبيعات للشركات التي ليست في صناعة \"المصرفية\".", "db_id": "company_office"}
{"question": "Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry.", "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"", "arabic": "كم عدد الصناعات المختلفة التي تنتمي إليها الشركات؟", "db_id": "company_office"}
{"question": "How many different industries are the companies in?", "query": "SELECT count(DISTINCT Industry) FROM Companies", "arabic": "احسب عدد الصناعات المختلفة للشركات.", "db_id": "company_office"}
{"question": "Count the number of distinct company industries.", "query": "SELECT count(DISTINCT Industry) FROM Companies", "arabic": "قائمة بأسماء المباني بترتيب تنازلي حسب ارتفاع المبنى.", "db_id": "company_office"}
{"question": "List the names of buildings in descending order of building height.", "query": "SELECT name FROM buildings ORDER BY Height DESC", "arabic": "ما هي أسماء المباني مرتبة بترتيب تنازلي حسب ارتفاع المبنى؟", "db_id": "company_office"}
{"question": "What are the names of buildings sorted in descending order of building height?", "query": "SELECT name FROM buildings ORDER BY Height DESC", "arabic": "ابحث عن عدد الطوابق للمبنى ذي أعلى ارتفاع.", "db_id": "company_office"}
{"question": "Find the stories of the building with the largest height.", "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1", "arabic": "ما هي عدد الطوابق لأعلى مبنى؟", "db_id": "company_office"}
{"question": "What is the stories of highest building?", "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1", "arabic": "ما هو اسم المبنى جنبا إلى جنب مع اسم الشركة التي مكتبها في البناية؟", "db_id": "company_office"}
{"question": "List the name of a building along with the name of a company whose office is in the building.", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id", "arabic": "لكل شركة، عرض اسم الشركة واسم المبنى الذي يقع مكتبها فيه.", "db_id": "company_office"}
{"question": "For each company, return the company name and the name of the building its office is located in.", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id", "arabic": "عرض أسماء المباني التي تحتوي على أكثر من مكتب للشركات.", "db_id": "company_office"}
{"question": "Show the names of the buildings that have more than one company offices.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1", "arabic": "أي المباني تحتوي على أكثر من مكتب للشركات؟ أعطني أسماء المباني.", "db_id": "company_office"}
{"question": "Which buildings have more than one company offices? Give me the building names.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1", "arabic": "عرض اسم المبنى الذي يحتوي على أكبر عدد من مكاتب الشركات.", "db_id": "company_office"}
{"question": "Show the name of the building that has the most company offices.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي المبنى يحتوي على أكبر عدد من مكاتب الشركات؟ أعطني اسم المبنى.", "db_id": "company_office"}
{"question": "Which building has the largest number of company offices? Give me the building name.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "يرجى عرض أسماء المباني التي يكون حالها \"معلقة\"، مرتبة تصاعدياً حسب عدد الطوابق.", "db_id": "company_office"}
{"question": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories.", "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC", "arabic": "ابحث عن أسماء المباني التي يكون حالها \"معلقة\"، ورتبها تصاعدياً حسب عدد الطوابق.", "db_id": "company_office"}
{"question": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories.", "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC", "arabic": "يرجى عرض كل صناعة وعدد الشركات المقابلة في تلك الصناعة.", "db_id": "company_office"}
{"question": "Please show each industry and the corresponding number of companies in that industry.", "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry", "arabic": "ما هي أسماء كل صناعة وعدد الشركات في تلك الصناعة؟", "db_id": "company_office"}
{"question": "Whah are the name of each industry and the number of companies in that industry?", "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry", "arabic": "يرجى عرض صناعات الشركات تنازلياً حسب عدد الشركات.", "db_id": "company_office"}
{"question": "Please show the industries of companies in descending order of the number of companies.", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC", "arabic": "رتب جميع الصناعات تنازلياً حسب عدد الشركات في كل صناعة.", "db_id": "company_office"}
{"question": "Sort all the industries in descending order of the count of companies in each industry", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC", "arabic": "قائمة الصناعة المشتركة بين أكبر عدد من الشركات.", "db_id": "company_office"}
{"question": "List the industry shared by the most companies.", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي صناعة لديها أكبر عدد من الشركات؟", "db_id": "company_office"}
{"question": "Which industry has the most companies?", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "قائمة أسماء المباني التي لا تحتوي على مكتب للشركات.", "db_id": "company_office"}
{"question": "List the names of buildings that have no company office.", "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)", "arabic": "أي المباني التي لا تحتوي على أي مكتب للشركات؟ أعطني أسماء المباني.", "db_id": "company_office"}
{"question": "Which buildings do not have any company office? Give me the building names.", "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)", "arabic": "عرض الصناعات التي تشترك فيها الشركات التي تتخذ مقرها \"الولايات المتحدة\" والشركات التي تتخذ مقرها \"الصين\".", "db_id": "company_office"}
{"question": "Show the industries shared by companies whose headquarters are \"USA\" and companies whose headquarters are \"China\".", "query": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\"", "arabic": "أي الصناعات التي تحتوي على شركات لها مقر في \"الولايات المتحدة\" وشركات لها مقر في \"الصين\"؟", "db_id": "company_office"}
{"question": "Which industries have both companies with headquarter in \"USA\" and companies with headquarter in \"China\"?", "query": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\"", "arabic": "ابحث عن عدد الشركات التي تنتمي إلى صناعة \"البنوك\" أو \"المجمعات\".", "db_id": "company_office"}
{"question": "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",", "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"", "arabic": "كم عدد الشركات في صناعة \"البنوك\" أو صناعة \"المجمعات\"؟", "db_id": "company_office"}
{"question": "How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?", "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"", "arabic": "عرض المقرات التي تشترك فيها أكثر من شركتين.", "db_id": "company_office"}
{"question": "Show the headquarters shared by more than two companies.", "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2", "arabic": "أي مواقع المقرات المستخدمة من قبل أكثر من شركتين؟", "db_id": "company_office"}
{"question": "Which headquarter locations are used by more than 2 companies?", "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2", "arabic": "كم عدد المنتجات؟", "db_id": "company_office"}
{"question": "How many products are there?", "query": "SELECT count(*) FROM Products", "arabic": "قائمة أسماء المنتجات بترتيب تصاعدي حسب السعر.", "db_id": "solvency_ii"}
{"question": "List the name of products in ascending order of price.", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC", "arabic": "ما هي أسماء وأكواد أنواع المنتجات؟", "db_id": "solvency_ii"}
{"question": "What are the names and type codes of products?", "query": "SELECT Product_Name ,  Product_Type_Code FROM Products", "arabic": "عرض أسعار المنتجات التي تحمل اسم \"Dining\" أو \"Trading Policy\".", "db_id": "solvency_ii"}
{"question": "Show the prices of the products named \"Dining\" or \"Trading Policy\".", "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"", "arabic": "ما هو متوسط السعر للمنتجات؟", "db_id": "solvency_ii"}
{"question": "What is the average price for products?", "query": "SELECT avg(Product_Price) FROM Products", "arabic": "ما هو اسم المنتج ذو أعلى سعر؟", "db_id": "solvency_ii"}
{"question": "What is the name of the product with the highest price?", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1", "arabic": "عرض أكواد أنواع المنتجات المختلفة وعدد المنتجات التي تحمل كل نوع.", "db_id": "solvency_ii"}
{"question": "Show different type codes of products and the number of products with each type code.", "query": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code", "arabic": "عرض أكثر رمز نوع شيوعًا بين المنتجات.", "db_id": "solvency_ii"}
{"question": "Show the most common type code across products.", "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "عرض أكواد أنواع المنتجات التي تحتوي على ما لا يقل عن منتجين.", "db_id": "solvency_ii"}
{"question": "Show the product type codes that have at least two products.", "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2", "arabic": "عرض أكواد أنواع المنتجات التي تحتوي على منتجات بسعر أعلى من 4500 ومنتجات بسعر أقل من 3000.", "db_id": "solvency_ii"}
{"question": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.", "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000", "arabic": "عرض أسماء المنتجات وعدد الأحداث التي يشاركون فيها.", "db_id": "solvency_ii"}
{"question": "Show the names of products and the number of events they are in.", "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name", "arabic": "عرض أسماء المنتجات وعدد الأحداث التي يشاركون فيها، مرتبة حسب عدد الأحداث بترتيب تنازلي.", "db_id": "solvency_ii"}
{"question": "Show the names of products and the number of events they are in, sorted by the number of events in descending order.", "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC", "arabic": "عرض أسماء المنتجات التي تشارك في ما لا يقل عن حدثين.", "db_id": "solvency_ii"}
{"question": "Show the names of products that are in at least two events.", "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2", "arabic": "عرض أسماء المنتجات التي تشارك في ما لا يقل عن حدثين بترتيب أبجدي تصاعدي حسب اسم المنتج.", "db_id": "solvency_ii"}
{"question": "Show the names of products that are in at least two events in ascending alphabetical order of product name.", "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name", "arabic": "قائمة أسماء المنتجات التي لا تشارك في أي حدث.", "db_id": "solvency_ii"}
{"question": "List the names of products that are not in any event.", "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)", "arabic": "كم عدد الأعمال الفنية؟", "db_id": "solvency_ii"}
{"question": "How many artworks are there?", "query": "SELECT count(*) FROM artwork", "arabic": "قائمة أسماء الأعمال الفنية بترتيب أبجدي تصاعدي.", "db_id": "entertainment_awards"}
{"question": "List the name of artworks in ascending alphabetical order.", "query": "SELECT Name FROM artwork ORDER BY Name ASC", "arabic": "قائمة أسماء الأعمال الفنية التي نوعها ليس \"برنامج مواهب\".", "db_id": "entertainment_awards"}
{"question": "List the name of artworks whose type is not \"Program Talent Show\".", "query": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\"", "arabic": "ما هي أسماء ومواقع المهرجانات؟", "db_id": "entertainment_awards"}
{"question": "What are the names and locations of festivals?", "query": "SELECT Festival_Name ,  LOCATION FROM festival_detail", "arabic": "ما هي أسماء رؤساء المهرجانات، مرتبة بترتيب تصاعدي حسب السنة التي عقدت فيها؟", "db_id": "entertainment_awards"}
{"question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?", "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC", "arabic": "ما هي موقع المهرجان الذي يحظى بأكبر عدد من الجمهور؟", "db_id": "entertainment_awards"}
{"question": "What is the location of the festival with the largest number of audience?", "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1", "arabic": "ما هي أسماء المهرجانات التي عُقدت في عام 2007؟", "db_id": "entertainment_awards"}
{"question": "What are the names of festivals held in year 2007?", "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007", "arabic": "ما هو المتوسط ​​لعدد الجمهور للمهرجانات؟", "db_id": "entertainment_awards"}
{"question": "What is the average number of audience for festivals?", "query": "SELECT avg(Num_of_Audience) FROM festival_detail", "arabic": "عرض أسماء أحدث ثلاث مهرجانات.", "db_id": "entertainment_awards"}
{"question": "Show the names of the three most recent festivals.", "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3", "arabic": "لكل ترشيح، عرض اسم العمل الفني واسم المهرجان الذي تم ترشيحه فيه.", "db_id": "entertainment_awards"}
{"question": "For each nomination, show the name of the artwork and name of the festival where it is nominated.", "query": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID", "arabic": "عرض أنواع فنون الأعمال المرشحة في المهرجانات في عام 2007.", "db_id": "entertainment_awards"}
{"question": "Show distinct types of artworks that are nominated in festivals in 2007.", "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007", "arabic": "عرض أسماء الأعمال الفنية بترتيب تصاعدي حسب السنة التي تم فيها الترشيح.", "db_id": "entertainment_awards"}
{"question": "Show the names of artworks in ascending order of the year they are nominated in.", "query": "SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID ORDER BY T3.Year", "arabic": "عرض أسماء المهرجانات التي شهدت ترشيحًا لأعمال فنية من نوع \"برنامج مواهب\".", "db_id": "entertainment_awards"}
{"question": "Show the names of festivals that have nominated artworks of type \"Program Talent Show\".", "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  \"Program Talent Show\"", "arabic": "عرض الهويات والأسماء للمهرجانات التي حصلت على ترشيحين على الأقل لأعمال فنية.", "db_id": "entertainment_awards"}
{"question": "Show the ids and names of festivals that have at least two nominations for artworks.", "query": "SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2", "arabic": "عرض الهوية واسم كل مهرجان وعدد الأعمال الفنية التي تم ترشيحها.", "db_id": "entertainment_awards"}
{"question": "Show the id, name of each festival and the number of artworks it has nominated.", "query": "SELECT T1.Festival_ID ,  T3.Festival_Name ,  COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID", "arabic": "يرجى عرض أنواع مختلفة من الأعمال الفنية مع عدد الأعمال الفنية من كل نوع.", "db_id": "entertainment_awards"}
{"question": "Please show different types of artworks with the corresponding number of artworks of each type.", "query": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE", "arabic": "قائمة النوع الأكثر شيوعًا من الأعمال الفنية.", "db_id": "entertainment_awards"}
{"question": "List the most common type of artworks.", "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "قائمة السنة التي توجد فيها أكثر من مهرجان واحد.", "db_id": "entertainment_awards"}
{"question": "List the year in which there are more than one festivals.", "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1", "arabic": "عرض أسماء الأعمال الفنية التي لم يتم ترشيحها.", "db_id": "entertainment_awards"}
{"question": "List the name of artworks that are not nominated.", "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)", "arabic": "عرض عدد الجمهور في عام 2008 أو 2010.", "db_id": "entertainment_awards"}
{"question": "Show the number of audience in year 2008 or 2010.", "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010", "arabic": "ما هو إجمالي عدد الجماهير الذين زاروا أي من المهرجانات؟", "db_id": "entertainment_awards"}
{"question": "What are the total number of the audiences who visited any of the festivals?", "query": "SELECT sum(Num_of_Audience) FROM festival_detail", "arabic": "في أي سنة توجد مهرجانات داخل \"الولايات المتحدة\" وخارج \"الولايات المتحدة\"؟", "db_id": "entertainment_awards"}
{"question": "In which year are there festivals both inside the 'United States' and outside the 'United States'?", "query": "SELECT YEAR FROM festival_detail WHERE LOCATION  =  'United States' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION != 'United States'", "arabic": "كم عدد المنشآت؟", "db_id": "entertainment_awards"}
{"question": "How many premises are there?", "query": "SELECT count(*) FROM premises", "arabic": "ما هي جميع أنواع المنشآت المتميزة؟", "db_id": "customers_campaigns_ecommerce"}
{"question": "What are all the distinct premise types?", "query": "SELECT DISTINCT premises_type FROM premises", "arabic": "العثور على أنواع وتفاصيل جميع المنشآت وترتيبها حسب نوع المنشأة.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Find the types and details for all premises and order by the premise type.", "query": "SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type", "arabic": "عرض كل نوع من المنشآت وعدد المنشآت في هذا النوع.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show each premise type and the number of premises in that type.", "query": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type", "arabic": "عرض جميع فئات المنتجات المتميزة جنبًا إلى جنب مع عدد الرسائل البريدية في كل فئة.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show all distinct product categories along with the number of mailshots in each category.", "query": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category", "arabic": "عرض اسم ورقم هاتف العميل بدون أي رسالة بريدية.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the name and phone of the customer without any mailshot.", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)", "arabic": "عرض اسم ورقم هاتف العملاء الذين تم إرسال رسالة بريدية لهم برمز النتيجة 'لا استجابة'.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the name and phone for customers with a mailshot with outcome code 'No Response'.", "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'", "arabic": "عرض رمز نتيجة الرسائل البريدية جنبًا إلى جنب مع عدد الرسائل البريدية في كل رمز نتيجة.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the outcome code of mailshots along with the number of mailshots in each outcome code.", "query": "SELECT outcome_code ,  count(*) FROM mailshot_customers GROUP BY outcome_code", "arabic": "عرض أسماء العملاء الذين لديهم رسائل بريدية برمز النتيجة 'طلب' على الأقل 2.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'.", "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2", "arabic": "عرض أسماء العملاء الذين لديهم أكبر عدد من رسائل البريد الإلكتروني.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the names of customers who have the most mailshots.", "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي اسماء وطريقة الدفع للعملاء الذين لديهم كل من رسائل البريد الإلكتروني في نتيجة 'طلب' ورسائل البريد الإلكتروني في نتيجة 'لا استجابة'.", "db_id": "customers_campaigns_ecommerce"}
{"question": "What are the name and payment method of customers who have both mailshots in 'Order' outcome and mailshots in 'No Response' outcome.", "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'", "arabic": "عرض نوع المنشأة ورمز نوع العنوان لجميع عناوين العملاء.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the premise type and address type code for all customer addresses.", "query": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id", "arabic": "ما هي رموز أنواع العناوين المتميزة لجميع عناوين العملاء؟", "db_id": "customers_campaigns_ecommerce"}
{"question": "What are the distinct address type codes for all customer addresses?", "query": "SELECT DISTINCT address_type_code FROM customer_addresses", "arabic": "عرض رسوم الشحن ومعرف العميل لطلبات العملاء بحالة الطلب الملغي أو المدفوع.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid.", "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'", "arabic": "عرض أسماء العملاء الذين لديهم طلب بطريقة شحن FedEx وحالة الطلب المدفوعة.", "db_id": "customers_campaigns_ecommerce"}
{"question": "Show the names of customers having an order with shipping method FedEx and order status Paid.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid'", "arabic": "كم عدد الدورات بالمجموع؟", "db_id": "customers_campaigns_ecommerce"}
{"question": "How many courses are there in total?", "query": "SELECT count(*) FROM COURSE", "arabic": "ما عدد الدورات؟", "db_id": "college_3"}
{"question": "Count the number of courses.", "query": "SELECT count(*) FROM COURSE", "arabic": "كم عدد الدورات التي تحمل أكثر من 2 وحدة دراسية؟", "db_id": "college_3"}
{"question": "How many courses have more than 2 credits?", "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2", "arabic": "عدد الدورات التي تحمل أكثر من 2 وحدة دراسية.", "db_id": "college_3"}
{"question": "Count the number of courses with more than 2 credits.", "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2", "arabic": "استعرض جميع أسماء الدورات التي تحمل 1 وحدة دراسية؟", "db_id": "college_3"}
{"question": "List all names of courses with 1 credit?", "query": "SELECT CName FROM COURSE WHERE Credits  =  1", "arabic": "ما هي أسماء الدورات التي تحمل 1 وحدة دراسية؟", "db_id": "college_3"}
{"question": "What are the names of courses with 1 credit?", "query": "SELECT CName FROM COURSE WHERE Credits  =  1", "arabic": "أي الدورات يتم تدريسها في الأيام MTW؟", "db_id": "college_3"}
{"question": "Which courses are taught on days MTW?", "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"", "arabic": "ما هي أسماء الدورات التي يتم تدريسها يوميًا MTW؟", "db_id": "college_3"}
{"question": "What are the course names for courses taught on MTW?", "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"", "arabic": "ما هو عدد الأقسام في القسم \"AS\"؟", "db_id": "college_3"}
{"question": "What is the number of departments in Division \"AS\"?", "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"", "arabic": "كم عدد الأقسام في القسم AS؟", "db_id": "college_3"}
{"question": "How many departments are in the division AS?", "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"", "arabic": "ما هي أرقام هواتف الأقسام في الغرفة 268؟", "db_id": "college_3"}
{"question": "What are the phones of departments in Room 268?", "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268", "arabic": "أعطي أرقام الهواتف للأقسام في الغرفة 268؟", "db_id": "college_3"}
{"question": "Give the phones for departments in room 268.", "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268", "arabic": "العثور على عدد الطلاب الذين لديهم على الأقل درجة \"B\" واحدة.", "db_id": "college_3"}
{"question": "Find the number of students that have at least one grade \"B\".", "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"", "arabic": "كم عدد الطلاب الذين حصلوا على درجة \"B\" واحدة على الأقل؟", "db_id": "college_3"}
{"question": "How many students have had at least one \"B\" grade?", "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"", "arabic": "العثور على أقصى وأدنى درجة لجميع الدرجات الحرفية.", "db_id": "college_3"}
{"question": "Find the max and min grade point for all letter grade.", "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION", "arabic": "ما هي أقصى وأدنى نقاط الدرجات؟", "db_id": "college_3"}
{"question": "What are the maximum and minumum grade points?", "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION", "arabic": "ما أسماء الطلاب الأولية الذين يحتوي اسمهم الأول على الحرف \"a\"؟", "db_id": "college_3"}
{"question": "Find the first names of students whose first names contain letter \"a\".", "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'", "arabic": "ما هي أسماء الطلاب الأولية الذين يحتوي اسمهم الأول على الحرف \"a\"؟", "db_id": "college_3"}
{"question": "What are the first names for students who have an \"a\" in their first name?", "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'", "arabic": "العثور على الأسماء الأولية والأسماء الأخيرة لأعضاء هيئة التدريس الذكور (الجنس هو M) الذين يعيشون في مبنى NEB.", "db_id": "college_3"}
{"question": "Find the first names and last names of male (sex is M) faculties who live in building NEB.", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"", "arabic": "ما هي الأسماء الكاملة لأعضاء هيئة التدريس ذوي الجنس M والذين يعيشون في مبنى NEB؟", "db_id": "college_3"}
{"question": "What are the full names of faculties with sex M and who live in building NEB?", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"", "arabic": "العثور على غرف أعضاء هيئة التدريس ذوي الرتبة البروفيسور والذين يعيشون في مبنى NEB.", "db_id": "college_3"}
{"question": "Find the rooms of faculties with rank professor who live in building NEB.", "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"", "arabic": "ما هي الغرف لأعضاء هيئة التدريس الذين هم أساتذة والذين يعيشون في مبنى NEB؟", "db_id": "college_3"}
{"question": "What are the rooms for members of the faculty who are professors and who live in building NEB?", "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"", "arabic": "العثور على اسم القسم الموجود في مبنى \"Mergenthaler\".", "db_id": "college_3"}
{"question": "Find the department name that is in Building \"Mergenthaler\".", "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"", "arabic": "ما هو اسم القسم في المبنى Mergenthaler؟", "db_id": "college_3"}
{"question": "What is the name of the department in the Building Mergenthaler?", "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"", "arabic": "استعرض جميع المعلومات حول الدورات مرتبة حسب الائتمان بترتيب تصاعدي.", "db_id": "college_3"}
{"question": "List all information about courses sorted by credits in the ascending order.", "query": "SELECT * FROM COURSE ORDER BY Credits", "arabic": "ما هي جميع المعلومات حول الدورات، مرتبة حسب الائتمان بترتيب تصاعدي؟", "db_id": "college_3"}
{"question": "What is all the information about courses, ordered by credits ascending?", "query": "SELECT * FROM COURSE ORDER BY Credits", "arabic": "استعرض اسم الدورة للدورات مرتبة حسب الائتمان.", "db_id": "college_3"}
{"question": "List the course name of courses sorted by credits.", "query": "SELECT CName FROM COURSE ORDER BY Credits", "arabic": "ما هي أسماء الدورات، مرتبة حسب الائتمان؟", "db_id": "college_3"}
{"question": "What are the course names, ordered by credits?", "query": "SELECT CName FROM COURSE ORDER BY Credits", "arabic": "العثور على الاسم الأول للطلاب بترتيب تنازلي حسب العمر.", "db_id": "college_3"}
{"question": "Find the first name of students in the descending order of age.", "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC", "arabic": "ما هي الأسماء الأولية للطلاب، مرتبة حسب العمر من الأكبر إلى الأصغر؟", "db_id": "college_3"}
{"question": "What are the first names of students, ordered by age from greatest to least?", "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC", "arabic": "العثور على اسم العائلة للطالبات الإناث (الجنس هو F) بترتيب تنازلي حسب العمر.", "db_id": "college_3"}
{"question": "Find the last name of female (sex is F) students in the descending order of age.", "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC", "arabic": "ما هي أسماء العائلة للطالبات، مرتبة حسب العمر بترتيب تنازلي؟", "db_id": "college_3"}
{"question": "What are the last names of female students, ordered by age descending?", "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC", "arabic": "العثور على أسماء العائلة لأعضاء هيئة التدريس في مبنى Barton بترتيب أبجدي.", "db_id": "college_3"}
{"question": "Find the last names of faculties in building Barton in alphabetic order.", "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname", "arabic": "ما هي أسماء العائلة لأعضاء هيئة التدريس في مبنى Barton، مرتبة حسب العائلة؟", "db_id": "college_3"}
{"question": "What are the last names of faculty in building Barton, sorted by last name?", "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname", "arabic": "العثور على أسماء الأولية لأعضاء هيئة التدريس ذوي الرتبة البروفيسور بترتيب أبجدي.", "db_id": "college_3"}
{"question": "Find the first names of faculties of rank Professor in alphabetic order.", "query": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname", "arabic": "ما هي الأسماء الأولية لجميع أساتذة الهيئة التعليمية، مرتبة حسب الاسم الأول؟", "db_id": "college_3"}
{"question": "What are the first names for all faculty professors, ordered by first name?", "query": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname", "arabic": "العثور على اسم القسم الذي يحتوي على أكبر عدد من الطلاب الذين يدرسون تخصص فرعي؟", "db_id": "college_3"}
{"question": "Find the name of the department that has the biggest number of students minored in?", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم القسم الذي يحتوي على أكبر عدد من الطلاب الذين يدرسون تخصص فرعي؟", "db_id": "college_3"}
{"question": "What is the name of the department with the most students minoring in it?", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1", "arabic": "العثور على اسم القسم الذي لا يوجد فيه طلاب يدرسون تخصص فرعي؟", "db_id": "college_3"}
{"question": "Find the name of the department that has no students minored in?", "query": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO", "arabic": "ما هو اسم القسم الذي لا يوجد فيه طلاب يدرسون تخصص فرعي؟", "db_id": "college_3"}
{"question": "What is the name of the department htat has no students minoring in it?", "query": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO", "arabic": "العثور على اسم القسم الذي يحتوي على أقل عدد من الأعضاء.", "db_id": "college_3"}
{"question": "Find the name of the department that has the fewest members.", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو اسم القسم الذي يحتوي على أقل عدد من الأعضاء؟", "db_id": "college_3"}
{"question": "What is the name of the department with the fewest members?", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1", "arabic": "العثور على رتبة الهيئة التي ينتمي إليها أقل عدد من أعضاء هيئة التدريس.", "db_id": "college_3"}
{"question": "Find the rank of the faculty that the fewest faculties belong to.", "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هي الرتبة الأقل شيوعًا لأعضاء هيئة التدريس؟", "db_id": "college_3"}
{"question": "What is the least common faculty rank?", "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هي الأسماء الأولية والعائلة للمدرسين الذين يدرسون أكبر عدد من الدورات؟", "db_id": "college_3"}
{"question": "What are the first and last names of the instructors who teach the top 3 number of courses?", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هي الأسماء الكاملة للمدرسين الثلاثة الذين يدرسون أكبر عدد من الدورات؟", "db_id": "college_3"}
{"question": "What are the full names of the 3 instructors who teach the most courses?", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3", "arabic": "في أي مبنى يعيش المحاضر الذي يدرس أكبر عدد من الدورات؟", "db_id": "college_3"}
{"question": "Which building does the instructor who teaches the most number of courses live in?", "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1", "arabic": "أعط المبنى الذي يعيش فيه المحاضر الذي يدرس أكبر عدد من الدورات.", "db_id": "college_3"}
{"question": "Give the building that the instructor who teaches the greatest number of courses lives in.", "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء الدورات التي لديها ما لا يقل عن خمس تسجيلات؟", "db_id": "college_3"}
{"question": "What are the name of courses that have at least five enrollments?", "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5", "arabic": "أعط أسماء الدورات التي لديها ما لا يقل عن خمس تسجيلات.", "db_id": "college_3"}
{"question": "Give the names of the courses with at least five enrollments.", "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5", "arabic": "العثور على الاسم الأول والعائلة للمحاضر للدورة التي لديها اسم الدورة", "db_id": "college_3"}
{"question": "Find the first name and last name of the instructor of course that has course name", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"", "arabic": "ما هو الاسم الكامل للمحاضر الذي لديه دورة بعنوان COMPUTER LITERACY؟", "db_id": "college_3"}
{"question": "What is the full name of the instructor who has a course named COMPUTER LITERACY?", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"", "arabic": "العثور على اسم القسم والغرفة للدورة INTRODUCTION TO COMPUTER SCIENCE.", "db_id": "college_3"}
{"question": "Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE.", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"", "arabic": "ما هي اسم القسم والغرفة للدورة INTRODUCTION TO COMPUTER SCIENCE؟", "db_id": "college_3"}
{"question": "What are the department name and room for the course INTRODUCTION TO COMPUTER SCIENCE?", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"", "arabic": "العثور على الأسماء الأولية والأسماء الأخيرة للطلاب ونقاط الدرجات لجميع التسجيلات.", "db_id": "college_3"}
{"question": "Find the student first and last names and grade points of all enrollments.", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID", "arabic": "ما هي الأسماء الكاملة ونقاط الدرجات لجميع التسجيلات؟", "db_id": "college_3"}
{"question": "What are the full names and gradepoints for all enrollments?", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID", "arabic": "العثور على الأسماء الأولية المميزة لجميع الطلاب الذين لديهم نقطة تقدير على الأقل 3.8 في دورة واحدة.", "db_id": "college_3"}
{"question": "Find the distinct student first names of all students that have grade point at least 3.8 in one course.", "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8", "arabic": "ما هي الأسماء الأولية المميزة للطلاب الذين لديهم نقطة تقدير 3.8 أو أعلى في دورة واحدة على الأقل؟", "db_id": "college_3"}
{"question": "What are the distinct first names for students with a grade point of 3.8 or above in at least one course?", "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8", "arabic": "العثور على الأسماء الكاملة لأعضاء هيئة التدريس الذين هم أعضاء في قسم يحمل رقم القسم 520.", "db_id": "college_3"}
{"question": "Find the full names of faculties who are members of department with department number 520.", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520", "arabic": "ما هي الأسماء الكاملة لأعضاء هيئة التدريس الذين هم جزء من القسم 520؟", "db_id": "college_3"}
{"question": "What are the full names of faculty members who are a part of department 520?", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520", "arabic": "ما هي الأسماء الأولية والأسماء الأخيرة للطلاب الذين يدرسون تخصص فرعي في القسم الذي يحمل الرقم 140؟", "db_id": "college_3"}
{"question": "What are the first names and last names of the students that minor in the department with DNO 140.", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140", "arabic": "ما هي الأسماء الكاملة للطلاب الذين يدرسون تخصص فرعي في القسم 140؟", "db_id": "college_3"}
{"question": "What are the full names of students minoring in department 140?", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140", "arabic": "العثور على أسماء العائلة لأعضاء هيئة التدريس الذين هم أعضاء في قسم علوم الحاسوب.", "db_id": "college_3"}
{"question": "Find the last names of faculties who are members of computer science department.", "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"", "arabic": "ما هي أسماء العائلة لأعضاء هيئة التدريس الذين هم جزء من قسم علوم الحاسوب؟", "db_id": "college_3"}
{"question": "What are the last names of faculty who are part of the computer science department?", "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"", "arabic": "العثور على متوسط نقطة التقدير للطالب الذي يحمل اسم العائلة Smith.", "db_id": "college_3"}
{"question": "Find the average grade point of student whose last name is Smith.", "query": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\"", "arabic": "ما هو متوسط نقاط الدرجات للطلاب الذين يحملون اسم العائلة Smith؟", "db_id": "college_3"}
{"question": "What is the average gradepoint for students with the last name Smith?", "query": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\"", "arabic": "ما هي الدرجة القصوى والدنيا لنقاط الدرجات للطلاب الذين يعيشون في نيويورك؟", "db_id": "college_3"}
{"question": "What is the maximum and minimum grade point of students who live in NYC?", "query": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\"", "arabic": "أعط أقصى وأدنى نقاط الدرجات للطلاب الذين يعيشون في نيويورك؟", "db_id": "college_3"}
{"question": "Give the maximum and minimum gradepoints for students living in NYC?", "query": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\"", "arabic": "العثور على أسماء الدورات التي لها إما 3 وحدات دراسية أو وحدة دراسية ولكن 4 ساعات.", "db_id": "college_3"}
{"question": "Find the names of courses that have either 3 credits or 1 credit but 4 hours.", "query": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4", "arabic": "ما هي أسماء الدورات التي تمنح إما 3 وحدات دراسية، أو وحدة دراسية و4 ساعات؟", "db_id": "college_3"}
{"question": "What are the names of courses that give either 3 credits, or 1 credit and 4 hours?", "query": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4", "arabic": "العثور على أسماء الأقسام التي تكون إما في القسم AS أو في القسم EN وفي مبنى NEB.", "db_id": "college_3"}
{"question": "Find the names of departments that are either in division AS or in division EN and in Building NEB.", "query": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\"", "arabic": "ما هي أسماء الأقسام إما في القسم AS، أو في القسم EN وفي المبنى NEB؟", "db_id": "college_3"}
{"question": "What are the names of departments either in division AS, or in division EN and in building NEB?", "query": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\"", "arabic": "العثور على الاسم الأول للطلاب غير المسجلين في أي دورة.", "db_id": "college_3"}
{"question": "Find the first name of students not enrolled in any course.", "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)", "arabic": "ما هي الأسماء الأولية لجميع الطلاب الذين لم يتم تسجيلهم في الدورات؟", "db_id": "college_3"}
{"question": "What are the first names of all students that are not enrolled in courses?", "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)", "arabic": "ما هي معرفات أعلى ثلاث منتجات تم شراؤها بأكبر كمية؟", "db_id": "college_3"}
{"question": "What are the ids of the top three products that were purchased in the largest amount?", "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3", "arabic": "أعط معرفات الثلاثة منتجات التي تم شراؤها بأكبر كميات.", "db_id": "department_store"}
{"question": "Give the ids of the three products purchased in the largest amounts.", "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3", "arabic": "ما هي معرف المنتج ونوع المنتج للمنتج الأرخص؟", "db_id": "department_store"}
{"question": "What are the product id and product type of the cheapest product?", "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1", "arabic": "أعط معرف المنتج ونوع المنتج للمنتج بأقل سعر.", "db_id": "department_store"}
{"question": "Give the id and product type of the product with the lowest price.", "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1", "arabic": "العثور على عدد أنواع المنتجات المختلفة.", "db_id": "department_store"}
{"question": "Find the number of different product types.", "query": "SELECT count(DISTINCT product_type_code) FROM products", "arabic": "عدّ العدد المختلف لأنواع المنتجات.", "db_id": "department_store"}
{"question": "Count the number of distinct product types.", "query": "SELECT count(DISTINCT product_type_code) FROM products", "arabic": "إرجاع عنوان العميل رقم 10.", "db_id": "department_store"}
{"question": "Return the address of customer 10.", "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10", "arabic": "ما هو العنوان للعميل الذي يحمل الرقم 10؟", "db_id": "department_store"}
{"question": "What is the address for the customer with id 10?", "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10", "arabic": "ما هي معرفات الموظفين وأنواعهم من جميع الموظفين الذين يحملون لقب مدير القسم؟", "db_id": "department_store"}
{"question": "What are the staff ids and genders of all staffs whose job title is Department Manager?", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"", "arabic": "إرجاع معرفات الموظفين وأنواعهم لأي موظف لديه اللقب مدير القسم.", "db_id": "department_store"}
{"question": "Return the staff ids and genders for any staff with the title Department Manager.", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"", "arabic": "لكل طريقة دفع، إرجاع عدد العملاء الذين يستخدمونها.", "db_id": "department_store"}
{"question": "For each payment method, return how many customers use it.", "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code", "arabic": "كم عدد العملاء الذين يستخدمون كل طريقة دفع؟", "db_id": "department_store"}
{"question": "How many customers use each payment method?", "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code", "arabic": "ما هو معرف المنتج الذي تم طلبه بشكل أكثر فاعلية؟", "db_id": "department_store"}
{"question": "What is the id of the product that was ordered the most often?", "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أعط معرف المنتج للمنتج الذي تم طلبه بشكل متكرر.", "db_id": "department_store"}
{"question": "Give the product id for the product that was ordered most frequently.", "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي الاسم، ورقم الهاتف، وعنوان البريد الإلكتروني للعميل الذي قام بأكبر عدد من الطلبات؟", "db_id": "department_store"}
{"question": "What are the name, phone number and email address of the customer who made the largest number of orders?", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "إرجاع الاسم، ورقم الهاتف، وعنوان البريد الإلكتروني للعميل الذي قام بأكبر عدد من الطلبات.", "db_id": "department_store"}
{"question": "Return the name, phone number and email address for the customer with the most orders.", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو السعر المتوسط لكل نوع من أنواع المنتجات؟", "db_id": "department_store"}
{"question": "What is the average price for each type of product?", "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code", "arabic": "ما هو السعر المتوسط لكل نوع من أنواع المنتجات؟", "db_id": "department_store"}
{"question": "Return the average price for each product type.", "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code", "arabic": "كم عدد محلات السلسلة South للمتاجر؟", "db_id": "department_store"}
{"question": "How many department stores does the store chain South have?", "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"", "arabic": "عدّ عدد المتاجر التابعة للسلسلة South.", "db_id": "department_store"}
{"question": "Count the number of stores the chain South has.", "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"", "arabic": "ما هو اسم وعنوان الوظيفة للموظف الذي تم تعيينه مؤخرًا؟", "db_id": "department_store"}
{"question": "What is the name and job title of the staff who was assigned the latest?", "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1", "arabic": "إرجاع الاسم وعنوان الوظيفة للموظف الذي تم تعيينه بتاريخ مؤخرًا.", "db_id": "department_store"}
{"question": "Return the name and job title of the staff with the latest date assigned.", "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1", "arabic": "أعطني نوع المنتج، والاسم، والسعر لجميع المنتجات المزودة بواسطة مورد ذو معرف 3.", "db_id": "department_store"}
{"question": "Give me the product type, name and price for all the products supplied by supplier id 3.", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3", "arabic": "إرجاع نوع المنتج، والاسم، والسعر للمنتجات المزودة بواسطة المورد 3.", "db_id": "department_store"}
{"question": "Return the product type, name, and price for products supplied by supplier 3.", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3", "arabic": "إرجاع الأسماء المميزة للعملاء الذين يكون حالة طلباتهم معلقة، مرتبة حسب معرف العميل.", "db_id": "department_store"}
{"question": "Return the distinct name of customers whose order status is Pending, in the order of customer id.", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id", "arabic": "ما هي الأسماء المميزة للعملاء الذين يكون حالة طلباتهم معلقة، مرتبة حسب معرف العميل؟", "db_id": "department_store"}
{"question": "What are the distinct names of customers with an order status of Pending, sorted by customer id?", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id", "arabic": "العثور على الاسم والعنوان للعملاء الذين لديهم طلبات جديدة ومعلقة.", "db_id": "department_store"}
{"question": "Find the name and address of the customers who have both New and Pending orders.", "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"", "arabic": "ما هي الأسماء والعناوين للعملاء الذين لديهم طلبات جديدة ومعلقة؟", "db_id": "department_store"}
{"question": "What are the names and addressed of customers who have both New and Pending orders?", "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"", "arabic": "إرجاع معرفات جميع المنتجات التي يتم توريدها بواسطة مورد ذو معرف 2 وتكون أغلى من السعر المتوسط لجميع المنتجات.", "db_id": "department_store"}
{"question": "Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products.", "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)", "arabic": "ما هي معرفات المنتجات من المورد ذو المعرف 2، التي تكون أغلى من السعر المتوسط لجميع المنتجات؟", "db_id": "department_store"}
{"question": "What are the ids of products from the supplier with id 2, which are more expensive than the average price across all products?", "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)", "arabic": "ما هو معرف واسم متجر الأقسام الذي يحتوي على قسمي التسويق والإدارة؟", "db_id": "department_store"}
{"question": "What is the id and name of the department store that has both marketing and managing department?", "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"", "arabic": "ما هي معرفات وأسماء متاجر الأقسام التي تحتوي على كل من قسمي التسويق والإدارة؟", "db_id": "department_store"}
{"question": "What are the ids and names of department stores with both marketing and managing departments?", "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"", "arabic": "ما هي معرفات سلسلتي متاجر الأقسام اللتين تمتلكان أكبر عدد من المتاجر؟", "db_id": "department_store"}
{"question": "What are the ids of the two department store chains with the largest number of department stores?", "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2", "arabic": "إرجاع معرفات سلسلتي متاجر الأقسام اللتين تمتلكان أكبر عدد من المتاجر.", "db_id": "department_store"}
{"question": "Return the ids of the two department store chains with the most department stores.", "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2", "arabic": "ما هو معرف القسم الذي يحتوي على أقل عدد من الموظفين؟", "db_id": "department_store"}
{"question": "What is the id of the department with the least number of staff?", "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1", "arabic": "إرجاع معرف القسم الذي يحتوي على أقل عدد من مهام الموظفين.", "db_id": "department_store"}
{"question": "Return the id of the department with the fewest staff assignments.", "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1", "arabic": "لكل نوع من أنواع المنتجات، ما هو أعلى وأدنى سعر؟", "db_id": "department_store"}
{"question": "For each product type, return the maximum and minimum price.", "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code", "arabic": "ما هي أعلى وأدنى أسعار المنتجات لكل نوع من أنواع المنتجات؟", "db_id": "department_store"}
{"question": "What are the maximum and minimum product prices for each product type?", "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code", "arabic": "ما هو نوع المنتج الذي يتمتع بمتوسط سعر أعلى من متوسط سعر جميع المنتجات؟", "db_id": "department_store"}
{"question": "Find the product type whose average price is higher than the average price of all products.", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)", "arabic": "ما هو رمز نوع المنتج الذي يتمتع بمتوسط سعر أعلى من متوسط سعر جميع المنتجات؟", "db_id": "department_store"}
{"question": "What is the code of the product type with an average price higher than the average price of all products?", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)", "arabic": "العثور على معرف واسم الموظف الذي تم تعيينه لأقل فترة زمنية.", "db_id": "department_store"}
{"question": "Find the id and name of the staff who has been assigned for the shortest period.", "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1", "arabic": "ما هو معرف واسم الموظف الذي تم تعيينه لأقل مدة زمنية؟", "db_id": "department_store"}
{"question": "What is the id and name of the staff who has been assigned for the least amount of time?", "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1", "arabic": "إرجاع أسماء ومعرفات جميع المنتجات التي تتراوح أسعارها بين 600 و 700.", "db_id": "department_store"}
{"question": "Return the names and ids of all products whose price is between 600 and 700.", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700", "arabic": "ما هي أسماء ومعرفات المنتجات التي تتراوح أسعارها بين 600 و 700؟", "db_id": "department_store"}
{"question": "What are the names and ids of products costing between 600 and 700?", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700", "arabic": "العثور على معرفات جميع العملاء المميزين الذين قاموا بطلب بعد بعض الطلبات التي تم إلغاؤها.", "db_id": "department_store"}
{"question": "Find the ids of all distinct customers who made order after some orders that were Cancelled.", "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")", "arabic": "ما هي المعرفات المميزة للعملاء الذين قاموا بالطلب بعد أي طلب تم إلغاؤه؟", "db_id": "department_store"}
{"question": "What are the distinct ids of customers who made an order after any order that was Cancelled?", "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")", "arabic": "ما هو معرف الموظف الذي كان لديه تعيين في قسم الموظفين قبل أي موظف إداري؟", "db_id": "department_store"}
{"question": "What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff?", "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')", "arabic": "ما هو معرف الموظف الذي كان تعيين قسم العمليات الخاص به أقدم من أي موظف إداري؟", "db_id": "department_store"}
{"question": "Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff.", "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')", "arabic": "ما هي الأسماء والمعرفات للعملاء الذين يحتوي عنوانهم على TN؟", "db_id": "department_store"}
{"question": "What are the names and ids of customers whose address contains TN?", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "arabic": "إرجاع أسماء ومعرفات العملاء الذين لديهم TN في عناوينهم.", "db_id": "department_store"}
{"question": "Return the names and ids of customers who have TN in their address.", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "arabic": "ما هو اسم وجنس الموظف الذي تم تعيينه في عام 2016؟", "db_id": "department_store"}
{"question": "Return the name and gender of the staff who was assigned in 2016.", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"", "arabic": "ما هي الأسماء والأجناس للموظفين الذين تم تعيينهم في عام 2016؟", "db_id": "department_store"}
{"question": "What are the names and genders of staff who were assigned in 2016?", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"", "arabic": "قائمة بأسماء الموظفين الذين تم تعيينهم في وظائف متعددة.", "db_id": "department_store"}
{"question": "List the name of staff who has been assigned multiple jobs.", "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1", "arabic": "ما هي أسماء الموظفين الذين تم تعيينهم في وظائف متعددة؟", "db_id": "department_store"}
{"question": "What are the names of staff who have been assigned multiple jobs?", "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1", "arabic": "قائمة بأسماء وأرقام الهواتف لجميع الموردين بترتيب أبجدي لعناوينهم.", "db_id": "department_store"}
{"question": "List the name and phone number of all suppliers in the alphabetical order of their addresses.", "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details", "arabic": "ما هي الأسماء وأرقام الهواتف لجميع الموردين، مرتبة ترتيباً أبجدياً لعناوينهم؟", "db_id": "department_store"}
{"question": "What are the names and phone numbers for all suppliers, sorted in alphabetical order of their addressed?", "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details", "arabic": "ما هي أرقام الهواتف لجميع العملاء والموردين؟", "db_id": "department_store"}
{"question": "What are the phone numbers of all customers and suppliers.", "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers", "arabic": "إرجاع أرقام الهواتف لجميع العملاء والموردين.", "db_id": "department_store"}
{"question": "Return the phone numbers for all customers and suppliers.", "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers", "arabic": "إرجاع معرفات جميع المنتجات التي تم طلبها أكثر من ثلاث مرات أو تم توريدها بأكثر من 80000.", "db_id": "department_store"}
{"question": "Return the ids of all products that were ordered more than three times or supplied more than 80000.", "query": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000", "arabic": "ما هي معرفات جميع المنتجات التي تم طلبها أكثر من 3 مرات أو لديها كمية مجموعية مشتراة تزيد عن 80000؟", "db_id": "department_store"}
{"question": "What are the ids of all products that were either ordered more than 3 times or have a cumulative amount purchased of above 80000?", "query": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000", "arabic": "ما هي معرف واسم المنتجات التي يكون سعرها أقل من 600 أو أعلى من 900؟", "db_id": "department_store"}
{"question": "What are id and name of the products whose price is lower than 600 or higher than 900?", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "arabic": "إعطاء معرفات وأسماء المنتجات بسعر أقل من 600 أو أعلى من 900.", "db_id": "department_store"}
{"question": "Give the ids and names of products with price lower than 600 or higher than 900.", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "arabic": "ما هو معرف الموردين الذين يكون متوسط المبلغ المشترى لكل منتج أعلى من 50000 أو أقل من 30000؟", "db_id": "department_store"}
{"question": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000.", "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000", "arabic": "ما هي معرفات الموردين الذين لديهم متوسط المبلغ المشترى أعلى من 50000 أو أقل من 30000؟", "db_id": "department_store"}
{"question": "What are the ids of suppliers which have an average amount purchased of above 50000 or below 30000?", "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000", "arabic": "ما هو المبلغ المشترى المتوسط والقيمة المشتراة للمورد الذي يورد أكبر عدد من المنتجات؟", "db_id": "department_store"}
{"question": "What are the average amount purchased and value purchased for the supplier who supplies the most products.", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)", "arabic": "إرجاع المتوسط الإجمالي للمبلغ المشترى والقيمة المشتراة الإجمالية للمورد الذي يورد أكبر عدد من المنتجات.", "db_id": "department_store"}
{"question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي أكبر وأصغر رموز العملاء؟", "db_id": "department_store"}
{"question": "What is the largest and smallest customer codes?", "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers", "arabic": "إرجاع أقصى وأدنى رموز العملاء.", "db_id": "department_store"}
{"question": "Return the maximum and minimum customer codes.", "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers", "arabic": "قائمة بأسماء جميع العملاء المميزين الذين اشتروا لوحة مفاتيح.", "db_id": "department_store"}
{"question": "List the names of all the distinct customers who bought a keyboard.", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"", "arabic": "ما هي الأسماء المميزة للعملاء الذين قاموا بشراء لوحة مفاتيح؟", "db_id": "department_store"}
{"question": "What are the distinct names of customers who have purchased a keyboard?", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"", "arabic": "قائمة بأسماء وأرقام هواتف جميع الموردين المميزين الذين يوردون جينز أحمر.", "db_id": "department_store"}
{"question": "List the names and phone numbers of all the distinct suppliers who supply red jeans.", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "arabic": "ما هي الأسماء المميزة وأرقام الهواتف للموردين الذين يملكون جينز أحمر؟", "db_id": "department_store"}
{"question": "What are the distinct names and phone numbers for suppliers who have red jeans?", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "arabic": "ما هي أعلى وأدنى أسعار المنتجات، مجمعة ومرتبة ترتيباً أبجدياً حسب نوع المنتج؟", "db_id": "department_store"}
{"question": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "arabic": "إعطاء أقصى وأدنى أسعار المنتجات لكل نوع منتج، مجمعة ومرتبة حسب نوع المنتج.", "db_id": "department_store"}
{"question": "Give the maximum and minimum product prices for each product type, grouped and ordered by product type.", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "arabic": "قائمة بمعرف الطلب ومعرف العميل للطلبات في حالة \"تم الإلغاء\"، مرتبة حسب تواريخ الطلب.", "db_id": "department_store"}
{"question": "List the order id, customer id for orders in Cancelled status, ordered by their order dates.", "query": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date", "arabic": "ما هي معرفات الطلب ومعرفات العملاء للطلبات التي تم إلغاؤها، مرتبة حسب تواريخ الطلب؟", "db_id": "department_store"}
{"question": "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?", "query": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date", "arabic": "ابحث عن أسماء المنتجات التي تم شراؤها من قبل عملاء مميزين على الأقل.", "db_id": "department_store"}
{"question": "Find the names of products that were bought by at least two distinct customers.", "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2", "arabic": "ما هي الأسماء المميزة للمنتجات التي تم شراؤها من قبل عملاء مختلفين على الأقل؟", "db_id": "department_store"}
{"question": "What are the distinct names of products purchased by at least two different customers?", "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2", "arabic": "ابحث عن أسماء العملاء الذين قاموا بشراء ثلاثة منتجات مختلفة على الأقل.", "db_id": "department_store"}
{"question": "Find the names of customers who have bought by at least three distinct products.", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3", "arabic": "ما هي الأسماء المميزة للعملاء الذين قاموا بشراء ثلاثة منتجات مختلفة على الأقل؟", "db_id": "department_store"}
{"question": "What are the distinct names of customers who have purchased at least three different products?", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3", "arabic": "ابحث عن اسم وجنس الموظف الذي تم تعيينه لوظيفة البائع ولم يكن أبدًا موظف إداري.", "db_id": "department_store"}
{"question": "Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff.", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"", "arabic": "ما هي الأسماء والأجناس للموظفين الذين حملوا لقب البائع، لكنهم لم يكونوا أبدًا موظفين إداريين؟", "db_id": "department_store"}
{"question": "What are the names and genders of staff who have held the title Sales Person, but never Clerical Staff?", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"", "arabic": "ابحث عن معرف واسم العملاء الذين يحتوي عنوانهم على ولاية WY ولا يستخدمون بطاقة الائتمان للدفع.", "db_id": "department_store"}
{"question": "Find the id and name of customers whose address contains WY state and do not use credit card for payment.", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"", "arabic": "ما هي المعرفات والأسماء للعملاء الذين يحتوي عنوانهم على WY والذين لا يستخدمون بطاقة ائتمان للدفع؟", "db_id": "department_store"}
{"question": "What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"", "arabic": "ابحث عن السعر المتوسط لجميع منتجات الملابس.", "db_id": "department_store"}
{"question": "Find the average price of all product clothes.", "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'", "arabic": "ما هو السعر المتوسط للملابس؟", "db_id": "department_store"}
{"question": "What is the average price of clothes?", "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'", "arabic": "ابحث عن اسم أغلى منتج هاردوير.", "db_id": "department_store"}
{"question": "Find the name of the most expensive hardware product.", "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1", "arabic": "ما هو اسم منتج الهاردوير الذي يمتلك أعلى سعر؟", "db_id": "department_store"}
{"question": "What is the name of the hardware product with the greatest price?", "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1", "arabic": "كم عدد الطائرات؟", "db_id": "department_store"}
{"question": "How many aircrafts are there?", "query": "SELECT count(*) FROM aircraft", "arabic": "ما هو عدد الطائرات؟", "db_id": "aircraft"}
{"question": "What is the number of aircraft?", "query": "SELECT count(*) FROM aircraft", "arabic": "قائمة وصف جميع الطائرات.", "db_id": "aircraft"}
{"question": "List the description of all aircrafts.", "query": "SELECT Description FROM aircraft", "arabic": "ما هي الوصف للطائرات؟", "db_id": "aircraft"}
{"question": "What are the descriptions for the aircrafts?", "query": "SELECT Description FROM aircraft", "arabic": "ما هو المتوسط لعدد المسافرين الدوليين لجميع المطارات؟", "db_id": "aircraft"}
{"question": "What is the average number of international passengers of all airports?", "query": "SELECT avg(International_Passengers) FROM airport", "arabic": "ما هو المتوسط لعدد المسافرين الدوليين لمطار واحد؟", "db_id": "aircraft"}
{"question": "What is the average number of international passengers for an airport?", "query": "SELECT avg(International_Passengers) FROM airport", "arabic": "ما هو عدد المسافرين الدوليين والمحليين لمطار يحمل اسم لندن \"هيثرو\"؟", "db_id": "aircraft"}
{"question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "arabic": "كم عدد المسافرين الدوليين والمحليين في مطار لندن هيثرو؟", "db_id": "aircraft"}
{"question": "How many international and domestic passengers are there in the airport London Heathrow?", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "arabic": "ما هو العدد الإجمالي للمسافرين المحليين للمطارات التي تحتوي على كلمة \"لندن\".", "db_id": "aircraft"}
{"question": "What are the total number of Domestic Passengers of airports that contain the word \"London\".", "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"", "arabic": "ما هو العدد الإجمالي للمسافرين المحليين في جميع مطارات لندن؟", "db_id": "aircraft"}
{"question": "What are the total number of domestic passengers at all London airports?", "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"", "arabic": "ما هو الحد الأقصى والحد الأدنى لعدد المسافرين العابرين لجميع المطارات؟", "db_id": "aircraft"}
{"question": "What are the maximum and minimum number of transit passengers of all aiports.", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "arabic": "ما هو الحد الأقصى والحد الأدنى لعدد المسافرين العابرين لجميع المطارات؟", "db_id": "aircraft"}
{"question": "What is the maximum and mininum number of transit passengers for all airports?", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "arabic": "ما هي أسماء الطيارين الذين تبلغ أعمارهم 25 عامًا أو أكبر؟", "db_id": "aircraft"}
{"question": "What are the name of pilots aged 25 or older?", "query": "SELECT Name FROM pilot WHERE Age  >=  25", "arabic": "ما هو اسم كل طيار يبلغ من العمر 25 عامًا على الأقل؟", "db_id": "aircraft"}
{"question": "what is the name of every pilot who is at least 25 years old?", "query": "SELECT Name FROM pilot WHERE Age  >=  25", "arabic": "اعرض جميع أسماء الطيارين بترتيب أبجدي تصاعدي.", "db_id": "aircraft"}
{"question": "List all pilot names in ascending alphabetical order.", "query": "SELECT Name FROM pilot ORDER BY Name ASC", "arabic": "ما هي أسماء الطيارين بترتيب أبجدي؟", "db_id": "aircraft"}
{"question": "What are the names of the pilots in alphabetical order?", "query": "SELECT Name FROM pilot ORDER BY Name ASC", "arabic": "قائمة أسماء جميع الطيارين الذين تبلغ أعمارهم 30 عامًا أو أقل بترتيب أبجدي تنازلي.", "db_id": "aircraft"}
{"question": "List names of all pilot aged 30 or younger in descending alphabetical order.", "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC", "arabic": "ما هي أسماء جميع الطيارين الذين يبلغون 30 عامًا أو أقل بترتيب أبجدي تنازلي؟", "db_id": "aircraft"}
{"question": "What are the names of all pilots 30 years old or young in descending alphabetical order?", "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC", "arabic": "يرجى عرض أسماء الطائرات المرتبطة بمطار بالاسم \"لندن جاتويك\".", "db_id": "aircraft"}
{"question": "Please show the names of aircrafts associated with airport with name \"London Gatwick\".", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "arabic": "ما هي أسماء جميع الطائرات المرتبطة بمطار لندن جاتويك؟", "db_id": "aircraft"}
{"question": "What are the names of all the aircrafts associated with London Gatwick airport?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "arabic": "يرجى عرض أسماء ووصف الطائرات المرتبطة بالمطارات التي يبلغ عدد الركاب الإجمالي لديها أكثر من 10000000.", "db_id": "aircraft"}
{"question": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "arabic": "ما هي أسماء ووصف الطائرات المرتبطة بمطار لديه أكثر من 10000000 راكب إجمالي؟", "db_id": "aircraft"}
{"question": "What are the names and descriptions of aircrafts associated with an airport that has more total passengers than 10000000?", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "arabic": "ما هو المتوسط الإجمالي لعدد الركاب للمطارات المرتبطة بطائرة \"روبنسون R-22\"؟", "db_id": "aircraft"}
{"question": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?", "query": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"", "arabic": "ما هو المتوسط الإجمالي لعدد الركاب لجميع المطارات التي تزورها طائرة \"روبنسون R-22\"؟", "db_id": "aircraft"}
{"question": "What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?", "query": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"", "arabic": "يرجى سرد الموقع واسم الطائرة الفائزة.", "db_id": "aircraft"}
{"question": "Please list the location and the winning aircraft name.", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "arabic": "ما هو الموقع واسم الطائرة الفائزة؟", "db_id": "aircraft"}
{"question": "What is the location and name of the winning aircraft?", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "arabic": "سرد اسم الطائرة التي فازت بجائزة مرة أكبر من غيرها.", "db_id": "aircraft"}
{"question": "List the name of the aircraft that has been named winning aircraft the most number of times.", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو اسم الطائرة التي حصلت على جائزة الفوز بأعلى عدد من المرات؟", "db_id": "aircraft"}
{"question": "What is the name of the aircraft that has won an award the most?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "سرد أسماء الطائرات وعدد المرات التي فازت بها.", "db_id": "aircraft"}
{"question": "List the names of aircrafts and the number of times it won matches.", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "arabic": "بالنسبة لكل طائرة فازت بجائزة، ما هو اسمها وكم مرة فازت؟", "db_id": "aircraft"}
{"question": "For each aircraft that has won an award, what is its name and how many time has it won?", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "arabic": "سرد أسماء جميع الطيارين بترتيب تنازلي حسب العمر.", "db_id": "aircraft"}
{"question": "List names of all pilot in descending order of age.", "query": "SELECT Name FROM pilot ORDER BY Age DESC", "arabic": "ما هي أسماء جميع الطيارين المدرجة حسب ترتيب تنازلي للعمر؟", "db_id": "aircraft"}
{"question": "What are the names of all pilots listed by descending age?", "query": "SELECT Name FROM pilot ORDER BY Age DESC", "arabic": "سرد أسماء الطائرات التي فازت في المباريات مرتين على الأقل.", "db_id": "aircraft"}
{"question": "List the names of aircrafts and that won matches at least twice.", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "arabic": "ما هي أسماء جميع الطائرات التي فازت في المباريات مرتين على الأقل؟", "db_id": "aircraft"}
{"question": "What are the names of all aircrafts that have won a match at least twice?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "arabic": "ما هي أسماء الطائرات التي لم تفز بأي مباراة؟", "db_id": "aircraft"}
{"question": "List the names of aircrafts and that did not win any match.", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "arabic": "ما هي أسماء جميع الطائرات التي لم تفز بأي مباراة؟", "db_id": "aircraft"}
{"question": "What are the names of all aicrafts that have never won any match?", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "arabic": "عرض أسماء الطائرات المرتبطة بكل من مطار يدعى \"لندن هيثرو\" ومطار يدعى \"لندن جاتويك\".", "db_id": "aircraft"}
{"question": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\"", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "arabic": "ما هي أسماء جميع الطائرات المرتبطة بكل من مطاري لندن هيثرو وجاتويك؟", "db_id": "aircraft"}
{"question": "What are the names of all aircrafts that are associated with both London Heathrow and Gatwick airports?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "arabic": "عرض جميع المعلومات عن المطار الذي يحمل أكبر عدد من المسافرين الدوليين.", "db_id": "aircraft"}
{"question": "Show all information on the airport that has the largest number of international passengers.", "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1", "arabic": "ما هي جميع المعلومات حول المطار الذي يحمل أكبر عدد من المسافرين الدوليين؟", "db_id": "aircraft"}
{"question": "What is all the information on the airport with the largest number of international passengers?", "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1", "arabic": "العثور على اسم وعمر الطيار الذي فاز بأكبر عدد من المرات بين الطيارين الذين تقل أعمارهم عن 30 عامًا.", "db_id": "aircraft"}
{"question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم وعمر الطيار الذي تقل أعمارهم عن 30 عامًا وفاز بأكبر عدد من المرات؟", "db_id": "aircraft"}
{"question": "What is the name and age of the pilot younger than 30 who has won the most number of times?", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم وعمر أصغر طيار فائز؟", "db_id": "aircraft"}
{"question": "what is the name and age of the youngest winning pilot?", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "arabic": "كم عمر أصغر طيار فائز وما هو اسمهم؟", "db_id": "aircraft"}
{"question": "How old is the youngest winning pilot and what is their name?", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "arabic": "العثور على اسماء الطيارين الذين لم يفوزوا بالمباريات التي أقيمت في بلد أستراليا.", "db_id": "aircraft"}
{"question": "find the name of pilots who did not win the matches held in the country of Australia.", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "arabic": "ما هي أسماء الطيارين الذين لم يفوزوا بأي مباراة في أستراليا؟", "db_id": "aircraft"}
{"question": "What are the names of the pilots that have not won any matches in Australia?", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "arabic": "كم عدد السكان في كل ممتلكات؟ سرد معرف الممتلكات وعدد السكان.", "db_id": "aircraft"}
{"question": "How many residents does each property have? List property id and resident count.", "query": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id", "arabic": "ما هي أنواع الخدمات المميزة التي تقدمها المنظمة التي تحتوي على التفاصيل 'دينيسيك وأبناء حفلة'؟", "db_id": "local_govt_and_lot"}
{"question": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?", "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'", "arabic": "كم عدد الخدمات التي طلبها كل ساكن؟ سرد معرف الساكن والتفاصيل والعدد بترتيب تنازلي للعدد.", "db_id": "local_govt_and_lot"}
{"question": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count.", "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC", "arabic": "ما هو العدد الأقصى الذي يتم توفير خدمة معينة؟ قائمة معرف الخدمة والتفاصيل والعدد.", "db_id": "local_govt_and_lot"}
{"question": "What is the maximum number that a certain service is provided? List the service id, details and number.", "query": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1", "arabic": "قائمة معرف الشيء والنوع لكل شيء، وتفاصيل المؤسسة التي تمتلكه.", "db_id": "local_govt_and_lot"}
{"question": "List the id and type of each thing, and the details of the organization that owns it.", "query": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id", "arabic": "ما هي معرفات وتفاصيل العملاء الذين لديهم على الأقل 3 أحداث؟", "db_id": "local_govt_and_lot"}
{"question": "What are the id and details of the customers who have at least 3 events?", "query": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3", "arabic": "متى تمت تاريخ الانتقال لكل عميل، ومعرف العميل المقابل وتفاصيله؟", "db_id": "local_govt_and_lot"}
{"question": "What is each customer's move in date, and the corresponding customer id and details?", "query": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id", "arabic": "أي الأحداث التي لديها عدد الملاحظات بين واحد وثلاثة؟ قائمة معرف الحدث ومعرف الممتلكة.", "db_id": "local_govt_and_lot"}
{"question": "Which events have the number of notes between one and three? List the event id and the property id.", "query": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3", "arabic": "ما هي العلامة التجارية المميزة والنوع للشيء الذي له الحالة 'مغلق' أو لديه سجل حالة قبل تاريخ '2017-06-19 02:59:21'؟", "db_id": "local_govt_and_lot"}
{"question": "What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'", "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'", "arabic": "كم موقعًا مميزًا تمت وضع أشياء بتفاصيل الخدمة 'غير راضٍ' فيه؟", "db_id": "local_govt_and_lot"}
{"question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?", "query": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'", "arabic": "كم عدد أكواد الحالة المختلفة للأشياء؟", "db_id": "local_govt_and_lot"}
{"question": "How many different status codes of things are there?", "query": "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things", "arabic": "أي المنظمات ليست منظمة أصلية للآخرين؟ قائمة معرف المنظمة.", "db_id": "local_govt_and_lot"}
{"question": "Which organizations are not a parent organization of others? List the organization id.", "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations", "arabic": "متى كان آخر يوم انتقال لأي ساكن؟", "db_id": "local_govt_and_lot"}
{"question": "When is the last day any resident moved in?", "query": "SELECT max(date_moved_in) FROM Residents", "arabic": "ما هي تفاصيل السكان التي تحتوي على الجزء الفرعي 'آنسة'؟", "db_id": "local_govt_and_lot"}
{"question": "What are the resident details containing the substring 'Miss'?", "query": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'", "arabic": "قائمة معرف حدث العميل وتاريخ الانتقال المقابل ومعرف الممتلكة.", "db_id": "local_govt_and_lot"}
{"question": "List the customer event id and the corresponding move in date and property id.", "query": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events", "arabic": "كم عدد العملاء الذين لم يكونوا لديهم أي حدث؟", "db_id": "local_govt_and_lot"}
{"question": "How many customers did not have any event?", "query": "SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )", "arabic": "ما هي تواريخ الانتقال المميزة للسكان؟", "db_id": "local_govt_and_lot"}
{"question": "What are the distinct move in dates of the residents?", "query": "SELECT DISTINCT date_moved_in FROM residents", "arabic": "كم عدد المدارس؟", "db_id": "local_govt_and_lot"}
{"question": "How many schools are there?", "query": "SELECT count(*) FROM school", "arabic": "ما هو عدد المدارس؟", "db_id": "school_player"}
{"question": "Count the number of schools.", "query": "SELECT count(*) FROM school", "arabic": "قائمة مواقع المدارس بترتيب تصاعدي حسب عدد الطلاب.", "db_id": "school_player"}
{"question": "List the locations of schools in ascending order of enrollment.", "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC", "arabic": "ما هي قائمة مواقع المدارس مرتبة بترتيب تصاعدي حسب عدد الطلاب؟", "db_id": "school_player"}
{"question": "What is the list of school locations sorted in ascending order of school enrollment?", "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC", "arabic": "قائمة مواقع المدارس بترتيب تنازلي حسب سنة التأسيس.", "db_id": "school_player"}
{"question": "List the locations of schools in descending order of founded year.", "query": "SELECT LOCATION FROM school ORDER BY Founded DESC", "arabic": "ما هي قائمة مواقع المدارس مرتبة بترتيب تنازلي حسب سنة تأسيس المدرسة؟", "db_id": "school_player"}
{"question": "What is the list of school locations sorted in descending order of school foundation year?", "query": "SELECT LOCATION FROM school ORDER BY Founded DESC", "arabic": "ما هي تسجيلات المدارس التي لا تنتمي إلى \"الكاثوليكية\"؟", "db_id": "school_player"}
{"question": "What are the enrollments of schools whose denomination is not \"Catholic\"?", "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"", "arabic": "قائمة التسجيل لكل مدرسة ليس لها \"كاثوليكية\" كطائفة.", "db_id": "school_player"}
{"question": "List the enrollment for each school that does not have \"Catholic\" as denomination.", "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"", "arabic": "ما هو متوسط تسجيل المدارس؟", "db_id": "school_player"}
{"question": "What is the average enrollment of schools?", "query": "SELECT avg(Enrollment) FROM school", "arabic": "احسب متوسط تسجيل المدارس.", "db_id": "school_player"}
{"question": "Take the average of the school enrollment.", "query": "SELECT avg(Enrollment) FROM school", "arabic": "ما هي فرق اللاعبين، مرتبة بترتيب أبجدي تصاعدي؟", "db_id": "school_player"}
{"question": "What are the teams of the players, sorted in ascending alphabetical order?", "query": "SELECT Team FROM player ORDER BY Team ASC", "arabic": "ابحث عن فريق كل لاعب وانظرهم في ترتيب أبجدي تصاعدي.", "db_id": "school_player"}
{"question": "Find the team of each player and sort them in ascending alphabetical order.", "query": "SELECT Team FROM player ORDER BY Team ASC", "arabic": "كم هو عدد مواقف اللاعبين المختلفة؟", "db_id": "school_player"}
{"question": "How many different positions of players are there?", "query": "SELECT count(DISTINCT POSITION) FROM player", "arabic": "احسب عدد مواقف اللاعبين المختلفة.", "db_id": "school_player"}
{"question": "Count the number of distinct player positions.", "query": "SELECT count(DISTINCT POSITION) FROM player", "arabic": "ابحث عن فريق اللاعب الأكبر سنًا.", "db_id": "school_player"}
{"question": "Find the team of the player of the highest age.", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1", "arabic": "أي فريق لديه اللاعب الأكبر سنًا؟", "db_id": "school_player"}
{"question": "Which team has the oldest player?", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1", "arabic": "ما هي فرق اللاعبين ذوي أكبر 5 أعمار؟", "db_id": "school_player"}
{"question": "List the teams of the players with the top 5 largest ages.", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5", "arabic": "ما هي الفرق التي تضم أكبر 5 لاعبين في السن؟", "db_id": "school_player"}
{"question": "What are the teams that have the 5 oldest players?", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5", "arabic": "لكل لاعب، أظهر الفريق وموقع المدرسة التي ينتمي إليها.", "db_id": "school_player"}
{"question": "For each player, show the team and the location of school they belong to.", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID", "arabic": "ما هي الفرق وموقع المدرسة التي ينتمي إليها كل لاعب؟", "db_id": "school_player"}
{"question": "What are the team and the location of school each player belongs to?", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID", "arabic": "أظهر مواقع المدارس التي تحتوي على أكثر من لاعب واحد.", "db_id": "school_player"}
{"question": "Show the locations of schools that have more than 1 player.", "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1", "arabic": "أي المدارس تحتوي على أكثر من لاعب واحد؟ أعطني مواقع المدارس.", "db_id": "school_player"}
{"question": "Which schools have more than 1 player? Give me the school locations.", "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1", "arabic": "أظهر الطائفة الدينية للمدرسة التي ينتمي إليها أكبر عدد من اللاعبين.", "db_id": "school_player"}
{"question": "Show the denomination of the school that has the most players.", "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي الطائفة الدينية للمدرسة التي ينتمي إليها أكبر عدد من اللاعبين؟", "db_id": "school_player"}
{"question": "What is the denomination of the school the most players belong to?", "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر المواقع والألقاب الخاصة بالمدارس.", "db_id": "school_player"}
{"question": "Show locations and nicknames of schools.", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID", "arabic": "ما هي المواقع والألقاب الخاصة بكل مدرسة؟", "db_id": "school_player"}
{"question": "What are the location and nickname of each school?", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID", "arabic": "من فضلك أظهر الطوائف المختلفة وعدد المدارس المقابل لكل منها.", "db_id": "school_player"}
{"question": "Please show different denominations and the corresponding number of schools.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination", "arabic": "لكل طائفة دينية، أرجع الطائفة الدينية وعدد المدارس ذات تلك الطائفة.", "db_id": "school_player"}
{"question": "For each denomination, return the denomination and the count of schools with that denomination.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination", "arabic": "من فضلك أظهر الطوائف المختلفة وعدد المدارس المقابل لكل منها بترتيب تنازلي.", "db_id": "school_player"}
{"question": "Please show different denominations and the corresponding number of schools in descending order.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "arabic": "ضع الطوائف بترتيب تنازلي حسب عدد المدارس التابعة لكل منها. ارجع كل طائفة مع عدد المدارس.", "db_id": "school_player"}
{"question": "Order denominations in descending order of the count of schools with the denomination. Return each denomination with the count of schools.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "arabic": "قائمة ألوان المدرسة للمدرسة التي تحتوي على أكبر عدد من الطلاب.", "db_id": "school_player"}
{"question": "List the school color of the school that has the largest enrollment.", "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1", "arabic": "ما لون المدرسة ذات أكبر عدد للتسجيل؟", "db_id": "school_player"}
{"question": "What is the school color of the school with the largest enrollment?", "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1", "arabic": "قائمة مواقع المدارس التي لا تحتوي على أي لاعب.", "db_id": "school_player"}
{"question": "List the locations of schools that do not have any player.", "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)", "arabic": "أي المدارس التي لا تحتوي على أي لاعب؟ أعطني مواقع المدارس.", "db_id": "school_player"}
{"question": "Which schools do not have any player? Give me the school locations.", "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)", "arabic": "أظهر الطائفة الدينية المشتركة بين المدارس التي تأسست قبل عام 1890 والمدارس التي تأسست بعد عام 1900.", "db_id": "school_player"}
{"question": "Show the denomination shared by schools founded before 1890 and schools founded after 1900", "query": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900", "arabic": "ما هي الطوائف الدينية المستخدمة من قبل المدارس التي تأسست قبل عام 1890 والمدارس التي تأسست بعد عام 1900؟", "db_id": "school_player"}
{"question": "What are the denominations used by both schools founded before 1890 and schools founded  after 1900?", "query": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900", "arabic": "أظهر ألقاب المدارس التي لا تنتمي إلى القسم الأول.", "db_id": "school_player"}
{"question": "Show the nicknames of schools that are not in division 1.", "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"", "arabic": "ما هي ألقاب المدارس التي لا تنتمي إلى القسم الأول؟", "db_id": "school_player"}
{"question": "What are the nicknames of schools whose division is not 1?", "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"", "arabic": "أظهر الطائفة الدينية المشتركة بين أكثر من مدرسة واحدة.", "db_id": "school_player"}
{"question": "Show the denomination shared by more than one school.", "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1", "arabic": "ما هي الطوائف الدينية التي لديها أكثر من مدرسة واحدة؟", "db_id": "school_player"}
{"question": "What are the denomination more than one school have?", "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1", "arabic": "ابحث عن جميع أسماء الأحياء المميزة مرتبة حسب مساحة المدينة بترتيب تنازلي.", "db_id": "school_player"}
{"question": "Find all the distinct district names ordered by city area in descending.", "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC", "arabic": "ما هي أسماء الأحياء المختلفة مرتبة حسب مساحة المدينة بترتيب تنازلي؟", "db_id": "store_product"}
{"question": "What are the different district names in order of descending city area?", "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC", "arabic": "ابحث عن قائمة أحجام الصفحات التي يتم سرد أكثر من 3 منتجات لها.", "db_id": "store_product"}
{"question": "Find the list of page size which have more than 3 product listed", "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3", "arabic": "ما هي أكبر حجم صفحة لكل ما يتم سرد أكثر من 3 منتجات له؟", "db_id": "store_product"}
{"question": "What is the maximum page size for everything that has more than 3 products listed?", "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3", "arabic": "ابحث عن اسم وسكان الحي الذي يتراوح عدد سكانه بين 200000 و 2000000.", "db_id": "store_product"}
{"question": "Find the name and population of district with population between 200000 and 2000000", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "arabic": "ما هي أسماء الأحياء وتعداد سكان المدينة لجميع الأحياء التي تتراوح بين 200،000 و 2،000،000 ساكن؟", "db_id": "store_product"}
{"question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "arabic": "ما هي أسماء جميع الأحياء التي تمتلك مساحة مدينة أكبر من 10 أو يوجد فيها أكثر من 100000 شخص؟", "db_id": "store_product"}
{"question": "Find the name all districts with city area greater than 10 or population larger than 100000", "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000", "arabic": "ما هي أسماء جميع الأحياء التي لديها مساحة مدينة أكبر من 10 أو يوجد فيها أكثر من 100000 شخص؟", "db_id": "store_product"}
{"question": "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?", "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000", "arabic": "أي حي لديه أكبر تعداد سكان؟", "db_id": "store_product"}
{"question": "Which district has the largest population?", "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1", "arabic": "ما اسم الحي الذي يضم أكبر عدد من السكان؟", "db_id": "store_product"}
{"question": "What is the name of the district with the most residents?", "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1", "arabic": "أي حي لديه أقل مساحة؟", "db_id": "store_product"}
{"question": "Which district has the least area?", "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1", "arabic": "ما اسم الحي الذي يمتلك أصغر مساحة؟", "db_id": "store_product"}
{"question": "What is the name of the district with the smallest area?", "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1", "arabic": "ابحث عن إجمالي تعداد سكان أعلى 3 أحياء بأكبر مساحة.", "db_id": "store_product"}
{"question": "Find the total population of the top 3 districts with the largest area.", "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3", "arabic": "ما هو إجمالي عدد السكان للأحياء ذات الـ 3 مساحات الأكبر؟", "db_id": "store_product"}
{"question": "What is the total number of residents for the districts with the 3 largest areas?", "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3", "arabic": "ابحث عن جميع أنواع المتاجر وعددها.", "db_id": "store_product"}
{"question": "Find all types of store and number of them.", "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE", "arabic": "لكل نوع من المتاجر، كم عددها؟", "db_id": "store_product"}
{"question": "For each type of store, how many of them are there?", "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE", "arabic": "ابحث عن أسماء جميع المتاجر في مقاطعة خانيوال.", "db_id": "store_product"}
{"question": "Find the names of all stores in Khanewal District.", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"", "arabic": "ما هي أسماء جميع المتاجر الموجودة في مقاطعة خانيوال؟", "db_id": "store_product"}
{"question": "What are the names of all the stores located in Khanewal District?", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"", "arabic": "ابحث عن جميع المتاجر في المقاطعة التي يوجد بها أكبر عدد من السكان.", "db_id": "store_product"}
{"question": "Find all the stores in the district with the most population.", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)", "arabic": "ما هي أسماء جميع المتاجر في المقاطعة الأكبر من حيث عدد السكان؟", "db_id": "store_product"}
{"question": "What are the names of all the stores in the largest district by population?", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)", "arabic": "في أي مدينة تقع مقر المتجر المسمى \"بلاكفيل\"؟", "db_id": "store_product"}
{"question": "Which city is the headquarter of the store named \"Blackville\" in?", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"", "arabic": "ما هي المدينة التي يقع مقر متجر بلاكفيل فيها؟", "db_id": "store_product"}
{"question": "What city is the headquarter of the store Blackville?", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"", "arabic": "ابحث عن عدد المتاجر في كل مدينة.", "db_id": "store_product"}
{"question": "Find the number of stores in each city.", "query": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city", "arabic": "كم عدد المتاجر التي يقع مقرها في كل مدينة؟", "db_id": "store_product"}
{"question": "How many stores are headquarted in each city?", "query": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city", "arabic": "ابحث عن المدينة التي تحتوي على أكبر عدد من المتاجر.", "db_id": "store_product"}
{"question": "Find the city with the most number of stores.", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي المدينة التي تحتوي على أكبر عدد من المتاجر الرئيسية؟", "db_id": "store_product"}
{"question": "What is the city with the most number of flagship stores?", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو متوسط عدد الصفحات باللون في الدقيقة؟", "db_id": "store_product"}
{"question": "What is the average pages per minute color?", "query": "SELECT avg(pages_per_minute_color) FROM product", "arabic": "ما هو متوسط عدد الصفحات الملونة في الدقيقة؟", "db_id": "store_product"}
{"question": "What is the average number of pages per minute color?", "query": "SELECT avg(pages_per_minute_color) FROM product", "arabic": "ما هي المنتجات المتوفرة في المتجر المسمى \"ميراميتشي\"؟", "db_id": "store_product"}
{"question": "What products are available at store named \"Miramichi\"?", "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"", "arabic": "ما هي المنتجات المباعة في المتجر المسمى ميراميتشي؟", "db_id": "store_product"}
{"question": "What products are sold at the store named Miramichi?", "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"", "arabic": "ابحث عن المنتجات التي يكون حجم الصفحة الأقصى لها \"A4\" وعدد الصفحات باللون في الدقيقة أقل من 5.", "db_id": "store_product"}
{"question": "Find products with max page size as \"A4\" and pages per minute color smaller than 5.", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5", "arabic": "ما هي المنتجات التي يكون لديها أقصى حجم للصفحة \"A4\" وعدد الصفحات باللون في الدقيقة أقل من 5؟", "db_id": "store_product"}
{"question": "What are the products with the maximum page size A4 that also have a pages per minute color smaller than 5?", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5", "arabic": "ابحث عن المنتجات التي يكون لديها أقصى حجم للصفحة \"A4\" أو عدد الصفحات باللون في الدقيقة أقل من 5.", "db_id": "store_product"}
{"question": "Find products with max page size as \"A4\" or pages per minute color smaller than 5.", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5", "arabic": "ما هي المنتجات التي يكون لديها أقصى حجم للصفحة يساوي \"A4\" أو عدد الصفحات باللون في الدقيقة أقل من 5؟", "db_id": "store_product"}
{"question": "What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5", "arabic": "ابحث عن جميع المنتجات التي تحتوي على كلمة \"ماسح ضوئي\".", "db_id": "store_product"}
{"question": "Find all the product whose name contains the word \"Scanner\".", "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"", "arabic": "ما هي جميع المنتجات التي تحتوي على الجزء \"ماسح ضوئي\" في اسمها؟", "db_id": "store_product"}
{"question": "What are all of the products whose name includes the substring \"Scanner\"?", "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"", "arabic": "ما هو أكبر حجم للصفحة الأقصى بين جميع المنتجات؟", "db_id": "store_product"}
{"question": "Find the most prominent max page size among all the products.", "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الحجم الأقصى الأكثر شيوعًا؟", "db_id": "store_product"}
{"question": "What is the most common maximum page size?", "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن أسماء المنتجات التي لا تستخدم أكثر أحجام الصفحات شيوعًا.", "db_id": "store_product"}
{"question": "Find the name of the products that are not using the most frequently-used max page size.", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي أسماء جميع المنتجات التي ليست أكثر استخدامًا لأحجام الصفحات القصوى؟", "db_id": "store_product"}
{"question": "What are the names of all products that are not the most frequently-used maximum page size?", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)", "arabic": "ابحث عن إجمالي عدد السكان في المناطق حيث يكون المساحة أكبر من متوسط مساحة المدينة.", "db_id": "store_product"}
{"question": "Find the total population of the districts where the area is bigger than the average city area.", "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)", "arabic": "ما هو إجمالي عدد السكان لجميع المناطق التي لديها مساحة أكبر من متوسط مساحة المدينة؟", "db_id": "store_product"}
{"question": "What is the total population for all the districts that have an area larger tahn the average city area?", "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)", "arabic": "ابحث عن أسماء المناطق التي تحتوي على كل من مركز تجاري للمدينة ومتاجر نمط القرية.", "db_id": "store_product"}
{"question": "Find the names of districts where have both city mall and village store type stores.", "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"", "arabic": "ما هي أسماء المناطق التي تحتوي على كل من المركز التجاري ومتاجر نمط القرية؟", "db_id": "store_product"}
{"question": "What are the names of the districts that have both mall and village store style shops?", "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"", "arabic": "ما هو إجمالي عدد التسجيلات في جميع الكليات؟", "db_id": "store_product"}
{"question": "What is the total enrollment number of all colleges?", "query": "SELECT sum(enr) FROM College", "arabic": "كم عدد الطلاب المسجلين في الكلية؟", "db_id": "soccer_2"}
{"question": "How many students are enrolled in college?", "query": "SELECT sum(enr) FROM College", "arabic": "ما هو متوسط عدد التسجيلات؟", "db_id": "soccer_2"}
{"question": "What is the average enrollment number?", "query": "SELECT avg(enr) FROM College", "arabic": "كم عدد الطلاب، في المتوسط، المسجلين في كل كلية؟", "db_id": "soccer_2"}
{"question": "How many students, on average, does each college have enrolled?", "query": "SELECT avg(enr) FROM College", "arabic": "كم عدد الكليات بالإجمالي؟", "db_id": "soccer_2"}
{"question": "How many colleges in total?", "query": "SELECT count(*) FROM College", "arabic": "كم عدد الكليات المختلفة؟", "db_id": "soccer_2"}
{"question": "How many different colleges are there?", "query": "SELECT count(*) FROM College", "arabic": "كم عدد اللاعبين الذين يمتلكون أكثر من 1000 ساعة من التدريب؟", "db_id": "soccer_2"}
{"question": "How many players have more than 1000 hours of training?", "query": "SELECT count(*) FROM Player WHERE HS  >  1000", "arabic": "كم لاعب مختلف تدرب لأكثر من 1000 ساعة؟", "db_id": "soccer_2"}
{"question": "How many different players trained for more than 1000 hours?", "query": "SELECT count(*) FROM Player WHERE HS  >  1000", "arabic": "كم عدد الكليات التي لديها أكثر من 15000 طالب؟", "db_id": "soccer_2"}
{"question": "How many colleges has more than 15000 students?", "query": "SELECT count(*) FROM College WHERE enr  >  15000", "arabic": "ما هو عدد الكليات التي يبلغ عدد طلابها أكثر من 15000؟", "db_id": "soccer_2"}
{"question": "What is the number of colleges with a student population greater than 15000?", "query": "SELECT count(*) FROM College WHERE enr  >  15000", "arabic": "ما هو متوسط ساعات التدريب لجميع اللاعبين؟", "db_id": "soccer_2"}
{"question": "What is the average training hours of all players?", "query": "SELECT avg(HS) FROM Player", "arabic": "كم عدد الساعات التي يتدرب عليها اللاعبون في المتوسط؟", "db_id": "soccer_2"}
{"question": "How many hours do the players train on average?", "query": "SELECT avg(HS) FROM Player", "arabic": "ابحث عن أسماء وساعات التدريب للاعبين الذين يقل وقت تدريبهم عن 1500.", "db_id": "soccer_2"}
{"question": "Find the name and training hours of players whose hours are below 1500.", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500", "arabic": "ما هي الأسماء وعدد ساعات التدريب لكل لاعب يتدرب لأقل من 1500 ساعة؟", "db_id": "soccer_2"}
{"question": "What are the names and number of hours spent training for each player who trains for less than 1500 hours?", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500", "arabic": "كم عدد الكليات المختلفة التي شاركت في اختبار التجربة؟", "db_id": "soccer_2"}
{"question": "How many different colleges do attend the tryout test?", "query": "SELECT count(DISTINCT cName) FROM tryout", "arabic": "كم عدد الكليات المختلفة التي تمثلت في اختبارات التجربة؟", "db_id": "soccer_2"}
{"question": "How many different colleges were represented at tryouts?", "query": "SELECT count(DISTINCT cName) FROM tryout", "arabic": "ما هي أنواع مواقع اللاعبين الفريدة في التجربة؟", "db_id": "soccer_2"}
{"question": "What are the unique types of player positions in the tryout?", "query": "SELECT count(DISTINCT pPos) FROM tryout", "arabic": "ما هي أنواع مواقع اللاعبين المختلفة؟", "db_id": "soccer_2"}
{"question": "What are the different types of player positions?", "query": "SELECT count(DISTINCT pPos) FROM tryout", "arabic": "كم عدد الطلاب الذين تم قبولهم بعد التجربة؟", "db_id": "soccer_2"}
{"question": "How many students got accepted after the tryout?", "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'", "arabic": "كم عدد الطلاب الذين حصلوا على موافقة من اختبارات التجربة؟", "db_id": "soccer_2"}
{"question": "How many students received a yes from tryouts?", "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'", "arabic": "كم عدد الطلاب الذين يلعبون دور الحارس؟", "db_id": "soccer_2"}
{"question": "How many students whose are playing the role of goalie?", "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'", "arabic": "ما هو عدد الطلاب الذين يلعبون دور حارس المرمى؟", "db_id": "soccer_2"}
{"question": "What is the number of students playing as a goalie?", "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'", "arabic": "ما هي أقصى، المتوسطة، وأدنى ساعات التدريب لجميع اللاعبين؟", "db_id": "soccer_2"}
{"question": "Find the max, average and min training hours of all players.", "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player", "arabic": "ما هو المتوسط، الأقصى، والأدنى لعدد الساعات التي قضاها اللاعبون في التدريب؟", "db_id": "soccer_2"}
{"question": "What is the average, maximum, and minimum for the number of hours spent training?", "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player", "arabic": "ما هو متوسط التسجيل في الكليات في ولاية فلوريدا؟", "db_id": "soccer_2"}
{"question": "What is average enrollment of colleges in the state FL?", "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'", "arabic": "ما هو عدد الطلاب المسجلين في المتوسط في كليات فلوريدا؟", "db_id": "soccer_2"}
{"question": "What is average number of students enrolled in Florida colleges?", "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'", "arabic": "ما هي أسماء اللاعبين الذين تدربوا لفترة بين 500 و 1500 ساعة؟", "db_id": "soccer_2"}
{"question": "What are the names of players whose training hours is between 500 and 1500?", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500", "arabic": "ما هي أسماء اللاعبين الذين يتدربون بين 500 و 1500 ساعة؟", "db_id": "soccer_2"}
{"question": "What are the names of players who train between 500 and 1500 hours?", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500", "arabic": "ابحث عن اللاعبين الذين تحتوي أسماؤهم على الحرف 'a'.", "db_id": "soccer_2"}
{"question": "Find the players whose names contain letter 'a'.", "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'", "arabic": "من هم اللاعبون الذين أسماؤهم تحتوي على الحرف a؟", "db_id": "soccer_2"}
{"question": "Who are the players that have names containing the letter a?", "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'", "arabic": "ابحث عن الاسم، التسجيل في الكليات التي يكون حجمها أكبر من 10000 والموقع في ولاية لويزيانا.", "db_id": "soccer_2"}
{"question": "Find the name, enrollment of the colleges whose size is bigger than 10000 and location is in state LA.", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "arabic": "ما هي أسماء وأعداد التسجيل في الكليات التي يتجاوز عدد الطلاب المسجلين فيها 10000 وتقع في ولاية لويزيانا؟", "db_id": "soccer_2"}
{"question": "What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "arabic": "قم بسرد جميع المعلومات حول الكليات مرتبة حسب عدد التسجيل بالترتيب المتزايد.", "db_id": "soccer_2"}
{"question": "List all information about college sorted by enrollment number in the ascending order.", "query": "SELECT * FROM College ORDER BY enr", "arabic": "ما هي المعلومات التي تمتلكها حول الكليات مرتبة بتزايد أعداد التسجيل؟", "db_id": "soccer_2"}
{"question": "What information do you have on colleges sorted by increasing enrollment numbers?", "query": "SELECT * FROM College ORDER BY enr", "arabic": "قم بسرد أسماء الكليات التي يزيد تسجيلها عن 18000 مرتبة حسب اسم الكلية.", "db_id": "soccer_2"}
{"question": "List the name of the colleges whose enrollment is greater 18000 sorted by the college's name.", "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName", "arabic": "ما هو اسم كل كلية بترتيب أبجدي تزيانا الذي يتجاوز فيه عدد الطلاب المسجلين فيها 18000؟", "db_id": "soccer_2"}
{"question": "What is the name of every college in alphabetical order that has more than 18000 students enrolled?", "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName", "arabic": "ابحث عن أسماء اللاعبين الذين بطاقتهم نعم مرتبة تنازلياً حسب ساعات التدريب.", "db_id": "soccer_2"}
{"question": "Find the name of players whose card is yes in the descending order of training hours.", "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC", "arabic": "ما هي أسماء اللاعبين الذين تلقوا بطاقة بترتيب تنازلي لساعات التدريب؟", "db_id": "soccer_2"}
{"question": "What are the name of the players who received a card in descending order of the hours of training?", "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC", "arabic": "ابحث عن أسماء الكليات المختلفة المشاركة في التجربة بترتيب أبجدي.", "db_id": "soccer_2"}
{"question": "Find the name of different colleges involved in the tryout in alphabetical order.", "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName", "arabic": "ما هي الأسماء المختلفة للكليات المشاركة في التجربة بترتيب أبجدي؟", "db_id": "soccer_2"}
{"question": "What are the different names of the colleges involved in the tryout in alphabetical order?", "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName", "arabic": "ما هي المركز الأكثر شهرة بين اللاعبين في التجربة؟", "db_id": "soccer_2"}
{"question": "Which position is most popular among players in the tryout?", "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو المركز الأكثر شعبية في التجربة؟", "db_id": "soccer_2"}
{"question": "What was the most popular position at tryouts?", "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن عدد الطلاب الذين شاركوا في التجربة لكل كلية مرتبة حسب العدد بترتيب تنازلي.", "db_id": "soccer_2"}
{"question": "Find the number of students who participate in the tryout for each college ordered by descending count.", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC", "arabic": "كم عدد الطلاب الذين شاركوا في التجربة لكل كلية مرتبة بترتيب تنازلي؟", "db_id": "soccer_2"}
{"question": "How many students participated in tryouts for each college by descennding count?", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC", "arabic": "ما هو أدنى عدد ساعات للطلاب الذين يلعبون في مراكز مختلفة؟", "db_id": "soccer_2"}
{"question": "What is minimum hours of the students playing in different position?", "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos", "arabic": "لكل مركز، ما هو الحد الأدنى من الوقت الذي قضاه الطلاب في التدريب؟", "db_id": "soccer_2"}
{"question": "For each position, what is the minimum time students spent practicing?", "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos", "arabic": "ما هي أسماء المدارس ذات أكبر 3 أحجام؟", "db_id": "soccer_2"}
{"question": "What are the names of schools with the top 3 largest size?", "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3", "arabic": "ما هي أسماء المدارس ذات أكبر 3 أحجام فصل دراسي؟", "db_id": "soccer_2"}
{"question": "What are the names of the schools with the top 3 largest class sizes?", "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3", "arabic": "ما هو اسم المدرسة التي لديها أقل تسجيل في كل ولاية؟", "db_id": "soccer_2"}
{"question": "What is the name of school that has the smallest enrollment in each state?", "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state", "arabic": "ما هو اسم المدرسة التي لديها أصغر حجم تسجيل لكل ولاية؟", "db_id": "soccer_2"}
{"question": "What is the name of the school with smallest enrollment size per state?", "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state", "arabic": "ابحث عن الولايات التي تحتوي على بعض طلاب الكليات في التجربة.", "db_id": "soccer_2"}
{"question": "Find the states where have some college students in tryout.", "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName", "arabic": "ما هي الولايات المختلفة التي تحتوي على طلاب يخوضون التجربة؟", "db_id": "soccer_2"}
{"question": "What are the different states that have students trying out?", "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName", "arabic": "ما هي الولايات التي لديها بعض طلاب الكليات في التجربة وقراراتهم نعم؟", "db_id": "soccer_2"}
{"question": "Find the states where have some college students in tryout and their decisions are yes.", "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "arabic": "ما هي الولايات المختلفة التي شهدت نجاح طلاب يخوضون التجربة؟", "db_id": "soccer_2"}
{"question": "What are the different states that had students successfully try out?", "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "arabic": "ابحث عن اسم وكلية الطلاب الذين قرارتهم نعم في التجربة.", "db_id": "soccer_2"}
{"question": "Find the name and college of students whose decisions are yes in the tryout.", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "arabic": "ما هي أسماء جميع اللاعبين الذين تلقوا قبولًا خلال التجارب، وأيضًا ما هي أسماء كلياتهم؟", "db_id": "soccer_2"}
{"question": "What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "arabic": "ابحث عن اسم جميع الطلاب الذين شاركوا في التجربة مرتبة بالترتيب الأبجدي.", "db_id": "soccer_2"}
{"question": "Find the name of all students who were in the tryout sorted in alphabetic order.", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName", "arabic": "ما هي أسماء جميع الطلاب الذين خاضوا التجربة مرتبة أبجديًا؟", "db_id": "soccer_2"}
{"question": "What are the names of all students who tried out in alphabetical order?", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName", "arabic": "ابحث عن اسم وساعات الطلاب الذين قراراتهم نعم في التجربة.", "db_id": "soccer_2"}
{"question": "Find the name and hours of the students whose tryout decision is yes.", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "arabic": "ما هي أسماء وساعات التدريب لكل طالب حصل على قبول في التجربة؟", "db_id": "soccer_2"}
{"question": "What are the names and hours spent practicing of every student who received a yes at tryouts?", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "arabic": "ابحث عن الولايات التي تحتوي على كليات لديها طلاب في التجربة يلعبون في موقع الهجوم.", "db_id": "soccer_2"}
{"question": "Find the states of the colleges that have students in the tryout who played in striker position.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'", "arabic": "ما هي الولايات التي تحتوي على كليات حضر فيها طلاب يخوضون التجربة لموقع الهجوم؟", "db_id": "soccer_2"}
{"question": "What are the states of the colleges where students who tried out for the striker position attend?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'", "arabic": "ابحث عن أسماء الطلاب الذين يشغلون موقع المهاجم وحصلوا على قبول في التجربة.", "db_id": "soccer_2"}
{"question": "Find the names of the students who are in the position of striker and got a yes tryout decision.", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'", "arabic": "ما هي أسماء جميع الطلاب الذين نجحوا في التجربة لموقع الهجوم؟", "db_id": "soccer_2"}
{"question": "What are the names of all students who successfully tried out for the position of striker?", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'", "arabic": "ابحث عن الولاية التي يحضر فيها اللاعب تشارلز الكلية.", "db_id": "soccer_2"}
{"question": "Find the state of the college which player Charles is attending.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'", "arabic": "في أي ولاية يحضر الكلية التي يدرس فيها اللاعب تشارلز؟", "db_id": "soccer_2"}
{"question": "In which state is the college that Charles attends?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'", "arabic": "ابحث عن المتوسط والحد الأقصى لساعات الطلاب الذين قرارتهم نعم في التجربة.", "db_id": "soccer_2"}
{"question": "Find the average and maximum hours for the students whose tryout decision is yes.", "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "arabic": "ما هو المتوسط والحد الأقصى لعدد ساعات الطلاب الذين تدربوا وتم اختيارهم؟", "db_id": "soccer_2"}
{"question": "What is the average and maximum number of hours students who made the team practiced?", "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "arabic": "ابحث عن ساعات المتوسط للطلاب الذين قرارتهم ليست نعم في التجربة.", "db_id": "soccer_2"}
{"question": "Find the average hours for the students whose tryout decision is no.", "query": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'", "arabic": "ما هو المتوسط لعدد ساعات التدريب للطلاب الذين تم رفضهم؟", "db_id": "soccer_2"}
{"question": "What is the average number of hours spent practicing for students who got rejected?", "query": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'", "arabic": "ما هو أقصى ساعات التدريب للطلاب الذين تزيد ساعات تدريبهم عن 1000 في مواقع مختلفة؟", "db_id": "soccer_2"}
{"question": "What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos", "arabic": "لكل موقع، ما هو الحد الأقصى لعدد الساعات للطلاب الذين قضوا أكثر من 1000 ساعة في التدريب؟", "db_id": "soccer_2"}
{"question": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos", "arabic": "إلى أي كليات ينتمي اللاعبون في التجربة والذين تبدأ أسماؤهم بالحرف د؟", "db_id": "soccer_2"}
{"question": "Which colleges do the tryout players whose name starts with letter D go to?", "query": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'", "arabic": "إلى أي كليات ينتمي كل لاعب يخوض التجربة ويبدأ اسمه بالحرف د؟", "db_id": "soccer_2"}
{"question": "Which colleges does each player with a name that starts with the letter D  who tried out go to?", "query": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'", "arabic": "أي كلية لديها أي طالب يلعب دور حارس المرمى ونجح في التجربة؟", "db_id": "soccer_2"}
{"question": "Which college has any student who is a goalie and succeeded in the tryout.", "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'", "arabic": "أي كلية لديها طالب نجح في التجربة في دور حارس المرمى؟", "db_id": "soccer_2"}
{"question": "What college has a student who successfully made the team in the role of a goalie?", "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'", "arabic": "ابحث عن اسم لاعبي التجربة الذين ينتمون إلى الكلية ذات الحجم الأكبر.", "db_id": "soccer_2"}
{"question": "Find the name of the tryout players who are from the college with largest size.", "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)", "arabic": "ما هي أسماء جميع المشاركين في التجربة الذين ينتمون إلى الكلية ذات الحجم الأكبر؟", "db_id": "soccer_2"}
{"question": "What are the names of all tryout participants who are from the largest college?", "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)", "arabic": "ما هي الولاية والتسجيل في الكليات التي لديها أي طلاب تم قبولهم في قرار التجربة؟", "db_id": "soccer_2"}
{"question": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "arabic": "كم عدد الطلاب المسجلين في الكليات التي تم قبول الطلاب في قرار التجربة، وفي أي الولايات توجد تلك الكليات؟", "db_id": "soccer_2"}
{"question": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "arabic": "ابحث عن أسماء الكليات في LA التي تزيد عن 15000 حجمًا أو في الولاية AZ بأقل من 13000 تسجيل.", "db_id": "soccer_2"}
{"question": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.", "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"", "arabic": "ما هي أسماء الكليات في LA التي يزيد عدد طلابها عن 15،000 وكليات في AZ بأقل من 13،000 طالب؟", "db_id": "soccer_2"}
{"question": "What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students?", "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"", "arabic": "ما هي أسماء المدارس التي لديها بعض الطلاب يلعبون في مركز حارس المرمى ووسط الملعب؟", "db_id": "soccer_2"}
{"question": "Find the names of schools that have some students playing in goalie and mid positions.", "query": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'", "arabic": "ما هي أسماء جميع المدارس التي لديها طلاب يخوضون التجربة لدور حارس المرمى ومركز \"وسط الملعب\"؟", "db_id": "soccer_2"}
{"question": "What are the names of all schools that have students trying out for the position of goal and 'mid'-field.", "query": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'", "arabic": "ابحث عن أسماء الولايات التي لديها بعض الطلاب في الكليات يلعبون في مركز حارس المرمى ووسط الملعب.", "db_id": "soccer_2"}
{"question": "Find the names of states that have some college students playing in goalie and mid positions.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'", "arabic": "ما هي أسماء الولايات التي لديها بعض الطلاب في الكليات يلعبون في مركز حارس المرمى ووسط الملعب؟", "db_id": "soccer_2"}
{"question": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'", "arabic": "كم عدد المدارس التي لديها بعض الطلاب يلعبون في مركز حارس المرمى ووسط الملعب؟", "db_id": "soccer_2"}
{"question": "How many schools have some students playing in goalie and mid positions.", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')", "arabic": "كم عدد المدارس التي لديها طلاب يلعبون في مركز حارس المرمى ومركز \"وسط الملعب\"؟", "db_id": "soccer_2"}
{"question": "How many schools have students playing in goalie and mid-field positions?", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')", "arabic": "ابحث عن أسماء المدارس التي لديها بعض اللاعبين في مركز وسط الملعب ولكن ليس في مركز حارس المرمى.", "db_id": "soccer_2"}
{"question": "Find the names of schools that have some players in the mid position but not in the goalie position.", "query": "SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'", "arabic": "ما هي أسماء المدارس التي لديها بعض اللاعبين في مركز وسط الملعب ولكن ليس لديها حراس مرمى؟", "db_id": "soccer_2"}
{"question": "What are the names of the schools with some players in the mid position but no goalies?", "query": "SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'", "arabic": "ابحث عن أسماء الولايات التي لديها بعض الطلاب في الكليات يلعبون في مركز وسط الملعب ولكن ليس في مركز حارس المرمى.", "db_id": "soccer_2"}
{"question": "Find the names of states that have some college students playing in the mid position but not in the goalie position.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'", "arabic": "ما هي أسماء جميع الولايات التي بها طلاب في الكليات يلعبون في مركز وسط الملعب ولكن ليس لديها حراس مرمى؟", "db_id": "soccer_2"}
{"question": "What are the names of all the states with college students playing in the mid position but no goalies?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'", "arabic": "كم عدد الولايات التي بها بعض الطلاب في الكليات يلعبون في مركز وسط الملعب ولكن ليس في مركز حارس المرمى؟", "db_id": "soccer_2"}
{"question": "How many states that have some college students playing in the mid position but not in the goalie position.", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')", "arabic": "ما هو عدد الولايات التي بها طلاب في الكليات يلعبون في مركز وسط الملعب ولكن ليس كحراس مرمى؟", "db_id": "soccer_2"}
{"question": "What is the count of states with college students playing in the mid position but not as goalies?", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')", "arabic": "ابحث عن الولايات التي بها الكليات التي تكون تسجيلاتها أقل من الحجم الأكبر.", "db_id": "soccer_2"}
{"question": "Find the states where have the colleges whose enrollments are less than the largest size.", "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)", "arabic": "ما هي الولايات التي بها كليات يكون تسجيل طلابها أقل من كلية أخرى ما؟", "db_id": "soccer_2"}
{"question": "What are the states with colleges that have enrollments less than the some other college?", "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)", "arabic": "ابحث عن أسماء الكليات التي تكون تسجيل طلابها أكبر من تسجيل (على الأقل واحدة) كلية في ولاية FL.", "db_id": "soccer_2"}
{"question": "Find names of colleges with enrollment greater than that of some (at least one) college in the FL state.", "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')", "arabic": "ما هي أسماء الكليات التي أكبر من كلية واحدة على الأقل في ولاية فلوريدا؟", "db_id": "soccer_2"}
{"question": "What are the names of the colleges that are larger than at least one college in Florida?", "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')", "arabic": "ابحث عن أسماء جميع الكليات التي تكون تسجيل طلابها أكبر من تسجيل كل الكليات في ولاية فلوريدا.", "db_id": "soccer_2"}
{"question": "Find names of all colleges whose enrollment is greater than that of all colleges in the FL state.", "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')", "arabic": "ما هي أسماء جميع الكليات التي بها تسجيل أكبر من تسجيل الكلية الأكبر في ولاية فلوريدا؟", "db_id": "soccer_2"}
{"question": "What are the names of all colleges with a larger enrollment than the largest college in Florida?", "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')", "arabic": "ما هو إجمالي عدد التسجيلات للمدارس التي لا تمتلك أي لاعب حارس مرمى؟", "db_id": "soccer_2"}
{"question": "What is the total number of enrollment of schools that do not have any goalie player?", "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")", "arabic": "ما هو العدد الإجمالي للطلاب المسجلين في المدارس بدون حراس مرمى؟", "db_id": "soccer_2"}
{"question": "What is the total number of students enrolled in schools without any goalies?", "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")", "arabic": "ما هو عدد الولايات التي بها بعض الكليات تكون تسجيل طلابها أكبر من متوسط التسجيل؟", "db_id": "soccer_2"}
{"question": "What is the number of states that has some college whose enrollment is larger than the average enrollment?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)", "arabic": "كم عدد الولايات التي بها كلية لديها عدد طلاب أكبر من المتوسط؟", "db_id": "soccer_2"}
{"question": "How many states have a college with more students than average?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)", "arabic": "ما هو عدد الولايات التي بها بعض الكليات تكون تسجيل طلابها أقل من متوسط التسجيل؟", "db_id": "soccer_2"}
{"question": "What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)", "arabic": "كم عدد الولايات التي بها كليات أصغر من المتوسط؟", "db_id": "soccer_2"}
{"question": "How many states have smaller colleges than average?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)", "arabic": "كم عدد الأجهزة؟", "db_id": "soccer_2"}
{"question": "How many devices are there?", "query": "SELECT count(*) FROM device", "arabic": "عدد الأجهزة.", "db_id": "device"}
{"question": "Count the number of devices.", "query": "SELECT count(*) FROM device", "arabic": "قائمة الشركات الناقلة للأجهزة بترتيب أبجدي تصاعدي.", "db_id": "device"}
{"question": "List the carriers of devices in ascending alphabetical order.", "query": "SELECT Carrier FROM device ORDER BY Carrier ASC", "arabic": "ما هي الشركات الناقلة المختلفة للأجهزة، مرتبة بالترتيب الأبجدي؟", "db_id": "device"}
{"question": "What are the different carriers for devices, listed in alphabetical order?", "query": "SELECT Carrier FROM device ORDER BY Carrier ASC", "arabic": "ما هي الشركات الناقلة للأجهزة التي ليست منصة البرمجيات الخاصة بها \"أندرويد\"؟", "db_id": "device"}
{"question": "What are the carriers of devices whose software platforms are not \"Android\"?", "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'", "arabic": "ارجاع شركات الأجهزة التي ليست لديها منصة برمجية \"أندرويد\" كمنصة برمجية.", "db_id": "device"}
{"question": "Return the device carriers that do not have Android as their software platform.", "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'", "arabic": "ما هي أسماء المتاجر بترتيب تصاعدي حسب سنة الافتتاح؟", "db_id": "device"}
{"question": "What are the names of shops in ascending order of open year?", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC", "arabic": "ارجاع أسماء المتاجر، مرتبة حسب سنة الافتتاح بترتيب تصاعدي.", "db_id": "device"}
{"question": "Return the names of shops, ordered by year of opening ascending.", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC", "arabic": "ما هو المتوسط ​​لكمية الأسهم؟", "db_id": "device"}
{"question": "What is the average quantity of stocks?", "query": "SELECT avg(Quantity) FROM stock", "arabic": "أعط المتوسط ​​لكمية الأسهم.", "db_id": "device"}
{"question": "Give the average quantity of stocks.", "query": "SELECT avg(Quantity) FROM stock", "arabic": "ما هي أسماء ومواقع المتاجر بترتيب أبجدي تصاعدي حسب الاسم؟", "db_id": "device"}
{"question": "What are the names and location of the shops in ascending alphabetical order of name.", "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC", "arabic": "ارجاع أسماء ومواقع المتاجر، مرتبة حسب الاسم بترتيب أبجدي.", "db_id": "device"}
{"question": "Return the names and locations of shops, ordered by name in alphabetical order.", "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC", "arabic": "كم عدد منصات البرمجيات المختلفة للأجهزة؟", "db_id": "device"}
{"question": "How many different software platforms are there for devices?", "query": "SELECT count(DISTINCT Software_Platform) FROM device", "arabic": "عدد عدد منصات البرمجيات المختلفة.", "db_id": "device"}
{"question": "Count the number of different software platforms.", "query": "SELECT count(DISTINCT Software_Platform) FROM device", "arabic": "قائمة تاريخ الافتتاح للمتجر المسمى \"آبل\".", "db_id": "device"}
{"question": "List the open date of open year of the shop named \"Apple\".", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"", "arabic": "ما هي تواريخ الافتتاح والسنوات للمتجر المسمى آبل؟", "db_id": "device"}
{"question": "What are the open dates and years for the shop named Apple?", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"", "arabic": "قائمة اسم المتجر بأحدث سنة افتتاح.", "db_id": "device"}
{"question": "List the name of the shop with the latest open year.", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1", "arabic": "ما هو اسم المتجر المقابل للمتجر الذي افتتح في السنة الأخيرة؟", "db_id": "device"}
{"question": "What is the shop name corresponding to the shop that opened in the most recent year?", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1", "arabic": "عرض أسماء المتاجر وشركات الاتصال للأجهزة التي تحملها في المخزون.", "db_id": "device"}
{"question": "Show names of shops and the carriers of devices they have in stock.", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID", "arabic": "ما هي أسماء متاجر الأجهزة، وما هي الشركات التي تحمل أجهزة لها في المخزون؟", "db_id": "device"}
{"question": "What are the names of device shops, and what are the carriers that they carry devices in stock for?", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID", "arabic": "عرض أسماء المتاجر التي تحتوي على أكثر من نوع واحد من الأجهزة في المخزون.", "db_id": "device"}
{"question": "Show names of shops that have more than one kind of device in stock.", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1", "arabic": "ما هي أسماء المتاجر التي تحتوي على أكثر من نوع واحد من الأجهزة في المخزون؟", "db_id": "device"}
{"question": "What are the names of shops that have more than a single kind of device in stock?", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1", "arabic": "عرض اسم المتجر الذي يحتوي على أكبر عدد من الأنواع المختلفة من الأجهزة في المخزون.", "db_id": "device"}
{"question": "Show the name of the shop that has the most kind of devices in stock.", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو اسم المتجر الذي يحتوي على أكبر عدد مختلف من الأجهزة في المخزون؟", "db_id": "device"}
{"question": "What is the name of the shop that has the most different kinds of devices in stock?", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "عرض اسم المتجر الذي يحتوي على أكبر كمية من الأجهزة في المخزون.", "db_id": "device"}
{"question": "Show the name of the shop that have the largest quantity of devices in stock.", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1", "arabic": "ما هو اسم المتجر الذي يحتوي على أكبر كمية من الأجهزة في المخزون؟", "db_id": "device"}
{"question": "What is the name of the shop that has the greatest quantity of devices in stock?", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1", "arabic": "يرجى عرض منصات البرمجيات المختلفة والعدد المقابل للأجهزة المستخدمة في كل منها.", "db_id": "device"}
{"question": "Please show different software platforms and the corresponding number of devices using each.", "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform", "arabic": "ما هي منصات البرمجيات المختلفة للأجهزة، وكم عدد الأجهزة لكل منها؟", "db_id": "device"}
{"question": "What are the different software platforms for devices, and how many devices have each?", "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform", "arabic": "يرجى عرض منصات البرمجيات للأجهزة بترتيب تنازلي حسب العدد.", "db_id": "device"}
{"question": "Please show the software platforms of devices in descending order of the count.", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC", "arabic": "ما هي منصات البرمجيات المختلفة للأجهزة، مرتبة حسب الترتيب التنازلي للتواتر؟", "db_id": "device"}
{"question": "What are the different software platforms for devices, ordered by frequency descending?", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC", "arabic": "قائمة المنصات البرمجية المشتركة بين أكبر عدد من الأجهزة.", "db_id": "device"}
{"question": "List the software platform shared by the greatest number of devices.", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي منصة البرمجيات الأكثر شيوعًا بين جميع الأجهزة؟", "db_id": "device"}
{"question": "What is the software platform that is most common amongst all devices?", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "قائمة أسماء المتاجر التي لا تحتوي على أجهزة في المخزون.", "db_id": "device"}
{"question": "List the names of shops that have no devices in stock.", "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)", "arabic": "ما هي أسماء المتاجر التي لا تحتوي على أي أجهزة في المخزون؟", "db_id": "device"}
{"question": "What are the names of shops that do not have any devices in stock?", "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)", "arabic": "عرض المواقع المشتركة بين المتاجر التي تم فتحها بعد عام 2012 والمتاجر التي تم فتحها قبل عام 2008.", "db_id": "device"}
{"question": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.", "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008", "arabic": "أي المواقع تحتوي على كل من المتاجر التي تم فتحها بعد عام 2012 والمتاجر التي تم فتحها قبل عام 2008؟", "db_id": "device"}
{"question": "Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?", "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008", "arabic": "ما هي شركات الاتصالات للأجهزة التي ليس لديها أي أجهزة في المخزون؟", "db_id": "device"}
{"question": "List the carriers of devices that have no devices in stock.", "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)", "arabic": "ما هي شركات الاتصالات للأجهزة التي ليست في المخزون في أي مكان؟", "db_id": "device"}
{"question": "What are the carriers of devices that are not in stock anywhere?", "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)", "arabic": "يرجى عرض شركات الاتصالات للأجهزة في المخزون في أكثر من متجر واحد.", "db_id": "device"}
{"question": "Show the carriers of devices in stock at more than one shop.", "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1", "arabic": "ما هي شركات الاتصالات للأجهزة في المخزون في أكثر من متجر واحد؟", "db_id": "device"}
{"question": "What are the carriers of devices that are in stock in more than a single shop?", "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1", "arabic": "كم عدد الحجوزات التي لدينا؟", "db_id": "device"}
{"question": "How many bookings do we have?", "query": "SELECT count(*) FROM BOOKINGS", "arabic": "عدد الحجوزات الإجمالي التي تم إجراؤها.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Count the total number of bookings made.", "query": "SELECT count(*) FROM BOOKINGS", "arabic": "قائمة تواريخ الطلب لجميع الحجوزات.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "List the order dates of all the bookings.", "query": "SELECT Order_Date FROM BOOKINGS", "arabic": "ما هو تاريخ الطلب لكل حجز؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the order date of each booking?", "query": "SELECT Order_Date FROM BOOKINGS", "arabic": "عرض جميع تواريخ التسليم المخططة وتواريخ التسليم الفعلية للحجوزات.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show all the planned delivery dates and actual delivery dates of bookings.", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS", "arabic": "ما هي تاريخ التسليم المخطط وتاريخ التسليم الفعلي لكل حجز؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the planned delivery date and actual delivery date for each booking?", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS", "arabic": "كم عدد العملاء الذين لدينا؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "How many customers do we have?", "query": "SELECT count(*) FROM CUSTOMERS", "arabic": "عدد عملاء المسجلين.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Count the number of customers recorded.", "query": "SELECT count(*) FROM CUSTOMERS", "arabic": "ما هو رقم الهاتف والبريد الإلكتروني للعميل هارولد؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the phone and email for customer Harold?", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"", "arabic": "العثور على رقم الهاتف وعنوان البريد الإلكتروني للعميل \"هارولد\".", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the phone number and email address of customer \"Harold\".", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"", "arabic": "عرض جميع أسماء المتاجر لمجموعات ورش العمل المسرحية.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show all the Store_Name of drama workshop groups.", "query": "SELECT Store_Name FROM Drama_Workshop_Groups", "arabic": "ما هي أسماء المتاجر لمجموعات ورش العمل المسرحية؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the store names of drama workshop groups?", "query": "SELECT Store_Name FROM Drama_Workshop_Groups", "arabic": "عرض أدنى ومتوسط ​​وأقصى كمية طلب في جميع الفواتير.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show the minimum, average, maximum order quantity of all invoices.", "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES", "arabic": "ما هي الحد الأدنى والمتوسط ​​والأقصى للكميات المطلوبة؟ تحقق من جميع الفواتير.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the minimum, average, and maximum quantities ordered? Check all the invoices.", "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES", "arabic": "ما هي رموز طرق الدفع المميزة في جميع الفواتير؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the distinct payment method codes in all the invoices?", "query": "SELECT DISTINCT payment_method_code FROM INVOICES", "arabic": "عرض لي رموز طرق الدفع المميزة من سجل الفواتير.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show me the distinct payment method codes from the invoice record.", "query": "SELECT DISTINCT payment_method_code FROM INVOICES", "arabic": "ما هو وصف منطقة التسويق الصين؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the description of the marketing region China?", "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"", "arabic": "العثور على وصف منطقة التسويق للصين؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the marketing region description of China?", "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"", "arabic": "عرض جميع أسماء المنتجات المميزة بسعر أعلى من المتوسط.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show all the distinct product names with price higher than the average.", "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)", "arabic": "ما هي أسماء المنتجات المميزة التي تكلف أكثر من المتوسط؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the distinct names of the products that cost more than the average?", "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)", "arabic": "ما هو اسم أغلى منتج؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the name of the most expensive product?", "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1", "arabic": "قل لي اسم المنتج الأكثر تكلفة.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Tell me the name of the most pricy product.", "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1", "arabic": "قائمة جميع أسماء المنتجات بترتيب تصاعدي حسب السعر.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "List all product names in ascending order of price.", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC", "arabic": "فرز أسماء المنتجات بترتيب تصاعدي وفقًا لسعرها.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Sort the names of products in ascending order of their price.", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC", "arabic": "ما هو رقم هاتف الفنانة أشلي؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the phone number of the performer Ashley?", "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"", "arabic": "العثور على رقم هاتف الفنان \"أشلي\".", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the phone number of performer \"Ashley\".", "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"", "arabic": "عرض جميع رموز طرق الدفع وعدد الطلبات لكل رمز.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show all payment method codes and the number of orders for each code.", "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code", "arabic": "قائمة رموز طرق الدفع المميزة مع عدد الطلبات المصنوعة.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "List the distinct payment method codes with the number of orders made", "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code", "arabic": "ما هو رمز طريقة الدفع المستخدم في معظم الطلبات؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the payment method code used by the most orders?", "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1", "arabic": "العثور على طريقة الدفع التي يتم استخدامها بشكل أكثر استمرارًا في جميع الفواتير. أعطني رمزها.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the payment method that is used the most often in all the invoices. Give me its code.", "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1", "arabic": "في أي مدينة يقع عنوان المتجر المسمى \"FJA Filming\"؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Which city is the address of the store named \"FJA Filming\" located in?", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"", "arabic": "العثور على المدينة التي يقع فيها المتجر المسمى \"FJA Filming\".", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the city the store named \"FJA Filming\" is in.", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"", "arabic": "ما هي الولايات أو المقاطعات لعنوان المتاجر التي تحمل رمز منطقة التسويق \"CA\"؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the states or counties of the address of the stores with marketing region code \"CA\"?", "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\"", "arabic": "العثور على الولايات أو المقاطعات حيث تقع المتاجر التي تحمل رمز منطقة التسويق \"CA\".", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the states or counties where the stores with marketing region code \"CA\" are located.", "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\"", "arabic": "ما هو اسم منطقة التسويق التي ينتمي إليها المتجر Rob Dinning؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the name of the marketing region that the store Rob Dinning belongs to?", "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"", "arabic": "استرداد اسم منطقة التسويق التي يقع فيها المتجر Rob Dinning.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Return the name of the marketing region the store Rob Dinning is located in.", "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"", "arabic": "ما هي وصف أنواع الخدمات بسعر المنتج أعلى من 100؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the descriptions of the service types with product price above 100?", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100", "arabic": "أعطني وصف أنواع الخدمات التي تكلف أكثر من 100.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Give me the descriptions of the service types that cost more than 100.", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100", "arabic": "ما هو الوصف والرمز والعدد المقابل لكل نوع من أنواع الخدمات؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the description, code and the corresponding count of each service type?", "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code", "arabic": "قائمة الوصف والرمز وعدد الخدمات لكل نوع من أنواع الخدمات.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "List the description, code and the number of services for each service type.", "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code", "arabic": "ما هو الوصف والرمز لنوع الخدمة الذي يُنفَّذ بشكل أكثر استمرارًا؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the description and code of the type of service that is performed the most often?", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو وصف ورمز نوع الخدمة التي يتم أداؤها الأكثر مرات؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the description and code of the service type that is performed the most times.", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هي الهواتف والبريد الإلكتروني لمجموعات ورش العمل التي يتم أداؤها فيها الخدمات؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the phones and emails of workshop groups in which services are performed?", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID", "arabic": "أعطني جميع أرقام الهواتف وعناوين البريد الإلكتروني لمجموعات ورش العمل التي يتم فيها أداء الخدمات.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID", "arabic": "ما هي أسماء مجموعات ورش العمل التي يتم فيها أداء الخدمات باسم المنتج \"فيلم\"؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the names of workshop groups in which services with product name \"film\" are performed?", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"", "arabic": "العثور على أسماء مجموعات ورش العمل حيث يتم أداء الخدمات باسم المنتج \"فيلم\".", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the names of the workshop groups where services with product name \"film\" are performed.", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"", "arabic": "ما هي أسماء المنتجات المختلفة؟ ما هو متوسط سعر المنتج لكل منها؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the different product names? What is the average product price for each of them?", "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name", "arabic": "لكل اسم من أسماء المنتجات المميزة، عرض متوسط سعر المنتج له.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "For each distinct product name, show its average product price.", "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name", "arabic": "ما هي أسماء المنتجات التي يكون متوسط سعر المنتج أقل من 1000000؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the product names with average product price smaller than 1000000?", "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000", "arabic": "العثور على أسماء المنتجات التي يكون متوسط سعر المنتج أقل من 1000000.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the product names whose average product price is below 1000000.", "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000", "arabic": "ما هي إجمالي كميات الطلبات من منتجات الصور؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the total order quantities of photo products?", "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\"", "arabic": "حساب إجمالي كميات الطلبات من المنتج \"الصورة\".", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Compute the total order quantities of the product \"photo\".", "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\"", "arabic": "ما هي تفاصيل الطلبات للمنتجات بسعر أعلى من 2000؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the order details of the products with price higher than 2000?", "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000", "arabic": "العثور على تفاصيل الطلبات للمنتجات بسعر أعلى من 2000.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the order detail for the products with price above 2000.", "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000", "arabic": "ما هي تواريخ التسليم الفعلية للطلبات بكمية 1؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the actual delivery dates of orders with quantity 1?", "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1", "arabic": "قائمة تاريخ التسليم الفعلي لجميع الطلبات بكمية 1.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "List the actual delivery date for all the orders with quantity 1", "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1", "arabic": "ما هي تواريخ الطلبات التي تزيد أسعارها عن 1000؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the order dates of orders with price higher than 1000?", "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000", "arabic": "العثور على تواريخ الطلبات التي تزيد أسعارها عن 1000.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the order dates of the orders with price above 1000.", "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000", "arabic": "كم عدد رموز العملة المميزة لجميع مجموعات ورش العمل الدرامية؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "How many distinct currency codes are there for all drama workshop groups?", "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups", "arabic": "العثور على عدد رموز العملة المميزة المستخدمة في مجموعات ورش العمل الدرامية.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the number of distinct currency codes used in drama workshop groups.", "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups", "arabic": "ما هي أسماء مجموعات ورش العمل الدرامية الذين يتواجدون في مدينة Feliciaberg؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the names of the drama workshop groups with address in Feliciaberg city?", "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"", "arabic": "إرجاع أسماء مجموعات ورش العمل الدرامية التي توجد في مدينة Feliciaberg.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Return the the names of the drama workshop groups that are located in Feliciaberg city.", "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"", "arabic": "ما هي عناوين البريد الإلكتروني لمجموعات ورش العمل الدرامية في ولاية ألاسكا؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the email addresses of the drama workshop groups with address in Alaska state?", "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\"", "arabic": "قائمة عناوين البريد الإلكتروني لمجموعات ورش العمل الدرامية الموجودة في ولاية ألاسكا.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "List the email addresses of the drama workshop groups located in Alaska state.", "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\"", "arabic": "عرض جميع المدن مع عدد مجموعات ورش العمل الدرامية في كل مدينة.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show all cities along with the number of drama workshop groups in each city.", "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town", "arabic": "كم عدد مجموعات ورش العمل الدرامية في كل مدينة؟ إرجاع كل من المدينة والعدد.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "How many drama workshop groups are there in each city? Return both the city and the count.", "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town", "arabic": "ما هو رمز منطقة التسويق الذي يحتوي على أكبر عدد من مجموعات ورش العمل الدرامية؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the marketing region code that has the most drama workshop groups?", "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي منطقة تسويق تحتوي على أكبر عدد من مجموعات ورش العمل الدرامية؟ أعطني رمز المنطقة.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Which marketing region has the most drama workshop groups? Give me the region code.", "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "عرض جميع المدن حيث يعيش عميل واحد على الأقل ولكن لا يعيش أي فنان.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show all cities where at least one customer lives in but no performer lives in.", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID", "arabic": "أي المدن لديها عميل واحد على الأقل ولكن لا يعيش فيها أي فنان؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Which cities have at least one customer but no performer?", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID", "arabic": "ما هو الحالة الأكثر تكرارًا للحجوزات؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the most frequent status of bookings?", "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "أي رمز حالة هو الأكثر شيوعًا بين جميع الحجوزات؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Which status code is the most common of all the bookings?", "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء مجموعات ورش العمل التي لديها حجوزات برمز حالة \"stop\"؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the names of the workshop groups that have bookings with status code \"stop\"?", "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"", "arabic": "أي مجموعات ورش العمل لديها حجوزات برمز حالة \"stop\"؟ أعطني الأسماء.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Which workshop groups have bookings with status code \"stop\"? Give me the names.", "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"", "arabic": "عرض أسماء جميع العملاء الذين ليس لديهم حجوزات.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Show the names of all the clients with no booking.", "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID", "arabic": "ما هي أسماء العملاء الذين ليس لديهم أي حجز؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What are the names of the clients who do not have any booking?", "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID", "arabic": "ما هي المتوسطات المطلوبة برمز طريقة الدفع \"MasterCard\" على الفواتير؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?", "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\"", "arabic": "تحقق من سجل الفواتير واحسب المتوسط المطلوب برمز طريقة الدفع \"MasterCard\".", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".", "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\"", "arabic": "ما هو معرف المنتج الذي تم طلبه بشكل متكرر أكثر على الفواتير؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the product ID of the most frequently ordered item on invoices?", "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "العثور على معرف المنتج الذي تم طلبه بشكل متكرر على الفواتير.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Find the id of the product ordered the most often on invoices.", "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "ما هو وصف نوع الخدمة الذي يقدم كل من منتج الصورة ومنتج الفيلم؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "What is the description of the service type which offers both the photo product and the film product?", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'", "arabic": "أعطني وصف نوع الخدمة الذي لا يقدم فقط منتج الصورة ولكن أيضًا منتج الفيلم.", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "Give me the description of the service type that offers not only the photo product but also the film product.", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'", "arabic": "كم عدد الفرق؟", "db_id": "cre_Drama_Workshop_Groups"}
{"question": "How many bands are there?", "query": "SELECT count(*) FROM Band", "arabic": "العثور على عدد الفرق.", "db_id": "music_2"}
{"question": "Find the number of bands.", "query": "SELECT count(*) FROM Band", "arabic": "ما هي جميع التسميات؟", "db_id": "music_2"}
{"question": "What are all the labels?", "query": "SELECT DISTINCT label FROM Albums", "arabic": "ما هي التسميات المختلفة للألبومات المدرجة؟", "db_id": "music_2"}
{"question": "What are the different album labels listed?", "query": "SELECT DISTINCT label FROM Albums", "arabic": "ما هي جميع الألبومات في عام 2012؟", "db_id": "music_2"}
{"question": "Find all the albums in 2012.", "query": "SELECT * FROM Albums WHERE YEAR  =  2012", "arabic": "ما هي جميع الأعمدة للألبومات التي تم إنشاؤها في عام 2012؟", "db_id": "music_2"}
{"question": "return all columns of the albums created in the year of 2012.", "query": "SELECT * FROM Albums WHERE YEAR  =  2012", "arabic": "ما هي جميع مواقع المسرح للموسيقيين الذين يحملون الاسم الأول \"سولفايج\"؟", "db_id": "music_2"}
{"question": "Find all the stage positions of the musicians with first name \"Solveig\"", "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\"", "arabic": "ما هي مواقع المسرح المختلفة لجميع الموسيقيين الذين يحملون الاسم الأول \"سولفايج\"؟", "db_id": "music_2"}
{"question": "What are the different stage positions for all musicians whose first name is \"Solveig\"?", "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\"", "arabic": "كم عدد الأغاني؟", "db_id": "music_2"}
{"question": "How many songs are there?", "query": "SELECT count(*) FROM Songs", "arabic": "ما عدد الأغاني؟", "db_id": "music_2"}
{"question": "Count the number of songs.", "query": "SELECT count(*) FROM Songs", "arabic": "ما هي جميع الأغاني التي قام بها الفنان الذي يحمل الاسم الأخير \"هيلو\"؟", "db_id": "music_2"}
{"question": "Find all the songs performed by artist with last name \"Heilo\"", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\"", "arabic": "ما هي أسماء الأغاني التي قام بها الفنان الذي يحمل الاسم الأخير \"هيلو\"؟", "db_id": "music_2"}
{"question": "What are the names of the songs by the artist whose last name is \"Heilo\"?", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\"", "arabic": "كم عدد الموسيقيين الذين قاموا بأداء الأغنية \"فلاش\"؟", "db_id": "music_2"}
{"question": "Hom many musicians performed in the song \"Flash\"?", "query": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\"", "arabic": "كم عدد الموسيقيين الذين يلعبون في الأغنية \"فلاش\"؟", "db_id": "music_2"}
{"question": "How many musicians play in the song \"Flash\"?", "query": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\"", "arabic": "ما هي جميع الأغاني التي تم إنتاجها بواسطة الفنانين الذين يحملون الاسم الأول \"ماريان\"؟", "db_id": "music_2"}
{"question": "Find all the songs produced by artists with first name \"Marianne\".", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"", "arabic": "ما هي أسماء جميع الأغاني التي تم إنتاجها بواسطة الفنان الذي يحمل الاسم الأول \"ماريان\"؟", "db_id": "music_2"}
{"question": "What are the names of all songs produced by the artist with the first name \"Marianne\"?", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"", "arabic": "من قام بأداء الأغنية المسماة \"بادلاندز\"؟ أظهر الاسم الأول والاسم الأخير.", "db_id": "music_2"}
{"question": "Who performed the song named \"Badlands\"? Show the first name and the last name.", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "arabic": "ما هي الأسماء الأولى والأخيرة للفنان الذي قام بأداء الأغنية \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "What are the first and last names of the artist who perfomed the song \"Badlands\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "arabic": "من يقوم بالأداء في موقع الخلفية على خشبة المسرح للأغنية \"بادلاندز\"؟ أظهر الاسم الأول والاسم الأخير.", "db_id": "music_2"}
{"question": "Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name.", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"", "arabic": "ما هي الأسماء الأولى والأخيرة للفنان الذي كان في موقع الخلفية للأغنية \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "What are the first and last names of the performer who was in the back stage position for the song \"Badlands\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"", "arabic": "كم عدد التسميات الفريدة للألبومات؟", "db_id": "music_2"}
{"question": "How many unique labels are there for albums?", "query": "SELECT count(DISTINCT label) FROM albums", "arabic": "ما هي التسميات الفريدة للألبومات؟", "db_id": "music_2"}
{"question": "What are the unique labels for the albums?", "query": "SELECT count(DISTINCT label) FROM albums", "arabic": "ما هي التسمية التي تحتوي على أكبر عدد من الألبومات؟", "db_id": "music_2"}
{"question": "What is the label that has the most albums?", "query": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي التسمية التي تحتوي على أكبر عدد من الألبومات؟", "db_id": "music_2"}
{"question": "What is the label with the most albums?", "query": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العائلة للموسيقي الذي أنتج أكبر عدد من الأغاني؟", "db_id": "music_2"}
{"question": "What is the last name of the musician that have produced the most number of songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العائلة للموسيقي الذي شارك في أكبر عدد من الأغاني؟", "db_id": "music_2"}
{"question": "What is the last name of the musician who was in the most songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العائلة للموسيقي الذي كان في موقع الخلفية بشكل أكبر؟", "db_id": "music_2"}
{"question": "What is the last name of the musician that has been at the back position the most?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العائلة للموسيقيين الذين لعبوا في موقع الخلفية بشكل أكبر؟", "db_id": "music_2"}
{"question": "What is the last name of the musicians who has played back position the most?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن جميع الأغاني التي تحتوي على كلمة \"ال\".", "db_id": "music_2"}
{"question": "Find all the songs whose name contains the word \"the\".", "query": "SELECT title FROM songs WHERE title LIKE '% the %'", "arabic": "ما هي أسماء الأغاني التي يحتوي عنوانها على كلمة \"ال\"؟", "db_id": "music_2"}
{"question": "What are the names of the songs whose title has the word \"the\"?", "query": "SELECT title FROM songs WHERE title LIKE '% the %'", "arabic": "ما هي جميع الآلات المستخدمة؟", "db_id": "music_2"}
{"question": "What are all the instruments used?", "query": "SELECT DISTINCT instrument FROM Instruments", "arabic": "ما هي الآلات المختلفة المدرجة في قاعدة البيانات؟", "db_id": "music_2"}
{"question": "What are the different instruments listed in the database?", "query": "SELECT DISTINCT instrument FROM Instruments", "arabic": "أي آلة استخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\" في الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "What instrument did the musician with last name \"Heilo\" use in the song \"Le Pop\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\"", "arabic": "أي الآلات استخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\" في الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "What instruments did the musician with the last name \"Heilo\" play in the song \"Le Pop\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\"", "arabic": "ما هي الآلة الأكثر استخدامًا؟", "db_id": "music_2"}
{"question": "What is the most used instrument?", "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1", "arabic": "ما الآلة المستخدمة بشكل أكبر؟", "db_id": "music_2"}
{"question": "What instrument is used the most?", "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1", "arabic": "كم عدد الأغاني التي استخدمت فيها الطبول كآلة؟", "db_id": "music_2"}
{"question": "How many songs have used the instrument \"drums\"?", "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"", "arabic": "كم عدد الأغاني التي تستخدم الطبول كآلة؟", "db_id": "music_2"}
{"question": "How many songs use drums as an instrument?", "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"", "arabic": "أي الآلات يستخدمها الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "What instruments does the the song \"Le Pop\" use?", "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "ما هي الآلات المستخدمة في الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "What are the instruments are used in the song \"Le Pop\"?", "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "كم عدد الآلات التي تستخدمها الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "How many instruments does the song \"Le Pop\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "كم عدد الآلات المختلفة التي تستخدمها الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "How many different instruments are used in the song \"Le Pop\"?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "كم عدد الآلات التي يستخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\"؟", "db_id": "music_2"}
{"question": "How many instrument does the musician with last name \"Heilo\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "arabic": "كم عدد الآلات المختلفة التي يستخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\"؟", "db_id": "music_2"}
{"question": "How many different instruments does the musician with the last name \"Heilo\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "arabic": "ابحث عن جميع الآلات التي استخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\"؟", "db_id": "music_2"}
{"question": "Find all the instruments ever used by the musician with last name \"Heilo\"?", "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "arabic": "ما هي جميع الآلات التي استخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\"؟", "db_id": "music_2"}
{"question": "What are all the instruments used by the musician with the last name \"Heilo\"?", "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "arabic": "أي أغنية تحتوي على أكبر عدد من الأصوات الغنائية؟", "db_id": "music_2"}
{"question": "Which song has the most vocals?", "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي الأغنية التي تحتوي على أكبر عدد من الأصوات الغنائية؟", "db_id": "music_2"}
{"question": "What is the song with the most vocals?", "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من الأصوات الغنائية هو الأكثر ظهورًا بتكرار؟", "db_id": "music_2"}
{"question": "Which vocal type is the most frequently appearring type?", "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو نوع الأصوات الغنائية التي تظهر بشكل متكرر؟", "db_id": "music_2"}
{"question": "What is the type of vocables that appears most frequently?", "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من الأصوات الغنائية قام الموسيقي الذي يحمل الاسم الأخير \"هيلو\" بتشغيله بشكل أكبر؟", "db_id": "music_2"}
{"question": "Which vocal type has the band mate with last name \"Heilo\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو نوع الأصوات الغنائية التي قام العضو في الفرقة الذي يحمل الاسم الأخير \"هيلو\" بتشغيله بشكل أكبر؟", "db_id": "music_2"}
{"question": "What is the type of vocals that the band member with the last name \"Heilo\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أنواع الأصوات الغنائية المستخدمة في الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "What are the vocal types used in song \"Le Pop\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "ما هي أنواع الأصوات الغنائية المستخدمة في الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "What are the types of vocals used in the song \"Le Pop\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "ابحث عن عدد أنواع الأصوات الغنائية المستخدمة في الأغنية \"ديمون كيتي راغ\"؟", "db_id": "music_2"}
{"question": "Find the number of vocal types used in song \"Demon Kitty Rag\"?", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Demon Kitty Rag\"", "arabic": "ما هي أنواع الأصوات الغنائية المستخدمة في الأغنية \"ديمون كيتي راغ\"؟", "db_id": "music_2"}
{"question": "What are the types of vocals used in the song \"Demon Kitty Rag\"?", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Demon Kitty Rag\"", "arabic": "كم عدد الأغاني التي تحتوي على صوت رئيسي؟", "db_id": "music_2"}
{"question": "How many songs have a lead vocal?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"lead\"", "arabic": "كم عدد الأغاني التي تحتوي على أصوات نوع رئيسي؟", "db_id": "music_2"}
{"question": "How many songs have vocals of type lead?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"lead\"", "arabic": "أي نوع من الأصوات الغنائية قام الموسيقي الذي يحمل الاسم الأول \"سولفايج\" بتشغيله في الأغنية بعنوان \"حانة في أمستردام\"؟", "db_id": "music_2"}
{"question": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"", "arabic": "ما هي أنواع الأصوات الغنائية التي قام الموسيقي الذي يحمل الاسم الأول \"سولفايج\" بتشغيلها في الأغنية \"حانة في أمستردام\"؟", "db_id": "music_2"}
{"question": "What are the types of vocals that the musician with the first name \"Solveig\" played in the song \"A Bar in Amsterdam\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"", "arabic": "ابحث عن جميع الأغاني التي لا تحتوي على صوت رئيسي.", "db_id": "music_2"}
{"question": "Find all the songs that do not have a lead vocal.", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"lead\"", "arabic": "ما هي أسماء الأغاني التي لا تحتوي على صوت رئيسي؟", "db_id": "music_2"}
{"question": "What are the names of the songs without a lead vocal?", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"lead\"", "arabic": "ابحث عن جميع أنواع الأصوات الغنائية.", "db_id": "music_2"}
{"question": "Find all the vocal types.", "query": "SELECT DISTINCT TYPE FROM vocals", "arabic": "ما هي أنواع الأصوات الغنائية المختلفة؟", "db_id": "music_2"}
{"question": "What are the different types of vocals?", "query": "SELECT DISTINCT TYPE FROM vocals", "arabic": "ما هي الألبومات التي تم إنتاجها في العام 2010؟", "db_id": "music_2"}
{"question": "What are the albums produced in year 2010?", "query": "SELECT * FROM Albums WHERE YEAR  =  2010", "arabic": "ما المعلومات المتاحة عن الألبومات من عام 2010؟", "db_id": "music_2"}
{"question": "What information is there on albums from 2010?", "query": "SELECT * FROM Albums WHERE YEAR  =  2010", "arabic": "من قام بأداء الأغنية المسماة \"لو بوب\"؟", "db_id": "music_2"}
{"question": "Who performed the song named \"Le Pop\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"", "arabic": "ما هي الاسم الأول والعائلة للفنان الذي قام بأداء \"لو بوب\"؟", "db_id": "music_2"}
{"question": "What is the first and last name of artist who performed \"Le Pop\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"", "arabic": "ما هو اسم العائلة للموسيقي الذي قام بإنتاج أكبر عدد من الأغاني؟", "db_id": "music_2"}
{"question": "What is the last name of the musician that have produced the most songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العائلة للفنان الذي غنى أكبر عدد من الأغاني؟", "db_id": "music_2"}
{"question": "What is the last name of the artist who sang the most songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "arabic": "أي آلة استخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\" في الأغنية \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "What instrument did the musician with last name \"Heilo\" use in the song \"Badlands\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\"", "arabic": "أي الآلات استخدمها الموسيقي الذي يحمل الاسم الأخير \"هيلو\" في \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "What instruments did the musician with the last name \"Heilo\" play in \"Badlands\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\"", "arabic": "كم عدد الآلات التي تستخدمها الأغنية \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "How many instruments does the song \"Badlands\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "arabic": "كم عدد الآلات المختلفة التي تستخدمها الأغنية \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "How many different instruments are used in the song \"Badlands\"?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "arabic": "ما هي أنواع الأصوات الغنائية المستخدمة في الأغنية \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "What are the vocal types used in song \"Badlands\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "arabic": "ما هي أنواع الأصوات الغنائية المستخدمة في الأغنية \"بادلاندز\"؟", "db_id": "music_2"}
{"question": "What types of vocals are used in the song \"Badlands\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "arabic": "ابحث عن عدد أنواع الأصوات الغنائية المستخدمة في الأغنية \"لو بوب\"", "db_id": "music_2"}
{"question": "Find the number of vocal types used in song \"Le Pop\"", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "كم عدد أنواع الأصوات الغنائية التي تستخدم في الأغنية \"لو بوب\"؟", "db_id": "music_2"}
{"question": "How many vocal types are used in the song \"Le Pop\"?", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "arabic": "كم عدد الأغاني التي تحتوي على صوت مشترك؟", "db_id": "music_2"}
{"question": "How many songs have a shared vocal?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\"", "arabic": "كم عدد الأغاني المختلفة التي تحتوي على صوت مشترك؟", "db_id": "music_2"}
{"question": "How many different songs have shared vocals?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\"", "arabic": "ابحث عن جميع الأغاني التي لا تحتوي على صوت خلفي.", "db_id": "music_2"}
{"question": "Find all the songs that do not have a back vocal.", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"", "arabic": "ما هي الأسماء المختلفة لجميع الأغاني دون أصوات خلفية؟", "db_id": "music_2"}
{"question": "What are the different names of all songs without back vocals?", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"", "arabic": "أي نوع من الأصوات الغنائية قام زميل الفرقة الذي يحمل الاسم الأول \"سولفايج\" بتشغيله بشكل أكبر؟", "db_id": "music_2"}
{"question": "Which vocal type has the band mate with first name \"Solveig\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أنواع الأصوات الغنائية التي قام زميل الفرقة الذي يحمل الاسم الأول \"سولفايج\" بتشغيلها بشكل أكبر؟", "db_id": "music_2"}
{"question": "What are the types of vocals that the band member with the first name \"Solveig\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من الأصوات الغنائية قام الموسيقي الذي يحمل الاسم الأخير \"هيلو\" بتشغيله في الأغنية بعنوان \"دير كابتن\"؟", "db_id": "music_2"}
{"question": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\"", "arabic": "ما هي أنواع الأصوات الغنائية التي قام الموسيقي الذي يحمل الاسم الأخير \"هيلو\" بتشغيلها في \"دير كابتن\"؟", "db_id": "music_2"}
{"question": "What are the types of vocals that the musician with the last name \"Heilo\" played in \"Der Kapitan\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\"", "arabic": "ابحث عن الاسم الأول لزميل الفرقة الذي قام بأداء أكبر عدد من الأغاني.", "db_id": "music_2"}
{"question": "Find the first name of the band mate that has performed in most songs.", "query": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الاسم الأول لزميل الفرقة الذي قام بأداء أكبر عدد من الأغاني؟", "db_id": "music_2"}
{"question": "What is the first name of the band mate who perfomed in the most songs?", "query": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع من الأصوات الغنائية قام زميل الفرقة الذي يحمل الاسم الأول \"ماريان\" بتشغيله بشكل أكبر؟", "db_id": "music_2"}
{"question": "Which vocal type has the band mate with first name \"Marianne\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو نوع الأصوات الغنائية لزميل الفرقة الذي يحمل الاسم الأول \"ماريان\" الذي قام بتشغيله بشكل أكبر؟", "db_id": "music_2"}
{"question": "What is the vocal type of the band mate whose first name is \"Marianne\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "من يؤدي في موقع الخلفية للأغنية \"دير كابتن\"؟ أظهر الاسم الأول والعائلة.", "db_id": "music_2"}
{"question": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the first name and last name.", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"", "arabic": "ما هو الاسم الأول والعائلة للفنان الذي قام بالأداء في موقع الخلفية للأغنية \"دير كابتن\"؟", "db_id": "music_2"}
{"question": "What is the first and last name of the artist who performed back stage for the song \"Der Kapitan\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"", "arabic": "ابحث عن اسم الأغاني التي ليس لديها صوت خلفي.", "db_id": "music_2"}
{"question": "Find the name of songs that does not have a back vocal.", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"", "arabic": "ما هي أسماء الأغاني التي ليس لديها أصوات خلفية؟", "db_id": "music_2"}
{"question": "What are the names of the songs that do not have back vocals?", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"", "arabic": "ما هي الأغاني في الألبوم \"A Kiss Before You Go: Live in Hamburg\"؟", "db_id": "music_2"}
{"question": "What are the songs in album \"A Kiss Before You Go: Live in Hamburg\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\"", "arabic": "ما هي عناوين الأغاني في الألبوم \"A Kiss Before You Go: Live in Hamburg\"؟", "db_id": "music_2"}
{"question": "What are the song titles on the album \"A Kiss Before You Go: Live in Hamburg\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\"", "arabic": "ما هي جميع الأغاني في الألبومات تحت العلامة التجارية \"Universal Music Group\"؟", "db_id": "music_2"}
{"question": "What are all the songs in albums under label \"Universal Music Group\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\"", "arabic": "ما هي أسماء جميع الأغاني التي يكون ألبومها تحت علامة \"Universal Music Group\"؟", "db_id": "music_2"}
{"question": "What are the names of all the songs whose album is under the label of \"Universal Music Group\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\"", "arabic": "ابحث عن عدد الأغاني في جميع الألبومات الاستوديو.", "db_id": "music_2"}
{"question": "Find the number of songs in all the studio albums.", "query": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\"", "arabic": "كم عدد الأغاني التي تظهر في الألبومات الاستوديو؟", "db_id": "music_2"}
{"question": "How many songs appear in studio albums?", "query": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\"", "arabic": "من هو مؤسس شركة سوني؟", "db_id": "music_2"}
{"question": "Who is the founder of Sony?", "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'", "arabic": "أرجع مؤسس شركة سوني.", "db_id": "manufactory_1"}
{"question": "Return the founder of Sony.", "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'", "arabic": "أين يوجد مقر الشركة التي تأسست عن طريق جيمس؟", "db_id": "manufactory_1"}
{"question": "Where is the headquarter of the company founded by James?", "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'", "arabic": "ما هو مقر الشركة التي يكون مؤسسها جيمس؟", "db_id": "manufactory_1"}
{"question": "What is the headquarter of the company whose founder is James?", "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'", "arabic": "ابحث عن أسماء جميع الشركات المصنعة ومقراتها، مرتبة حسب ترتيب الإيرادات الأعلى أولاً.", "db_id": "manufactory_1"}
{"question": "Find all manufacturers' names and their headquarters, sorted by the ones with highest revenue first.", "query": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC", "arabic": "ما هي أسماء ومقرات جميع الشركات المصنعة، مرتبة حسب الإيرادات تنازليًا؟", "db_id": "manufactory_1"}
{"question": "What are the names and headquarters of all manufacturers, ordered by revenue descending?", "query": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC", "arabic": "ما هي المتوسطات والحد الأقصى والإيرادات الإجمالية لجميع الشركات؟", "db_id": "manufactory_1"}
{"question": "What are the average, maximum and total revenues of all companies?", "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers", "arabic": "أرجع المتوسط والحد الأقصى والإيرادات الإجمالية عبر جميع الشركات المصنعة.", "db_id": "manufactory_1"}
{"question": "Return the average, maximum, and total revenues across all manufacturers.", "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers", "arabic": "كم عدد الشركات التي تم إنشاؤها بواسطة أندي؟", "db_id": "manufactory_1"}
{"question": "How many companies were created by Andy?", "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'", "arabic": "ما عدد الشركات التي تم إنشاؤها بواسطة أندي؟", "db_id": "manufactory_1"}
{"question": "Return the number of companies created by Andy.", "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'", "arabic": "ابحث عن الإيراد الإجمالي الذي تم إنشاؤه بواسطة الشركات التي يقع مقرها في أوستن.", "db_id": "manufactory_1"}
{"question": "Find the total revenue created by the companies whose headquarter is located at Austin.", "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'", "arabic": "ما مجموع الإيرادات من الشركات التي يقع مقرها في أوستن؟", "db_id": "manufactory_1"}
{"question": "What is the sum of revenue from companies with headquarters in Austin?", "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'", "arabic": "ما هي المدن المختلفة المدرجة؟", "db_id": "manufactory_1"}
{"question": "What are the different cities listed?", "query": "SELECT DISTINCT headquarter FROM manufacturers", "arabic": "أعطِ مقرات الشركات المصنعة المتميزة.", "db_id": "manufactory_1"}
{"question": "Give the distinct headquarters of manufacturers.", "query": "SELECT DISTINCT headquarter FROM manufacturers", "arabic": "ابحث عن عدد الشركات المصنعة التي تتمركز في طوكيو أو بكين.", "db_id": "manufactory_1"}
{"question": "Find the number of manufactures that are based in Tokyo or Beijing.", "query": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'", "arabic": "كم عدد الشركات المصنعة التي يتواجد مقرها في طوكيو أو بكين؟", "db_id": "manufactory_1"}
{"question": "How many manufacturers have headquarters in either Tokyo or Beijing?", "query": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'", "arabic": "ابحث عن مؤسس الشركة التي يبدأ اسمها بالحرف 'S'.", "db_id": "manufactory_1"}
{"question": "Find the founder of the company whose name begins with the letter 'S'.", "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'", "arabic": "من هم مؤسسو الشركات التي يبدأ اسمها بالحرف S؟", "db_id": "manufactory_1"}
{"question": "Who is the founders of companies whose first letter is S?", "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'", "arabic": "ابحث عن اسم الشركات التي يكون إيرادها بين 100 و 150.", "db_id": "manufactory_1"}
{"question": "Find the name of companies whose revenue is between 100 and 150.", "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150", "arabic": "ما هي أسماء الشركات التي يكون إيرادها بين 100 و 150؟", "db_id": "manufactory_1"}
{"question": "What are the names of companies with revenue between 100 and 150?", "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150", "arabic": "ما هي الإيرادات الإجمالية لجميع الشركات التي يكون مقرها الرئيسي في طوكيو أو تايوان؟", "db_id": "manufactory_1"}
{"question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?", "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'", "arabic": "أرجع الإيراد الإجمالي للشركات التي تتخذ مقرها في طوكيو أو تايوان.", "db_id": "manufactory_1"}
{"question": "Return the total revenue of companies with headquarters in Tokyo or Taiwan.", "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'", "arabic": "ابحث عن اسم المنتج الذي يتم إنتاجه من قبل شركتي Creative Labs و Sony.", "db_id": "manufactory_1"}
{"question": "Find the name of product that is produced by both companies Creative Labs and Sony.", "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'", "arabic": "ما هي أسماء المنتجات التي تتم إنتاجها من قبل Creative Labs و Sony؟", "db_id": "manufactory_1"}
{"question": "What are the names of products produced by both Creative Labs and Sony?", "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'", "arabic": "ما اسم، المقر الرئيسي، ومؤسس الشركة المصنعة التي تحقق أعلى إيراد؟", "db_id": "manufactory_1"}
{"question": "Find the name, headquarter and founder of the manufacturer that has the highest revenue.", "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1", "arabic": "ما أسماء، المقار الرئيسية، والمؤسسين للشركة التي تحقق أعلى إيراد؟", "db_id": "manufactory_1"}
{"question": "What are the names, headquarters and founders of the company with the highest revenue?", "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1", "arabic": "ابحث عن اسم، المقر الرئيسي، والإيراد لجميع الشركات المصنعة مرتبة حسب إيرادها بترتيب تنازلي.", "db_id": "manufactory_1"}
{"question": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.", "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC", "arabic": "ما أسماء، المقار الرئيسية، والإيرادات للشركات المصنعة، مرتبة حسب الإيراد بترتيب تنازلي؟", "db_id": "manufactory_1"}
{"question": "What are the names, headquarters and revenues for manufacturers, sorted by revenue descending?", "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC", "arabic": "ابحث عن أسماء الشركات التي يكون إيرادها أكبر من متوسط الإيرادات لجميع الشركات.", "db_id": "manufactory_1"}
{"question": "Find the name of companies whose revenue is greater than the average revenue of all companies.", "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)", "arabic": "ما هي أسماء الشركات المصنعة بإيراد أكبر من متوسط كل الإيرادات؟", "db_id": "manufactory_1"}
{"question": "What are the names of manufacturers with revenue greater than the average of all revenues?", "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)", "arabic": "ابحث عن أسماء الشركات التي يكون إيرادها أقل من إيراد جميع الشركات المتمركزة في أوستن.", "db_id": "manufactory_1"}
{"question": "Find the name of companies whose revenue is smaller than the revenue of all companies based in Austin.", "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "arabic": "ما هي أسماء الشركات التي يكون إيرادها أقل من أقل إيراد لأي شركة مصنعة في أوستن؟", "db_id": "manufactory_1"}
{"question": "What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin?", "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "arabic": "ابحث عن الإيراد الإجمالي للشركات التي يكون إيرادها أكبر من إيراد بعض الشركات المتمركزة في أوستن.", "db_id": "manufactory_1"}
{"question": "Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin.", "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "arabic": "ما هو الإيراد الإجمالي للشركات التي يكون إيرادها أكبر من أقل إيراد لأي شركة مصنعة في أوستن؟", "db_id": "manufactory_1"}
{"question": "What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?", "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "arabic": "ابحث عن الإيراد الإجمالي للشركات لكل مؤسس.", "db_id": "manufactory_1"}
{"question": "Find the total revenue of companies of each founder.", "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder", "arabic": "ما هو الإيراد الإجمالي للشركات التي بدأتها المؤسس؟", "db_id": "manufactory_1"}
{"question": "What is the total revenue of companies started by founder?", "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder", "arabic": "ابحث عن الاسم والإيراد للشركة التي تحقق أعلى إيراد في كل مدينة.", "db_id": "manufactory_1"}
{"question": "Find the name and revenue of the company that earns the highest revenue in each city.", "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter", "arabic": "ما هي أسماء والإيرادات للشركات التي تحقق أعلى إيراد في كل مدينة مقر رئيسي لها؟", "db_id": "manufactory_1"}
{"question": "What are the names and revenues of the companies with the highest revenues in each headquarter city?", "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter", "arabic": "ابحث عن الإيراد الإجمالي لكل شركة مصنعة.", "db_id": "manufactory_1"}
{"question": "Find the total revenue for each manufacturer.", "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name", "arabic": "ما هو الإيراد الإجمالي لكل مصنع؟", "db_id": "manufactory_1"}
{"question": "What is the total revenue of each manufacturer?", "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name", "arabic": "ابحث عن متوسط أسعار جميع المنتجات من كل مصنع، وقم بتسجيل اسم كل شركة.", "db_id": "manufactory_1"}
{"question": "Find the average prices of all products from each manufacture, and list each company's name.", "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "arabic": "ما هي متوسط أسعار المنتجات لكل مصنع؟", "db_id": "manufactory_1"}
{"question": "What are the average prices of products for each manufacturer?", "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "arabic": "ابحث عن عدد المنتجات المختلفة التي تنتجها الشركات في مدن مقرات رئيسية مختلفة.", "db_id": "manufactory_1"}
{"question": "Find the number of different products that are produced by companies at different headquarter cities.", "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter", "arabic": "كم عدد المنتجات المختلفة التي تنتج في كل مدينة مقر رئيسي؟", "db_id": "manufactory_1"}
{"question": "How many different products are produced in each headquarter city?", "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter", "arabic": "ابحث عن عدد المنتجات التي لا تقوم سوني بتصنيعها.", "db_id": "manufactory_1"}
{"question": "Find number of products which Sony does not make.", "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')", "arabic": "كم عدد المنتجات التي لا تصنعها سوني؟", "db_id": "manufactory_1"}
{"question": "How many products are not made by Sony?", "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')", "arabic": "ابحث عن أسماء الشركات التي لا تصنع محركات أقراص دي في دي.", "db_id": "manufactory_1"}
{"question": "Find the name of companies that do not make DVD drive.", "query": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'", "arabic": "ما هي أسماء الشركات التي لا تصنع محركات أقراص دي في دي؟", "db_id": "manufactory_1"}
{"question": "What are the names of companies that do not make DVD drives?", "query": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'", "arabic": "ابحث عن عدد المنتجات لكل شركة مصنعة، مع عرض اسم كل شركة.", "db_id": "manufactory_1"}
{"question": "Find the number of products for each manufacturer, showing the name of each company.", "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "arabic": "كم عدد المنتجات لكل شركة مصنعة؟", "db_id": "manufactory_1"}
{"question": "How many products are there for each manufacturer?", "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "arabic": "حدد أسماء جميع المنتجات في المتجر.", "db_id": "manufactory_1"}
{"question": "Select the names of all the products in the store.", "query": "SELECT Name FROM Products", "arabic": "ما هي أسماء جميع المنتجات؟", "db_id": "manufactory_1"}
{"question": "What are the names of all products?", "query": "SELECT Name FROM Products", "arabic": "حدد أسماء وأسعار جميع المنتجات في المتجر.", "db_id": "manufactory_1"}
{"question": "Select the names and the prices of all the products in the store.", "query": "SELECT name ,  price FROM products", "arabic": "ما هي أسماء وأسعار جميع المنتجات في المتجر؟", "db_id": "manufactory_1"}
{"question": "What are the names and prices of all products in the store?", "query": "SELECT name ,  price FROM products", "arabic": "اختر اسم المنتجات بسعر أقل من أو يساوي 200 دولار.", "db_id": "manufactory_1"}
{"question": "Select the name of the products with a price less than or equal to $200.", "query": "SELECT name FROM products WHERE price  <=  200", "arabic": "ما هي أسماء المنتجات بسعر لا يتجاوز 200 دولار؟", "db_id": "manufactory_1"}
{"question": "What are the names of products with price at most 200?", "query": "SELECT name FROM products WHERE price  <=  200", "arabic": "ابحث عن جميع المعلومات حول جميع المنتجات بسعر بين 60 و 120 دولارًا.", "db_id": "manufactory_1"}
{"question": "Find all information of all the products with a price between $60 and $120.", "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120", "arabic": "ما هي جميع المعلومات عن جميع المنتجات التي تحمل سعرًا بين 60 و 120 دولارًا؟", "db_id": "manufactory_1"}
{"question": "What is all the information of all the products that have a price between 60 and 120?", "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120", "arabic": "احسب السعر المتوسط لجميع المنتجات.", "db_id": "manufactory_1"}
{"question": "Compute the average price of all the products.", "query": "SELECT avg(price) FROM products", "arabic": "ما هو السعر المتوسط لجميع المنتجات؟", "db_id": "manufactory_1"}
{"question": "What is the average price across all products?", "query": "SELECT avg(price) FROM products", "arabic": "احسب السعر المتوسط لجميع المنتجات برمز المصنع يساوي 2.", "db_id": "manufactory_1"}
{"question": "Compute the average price of all products with manufacturer code equal to 2.", "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2", "arabic": "ما هو السعر المتوسط للمنتجات برمز المصنع يساوي 2؟", "db_id": "manufactory_1"}
{"question": "What is the average price of products with manufacturer codes equal to 2?", "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2", "arabic": "احسب عدد المنتجات بسعر أكبر من أو يساوي 180 دولارًا.", "db_id": "manufactory_1"}
{"question": "Compute the number of products with a price larger than or equal to $180.", "query": "SELECT count(*) FROM products WHERE price >= 180", "arabic": "كم عدد المنتجات التي لها أسعار على الأقل 180؟", "db_id": "manufactory_1"}
{"question": "How many products have prices of at least 180?", "query": "SELECT count(*) FROM products WHERE price >= 180", "arabic": "اختر الاسم والسعر لجميع المنتجات بسعر أكبر من أو يساوي 180 دولارًا، وفرزها أولاً حسب السعر (تنازلياً)، ثم حسب الاسم (تصاعدياً).", "db_id": "manufactory_1"}
{"question": "Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order).", "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC", "arabic": "ما هي أسماء وأسعار المنتجات التي تكلف على الأقل 180، مرتبة حسب تناقص السعر وتصاعدي الاسم؟", "db_id": "manufactory_1"}
{"question": "What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?", "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC", "arabic": "اختر جميع البيانات من المنتجات ومصنع كل منتج.", "db_id": "manufactory_1"}
{"question": "Select all the data from the products and each product's manufacturer.", "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code", "arabic": "ما هي جميع بيانات المنتج، بالإضافة إلى مصنع كل منتج؟", "db_id": "manufactory_1"}
{"question": "What is all the product data, as well as  each product's manufacturer?", "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code", "arabic": "اختر السعر المتوسط لمنتجات كل مصنع، مع عرض رمز المصنع فقط.", "db_id": "manufactory_1"}
{"question": "Select the average price of each manufacturer's products, showing only the manufacturer's code.", "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer", "arabic": "ما هي الأسعار المتوسطة للمنتجات، مجمعة حسب رمز الشركة المصنعة؟", "db_id": "manufactory_1"}
{"question": "What are the average prices of products, grouped by manufacturer code?", "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer", "arabic": "اختر السعر المتوسط لمنتجات كل مصنع، مع عرض اسم الشركة المصنعة.", "db_id": "manufactory_1"}
{"question": "Select the average price of each manufacturer's products, showing the manufacturer's name.", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "arabic": "ما هي الأسعار المتوسطة للمنتجات، مجمعة حسب اسم الشركة المصنعة؟", "db_id": "manufactory_1"}
{"question": "What are the average prices of products, grouped by manufacturer name?", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "arabic": "اختر أسماء الشركات المصنعة التي يكون متوسط سعر منتجاتها أعلى من أو يساوي 150 دولارًا.", "db_id": "manufactory_1"}
{"question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150", "arabic": "ما هي أسماء وأسعار المتوسطة للمنتجات للشركات المصنعة التي تكلف منتجاتها في المتوسط 150 دولارًا أو أكثر؟", "db_id": "manufactory_1"}
{"question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150", "arabic": "اختر اسم وسعر أرخص منتج.", "db_id": "manufactory_1"}
{"question": "Select the name and price of the cheapest product.", "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1", "arabic": "ما هو اسم وسعر أرخص منتج؟", "db_id": "manufactory_1"}
{"question": "What is the name and price of the cheapest product?", "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1", "arabic": "اختر اسم كل شركة مصنعة مع اسم وسعر أغلى منتج لديها.", "db_id": "manufactory_1"}
{"question": "Select the name of each manufacturer along with the name and price of its most expensive product.", "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "arabic": "بالنسبة لكل اسم للشركة المصنعة، ما هي الأسماء والأسعار لأغلى منتجاتهم؟", "db_id": "manufactory_1"}
{"question": "For each manufacturer name, what are the names and prices of their most expensive product?", "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "arabic": "اختر رمز المنتج الذي يكون الأرخص في كل فئة من فئات المنتجات.", "db_id": "manufactory_1"}
{"question": "Select the code of the product that is cheapest in each product category.", "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name", "arabic": "ما هي الرموز والأسماء لأرخص المنتجات في كل فئة؟", "db_id": "manufactory_1"}
{"question": "What are the codes and names of the cheapest products in each category?", "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name", "arabic": "ما هو رقم معرف سجل المشكلة الذي تم إنشاؤه مؤخرًا بشكل أكثر؟", "db_id": "manufactory_1"}
{"question": "What is the id of the problem log that is created most recently?", "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1", "arabic": "أي سجل مشكلة تم إنشاؤه مؤخرًا؟ أعطني معرف السجل.", "db_id": "tracking_software_problems"}
{"question": "Which problem log was created most recently? Give me the log id.", "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1", "arabic": "ما هو أقدم معرف سجل ومعرف المشكلة المقابل له؟", "db_id": "tracking_software_problems"}
{"question": "What is the oldest log id and its corresponding problem id?", "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1", "arabic": "ابحث عن أقدم معرف سجل ومعرف المشكلة المقابل له.", "db_id": "tracking_software_problems"}
{"question": "Find the oldest log id and its corresponding problem id.", "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1", "arabic": "ما هي جميع معرّفات وتواريخ السجلات للمشكلة التي يكون معرّفها 10؟", "db_id": "tracking_software_problems"}
{"question": "Find all the ids and dates of the logs for the problem whose id is 10.", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10", "arabic": "للمشكلة التي يكون معرّفها 10، ما هي معرّفات وتواريخ سجلاتها؟", "db_id": "tracking_software_problems"}
{"question": "For the problem with id 10, return the ids and dates of its problem logs.", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10", "arabic": "قائمة بجميع معرّفات السجل ووصفها من سجلات المشكلة.", "db_id": "tracking_software_problems"}
{"question": "List all the log ids and their descriptions from the problem logs.", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log", "arabic": "ما هي معرّفات السجل ووصف الإدخال لكل مشكلة؟", "db_id": "tracking_software_problems"}
{"question": "What are the log id and entry description of each problem?", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log", "arabic": "عرض الأسماء الأولى والأخيرة لجميع أعضاء الفريق المميزين الذين تم تعيينهم للمشكلة التي يكون معرّفها 1.", "db_id": "tracking_software_problems"}
{"question": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1", "arabic": "أي أعضاء في الفريق تم تعيينهم للمشكلة التي يكون معرّفها 1؟ أعطني أسماؤهم الأولية والأخيرة.", "db_id": "tracking_software_problems"}
{"question": "Which staff members are assigned to the problem with id 1? Give me their first and last names.", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1", "arabic": "قائمة بمعرّف المشكلة ومعرّف السجل المُعيَّنين للموظف الذي يدعى \"رايلان هومينيك\".", "db_id": "tracking_software_problems"}
{"question": "List the problem id and log id which are assigned to the staff named Rylan Homenick.", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "arabic": "أي معرّف مشكلة ومعرّف سجل تم تعيينهما للموظف الذي يدعى \"رايلان هومينيك\"؟", "db_id": "tracking_software_problems"}
{"question": "Which problem id and log id are assigned to the staff named Rylan Homenick?", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "arabic": "كم عدد المشكلات الموجودة للمنتج voluptatem؟", "db_id": "tracking_software_problems"}
{"question": "How many problems are there for product voluptatem?", "query": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\"", "arabic": "كم عدد المشكلات التي تم تسجيلها للمنتج المُسمى \"voluptatem\"؟", "db_id": "tracking_software_problems"}
{"question": "How many problems did the product called \"voluptatem\" have in record?", "query": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\"", "arabic": "كم عدد المشكلات التي يحملها المنتج الذي لديه أكبر عدد من المشكلات؟ قم بتسجيل عدد المشكلات واسم المنتج.", "db_id": "tracking_software_problems"}
{"question": "How many problems does the product with the most problems have? List the number of the problems and product name.", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1", "arabic": "أي منتج يحمل أكبر عدد من المشكلات؟ أعطني عدد المشكلات واسم المنتج.", "db_id": "tracking_software_problems"}
{"question": "Which product has the most problems? Give me the number of problems and the product name.", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1", "arabic": "قم بإعطائي قائمة بأوصاف المشاكل التي تم الإبلاغ عنها من قبل الموظف الذي يحمل الاسم الأول \"كريستوب\".", "db_id": "tracking_software_problems"}
{"question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.", "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"", "arabic": "أي مشاكل تم الإبلاغ عنها من قبل الموظف الذي يحمل الاسم الأول \"كريستوب\"؟ أظهر أوصاف المشاكل.", "db_id": "tracking_software_problems"}
{"question": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems.", "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"", "arabic": "ابحث عن معرّفات المشاكل التي تم الإبلاغ عنها من قبل الموظف الذي يحمل الاسم الأخير \"بوسكو\".", "db_id": "tracking_software_problems"}
{"question": "Find the ids of the problems that are reported by the staff whose last name is Bosco.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"", "arabic": "أي مشاكل يتم الإبلاغ عنها من قبل الموظفين الذين يحملون اسم العائلة \"بوسكو\"؟ أظهر معرّفات المشاكل.", "db_id": "tracking_software_problems"}
{"question": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"", "arabic": "ما هي معرّفات المشاكل التي تم الإبلاغ عنها بعد تاريخ 1978-06-26؟", "db_id": "tracking_software_problems"}
{"question": "What are the ids of the problems which are reported after 1978-06-26?", "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"", "arabic": "ابحث عن معرّفات المشاكل التي تم الإبلاغ عنها بعد تاريخ 1978-06-26.", "db_id": "tracking_software_problems"}
{"question": "Find the ids of the problems reported after 1978-06-26.", "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"", "arabic": "ما هي معرّفات المشاكل التي تم الإبلاغ عنها قبل تاريخ 1978-06-26؟", "db_id": "tracking_software_problems"}
{"question": "What are the ids of the problems which are reported before 1978-06-26?", "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"", "arabic": "أي مشاكل تم الإبلاغ عنها قبل تاريخ 1978-06-26؟ أعطني معرّفات المشاكل.", "db_id": "tracking_software_problems"}
{"question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.", "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"", "arabic": "بالنسبة لكل منتج لديه مشاكل، ما هو عدد المشاكل ومعرّف المنتج؟", "db_id": "tracking_software_problems"}
{"question": "For each product which has problems, what are the number of problems and the product id?", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id", "arabic": "بالنسبة لكل منتج يواجه مشاكل، قم بعرض عدد المشاكل ومعرّف المنتج.", "db_id": "tracking_software_problems"}
{"question": "For each product with some problems, list the count of problems and the product id.", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id", "arabic": "بالنسبة لكل منتج لديه مشاكل، ابحث عن عدد المشاكل التي تم الإبلاغ عنها بعد تاريخ 1986-11-13 ومعرّف المنتج؟", "db_id": "tracking_software_problems"}
{"question": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "arabic": "ما هي المنتجات التي تواجه مشاكل تم الإبلاغ عنها بعد تاريخ 1986-11-13؟ أعطني معرّف المنتج وعدد المشاكل التي تم الإبلاغ عنها بعد تاريخ 1986-11-13.", "db_id": "tracking_software_problems"}
{"question": "What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "arabic": "قائمة بأسماء كل منتج مميز بترتيب أبجدي؟", "db_id": "tracking_software_problems"}
{"question": "List the names of all the distinct product names in alphabetical order?", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name", "arabic": "صِّر كل أسماء المنتجات المميزة بترتيب أبجدي.", "db_id": "tracking_software_problems"}
{"question": "Sort all the distinct product names in alphabetical order.", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name", "arabic": "قائمة بجميع أسماء المنتجات المميزة مرتبة حسب معرّف المنتج؟", "db_id": "tracking_software_problems"}
{"question": "List all the distinct product names ordered by product id?", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id", "arabic": "ما هو القائمة من أسماء المنتجات المميزة مرتبة حسب معرّف المنتج؟", "db_id": "tracking_software_problems"}
{"question": "What is the list of distinct product names sorted by product id?", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id", "arabic": "ما هي معرّفات المشاكل التي تم الإبلاغ عنها من قبل الموظفين الذين يحملون الاسم Dameon Frami أو Jolie Weber؟", "db_id": "tracking_software_problems"}
{"question": "What are the id of problems reported by the staff named Dameon Frami or Jolie Weber?", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"", "arabic": "أي مشاكل تم الإبلاغ عنها من قبل الموظفين الذين يحملون الاسم Dameon Frami أو Jolie Weber؟ أعطني معرّفات المشاكل.", "db_id": "tracking_software_problems"}
{"question": "Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems.", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"", "arabic": "ما هي معرّفات المنتجات للمشاكل التي تم الإبلاغ عنها بواسطة كريستوب بيرج وتم إغلاقها بتصريح من أشلي ميدهيرست؟", "db_id": "tracking_software_problems"}
{"question": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\"", "arabic": "لأي منتج تم الإبلاغ عن مشكلة من قبل كريستوب بيرج، مع إغلاقها بتصريح من أشلي ميدهيرست؟ الرجاء إعطاء معرّفات المنتج.", "db_id": "tracking_software_problems"}
{"question": "For which product was there a problem reported by Christop Berge, with closure authorised by Ashley Medhurst? Return the product ids.", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\"", "arabic": "ما هي معرّفات المشاكل التي تم الإبلاغ عنها قبل تاريخ أي مشكلة تم الإبلاغ عنها بواسطة ليزان توركوت؟", "db_id": "tracking_software_problems"}
{"question": "What are the ids of the problems reported before the date of any problem reported by Lysanne Turcotte?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )", "arabic": "أي مشاكل تم الإبلاغ عنها قبل تاريخ أي مشكلة تم الإبلاغ عنها من قبل الموظف ليزان توركوت؟ أعطني معرّفات المشاكل.", "db_id": "tracking_software_problems"}
{"question": "Which problems were reported before the date of any problem reported by the staff Lysanne Turcotte? Give me the ids of the problems.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )", "arabic": "ما هي معرّفات المشاكل التي تم الإبلاغ عنها بعد تاريخ أي مشكلة تم الإبلاغ عنها بواسطة ريلان هومينيك؟", "db_id": "tracking_software_problems"}
{"question": "What are the ids of the problems reported after the date of any problems reported by Rylan Homenick?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )", "arabic": "ابحث عن معرّفات المشاكل التي تم الإبلاغ عنها بعد تاريخ أي مشكلة تم الإبلاغ عنها بواسطة الموظف ريلان هومينيك.", "db_id": "tracking_software_problems"}
{"question": "Find the ids of the problems reported after the date of any problems reported by the staff Rylan Homenick.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )", "arabic": "اعثر على أعلى 3 منتجات التي تحتوي على أكبر عدد من المشاكل؟", "db_id": "tracking_software_problems"}
{"question": "Find the top 3 products which have the largest number of problems?", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3", "arabic": "ما هي الثلاثة منتجات التي تحتوي على أكبر عدد من المشاكل؟", "db_id": "tracking_software_problems"}
{"question": "What are the three products that have the most problems?s", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3", "arabic": "قائمة معرّفات المشاكل من المنتج \"فولوبتاتيم\" التي تم الإبلاغ عنها بعد عام 1995؟", "db_id": "tracking_software_problems"}
{"question": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"", "arabic": "ما هي معرّفات المشاكل التي تتعلق بالمنتج \"فولوبتاتيم\" والتي تم الإبلاغ عنها بعد عام 1995؟", "db_id": "tracking_software_problems"}
{"question": "What are the ids of the problems that are from the product \"voluptatem\" and are reported after 1995?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"", "arabic": "اعثر على الاسم الأول والاسم الأخير لأعضاء الفريق الذين قاموا بالإبلاغ عن المشاكل من المنتج \"ريم\" ولكن ليس \"أوت\"؟", "db_id": "tracking_software_problems"}
{"question": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?", "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"", "arabic": "أي أعضاء فريق العمل قاموا بالإبلاغ عن المشاكل من المنتج \"ريم\" ولكن ليس \"أوت\"؟ أعطني أسمائهم الأولى والأخيرة.", "db_id": "tracking_software_problems"}
{"question": "Which staff members who reported problems from the product \"rem\" but not \"aut\"? Give me their first and last names.", "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"", "arabic": "ابحث عن المنتجات التي تواجه مشاكل تم الإبلاغ عنها من قبل كل من ليسي بوسكو وكينتون شامبلين؟", "db_id": "tracking_software_problems"}
{"question": "Find the products which have problems reported by both Lacey Bosco and Kenton Champlin?", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\"", "arabic": "ما هي المنتجات التي تواجه مشاكل تم الإبلاغ عنها من قبل الموظفين المسمين ليسي بوسكو وكينتون شامبلين؟", "db_id": "tracking_software_problems"}
{"question": "Which products have problems reported by both the staff named Lacey Bosco and the staff named Kenton Champlin?", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\"", "arabic": "كم عدد الفروع التي تحتوي على عدد من العضويات أكبر من المتوسط؟", "db_id": "tracking_software_problems"}
{"question": "How many branches where have more than average number of memberships are there?", "query": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)", "arabic": "ما هو عدد الفروع التي تمتلك عددًا أكبر من متوسط ​​عدد العضويات؟", "db_id": "shop_membership"}
{"question": "What is the number of branches that have more than the average number of memberships?", "query": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)", "arabic": "أظهر الاسم، وعنوان الشارع، والمدينة لجميع الفروع مرتبة حسب سنة الافتتاح.", "db_id": "shop_membership"}
{"question": "Show name, address road, and city for all branches sorted by open year.", "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year", "arabic": "ما هي الأسماء، وعناوين الشوارع، والمدن للفروع مرتبة حسب سنة الافتتاح؟", "db_id": "shop_membership"}
{"question": "What are the names, address roads, and cities of the branches ordered by opening year?", "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year", "arabic": "ما هي الأسماء لأعلى ثلاثة فروع بأكبر عدد من العضويات؟", "db_id": "shop_membership"}
{"question": "What are names for top three branches with most number of membership?", "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3", "arabic": "ما هي الأسماء للثلاثة فروع التي تحتوي على أكبر عدد من العضويات؟", "db_id": "shop_membership"}
{"question": "What are the names for the 3 branches that have the most memberships?", "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3", "arabic": "أظهر جميع المدن المميزة حيث تقع الفروع التي تمتلك على الأقل 100 عضوية.", "db_id": "shop_membership"}
{"question": "Show all distinct city where branches with at least 100 memberships are located.", "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100", "arabic": "ما هي المدن المختلفة التي تمتلك أكثر من 100 عضوية؟", "db_id": "shop_membership"}
{"question": "What are the different cities that have more than 100 memberships?", "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100", "arabic": "سرد جميع سنوات الافتتاح عندما يتم فتح متجرين على الأقل.", "db_id": "shop_membership"}
{"question": "List all open years when at least two shops are opened.", "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2", "arabic": "ما هي سنوات الافتتاح التي تم فيها فتح متجرين على الأقل؟", "db_id": "shop_membership"}
{"question": "What are the opening years in which at least two shops opened?", "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2", "arabic": "أظهر الحد الأدنى والأقصى لعدد العضويات لجميع الفروع التي تم فتحها في عام 2011 أو تقع في مدينة لندن.", "db_id": "shop_membership"}
{"question": "Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London.", "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'", "arabic": "ما هي الحد الأدنى والأقصى لعدد العضويات لجميع الفروع التي تم فتحها في عام 2011 أو تقع في لندن؟", "db_id": "shop_membership"}
{"question": "What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London?", "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'", "arabic": "أظهر المدينة وعدد الفروع التي تم فتحها قبل عام 2010 لكل مدينة.", "db_id": "shop_membership"}
{"question": "Show the city and the number of branches opened before 2010 for each city.", "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city", "arabic": "بالنسبة لكل مدينة، كم عدد الفروع التي تم فتحها قبل عام 2010؟", "db_id": "shop_membership"}
{"question": "For each city, how many branches opened before 2010?", "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city", "arabic": "كم عدد المستويات المختلفة التي يمتلكها الأعضاء؟", "db_id": "shop_membership"}
{"question": "How many different levels do members have?", "query": "SELECT count(DISTINCT LEVEL) FROM member", "arabic": "ما هي المستويات المختلفة للعضويات؟", "db_id": "shop_membership"}
{"question": "What are the different membership levels?", "query": "SELECT count(DISTINCT LEVEL) FROM member", "arabic": "أظهر رقم البطاقة، والاسم، والمدينة الأصلية لجميع الأعضاء بترتيب تنازلي حسب المستوى.", "db_id": "shop_membership"}
{"question": "Show card number, name, and hometown for all members in a descending order of level.", "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC", "arabic": "ما هي أرقام البطاقات، والأسماء، والمدن الأصلية لكل عضو مرتبة بتنازل المستوى؟", "db_id": "shop_membership"}
{"question": "What are the card numbers, names, and hometowns of every member ordered by descending level?", "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC", "arabic": "أظهر مستوى العضوية الذي يحتوي على أكبر عدد من الأعضاء.", "db_id": "shop_membership"}
{"question": "Show the membership level with most number of members.", "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو مستوى العضوية الذي يحتوي على أكبر عدد من الأشخاص؟", "db_id": "shop_membership"}
{"question": "What is the membership level with the most people?", "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر جميع أسماء الأعضاء وأسماء الفروع التي تم التسجيل فيها مرتبة حسب سنة التسجيل.", "db_id": "shop_membership"}
{"question": "Show all member names and registered branch names sorted by register year.", "query": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year", "arabic": "ما هي أسماء الأعضاء والفروع التي تم التسجيل فيها وفقًا لسنة التسجيل؟", "db_id": "shop_membership"}
{"question": "What are the names of the members and branches at which they are registered sorted by year of registration?", "query": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year", "arabic": "أظهر جميع أسماء الفروع مع عدد الأعضاء في كل فرع مسجلة بعد عام 2015.", "db_id": "shop_membership"}
{"question": "Show all branch names with the number of members in each branch registered after 2015.", "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id", "arabic": "بالنسبة لكل معرف فرع، ما هي أسماء الفروع التي تم التسجيل فيها بعد عام 2015؟", "db_id": "shop_membership"}
{"question": "For each branch id, what are the names of the branches that were registered after 2015?", "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id", "arabic": "أظهر أسماء الأعضاء دون أي فرع مسجل فيه.", "db_id": "shop_membership"}
{"question": "Show member names without any registered branch.", "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)", "arabic": "ما هي أسماء الأعضاء الذين لم يتم التسجيل لديهم في أي فرع؟", "db_id": "shop_membership"}
{"question": "What are the names of the members that have never registered at any branch?", "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)", "arabic": "سرد اسم الفرع والمدينة دون أي أعضاء مسجلين.", "db_id": "shop_membership"}
{"question": "List the branch name and city without any registered members.", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)", "arabic": "ما هي أسماء الفروع والمدن التي لا تحتوي على أي أعضاء مسجلين؟", "db_id": "shop_membership"}
{"question": "What are the names and cities of the branches that do not have any registered members?", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)", "arabic": "ما هو اسم الفرع وسنة الافتتاح للفرع الذي يحتوي على أكبر عدد من العضويات المسجلة في عام 2016؟", "db_id": "shop_membership"}
{"question": "What is the name and open year for the branch with most number of memberships registered in 2016?", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم الفرع وسنة الافتتاح للفرع الذي سجل أكبر عدد من الأعضاء في عام 2016؟", "db_id": "shop_membership"}
{"question": "What is the name and opening year for the branch that registered the most members in 2016?", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر اسم العضو ومسقط رأسه الذي سجل في فرع في عام 2016.", "db_id": "shop_membership"}
{"question": "Show the member name and hometown who registered a branch in 2016.", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016", "arabic": "ما هي أسماء الأعضاء ومدن الإقامة لأولئك الذين سجلوا في فرع في عام 2016؟", "db_id": "shop_membership"}
{"question": "What are the member names and hometowns of those who registered at a branch in 2016?", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016", "arabic": "أظهر جميع المدن التي تحتوي على فرع تم فتحه في عام 2001 وفرع يحتوي على أكثر من 100 عضوية.", "db_id": "shop_membership"}
{"question": "Show all city with a branch opened in 2001 and a branch with more than 100 membership.", "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100", "arabic": "ما هي المدن التي تحتوي على فرع تم فتحه في عام 2001 وفرع يحتوي على أكثر من 100 عضو؟", "db_id": "shop_membership"}
{"question": "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?", "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100", "arabic": "أظهر جميع المدن دون وجود فرع يحتوي على أكثر من 100 عضوية.", "db_id": "shop_membership"}
{"question": "Show all cities without a branch having more than 100 memberships.", "query": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100", "arabic": "ما هي المدن التي لا تحتوي على أي فروع تحتوي على أكثر من 100 عضو؟", "db_id": "shop_membership"}
{"question": "What are the cities that do not have any branches with more than 100 members?", "query": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100", "arabic": "ما هي المدن التي لا تحتوي على أي فروع تحتوي على أكثر من 100 عضو؟", "db_id": "shop_membership"}
{"question": "What is the sum of total pounds of purchase in year 2018 for all branches in London?", "query": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018", "arabic": "كم من الجنيهات الإجمالية تم شراؤها في عام 2018 في جميع فروع لندن؟", "db_id": "shop_membership"}
{"question": "How many total pounds were purchased in the year 2018 at all London branches?", "query": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018", "arabic": "ما هو العدد الإجمالي للمشتريات لأعضاء المستوى 6؟", "db_id": "shop_membership"}
{"question": "What is the total number of purchases for members with level 6?", "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6", "arabic": "ما هي المشتريات الإجمالية لأعضاء تصنيفهم المستوى 6؟", "db_id": "shop_membership"}
{"question": "What are the total purchases for members rated at level 6?", "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6", "arabic": "اعثر على أسماء الفروع التي تضم بعض الأعضاء الذين يأتون من مدينة لويسفيل، كنتاكي، وبعضهم الآخر من هيرام، جورجيا.", "db_id": "shop_membership"}
{"question": "Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia.", "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'", "arabic": "ما هي أسماء الفروع التي تحتوي على بعض الأعضاء من مدينة لويسفيل، كنتاكي، وأيضًا تلك من هيرام، جورجيا؟", "db_id": "shop_membership"}
{"question": "What are the names of the branches that have some members with a hometown in Louisville, Kentucky and also those from Hiram, Goergia?", "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'", "arabic": "قائمة بأرقام بطاقات جميع الأعضاء الذين يأتون من مدينة \"كنتاكي\" في عنوان مسقط رأسهم.", "db_id": "shop_membership"}
{"question": "list the card number of all members whose hometown address includes word \"Kentucky\".", "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"", "arabic": "ما هي أرقام بطاقات الأعضاء من كنتاكي؟", "db_id": "shop_membership"}
{"question": "What are the card numbers of members from Kentucky?", "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"", "arabic": "اعثر على عدد الطلاب بشكل إجمالي.", "db_id": "shop_membership"}
{"question": "Find the number of students in total.", "query": "SELECT count(*) FROM STUDENT", "arabic": "كم عدد الطلاب بشكل إجمالي؟", "db_id": "voter_2"}
{"question": "How many students are there in total?", "query": "SELECT count(*) FROM STUDENT", "arabic": "ما هو عدد سجلات التصويت بشكل إجمالي؟", "db_id": "voter_2"}
{"question": "Find the number of voting records in total.", "query": "SELECT count(*) FROM VOTING_RECORD", "arabic": "كم عدد سجلات التصويت لدينا؟", "db_id": "voter_2"}
{"question": "How many voting records do we have?", "query": "SELECT count(*) FROM VOTING_RECORD", "arabic": "ما هو عدد التصويتات الرئاسية المميزة؟", "db_id": "voter_2"}
{"question": "Find the distinct number of president votes.", "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD", "arabic": "كم عدد التصويتات الرئاسية المميزة المسجلة؟", "db_id": "voter_2"}
{"question": "How many distinct president votes are recorded?", "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD", "arabic": "ما هو أقصى عمر بين جميع الطلاب؟", "db_id": "voter_2"}
{"question": "Find the maximum age of all the students.", "query": "SELECT max(Age) FROM STUDENT", "arabic": "ما هو أقدم عمر بين الطلاب؟", "db_id": "voter_2"}
{"question": "What is the oldest age among the students?", "query": "SELECT max(Age) FROM STUDENT", "arabic": "ما هي أسماء العائلة للطلاب الذين يدرسون تخصص 50؟", "db_id": "voter_2"}
{"question": "Find the last names of students with major 50.", "query": "SELECT LName FROM STUDENT WHERE Major  =  50", "arabic": "ما هي أسماء العائلة للطلاب الذين يدرسون تخصص 50؟", "db_id": "voter_2"}
{"question": "What are the last names of students studying major 50?", "query": "SELECT LName FROM STUDENT WHERE Major  =  50", "arabic": "ما هي الأسماء الأولى للطلاب الذين تتجاوز أعمارهم 22 عامًا؟", "db_id": "voter_2"}
{"question": "Find the first names of students with age above 22.", "query": "SELECT Fname FROM STUDENT WHERE Age  >  22", "arabic": "ما هي الأسماء الأولى لجميع الطلاب الذين تتجاوز أعمارهم 22 عامًا؟", "db_id": "voter_2"}
{"question": "What are the first names of all the students aged above 22?", "query": "SELECT Fname FROM STUDENT WHERE Age  >  22", "arabic": "ما هي تخصصات الطلاب الذكور (الجنس هو M)؟", "db_id": "voter_2"}
{"question": "What are the majors of male (sex is M) students?", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"", "arabic": "قائمة بتخصص كل طالب ذكر.", "db_id": "voter_2"}
{"question": "List the major of each male student.", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"", "arabic": "ما هو متوسط أعمار الطالبات (الجنس هو F)؟", "db_id": "voter_2"}
{"question": "What is the average age of female (sex is F) students?", "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"", "arabic": "ما هو متوسط أعمار الطالبات الإناث؟", "db_id": "voter_2"}
{"question": "Find the average age of female students.", "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"", "arabic": "ما هي أقصى وأدنى أعمار الطلاب الذين يدرسون تخصص 600؟", "db_id": "voter_2"}
{"question": "What are the maximum and minimum age of students with major 600?", "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600", "arabic": "ما هي أعمار أكبر وأصغر الطلاب الذين يدرسون التخصص 600؟", "db_id": "voter_2"}
{"question": "Tell me the ages of the oldest and youngest students studying major 600.", "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600", "arabic": "من هم المستشارون للطلاب الذين يعيشون في مدينة تحمل رمز \"BAL\"؟", "db_id": "voter_2"}
{"question": "Who are the advisors for students that live in a city with city code \"BAL\"?", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "arabic": "أظهر المستشارين للطلاب الذين تكون مدينة إقامتهم لها رمز \"BAL\".", "db_id": "voter_2"}
{"question": "Show the advisors of the students whose city of residence has city code \"BAL\".", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "arabic": "ما هي التصويتات المميزة لأمين السر في دورة الانتخابات الخريفية؟", "db_id": "voter_2"}
{"question": "What are the distinct secretary votes in the fall election cycle?", "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "arabic": "عرض جميع التصويتات المميزة التي تمت في دورة الانتخابات الخريفية.", "db_id": "voter_2"}
{"question": "Return all the distinct secretary votes made in the fall election cycle.", "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "arabic": "ما هي التصويتات المميزة للرئيس في 08/30/2015؟", "db_id": "voter_2"}
{"question": "What are the distinct president votes on 08/30/2015?", "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"", "arabic": "عرض جميع التصويتات المميزة التي تمت للرئيس في 08/30/2015.", "db_id": "voter_2"}
{"question": "Show all the distinct president votes made on 08/30/2015.", "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"", "arabic": "تقرير تاريخ التسجيل المميز ودورة الانتخابات.", "db_id": "voter_2"}
{"question": "Report the distinct registration date and the election cycle.", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD", "arabic": "ما هي التواريخ المميزة للتسجيل ودورات الانتخابات؟", "db_id": "voter_2"}
{"question": "What are the distinct registration dates and the election cycles?", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD", "arabic": "تقرير التصويت المميز للرئيس والنائب الرئيس.", "db_id": "voter_2"}
{"question": "Report the distinct president vote and the vice president vote.", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "arabic": "قائمة بجميع التصويتات المميزة للرئيس والنائب الرئيس.", "db_id": "voter_2"}
{"question": "List all the distinct president votes and the vice president votes.", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "arabic": "العثور على الأسماء الأخيرة المميزة للطلاب الذين لديهم تصويت لرئيس الفصل.", "db_id": "voter_2"}
{"question": "Find the distinct last names of the students who have class president votes.", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE", "arabic": "ما هي الأسماء الأخيرة المميزة للطلاب الذين لديهم تصويت لرئيس الفصل؟", "db_id": "voter_2"}
{"question": "What are the distinct last names of the students who have class president votes?", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE", "arabic": "العثور على الأسماء الأولى المميزة للطلاب الذين لديهم تصويت لعضو في مجلس الطلاب.", "db_id": "voter_2"}
{"question": "Find the distinct first names of the students who have class senator votes.", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "arabic": "ما هي الأسماء الأولى المميزة للطلاب الذين لديهم تصويت لرئيس الفصل؟", "db_id": "voter_2"}
{"question": "What are the distinct first names of the students who have class president votes?", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "arabic": "ما هي الأعمار المميزة للطلاب الذين لديهم تصويت لأمين السر في دورة الانتخابات الخريفية؟", "db_id": "voter_2"}
{"question": "Find the distinct ages of students who have secretary votes in the fall election cycle.", "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"", "arabic": "ما هي الأعمار المميزة للطلاب الذين لديهم تصويت لأمين السر في دورة الانتخابات الخريفية؟", "db_id": "voter_2"}
{"question": "What are the distinct ages of students who have secretary votes in the fall election cycle?", "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"", "arabic": "ما هي المستشارين المميزين للطلاب الذين لديهم تصويت لأمين الصندوق في دورة الانتخابات الربيعية؟", "db_id": "voter_2"}
{"question": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.", "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"", "arabic": "من كان المستشارين للطلاب الذين لديهم تصويت لأمين الصندوق في دورة الانتخابات الربيعية؟", "db_id": "voter_2"}
{"question": "Who served as an advisor for students who have treasurer votes in the spring election cycle?", "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"", "arabic": "ما هي التخصصات المميزة للطلاب الذين لديهم تصويت لأمين الصندوق؟", "db_id": "voter_2"}
{"question": "Find the distinct majors of students who have treasurer votes.", "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "arabic": "ما هي التخصصات المميزة التي يدرسها الطلاب الذين لديهم تصويت لأمين الصندوق؟", "db_id": "voter_2"}
{"question": "What are the distinct majors that students with treasurer votes are studying?", "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "arabic": "ما هي الأسماء الأولى والأخيرة لجميع الطالبات (الجنس هو F) اللاتي لديهن تصويت للرئيس؟", "db_id": "voter_2"}
{"question": "Find the first and last names of all the female (sex is F) students who have president votes.", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "arabic": "ما هي الأسماء الأولى والأخيرة لجميع الطالبات اللاتي لديهن تصويت للرئيس؟", "db_id": "voter_2"}
{"question": "What are the first and last names of all the female students who have president votes?", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "arabic": "ما هي الأسماء الأولى والأخيرة لجميع الطلاب الذين تبلغ أعمارهم 18 عامًا ولديهم تصويت لنائب الرئيس؟", "db_id": "voter_2"}
{"question": "Find the first and last name of all the students of age 18 who have vice president votes.", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "arabic": "ما هي الأسماء الأولى والأخيرة للطلاب الذين يبلغون 18 عامًا ولديهم تصويت لنائب الرئيس؟", "db_id": "voter_2"}
{"question": "What are the first names and last names of the students who are 18 years old and have vice president votes.", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "arabic": "كم عدد الطلاب الذكور (الجنس هو M) الذين لديهم تصويت لعضو في مجلس الطلاب في دورة الانتخابات الخريفية؟", "db_id": "voter_2"}
{"question": "How many male (sex is M) students have class senator votes in the fall election cycle?", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\"", "arabic": "عدد الطلاب الذكور الذين كان لديهم تصويت لعضو في مجلس الطلاب في دورة الانتخابات الخريفية.", "db_id": "voter_2"}
{"question": "Count the number of male students who had class senator votes in the fall election cycle.", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\"", "arabic": "ما هو عدد الطلاب الذين يعيشون في مدينة تحمل الرمز \"NYC\" والذين لديهم تصويت لعضو في مجلس الطلاب في دورة الانتخابات الربيعية؟", "db_id": "voter_2"}
{"question": "Find the number of students whose city code is NYC and who have class senator votes in the spring election cycle.", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "arabic": "من الطلاب الذين يعيشون في المدينة التي تحمل الرمز \"NYC\" ولديهم تصويت لعضو في مجلس الطلاب في دورة الانتخابات الربيعية؟ عدد الطلاب.", "db_id": "voter_2"}
{"question": "Which students live in the city with code \"NYC\" and have class senator votes in the spring election cycle? Count the numbers.", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "arabic": "ما هو متوسط أعمار الطلاب الذين يعيشون في المدينة التي تحمل الرمز \"NYC\" ولديهم تصويت لأمين السر في دورة الانتخابات الربيعية؟", "db_id": "voter_2"}
{"question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "arabic": "ما هو متوسط أعمار الطلاب الذين لديهم رمز المدينة \"NYC\" ولديهم تصويت لأمين السر في دورة الانتخابات الربيعية؟", "db_id": "voter_2"}
{"question": "What is the average age of students who have city code \"NYC\" and have secretary votes for the spring election cycle?", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"", "arabic": "ما هو متوسط أعمار الطالبات (الجنس هو F) اللاتي لديهن تصويت لأمين السر في دورة الانتخابات الربيعية؟", "db_id": "voter_2"}
{"question": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle.", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"", "arabic": "ما هو متوسط أعمار الطالبات اللاتي لديهن تصويت لأمين السر في دورة الانتخابات الربيعية؟", "db_id": "voter_2"}
{"question": "What is the average age of the female students with secretary votes in the spring election cycle?", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"", "arabic": "ما هي الأسماء الأولى المميزة لجميع الطلاب الذين لديهم تصويت لنائب الرئيس ورمز المدينة ليس PIT؟", "db_id": "voter_2"}
{"question": "Find the distinct first names of all the students who have vice president votes and whose city code is not PIT.", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"", "arabic": "ما هي الأسماء الأولى المميزة للطلاب الذين لديهم تصويت لنائب الرئيس ويقيمون في مدينة رمزها ليس PIT؟", "db_id": "voter_2"}
{"question": "What are the distinct first names of the students who have vice president votes and reside in a city whose city code is not PIT?", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"", "arabic": "ما هي الأسماء الأخيرة المميزة لجميع الطلاب الذين لديهم تصويت للرئيس ومستشارهم ليس 2192؟", "db_id": "voter_2"}
{"question": "Find the distinct last names of all the students who have president votes and whose advisor is not 2192.", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"", "arabic": "ما هي الأسماء الأخيرة المميزة للطلاب الذين لديهم تصويت للرئيس ومستشارهم ليس 2192؟", "db_id": "voter_2"}
{"question": "What are the distinct last names of the students who have president votes but do not have 2192 as the advisor?", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"", "arabic": "ما هي الأسماء الأخيرة المميزة لجميع الطلاب الذين لديهم تصويت للرئيس ومستشارهم 8741؟", "db_id": "voter_2"}
{"question": "Find the distinct last names of all the students who have president votes and whose advisor is 8741.", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"", "arabic": "ما هي الأسماء الأخيرة المميزة للطلاب الذين لديهم تصويت للرئيس ومستشارهم 8741؟", "db_id": "voter_2"}
{"question": "What are the distinct last names of the students who have president votes and have 8741 as the advisor?", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"", "arabic": "لكل مستشار، أبلغ عن العدد الإجمالي للطلاب الذين تمت مشورتهم من قبله.", "db_id": "voter_2"}
{"question": "For each advisor, report the total number of students advised by him or her.", "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor", "arabic": "كم عدد الطلاب الذين يمتلكهم كل مستشار؟", "db_id": "voter_2"}
{"question": "How many students does each advisor have?", "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor", "arabic": "أبلغ عن جميع المستشارين الذين يستشير أكثر من طالبين.", "db_id": "voter_2"}
{"question": "Report all advisors that advise more than 2 students.", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2", "arabic": "أي المستشارين لديهم أكثر من طالبين؟", "db_id": "voter_2"}
{"question": "Which advisors have more than two students?", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2", "arabic": "أبلغ عن جميع التخصصات التي يدرسها أقل من ثلاثة طلاب.", "db_id": "voter_2"}
{"question": "Report all majors that have less than 3 students.", "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3", "arabic": "ما هي التخصصات التي يدرسها أقل من ثلاثة طلاب فقط؟", "db_id": "voter_2"}
{"question": "What are the majors only less than three students are studying?", "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3", "arabic": "لكل دورة انتخابية، أبلغ عن عدد سجلات التصويت.", "db_id": "voter_2"}
{"question": "For each election cycle, report the number of voting records.", "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle", "arabic": "عد عدد سجلات التصويت لكل دورة انتخابية.", "db_id": "voter_2"}
{"question": "Count the number of voting records for each election cycle.", "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle", "arabic": "أي تخصص لديه أكبر عدد من الطلاب؟", "db_id": "voter_2"}
{"question": "Which major has the most students?", "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1", "arabic": "اعثر على التخصص الذي يدرسه أكبر عدد من الطلاب.", "db_id": "voter_2"}
{"question": "Find the major that is studied by the largest number of students.", "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو التخصص الأكثر شيوعًا بين الطالبات (الجنس هو F)؟", "db_id": "voter_2"}
{"question": "What is the most common major among female (sex is F) students?", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1", "arabic": "اعثر على التخصص الذي يدرسه أكبر عدد من الطالبات.", "db_id": "voter_2"}
{"question": "Find the major that is studied by the most female students.", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو رمز city_code للمدينة التي يعيش فيها معظم الطلاب؟", "db_id": "voter_2"}
{"question": "What is the city_code of the city that the most students live in?", "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "arabic": "العودة إلى رمز المدينة التي يوجد فيها معظم الطلاب.", "db_id": "voter_2"}
{"question": "Return the code of the city that has the most students.", "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "arabic": "أبلغ عن المستشارين المميزين الذين لديهم أكثر من طالبين.", "db_id": "voter_2"}
{"question": "Report the distinct advisors who have more than 2 students.", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2", "arabic": "أي المستشارين الذين يقومون بتقديم النصح لأكثر من طالبين؟", "db_id": "voter_2"}
{"question": "Which advisors are advising more than 2 students?", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2", "arabic": "كم منتج هناك؟", "db_id": "voter_2"}
{"question": "How many products are there?", "query": "SELECT count(*) FROM products", "arabic": "عدد المنتجات.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of products.", "query": "SELECT count(*) FROM products", "arabic": "كم عدد الألوان؟", "db_id": "products_gen_characteristics"}
{"question": "How many colors are there?", "query": "SELECT count(*) FROM ref_colors", "arabic": "عدد الألوان.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of colors.", "query": "SELECT count(*) FROM ref_colors", "arabic": "كم عدد الخصائص؟", "db_id": "products_gen_characteristics"}
{"question": "How many characteristics are there?", "query": "SELECT count(*) FROM CHARACTERISTICS", "arabic": "كم عدد الخصائص؟", "db_id": "products_gen_characteristics"}
{"question": "Count the number of characteristics.", "query": "SELECT count(*) FROM CHARACTERISTICS", "arabic": "ما هي أسماء وأسعار الشراء لجميع المنتجات؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names and buying prices of all the products?", "query": "SELECT product_name ,  typical_buying_price FROM products", "arabic": "العودة إلى أسماء وأسعار الشراء المعتادة لجميع المنتجات.", "db_id": "products_gen_characteristics"}
{"question": "Return the names and typical buying prices for all products.", "query": "SELECT product_name ,  typical_buying_price FROM products", "arabic": "قائمة وصف جميع الألوان.", "db_id": "products_gen_characteristics"}
{"question": "List the description of all the colors.", "query": "SELECT color_description FROM ref_colors", "arabic": "ما هي الوصف لكل لون؟", "db_id": "products_gen_characteristics"}
{"question": "What are the descriptions for each color?", "query": "SELECT color_description FROM ref_colors", "arabic": "اعثر على أسماء جميع خصائص المنتج.", "db_id": "products_gen_characteristics"}
{"question": "Find the names of all the product characteristics.", "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS", "arabic": "ما هي الأسماء المختلفة لخصائص المنتج؟", "db_id": "products_gen_characteristics"}
{"question": "What are the different names of the product characteristics?", "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS", "arabic": "ما هي أسماء المنتجات التي تحمل فئة \"التوابل\"؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names of products with category \"Spices\"?", "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"", "arabic": "العودة إلى أسماء المنتجات في الفئة 'التوابل'.", "db_id": "products_gen_characteristics"}
{"question": "Return the names of products in the category 'Spices'.", "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"", "arabic": "قائمة أسماء وأوصاف الألوان وأوصاف المنتجات للمنتجات ذات الفئة \"الأعشاب\".", "db_id": "products_gen_characteristics"}
{"question": "List the names, color descriptions and product descriptions of products with category \"Herbs\".", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"", "arabic": "ما هي أسماء وأوصاف الألوان وأوصاف المنتجات للمنتجات في فئة 'الأعشاب'؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names, color descriptions, and product descriptions for products in the 'Herbs' category?", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"", "arabic": "كم عدد المنتجات تحت الفئة \"البذور\"؟", "db_id": "products_gen_characteristics"}
{"question": "How many products are there under the category \"Seeds\"?", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"", "arabic": "عدد المنتجات في فئة 'البذور'.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of products in the category 'Seeds'.", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"", "arabic": "العثور على عدد المنتجات بفئة \"التوابل\" والتي عادة ما يتم بيعها بأكثر من 1000.", "db_id": "products_gen_characteristics"}
{"question": "Find the number of products with category \"Spices\" and typically sold above 1000.", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000", "arabic": "كم عدد المنتجات في فئة 'التوابل' ولها سعر معتاد يزيد عن 1000؟", "db_id": "products_gen_characteristics"}
{"question": "How many products are in the 'Spices' category and have a typical price of over 1000?", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000", "arabic": "ما هي الفئة والسعر الشرائي المعتاد للمنتج بالاسم \"الكمون\"؟", "db_id": "products_gen_characteristics"}
{"question": "What is the category and typical buying price  of the product with name \"cumin\"?", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"", "arabic": "العودة إلى رمز الفئة والسعر المعتاد لـ 'الكمون'.", "db_id": "products_gen_characteristics"}
{"question": "Return the category code and typical price of 'cumin'.", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"", "arabic": "إلى أي فئة ينتمي المنتج المسمى \"الكتان\"؟", "db_id": "products_gen_characteristics"}
{"question": "Which category does the product named \"flax\" belong to?", "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"", "arabic": "ما هو رمز الفئة التي ينتمي إليها المنتج بالاسم 'الكتان'؟", "db_id": "products_gen_characteristics"}
{"question": "What is the code of the category that the product with the name 'flax' belongs to?", "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"", "arabic": "ما هو اسم المنتج الذي له وصف لون 'أصفر'؟", "db_id": "products_gen_characteristics"}
{"question": "What is the name of the product with the color description 'yellow'?", "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'", "arabic": "أعط أسماء المنتجات التي لديها وصف لون 'أصفر'.", "db_id": "products_gen_characteristics"}
{"question": "Give the name of the products that have a color description 'yellow'.", "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'", "arabic": "اعثر على أوصاف الفئة للمنتجات التي تتضمن الحرف 't'.", "db_id": "products_gen_characteristics"}
{"question": "Find the category descriptions of the products whose descriptions include letter 't'.", "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'", "arabic": "ما هي الوصف للفئات التي تحتوي منتجاتها على الحرف t؟", "db_id": "products_gen_characteristics"}
{"question": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in?", "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'", "arabic": "ما هو وصف اللون للمنتج بالاسم \"القطنبة\"؟", "db_id": "products_gen_characteristics"}
{"question": "What is the color description of the product with name \"catnip\"?", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"", "arabic": "أعط وصف اللون للمنتج 'القطنبة'.", "db_id": "products_gen_characteristics"}
{"question": "Give the color description for the product 'catnip'.", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"", "arabic": "ما هو رمز اللون والوصف للمنتج بالاسم \"الشبت\"؟", "db_id": "products_gen_characteristics"}
{"question": "What is the color code and description of the product named \"chervil\"?", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"", "arabic": "العودة إلى رمز اللون والوصف للمنتج بالاسم 'الشبت'.", "db_id": "products_gen_characteristics"}
{"question": "Return the color code and description for the product with the name 'chervil'.", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"", "arabic": "اعثر على معرف المنتج ووصف اللون للمنتجات التي تحتوي على ما لا يقل عن خصائصين.", "db_id": "products_gen_characteristics"}
{"question": "Find the id and color description of the products with at least 2 characteristics.", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2", "arabic": "ما هي معرفات المنتج ووصف اللون للمنتجات التي تحتوي على خصائصين أو أكثر؟", "db_id": "products_gen_characteristics"}
{"question": "What are the product ids and color descriptions for products with two or more characteristics?", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2", "arabic": "قائمة باسماء جميع المنتجات مع وصف اللون \"أبيض\".", "db_id": "products_gen_characteristics"}
{"question": "List all the product names with the color description \"white\".", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"", "arabic": "ما هي أسماء المنتجات التي تحتوي على 'أبيض' كوصف لونها؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names of products with 'white' as their color description?", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"", "arabic": "ما هي الاسم والسعر الشرائي والبيعي المعتاد للمنتجات التي يكون وصف لونها \"أصفر\"؟", "db_id": "products_gen_characteristics"}
{"question": "What are the name and typical buying and selling prices of the products that have color described as \"yellow\"?", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "arabic": "العودة إلى أسماء المنتجات والأسعار الشرائية والبيعية المعتادة للمنتجات التي يكون لونها 'أصفر' كوصف.", "db_id": "products_gen_characteristics"}
{"question": "Return the names and typical buying and selling prices for products that have 'yellow' as their color description.", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "arabic": "كم خصائص للمنتج المسمى \"السمسم\"؟", "db_id": "products_gen_characteristics"}
{"question": "How many characteristics does the product named \"sesame\" have?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"", "arabic": "عدد الخصائص التي يحتويها المنتج 'السمسم'.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of characteristics the product 'sesame' has.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"", "arabic": "كم عدد أسماء الخصائص المتميزة التي يحملها المنتج \"الكمون\"؟", "db_id": "products_gen_characteristics"}
{"question": "How many distinct characteristic names does the product \"cumin\" have?", "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"", "arabic": "عدد أسماء الخصائص المختلفة التي يحملها المنتج 'الكمون'.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of different characteristic names the product 'cumin' has.", "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"", "arabic": "ما هي جميع أسماء الخصائص للمنتج \"السمسم\"؟", "db_id": "products_gen_characteristics"}
{"question": "What are all the characteristic names of product \"sesame\"?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"", "arabic": "العودة إلى أسماء الخصائص للمنتج 'السمسم'.", "db_id": "products_gen_characteristics"}
{"question": "Return the characteristic names of the 'sesame' product.", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"", "arabic": "قائمة بجميع أسماء الخصائص وأنواع البيانات للمنتج \"الكمون\".", "db_id": "products_gen_characteristics"}
{"question": "List all the characteristic names and data types of product \"cumin\".", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"", "arabic": "ما هي أسماء الخصائص وأنواع البيانات لمنتج \"الكمون\"؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names and data types of the characteristics of the 'cumin' product?", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"", "arabic": "قائمة بجميع الخصائص للمنتج المسمى \"السمسم\" برمز النوع \"الدرجة\".", "db_id": "products_gen_characteristics"}
{"question": "List all characteristics of product named \"sesame\" with type code \"Grade\".", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"", "arabic": "ما هي أسماء الخصائص لمنتج 'السمسم' التي لها رمز نوع الخاصية 'الدرجة'؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"", "arabic": "كم خصائص للمنتج المسمى \"الغار\"؟", "db_id": "products_gen_characteristics"}
{"question": "How many characteristics does the product named \"laurel\" have?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"", "arabic": "عدد الخصائص للمنتج المسمى 'الغار'.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of characteristics of the product named 'laurel'.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"", "arabic": "كم عدد الخصائص التي يحملها المنتج \"الكتان\"؟", "db_id": "products_gen_characteristics"}
{"question": "Find the number of characteristics that the product \"flax\" has.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\"", "arabic": "عدد الخصائص للمنتج 'الكتان'.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of characteristics of the 'flax' product.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\"", "arabic": "ابحث عن أسماء المنتجات التي يكون لوصف لونها \"أحمر\" ولها اسم خصائص \"سريع\".", "db_id": "products_gen_characteristics"}
{"question": "Find the name of the products that have the color description \"red\" and have the characteristic name \"fast\".", "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"", "arabic": "ما هي أسماء المنتجات التي لها وصف لون \"أحمر\" ولها خصائص \"سريعة\"؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names of the products that have a color description of 'red' and the 'fast' characteristic?", "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"", "arabic": "كم منتج له خاصية تسمى \"حار\"؟", "db_id": "products_gen_characteristics"}
{"question": "How many products have the characteristic named \"hot\"?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"", "arabic": "عدد المنتجات ذات الخاصية 'الحار'.", "db_id": "products_gen_characteristics"}
{"question": "Count the number of products with the 'hot' charactersitic.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"", "arabic": "قائمة بجميع الأسماء المميزة للمنتجات ذات اسم الخاصية 'دافئ'.", "db_id": "products_gen_characteristics"}
{"question": "List the all the distinct names of the products with the characteristic name 'warm'.", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"", "arabic": "ما هي أسماء المنتجات المختلفة للمنتجات التي لديها خاصية 'دافئة'؟", "db_id": "products_gen_characteristics"}
{"question": "What are the different product names for products that have the 'warm' characteristic:?", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"", "arabic": "ابحث عن عدد المنتجات التي لها لونها موصوفًا بأنه \"أحمر\" ولها خاصية تسمى \"بطيء\".", "db_id": "products_gen_characteristics"}
{"question": "Find the number of the products that have their color described as \"red\" and have a characteristic named \"slow\".", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\"", "arabic": "كم منتج له لونه موصوف بأنه 'أحمر' واسم خاصية 'بطيء'؟", "db_id": "products_gen_characteristics"}
{"question": "How many products have the color description 'red' and the characteristic name 'slow'?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\"", "arabic": "احسب المنتجات التي لها وصف لون \"أبيض\" أو لها اسم خاصية \"حار\".", "db_id": "products_gen_characteristics"}
{"question": "Count the products that have the color description \"white\" or have the characteristic name \"hot\".", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\"", "arabic": "كم منتج له لونه موصوف بأنه 'أبيض' أو له خاصية تسمى 'حار'؟", "db_id": "products_gen_characteristics"}
{"question": "How many products have their color described as 'white' or have a characteristic with the name 'hot'?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\"", "arabic": "ما هو وحدة قياس رمز فئة المنتج \"الأعشاب\"؟", "db_id": "products_gen_characteristics"}
{"question": "What is the unit of measuerment of the product category code \"Herbs\"?", "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "arabic": "العودة إلى وحدة القياس لمنتجات \"الأعشاب\".", "db_id": "products_gen_characteristics"}
{"question": "Return the unit of measure for 'Herb' products.", "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "arabic": "ابحث عن وصف فئة المنتج لفئة المنتج ذات الرمز \"التوابل\".", "db_id": "products_gen_characteristics"}
{"question": "Find the product category description of the product category with code \"Spices\".", "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"", "arabic": "ما هو وصف فئة المنتج بالرمز \"التوابل\"؟", "db_id": "products_gen_characteristics"}
{"question": "What is the description of the product category with the code 'Spices'?", "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"", "arabic": "ما هو وصف فئة المنتج ووحدة القياس للفئة \"الأعشاب\"؟", "db_id": "products_gen_characteristics"}
{"question": "What is the product category description and unit of measurement of category \"Herbs\"?", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "arabic": "العودة إلى الوصف ووحدة القياس للمنتجات في فئة \"الأعشاب\".", "db_id": "products_gen_characteristics"}
{"question": "Return the description and unit of measurement for products in the 'Herbs' category.", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "arabic": "ما هي وحدة القياس للمنتج المسمى \"الكمون\"؟", "db_id": "products_gen_characteristics"}
{"question": "What is the unit of measurement of product named \"cumin\"?", "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"", "arabic": "أعط وحدة القياس للمنتج الذي يحمل اسم 'الكمون'.", "db_id": "products_gen_characteristics"}
{"question": "Give the unit of measure for the product with the name 'cumin'.", "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"", "arabic": "ابحث عن وحدة القياس ورمز فئة المنتج بالاسم \"الشبت\".", "db_id": "products_gen_characteristics"}
{"question": "Find the unit of measurement and product category code of product named \"chervil\".", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"", "arabic": "ما هي وحدة القياس ورمز الفئة لمنتج 'الشبت'؟", "db_id": "products_gen_characteristics"}
{"question": "What are the unit of measure and category code for the 'chervil' product?", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"", "arabic": "البحث عن أسماء المنتجات الملونة باللون 'أبيض' لكنها لا تحمل وحدة القياس \"حفنة\".", "db_id": "products_gen_characteristics"}
{"question": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\".", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"", "arabic": "ما هي أسماء المنتجات التي ليست باللون 'أبيض' ولا تُقاس بوحدة 'حفنة'؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"", "arabic": "ما هو وصف اللون لمعظم المنتجات؟", "db_id": "products_gen_characteristics"}
{"question": "What is the description of the color for most products?", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1", "arabic": "العودة إلى وصف اللون الأكثر شيوعًا عبر جميع المنتجات.", "db_id": "products_gen_characteristics"}
{"question": "Return the color description that is most common across all products.", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو وصف اللون الذي استخدمه أقل عدد من المنتجات؟", "db_id": "products_gen_characteristics"}
{"question": "What is the description of the color used by least products?", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1", "arabic": "أعط وصف اللون الأقل شيوعًا عبر المنتجات.", "db_id": "products_gen_characteristics"}
{"question": "Give the color description that is least common across products.", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1", "arabic": "ما هو اسم الخاصية المستخدمة من قبل أكبر عدد من المنتجات؟", "db_id": "products_gen_characteristics"}
{"question": "What is the characteristic name used by most number of the products?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1", "arabic": "العودة إلى اسم الخاصية الأكثر شيوعًا عبر جميع المنتجات.", "db_id": "products_gen_characteristics"}
{"question": "Return the name of the characteristic that is most common across all products.", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي أسماء وتفاصيل وأنواع البيانات للخصائص التي لم يتم استخدامها من قبل أي منتج؟", "db_id": "products_gen_characteristics"}
{"question": "What are the names, details and data types of the characteristics which are never used by any product?", "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id", "arabic": "أعط أسماء وتفاصيل وأنواع البيانات للخصائص التي لم يتم العثور عليها في أي منتج؟", "db_id": "products_gen_characteristics"}
{"question": "Give the names, details, and data types of characteristics that are not found in any product.", "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id", "arabic": "ما هي أسماء الخصائص المستخدمة على الأقل مرتين عبر جميع المنتجات؟", "db_id": "products_gen_characteristics"}
{"question": "What are characteristic names used at least twice across all products?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2", "arabic": "أعط أسماء الخصائص التي توجد في منتجين أو أكثر؟", "db_id": "products_gen_characteristics"}
{"question": "Give the names of characteristics that are in two or more products?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2", "arabic": "كم عدد الألوان التي لم يتم استخدامها من قبل أي منتج؟", "db_id": "products_gen_characteristics"}
{"question": "How many colors are never used by any product?", "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )", "arabic": "عدد الألوان التي لم يتم استخدامها في أي منتج؟", "db_id": "products_gen_characteristics"}
{"question": "Count the number of colors that are not used in any products.", "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )", "arabic": "كم عدد الفعاليات؟", "db_id": "products_gen_characteristics"}
{"question": "How many events are there?", "query": "SELECT count(*) FROM event", "arabic": "قائمة بأسماء الفعاليات حسب السنة من الأحدث إلى الأقدم.", "db_id": "swimming"}
{"question": "List all the event names by year from the most recent to the oldest.", "query": "SELECT name FROM event ORDER BY YEAR DESC", "arabic": "ما هو اسم الفعالية التي حدثت في أحدث سنة؟", "db_id": "swimming"}
{"question": "What is the name of the event that happened in the most recent year?", "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1", "arabic": "كم عدد الملاعب؟", "db_id": "swimming"}
{"question": "How many stadiums are there?", "query": "SELECT count(*) FROM stadium", "arabic": "ابحث عن اسم الملعب الذي يحمل السعة القصوى.", "db_id": "swimming"}
{"question": "Find the name of the stadium that has the maximum capacity.", "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1", "arabic": "ابحث عن أسماء الملاعب التي سعتها أقل من السعة المتوسطة.", "db_id": "swimming"}
{"question": "Find the names of stadiums whose capacity is smaller than the average capacity.", "query": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)", "arabic": "ابحث عن البلد الذي يمتلك أكبر عدد من الملاعب.", "db_id": "swimming"}
{"question": "Find the country that has the most stadiums.", "query": "SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1", "arabic": "أي بلد يمتلك حتى 3 ملاعب مُدرجة؟", "db_id": "swimming"}
{"question": "Which country has at most 3 stadiums listed?", "query": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3", "arabic": "أي بلد يمتلك كلا من الملاعب ذات السعة الأكبر من 60000 والملاعب ذات السعة الأقل من 50000؟", "db_id": "swimming"}
{"question": "Which country has both stadiums with capacity greater than 60000 and stadiums with capacity less than 50000?", "query": "SELECT country FROM stadium WHERE capacity  >  60000 INTERSECT SELECT country FROM stadium WHERE capacity  <  50000", "arabic": "كم عدد المدن التي تحتوي على ملعب تم افتتاحه قبل عام 2006؟", "db_id": "swimming"}
{"question": "How many cities have a stadium that was opened before the year of 2006?", "query": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006", "arabic": "كم عدد الملاعب التي يمتلكها كل بلد؟", "db_id": "swimming"}
{"question": "How many stadiums does each country have?", "query": "SELECT country ,  count(*) FROM stadium GROUP BY country", "arabic": "ما هي الدول التي لا تحتوي على ملعب تم افتتاحه بعد عام 2006؟", "db_id": "swimming"}
{"question": "Which countries do not have a stadium that was opened after 2006?", "query": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006", "arabic": "كم عدد الملاعب التي ليست في بلد \"روسيا\"؟", "db_id": "swimming"}
{"question": "How many stadiums are not in country \"Russia\"?", "query": "SELECT count(*) FROM stadium WHERE country != 'Russia'", "arabic": "ابحث عن أسماء جميع السباحين، مرتبة حسب نتائجهم في سباق 100 متر بترتيب تصاعدي.", "db_id": "swimming"}
{"question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.", "query": "SELECT name FROM swimmer ORDER BY meter_100", "arabic": "كم عدد البلدان المختلفة التي ينتمي إليها جميع السباحين؟", "db_id": "swimming"}
{"question": "How many different countries are all the swimmers from?", "query": "SELECT count(DISTINCT nationality) FROM swimmer", "arabic": "قائمة البلدان التي تحتوي على أكثر من سباح واحد.", "db_id": "swimming"}
{"question": "List countries that have more than one swimmer.", "query": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1", "arabic": "ابحث عن جميع نتائج سباق 200 متر و 300 متر للسباحين من جنسية \"أستراليا\".", "db_id": "swimming"}
{"question": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".", "query": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'", "arabic": "ابحث عن أسماء السباحين الذين حققوا نتيجة \"فوز\".", "db_id": "swimming"}
{"question": "Find the names of swimmers who has a result of \"win\".", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win'", "arabic": "ما هو اسم الملعب الذي استضاف أكبر عدد من الفعاليات؟", "db_id": "swimming"}
{"question": "What is the name of the stadium which held the most events?", "query": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن اسم وسعة الملعب الذي أقيمت فيه الفعالية بعنوان \"World Junior\".", "db_id": "swimming"}
{"question": "Find the name and capacity of the stadium where the event named \"World Junior\" happened.", "query": "SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior'", "arabic": "ابحث عن أسماء الملاعب التي لم تستضف أي فعالية على الإطلاق.", "db_id": "swimming"}
{"question": "Find the names of stadiums which have never had any event.", "query": "SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)", "arabic": "ابحث عن اسم السباح الذي يحمل أكبر عدد من الأرقام القياسية.", "db_id": "swimming"}
{"question": "Find the name of the swimmer who has the most records.", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن اسم السباح الذي يحمل ما لا يقل عن 2 رقماً قياسياً.", "db_id": "swimming"}
{"question": "Find the name of the swimmer who has at least 2 records.", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2", "arabic": "ابحث عن اسم السباح وجنسيته الذي فاز (أي حقق نتيجة \"فوز\") أكثر من مرة واحدة.", "db_id": "swimming"}
{"question": "Find the name and nationality of the swimmer who has won (i.e., has a result of \"win\") more than 1 time.", "query": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1", "arabic": "ما هي أسماء السباحين الذين ليس لديهم أي سجل؟", "db_id": "swimming"}
{"question": "Find the names of the swimmers who have no record.", "query": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)", "arabic": "ما هي أسماء السباحين الذين لديهم نتائج \"فوز\" و \"خسارة\" في السجل؟", "db_id": "swimming"}
{"question": "Find the names of the swimmers who have both \"win\" and \"loss\" results in the record.", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'", "arabic": "ما هي أسماء الملاعب التي زارها بعض السباحين الأستراليين؟", "db_id": "swimming"}
{"question": "Find the names of stadiums that some Australian swimmers have been to.", "query": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'", "arabic": "ما هي أسماء الملاعب التي زارها أكبر عدد من السباحين؟", "db_id": "swimming"}
{"question": "Find the names of stadiums that the most swimmers have been to.", "query": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن جميع التفاصيل لكل سباح.", "db_id": "swimming"}
{"question": "Find all details for each swimmer.", "query": "SELECT * FROM swimmer", "arabic": "ما هو متوسط سعة الملاعب التي تم افتتاحها في عام 2005؟", "db_id": "swimming"}
{"question": "What is the average capacity of the stadiums that were opened in year 2005?", "query": "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005", "arabic": "كم عدد السكك الحديدية؟", "db_id": "swimming"}
{"question": "How many railways are there?", "query": "SELECT count(*) FROM railway", "arabic": "قائمة ببنّائي السكك الحديدية بترتيب أبجدي تصاعدي.", "db_id": "railway"}
{"question": "List the builders of railways in ascending alphabetical order.", "query": "SELECT Builder FROM railway ORDER BY Builder ASC", "arabic": "قائمة بعدد العجلات والمواقع للسكك الحديدية.", "db_id": "railway"}
{"question": "List the wheels and locations of the railways.", "query": "SELECT Wheels ,  LOCATION FROM railway", "arabic": "ما هو أقصى مستوى للمديرين في الدول التي ليست \"أستراليا\"؟", "db_id": "railway"}
{"question": "What is the maximum level of managers in countries that are not \"Australia\"?", "query": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\"", "arabic": "ما هو العمر المتوسط لجميع المديرين؟", "db_id": "railway"}
{"question": "What is the average age for all managers?", "query": "SELECT avg(Age) FROM manager", "arabic": "ما هي أسماء المديرين بترتيب تصاعدي حسب المستوى؟", "db_id": "railway"}
{"question": "What are the names of managers in ascending order of level?", "query": "SELECT Name FROM manager ORDER BY LEVEL ASC", "arabic": "ما هي أسماء وأوقات وصول القطارات؟", "db_id": "railway"}
{"question": "What are the names and arrival times of trains?", "query": "SELECT Name ,  Arrival FROM train", "arabic": "ما هو اسم أقدم مدير؟", "db_id": "railway"}
{"question": "What is the name of the oldest manager?", "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1", "arabic": "عرض أسماء القطارات ومواقع السكك الحديدية التي تتواجد فيها.", "db_id": "railway"}
{"question": "Show the names of trains and locations of railways they are in.", "query": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID", "arabic": "ما البنّاؤون للسكك الحديدية المرتبطة بالقطارات المسماة \"Andaman Exp\"؟", "db_id": "railway"}
{"question": "Show the builder of railways associated with the trains named \"Andaman Exp\".", "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\"", "arabic": "أظهر معرّف وموقع السكك الحديدية التي ترتبط بأكثر من قطار واحد.", "db_id": "railway"}
{"question": "Show id and location of railways that are associated with more than one train.", "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1", "arabic": "أظهر معرّف وبنّاء السكك الحديدية التي ترتبط بأكبر عدد من القطارات.", "db_id": "railway"}
{"question": "Show the id and builder of the railway that are associated with the most trains.", "query": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر البنّاؤون المختلفون للسكك الحديدية، جنبًا إلى جنب مع عدد السكك الحديدية المستخدمة لكل بنّاء.", "db_id": "railway"}
{"question": "Show different builders of railways, along with the corresponding number of railways using each builder.", "query": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder", "arabic": "أظهر البنّّاؤون الأكثر شيوعًا للسكك الحديدية.", "db_id": "railway"}
{"question": "Show the most common builder of railways.", "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر المواقع المختلفة للسكك الحديدية جنبًا إلى جنب مع عدد السكك الحديدية في كل موقع.", "db_id": "railway"}
{"question": "Show different locations of railways along with the corresponding number of railways at each location.", "query": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION", "arabic": "أظهر المواقع التي تحتوي على أكثر من سكة حديدية واحدة.", "db_id": "railway"}
{"question": "Show the locations that have more than one railways.", "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1", "arabic": "قائمة برقم الكائن للسكك الحديدية التي لا تحتوي على أي قطارات.", "db_id": "railway"}
{"question": "List the object number of railways that do not have any trains.", "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)", "arabic": "أظهر الدول التي تحتوي على كل من المديرين الذين تتجاوز أعمارهم الخمسين والذين تقل أعمارهم عن 46.", "db_id": "railway"}
{"question": "Show the countries that have both managers of age above 50 and managers of age below 46.", "query": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46", "arabic": "أظهر الدول المميزة للمديرين.", "db_id": "railway"}
{"question": "Show the distinct countries of managers.", "query": "SELECT DISTINCT Country FROM manager", "arabic": "أظهر سنوات الخبرة للمديرين بترتيب تنازلي حسب مستواهم.", "db_id": "railway"}
{"question": "Show the working years of managers in descending order of their level.", "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC", "arabic": "أظهر الدول التي تحتوي على مديرين تتجاوز أعمارهم الخمسين أو تقل أعمارهم عن 46.", "db_id": "railway"}
{"question": "Show the countries that have managers of age above 50 or below 46.", "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46", "arabic": "كم عدد العناوين في الولايات المتحدة الأمريكية؟", "db_id": "railway"}
{"question": "How many addresses are there in country USA?", "query": "SELECT count(*) FROM addresses WHERE country  =  'USA'", "arabic": "أظهر جميع المدن المميزة في سجل العناوين.", "db_id": "customers_and_products_contacts"}
{"question": "Show all distinct cities in the address record.", "query": "SELECT DISTINCT city FROM addresses", "arabic": "أظهر كل ولاية وعدد العناوين في كل ولاية.", "db_id": "customers_and_products_contacts"}
{"question": "Show each state and the number of addresses in each state.", "query": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county", "arabic": "أظهر أسماء وهواتف العملاء الذين ليس لديهم معلومات عن العنوان.", "db_id": "customers_and_products_contacts"}
{"question": "Show names and phones of customers who do not have address information.", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)", "arabic": "أظهر اسم العميل الذي لديه أكبر عدد من الطلبات.", "db_id": "customers_and_products_contacts"}
{"question": "Show the name of the customer who has the most orders.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر أكواد أنواع المنتجات التي تحتوي على ما لا يقل عن منتجين.", "db_id": "customers_and_products_contacts"}
{"question": "Show the product type codes which have at least two products.", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2", "arabic": "أظهر أسماء العملاء الذين لديهم طلب في حالة \"منجز\" وطلب في حالة \"جزئي\".", "db_id": "customers_and_products_contacts"}
{"question": "Show the names of customers who have both an order in completed status and an order in part status.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Part'", "arabic": "أظهر الاسم، والهاتف، ورمز طريقة الدفع لجميع العملاء بترتيب تنازلي حسب رقم العميل.", "db_id": "customers_and_products_contacts"}
{"question": "Show the name, phone, and payment method code for all customers in descending order of customer number.", "query": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC", "arabic": "أظهر اسم المنتج وإجمالي كمية الطلبات لكل منتج.", "db_id": "customers_and_products_contacts"}
{"question": "Show the product name and total order quantity for each product.", "query": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id", "arabic": "أظهر السعر الأدنى، والأقصى، والمتوسط لجميع المنتجات.", "db_id": "customers_and_products_contacts"}
{"question": "Show the minimum, maximum, average price for all products.", "query": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products", "arabic": "كم عدد المنتجات التي تمتلك سعرًا أعلى من المتوسط؟", "db_id": "customers_and_products_contacts"}
{"question": "How many products have a price higher than the average?", "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)", "arabic": "أظهر اسم العميل، ومدينة عنوان العميل، وتاريخ البداية، وتاريخ النهاية لكل تاريخ عنوان العميل.", "db_id": "customers_and_products_contacts"}
{"question": "Show the customer name, customer address city, date from, and date to for each customer address history.", "query": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id", "arabic": "أظهر أسماء العملاء الذين يستخدمون طريقة الدفع ببطاقة الائتمان ولديهم أكثر من طلبين.", "db_id": "customers_and_products_contacts"}
{"question": "Show the names of customers who use Credit Card payment method and have more than 2 orders.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2", "arabic": "ما هي الاسم والهاتف للعميل الذي يمتلك أكبر كمية منتجات مطلوبة؟", "db_id": "customers_and_products_contacts"}
{"question": "What are the name and phone of the customer with the most ordered product quantity?", "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1", "arabic": "أظهر نوع المنتج والاسم للمنتجات التي يكون سعرها أعلى من 1000 أو أقل من 500.", "db_id": "customers_and_products_contacts"}
{"question": "Show the product type and name for the products with price higher than 1000 or lower than 500.", "query": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500", "arabic": "اعثر على اسم السكن الجامعي فقط للإناث (جنس \"F\").", "db_id": "customers_and_products_contacts"}
{"question": "Find the name of dorms only for female (F gender).", "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'", "arabic": "ما هي أسماء السكن الجامعي للإناث فقط؟", "db_id": "dorm_1"}
{"question": "What are the names of the all-female dorms?", "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'", "arabic": "اعثر على اسم السكن الجامعي الذي يمكن أن يستوعب أكثر من 300 طالب.", "db_id": "dorm_1"}
{"question": "Find the name of dorms that can accommodate more than 300 students.", "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300", "arabic": "ما هي أسماء جميع السكنات التي يمكن استيعاب أكثر من 300 طالب؟", "db_id": "dorm_1"}
{"question": "What are the names of all the dorms that can accomdate more than 300 students?", "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300", "arabic": "كم عدد الطالبات الإناث (جنسهن \"F\") اللواتي تقل أعمارهن عن 25؟", "db_id": "dorm_1"}
{"question": "How many female students (sex is F) whose age is below 25?", "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25", "arabic": "كم عدد طالبات الفتيات اللواتي دون سن 25؟", "db_id": "dorm_1"}
{"question": "How many girl students who are younger than 25?", "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25", "arabic": "اعثر على الاسم الأول للطلاب الذين تزيد أعمارهم عن 20.", "db_id": "dorm_1"}
{"question": "Find the first name of students who is older than 20.", "query": "SELECT fname FROM student WHERE age  >  20", "arabic": "ما هي الأسماء الأولى لجميع الطلاب الذين تزيد أعمارهم عن 20؟", "db_id": "dorm_1"}
{"question": "What are the first names of all students who are older than 20?", "query": "SELECT fname FROM student WHERE age  >  20", "arabic": "اعثر على الاسم الأول للطلاب الذين يعيشون في مدينة PHL وتتراوح أعمارهم بين 20 و 25 سنة.", "db_id": "dorm_1"}
{"question": "Find the first name of students living in city PHL whose age is between 20 and 25.", "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25", "arabic": "ما هو الاسم الأول للطلاب الذين تتراوح أعمارهم بين 20 و 25 عامًا ويعيشون في مدينة PHL؟", "db_id": "dorm_1"}
{"question": "What is the first name of the students who are in age 20 to 25 and living in PHL city?", "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25", "arabic": "كم عدد السكنات؟", "db_id": "dorm_1"}
{"question": "How many dorms are there?", "query": "SELECT count(*) FROM dorm", "arabic": "كم عدد السكنات في قاعدة البيانات؟", "db_id": "dorm_1"}
{"question": "How many dorms are in the database?", "query": "SELECT count(*) FROM dorm", "arabic": "اعثر على عدد الخدمات المميزة.", "db_id": "dorm_1"}
{"question": "Find the number of distinct amenities.", "query": "SELECT count(*) FROM dorm_amenity", "arabic": "كم عدد خدمات السكن المختلفة؟", "db_id": "dorm_1"}
{"question": "How many diffrent dorm amenities are there?", "query": "SELECT count(*) FROM dorm_amenity", "arabic": "اعثر على السعة الإجمالية لجميع السكنات.", "db_id": "dorm_1"}
{"question": "Find the total capacity of all dorms.", "query": "SELECT sum(student_capacity) FROM dorm", "arabic": "ما هي السعة الطلابية الإجمالية لجميع السكنات؟", "db_id": "dorm_1"}
{"question": "What is the total student capacity of all dorms?", "query": "SELECT sum(student_capacity) FROM dorm", "arabic": "كم عدد الطلاب؟", "db_id": "dorm_1"}
{"question": "How many students are there?", "query": "SELECT count(*) FROM student", "arabic": "كم عدد الطلاب الموجودين؟", "db_id": "dorm_1"}
{"question": "How many students exist?", "query": "SELECT count(*) FROM student", "arabic": "ما هو متوسط ​​عمر جميع الطلاب الذين يعيشون في كل مدينة؟", "db_id": "dorm_1"}
{"question": "Find the average age of all students living in the each city.", "query": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code", "arabic": "ما هو متوسط ​​العمر لكل مدينة وما هي تلك المدن؟", "db_id": "dorm_1"}
{"question": "What is the average age for each city and what are those cities?", "query": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code", "arabic": "اعثر على السعة المتوسطة والإجمالية للسكن للطلاب ذوي الجنس X.", "db_id": "dorm_1"}
{"question": "Find the average and total capacity of dorms for the students with gender X.", "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'", "arabic": "ما هي السعة المتوسطة والإجمالية لجميع السكنات التي تكون من الجنس X؟", "db_id": "dorm_1"}
{"question": "What is the average and total capacity for all dorms who are of gender X?", "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'", "arabic": "اعثر على عدد السكنات التي تحتوي على بعض وسائل الراحة.", "db_id": "dorm_1"}
{"question": "Find the number of dorms that have some amenity.", "query": "SELECT count(DISTINCT dormid) FROM has_amenity", "arabic": "كم عدد السكنات التي تحتوي على وسائل راحة؟", "db_id": "dorm_1"}
{"question": "How many dorms have amenities?", "query": "SELECT count(DISTINCT dormid) FROM has_amenity", "arabic": "اعثر على اسم السكنات التي لا تحتوي على أي وسائل راحة.", "db_id": "dorm_1"}
{"question": "Find the name of dorms that do not have any amenity", "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)", "arabic": "ما هي أسماء جميع السكنات التي لا تحتوي على أي وسائل راحة؟", "db_id": "dorm_1"}
{"question": "What are the names of all the dorms that don't have any amenities?", "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)", "arabic": "اعثر على عدد الأنواع المختلفة للجنس للسكنات.", "db_id": "dorm_1"}
{"question": "Find the number of distinct gender for dorms.", "query": "SELECT count(DISTINCT gender) FROM dorm", "arabic": "كم عدد الأجناس المختلفة في السكنات؟", "db_id": "dorm_1"}
{"question": "How many different genders are there in the dorms?", "query": "SELECT count(DISTINCT gender) FROM dorm", "arabic": "اعثر على السعة ونوع الجنس للسكن الذي يحتوي اسمه على متغير 'Donor'.", "db_id": "dorm_1"}
{"question": "Find the capacity and gender type of the dorm whose name has substring ‘Donor’.", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'", "arabic": "ما هي سعة الطلاب ونوع الجنس للسكن الذي يحتوي اسمه على عبارة Donor؟", "db_id": "dorm_1"}
{"question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'", "arabic": "اعثر على اسم ونوع الجنس للسكنات التي تكون سعتها أكبر من 300 أو أقل من 100.", "db_id": "dorm_1"}
{"question": "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100.", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100", "arabic": "ما هي أسماء وأنواع السكنات التي تكون سعتها أكبر من 300 أو أقل من 100؟", "db_id": "dorm_1"}
{"question": "What are the names and types of the dorms that have a capacity greater than 300 or less than 100?", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100", "arabic": "اعثر على أعداد التخصصات المختلفة والمدن.", "db_id": "dorm_1"}
{"question": "Find the numbers of different majors and cities.", "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student", "arabic": "كم عدد التخصصات المختلفة وكم عدد رموز المدينة المختلفة لكل طالب؟", "db_id": "dorm_1"}
{"question": "How many different majors are there and how many different city codes are there for each student?", "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student", "arabic": "اعثر على اسماء السكنات التي تحتوي على كل من قاعة التلفزيون وغرفة الدراسة كوسائل راحة.", "db_id": "dorm_1"}
{"question": "Find the name of dorms which have both TV Lounge and Study Room as amenities.", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'", "arabic": "ما هو اسم السكن الذي يحتوي على كل من صالة التلفزيون وغرفة الدراسة كوسائل راحة؟", "db_id": "dorm_1"}
{"question": "What is the name of the dorm with both a TV Lounge and Study Room listed as amenities?", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'", "arabic": "اعثر على أسماء السكنات التي تحتوي على صالة تلفزيون ولكن ليست لديها غرفة دراسة كوسيلة راحة.", "db_id": "dorm_1"}
{"question": "Find the name of dorms which have TV Lounge but no Study Room as amenity.", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'", "arabic": "ما هو اسم كل سكن يحتوي على صالة تلفزيون ولكن ليس لديها غرف دراسة؟", "db_id": "dorm_1"}
{"question": "What is the name of each dorm that has a TV Lounge but no study rooms?", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'", "arabic": "اعثر على الاسم الأخير للطلاب الذين هم إما إناث (جنسهم أنثى) ويعيشون في مدينة BAL أو ذكور (جنسهم ذكر) وعمرهم دون 20 سنة.", "db_id": "dorm_1"}
{"question": "Find the last name of students who is either female (sex is F) and living in the city of code BAL or male (sex is M) and in age of below 20.", "query": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20", "arabic": "ما هو الاسم الأخير لكل طالب إما أنثى أو يعيش في مدينة لها رمز BAL أو ذكر وتحت سن 20؟", "db_id": "dorm_1"}
{"question": "What is the last name of every student who is either female or living in a city with the code BAL or male and under 20?", "query": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20", "arabic": "اعثر على اسم السكن الذي لديه أكبر طاقة.", "db_id": "dorm_1"}
{"question": "Find the name of the dorm with the largest capacity.", "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1", "arabic": "ما هي أسماء السكنات التي لديها أكبر طاقة؟", "db_id": "dorm_1"}
{"question": "What are the names of the dorm with the largest capacity?", "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1", "arabic": "قم بتصنيف كل وسائل الراحة المختلفة بترتيب أبجدي.", "db_id": "dorm_1"}
{"question": "List in alphabetic order all different amenities.", "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name", "arabic": "ما هي أسماء وسائل الراحة المختلفة في السكنات مرتبة بترتيب أبجدي؟", "db_id": "dorm_1"}
{"question": "What are the different dorm amenity names in alphabetical order?", "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name", "arabic": "اعثر على رمز المدينة حيث يعيش معظم الطلاب.", "db_id": "dorm_1"}
{"question": "Find the code of city where most of students are living in.", "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو رمز المدينة الذي يعيش فيه معظم الطلاب؟", "db_id": "dorm_1"}
{"question": "What is the code of the city with the most students?", "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "arabic": "اعثر على الاسم الأول والأخير للطلاب الذين تقل أعمارهم عن العمر المتوسط.", "db_id": "dorm_1"}
{"question": "Find the first and last name of students whose age is younger than the average age.", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "arabic": "ما هو الاسم الأول والأخير لجميع الطلاب الذين تقل أعمارهم عن العمر المتوسط؟", "db_id": "dorm_1"}
{"question": "What is the first and last name of all students who are younger than average?", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "arabic": "ما هي الأسماء الأولى والأخيرة للطلاب الذين لا يعيشون في المدينة ذات الرمز HKG، وقم بترتيب النتائج حسب أعمارهم؟", "db_id": "dorm_1"}
{"question": "List the first and last name of students who are not living in the city with code HKG, and sorted the results by their ages.", "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age", "arabic": "ما هي الأسماء الأولى والأخيرة لجميع الطلاب الذين لا يعيشون في مدينة HKG وقم بترتيب النتائج حسب العمر؟", "db_id": "dorm_1"}
{"question": "What are the first and last names of all students who are not living in the city HKG and order the results by age?", "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age", "arabic": "ما هي أسماء جميع الخدمات التي يحتوي عليها قاعة المتبرع المجهول، وقم بترتيب النتائج بترتيب أبجدي؟", "db_id": "dorm_1"}
{"question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name", "arabic": "ما هي الخدمات التي يحتوي عليها قاعة المتبرع المجهول مرتبة ترتيباً أبجدياً؟", "db_id": "dorm_1"}
{"question": "What are the amenities in alphabetical order that Anonymous Donor Hall has?", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name", "arabic": "ابحث عن عدد المساكن والسعة الإجمالية لكل جنس؟", "db_id": "dorm_1"}
{"question": "Find the number of dorms and total capacity for each gender.", "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender", "arabic": "كم عدد المساكن وما هي السعة الإجمالية لكل جنس؟", "db_id": "dorm_1"}
{"question": "How many dorms are there and what is the total capacity for each gender?", "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender", "arabic": "ابحث عن العمر المتوسط وأكبر سن للطلاب بجنسيات مختلفة؟", "db_id": "dorm_1"}
{"question": "Find the average and oldest age for students with different sex.", "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex", "arabic": "ما هو العمر المتوسط وأكبر سن لكل جنس من الطلاب؟", "db_id": "dorm_1"}
{"question": "What is the average and oldest age for each gender of student?", "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex", "arabic": "ابحث عن عدد الطلاب في كل تخصص؟", "db_id": "dorm_1"}
{"question": "Find the number of students in each major.", "query": "SELECT count(*) ,  major FROM student GROUP BY major", "arabic": "كم عدد الطلاب في كل تخصص؟", "db_id": "dorm_1"}
{"question": "How many students are there in each major?", "query": "SELECT count(*) ,  major FROM student GROUP BY major", "arabic": "ابحث عن عدد وعمر متوسط الطلاب الذين يعيشون في كل مدينة؟", "db_id": "dorm_1"}
{"question": "Find the number and average age of students living in each city.", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code", "arabic": "كم عدد الطلاب الذين يعيشون في كل مدينة وما هي أعمارهم المتوسطة؟", "db_id": "dorm_1"}
{"question": "How many students live in each city and what are their average ages?", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code", "arabic": "ابحث عن العمر المتوسط وعدد الطلاب ذكور (بجنس M) من كل مدينة؟", "db_id": "dorm_1"}
{"question": "Find the average age and number of male students (with sex M) from each city.", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code", "arabic": "ما هو العمر المتوسط وكم عدد الطلاب الذكور في كل مدينة؟", "db_id": "dorm_1"}
{"question": "What is the average age and how many male students are there in each city?", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code", "arabic": "ابحث عن عدد الطلاب للمدن التي تحتوي على أكثر من طالب واحد.", "db_id": "dorm_1"}
{"question": "Find the number of students for the cities where have more than one student.", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1", "arabic": "كم عدد الطلاب من كل مدينة، وما هي المدن التي تحتوي على أكثر من مدينة واحدة؟", "db_id": "dorm_1"}
{"question": "How many students are from each city, and which cities have more than one cities?", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1", "arabic": "ابحث عن الاسم الأول والأخير للطلاب الذين ليسوا في أكبر تخصص؟", "db_id": "dorm_1"}
{"question": "Find the first and last name of students who are not in the largest major.", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هو الاسم الأول والأخير للطلاب الذين ليسوا في أكبر تخصص؟", "db_id": "dorm_1"}
{"question": "What is the first and last name of the students who are not in the largest major?", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "arabic": "ابحث عن عدد الطلاب الذين تتجاوز أعمارهم متوسط الأعمار لكل جنس؟", "db_id": "dorm_1"}
{"question": "Find the number of students whose age is older than the average age for each gender.", "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex", "arabic": "كم عدد الطلاب الذين يتجاوزون متوسط العمر لكل جنس؟", "db_id": "dorm_1"}
{"question": "How many students are older than average for each gender?", "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex", "arabic": "ابحث عن العمر المتوسط للطلاب الذين يعيشون في كل مسكن واسم المسكن؟", "db_id": "dorm_1"}
{"question": "Find the average age of students living in each dorm and the name of dorm.", "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name", "arabic": "ما هو العمر المتوسط لكل مسكن وما هي أسماء كل مسكن؟", "db_id": "dorm_1"}
{"question": "What is the average age for each dorm and what are the names of each dorm?", "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name", "arabic": "ابحث عن عدد الخدمات لكل المساكن التي يمكن أن تستوعب أكثر من 100 طالب؟", "db_id": "dorm_1"}
{"question": "Find the number of amenities for each of the dorms that can accommodate more than 100 students.", "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid", "arabic": "لكل مسكن، كم عدد الخدمات التي يحتوي عليها؟", "db_id": "dorm_1"}
{"question": "For each dorm, how many amenities does it have?", "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid", "arabic": "ابحث عن عدد الطلاب الذين تتجاوز أعمارهم 20 عامًا في كل مسكن؟", "db_id": "dorm_1"}
{"question": "Find the number of students who is older than 20 in each dorm.", "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name", "arabic": "كم عدد الطلاب الذين تتجاوز أعمارهم 20 عامًا في كل مسكن؟", "db_id": "dorm_1"}
{"question": "How many students are older than 20 in each dorm?", "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name", "arabic": "ابحث عن الاسم الأول للطلاب الذين يعيشون في مسكن Smith Hall؟", "db_id": "dorm_1"}
{"question": "Find the first name of students who are living in the Smith Hall.", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'", "arabic": "ما هي الأسماء الأولى لجميع الطلاب في مسكن Smith Hall؟", "db_id": "dorm_1"}
{"question": "What are the first names of all students in Smith Hall?", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'", "arabic": "ابحث عن العمر المتوسط للطلاب الذين يعيشون في المسكن ذو السعة الأكبر؟", "db_id": "dorm_1"}
{"question": "Find the average age of students who are living in the dorm with the largest capacity.", "query": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)", "arabic": "ما هو العمر المتوسط للطلاب الذين يعيشون في المسكن ذو السعة الأكبر؟", "db_id": "dorm_1"}
{"question": "What is the average age of students who are living in the dorm with the largest capacity?", "query": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)", "arabic": "ما هو العدد الإجمالي للطلاب الذين يعيشون في مسكن الذكور (بجنس M)؟", "db_id": "dorm_1"}
{"question": "Find the total number of students living in the male dorm (with gender M).", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'", "arabic": "كم هو إجمالي عدد الطلاب الذين يعيشون في مسكن الذكور؟", "db_id": "dorm_1"}
{"question": "What are the total number of students who are living in a male dorm?", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'", "arabic": "ابحث عن عدد الطالبات (بجنس F) اللاتي يعيشن في مسكن Smith Hall؟", "db_id": "dorm_1"}
{"question": "Find the number of female students (with F sex) living in Smith Hall", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'", "arabic": "كم عدد الطالبات اللاتي يعيشن في مسكن Smith Hall؟", "db_id": "dorm_1"}
{"question": "How many female students live in Smith Hall?", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'", "arabic": "ابحث عن أسماء الخدمات التي يحتوي عليها مسكن Smith Hall؟", "db_id": "dorm_1"}
{"question": "Find the name of amenities Smith Hall dorm have.", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'", "arabic": "ما هي أسماء الخدمات التي يحتوي عليها مسكن Smith Hall؟", "db_id": "dorm_1"}
{"question": "What are the names of the amenities that Smith Hall has?", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'", "arabic": "ابحث عن أسماء الخدمات التي يحتوي عليها مسكن Smith Hall مرتبة حسب أسماء الخدمات؟", "db_id": "dorm_1"}
{"question": "Find the name of amenities Smith Hall dorm have. ordered the results by amenity names.", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name", "arabic": "ما هي الخدمات التي يحتوي عليها مسكن Smith Hall مرتبة ترتيباً أبجدياً؟", "db_id": "dorm_1"}
{"question": "What amenities does Smith Hall have in alphabetical order?", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name", "arabic": "ابحث عن اسم الخدمة الأكثر شيوعاً في جميع المساكن؟", "db_id": "dorm_1"}
{"question": "Find the name of amenity that is most common in all dorms.", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي الخدمة الأكثر شيوعاً في المساكن؟", "db_id": "dorm_1"}
{"question": "What is the most common amenity in the dorms?", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن الاسم الأول للطلاب الذين يعيشون في المسكن الذي يحتوي على أكبر عدد من الخدمات؟", "db_id": "dorm_1"}
{"question": "Find the first name of students who are living in the dorm that has most number of amenities.", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي الأسماء الأولى لجميع الطلاب الذين يعيشون في المسكن الذي يحتوي على أكبر عدد من الخدمات؟", "db_id": "dorm_1"}
{"question": "What are the first names of all students who live in the dorm with the most amenities?", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "arabic": "ابحث عن اسم وسعة المسكن الذي يحتوي على أقل عدد من الخدمات؟", "db_id": "dorm_1"}
{"question": "Find the name and capacity of the dorm with least number of amenities.", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1", "arabic": "ما هو اسم وسعة المسكن الذي يحتوي على أقل عدد من الخدمات؟", "db_id": "dorm_1"}
{"question": "What is the name and capacity of the dorm with the fewest amount of amenities?", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1", "arabic": "ابحث عن أسماء المساكن التي لا تحتوي على خدمة TV Lounge؟", "db_id": "dorm_1"}
{"question": "Find the name of dorms that do not have amenity TV Lounge.", "query": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'", "arabic": "ما هي أسماء المساكن التي لا تحتوي على صالة تلفزيون؟", "db_id": "dorm_1"}
{"question": "What are the names of the dorm that does not have a TV Lounge?", "query": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'", "arabic": "ابحث عن الاسم الأول والأخير للطلاب الذين يعيشون في المساكن التي تحتوي على خدمة صالة تلفزيون؟", "db_id": "dorm_1"}
{"question": "Find the first and last name of students who are living in the dorms that have amenity TV Lounge.", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "arabic": "ما هي الأسماء الأولى والأخيرة لجميع الطلاب الذين يعيشون في مساكن تحتوي على صالة تلفزيون؟", "db_id": "dorm_1"}
{"question": "What are the first and last names of all students who are living in a dorm with a TV Lounge?", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "arabic": "ابحث عن الاسم الأول والعمر للطلاب الذين يعيشون في المساكن التي لا تحتوي على خدمة صالة تلفزيون؟", "db_id": "dorm_1"}
{"question": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge.", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "arabic": "ما هو الاسم الأول والعمر لكل طالب يعيش في مسكن يحتوي على صالة تلفزيون؟", "db_id": "dorm_1"}
{"question": "What is the first name and age of every student who lives in a dorm with a TV Lounge?", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "arabic": "ابحث عن أسماء الخدمات في المسكن الذي يعيش فيه الطالب الذي يحمل الاسم الأخير Smith؟", "db_id": "dorm_1"}
{"question": "Find the name of amenities of the dorm where the student with last name Smith is living in.", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'", "arabic": "ما هي الخدمات في المسكن الذي يعيش فيه الطالب الذي يحمل الاسم الأخير Smith؟", "db_id": "dorm_1"}
{"question": "What are the amenities in the dorm that a student who has the last name of Smith lives in?", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'", "arabic": "كم عدد الزبائن؟", "db_id": "dorm_1"}
{"question": "How many customers are there?", "query": "SELECT count(*) FROM customers", "arabic": "احسب عدد الزبائن؟", "db_id": "customer_complaints"}
{"question": "Count the number of customers.", "query": "SELECT count(*) FROM customers", "arabic": "ابحث عن عناوين البريد الإلكتروني وأرقام الهواتف لجميع الزبائن، مرتبة حسب عنوان البريد الإلكتروني ورقم الهاتف؟", "db_id": "customer_complaints"}
{"question": "Find the emails and phone numbers of all the customers, ordered by email address and phone number.", "query": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number", "arabic": "ما هي عناوين البريد الإلكتروني وأرقام الهواتف لجميع الزبائن، مرتبة حسب عنوان البريد الإلكتروني ورقم الهاتف؟", "db_id": "customer_complaints"}
{"question": "What are the emails and phone numbers of all customers, sorted by email address and phone number?", "query": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number", "arabic": "أي مدينة لديها أقل عدد من الزبائن الذين يكون رمز نوعهم \"تصنيف الائتمان الجيد\"؟", "db_id": "customer_complaints"}
{"question": "Which city has the least number of customers whose type code is \"Good Credit Rating\"?", "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1", "arabic": "أعرض المدينة التي يكون لديها رمز نوع الزبون \"تصنيف الائتمان الجيد\" الذي كان عدد الزبائن فيها الأقل.", "db_id": "customer_complaints"}
{"question": "Return the city with the customer type code \"Good Credit Rating\" that had the fewest customers.", "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1", "arabic": "اقرأ قائمة اسم جميع المنتجات مع عدد الشكاوى التي تلقوها.", "db_id": "customer_complaints"}
{"question": "List the name of all products along with the number of complaints that they have received.", "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name", "arabic": "ما هي أسماء المنتجات المختلفة، وكم عدد الشكاوى التي تلقتها كل منها؟", "db_id": "customer_complaints"}
{"question": "What are all the different product names, and how many complains has each received?", "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name", "arabic": "ما هي عناوين البريد الإلكتروني للزبائن الذين قدموا شكاوى بشأن المنتج الذي حصل على أكبر عدد من الشكاوى؟", "db_id": "customer_complaints"}
{"question": "Find the emails of customers who has filed a complaints of the product with the most complaints.", "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1", "arabic": "ما هي عناوين البريد الإلكتروني للزبائن الذين قدموا شكاوى حول المنتج الذي حصل على أكبر عدد من الشكاوى؟", "db_id": "customer_complaints"}
{"question": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?", "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1", "arabic": "أي المنتجات تمت الشكاوى عنها من قبل الزبون الذي قدم أقل عدد من الشكاوى؟", "db_id": "customer_complaints"}
{"question": "Which products has been complained by the customer who has filed least amount of complaints?", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1", "arabic": "أعد أسماء المنتجات التي تم التقدم بشكاوى حولها من قبل الزبون الذي قدم أقل عدد من الشكاوى.", "db_id": "customer_complaints"}
{"question": "Return the names of products that have had complaints filed by the customer who has filed the fewest complaints.", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1", "arabic": "ما هو رقم الهاتف للزبون الذي قدم أحدث شكوى؟", "db_id": "customer_complaints"}
{"question": "What is the phone number of the customer who has filed the most recent complaint?", "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1", "arabic": "أعد رقم الهاتف للزبون الذي قدم الشكوى التي تمت مؤخرًا بشكل أكبر.", "db_id": "customer_complaints"}
{"question": "Return the phone number of the customer who filed the complaint that was raised most recently.", "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1", "arabic": "ابحث عن عناوين البريد الإلكتروني وأرقام الهواتف للزبائن الذين لم يقدموا شكوى من قبل.", "db_id": "customer_complaints"}
{"question": "Find the email and phone number of the customers who have never filed a complaint before.", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "arabic": "ما هي عناوين البريد الإلكتروني وأرقام الهواتف للعملاء الذين لم يقدموا شكوى من قبل؟", "db_id": "customer_complaints"}
{"question": "What are the emails and phone numbers of custoemrs who have never filed a complaint?", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "arabic": "ابحث عن رقم هاتف جميع الزبائن والموظفين.", "db_id": "customer_complaints"}
{"question": "Find the phone number of all the customers and staff.", "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff", "arabic": "ما هي أرقام الهواتف لجميع الزبائن وأعضاء الطاقم؟", "db_id": "customer_complaints"}
{"question": "What are the phone numbers of all customers and all staff members?", "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff", "arabic": "ما هي الوصف للمنتج المسمى \"شوكولاتة\"؟", "db_id": "customer_complaints"}
{"question": "What is the description of the product named \"Chocolate\"?", "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"", "arabic": "أعد وصف المنتج المسمى \"شوكولاتة\".", "db_id": "customer_complaints"}
{"question": "Return the description of the product called \"Chocolate\".", "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"", "arabic": "ابحث عن اسم وفئة المنتج الأغلى سعرًا.", "db_id": "customer_complaints"}
{"question": "Find the name and category of the most expensive product.", "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1", "arabic": "ما هو اسم ورمز الفئة للمنتج ذو أعلى سعر؟", "db_id": "customer_complaints"}
{"question": "What is the name and category code of the product with the highest price?", "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1", "arabic": "ابحث عن أسعار المنتجات التي لم تتلق شكوى واحدة عنها.", "db_id": "customer_complaints"}
{"question": "Find the prices of products which has never received a single complaint.", "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)", "arabic": "ما هي أسعار المنتجات التي لم تتلق شكوى عنها؟", "db_id": "customer_complaints"}
{"question": "What are the prices of products that have never gotten a complaint?", "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)", "arabic": "ما هو المتوسط ​​لأسعار المنتجات لكل فئة؟", "db_id": "customer_complaints"}
{"question": "What is the average price of the products for each category?", "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code", "arabic": "أعد المتوسط ​​لأسعار المنتجات التي لها كل رمز فئة.", "db_id": "customer_complaints"}
{"question": "Return the average price of products that have each category code.", "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code", "arabic": "ابحث عن اسم العائلة لعضو الطاقم الذي قام بمعالجة الشكوى بشأن أرخص منتج.", "db_id": "customer_complaints"}
{"question": "Find the last name of the staff member who processed the complaint of the cheapest product.", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1", "arabic": "ما هو اسم العائلة لعضو الطاقم المسؤول عن الشكوى بشأن المنتج ذو السعر الأقل؟", "db_id": "customer_complaints"}
{"question": "What is the last name of the staff member in charge of the complaint on the product with the lowest price?", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1", "arabic": "أي حالة شكوى لديها أكثر من 3 سجلات في الملف؟", "db_id": "customer_complaints"}
{"question": "Which complaint status has more than 3 records on file?", "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3", "arabic": "أعد رموز حالة الشكوى التي لديها أكثر من 3 شكاوى مقابل كل منها؟", "db_id": "customer_complaints"}
{"question": "Return complaint status codes have more than 3 corresponding complaints?", "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3", "arabic": "ابحث عن اسم العائلة للموظف الذي يحتوي عنوان بريده الإلكتروني على \"wrau\".", "db_id": "customer_complaints"}
{"question": "Find the last name of the staff whose email address contains \"wrau\".", "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"", "arabic": "ما هي أسماء العائلة للموظفين الذين لديهم عناوين بريد إلكتروني تحتوي على الجزء الفرعي \"wrau\"؟", "db_id": "customer_complaints"}
{"question": "What are the last names of staff with email addressed containing the substring \"wrau\"?", "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"", "arabic": "كم عدد الزبائن في نوع الزبون الذي يحتوي على أكبر عدد من الزبائن؟", "db_id": "customer_complaints"}
{"question": "How many customers are there in the customer type with the most customers?", "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "احسب عدد الزبائن الذين لديهم نوع زبون الأكثر شيوعا.", "db_id": "customer_complaints"}
{"question": "Count the number of customers that have the customer type that is most common.", "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم العائلة للموظف الذي قام بمعالجة أول شكوى على الإطلاق؟", "db_id": "customer_complaints"}
{"question": "What is the last name of the staff who has handled the first ever complaint?", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1", "arabic": "أعد اسم العائلة لعضو الطاقم الذي قام بمعالجة الشكوى التي تم رفعها في أقرب تاريخ.", "db_id": "customer_complaints"}
{"question": "Return the last name of the staff member who handled the complaint with the earliest date raised.", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1", "arabic": "كم عدد رموز أنواع الشكاوى المميزة في قاعدة البيانات؟", "db_id": "customer_complaints"}
{"question": "How many distinct complaint type codes are there in the database?", "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints", "arabic": "احسب عدد رموز أنواع الشكاوى المختلفة.", "db_id": "customer_complaints"}
{"question": "Count the number of different complaint type codes.", "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints", "arabic": "ما هي عناوين السطر 1 و 2 للعميل بالبريد الإلكتروني \"vbogisich@example.org\"؟", "db_id": "customer_complaints"}
{"question": "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"", "arabic": "ما هي الأسطر 1 و 2 من عنوان العميل بالبريد الإلكتروني \"vbogisich@example.org\"؟", "db_id": "customer_complaints"}
{"question": "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"", "arabic": "ما هو عدد الشكاوى بنوع فشل المنتج لكل حالة شكوى؟", "db_id": "customer_complaints"}
{"question": "Find the number of complaints with Product Failure type for each complaint status.", "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code", "arabic": "من الشكاوى برمز نوع \"فشل المنتج\"، كم كان لكل رمز حالة مختلف؟", "db_id": "customer_complaints"}
{"question": "Of complaints with the type code \"Product Failure\", how many had each different status code?", "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code", "arabic": "ما هي الأسماء الأولى لأفضل 5 موظفين قاموا بمعالجة أكبر عدد من الشكاوى؟", "db_id": "customer_complaints"}
{"question": "What is first names of the top 5 staff who have handled the greatest number of complaints?", "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5", "arabic": "أعد أسماء الأولى لـ 5 أعضاء في الفريق قاموا بمعالجة أكبر عدد من الشكاوى.", "db_id": "customer_complaints"}
{"question": "Return the first names of the 5 staff members who have handled the most complaints.", "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5", "arabic": "أي ولاية لديها أكبر عدد من الزبائن؟", "db_id": "customer_complaints"}
{"question": "Which state has the most customers?", "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1", "arabic": "أعط الولاية التي تحتوي على أكبر عدد من الزبائن.", "db_id": "customer_complaints"}
{"question": "Give the state that has the most customers.", "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1", "arabic": "كم عدد التقديمات؟", "db_id": "customer_complaints"}
{"question": "How many submissions are there?", "query": "SELECT count(*) FROM submission", "arabic": "حساب عدد التقديمات.", "db_id": "workshop_paper"}
{"question": "Count the number of submissions.", "query": "SELECT count(*) FROM submission", "arabic": "قائمة بأسماء المؤلفين للتقديمات بترتيب تصاعدي حسب النقاط.", "db_id": "workshop_paper"}
{"question": "List the authors of submissions in ascending order of scores.", "query": "SELECT Author FROM submission ORDER BY Scores ASC", "arabic": "ابحث عن المؤلف لكل تقديم وقم بتصنيفها تصاعديًا حسب درجة التقديم.", "db_id": "workshop_paper"}
{"question": "Find the author for each submission and list them in ascending order of submission score.", "query": "SELECT Author FROM submission ORDER BY Scores ASC", "arabic": "ما هي أسماء المؤلفين للتقديمات وكلياتهم؟", "db_id": "workshop_paper"}
{"question": "What are the authors of submissions and their colleges?", "query": "SELECT Author ,  College FROM submission", "arabic": "لكل تقديم، أظهر المؤلف وكليتهم المنتسبة.", "db_id": "workshop_paper"}
{"question": "For each submission, show the author and their affiliated college.", "query": "SELECT Author ,  College FROM submission", "arabic": "أظهر أسماء المؤلفين من الكلية \"Florida\" أو \"Temple\".", "db_id": "workshop_paper"}
{"question": "Show the names of authors from college \"Florida\" or \"Temple\"", "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"", "arabic": "ما هم المؤلفون الذين قدموا تقديماتهم من كلية \"Florida\" أو \"Temple\"؟", "db_id": "workshop_paper"}
{"question": "Which authors with submissions are from college \"Florida\" or \"Temple\"?", "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"", "arabic": "ما هو المتوسط ​​للنقاط في التقديمات؟", "db_id": "workshop_paper"}
{"question": "What is the average score of submissions?", "query": "SELECT avg(Scores) FROM submission", "arabic": "احتسب المتوسط ​​للنقاط في التقديمات؟", "db_id": "workshop_paper"}
{"question": "Compute the average score of submissions.", "query": "SELECT avg(Scores) FROM submission", "arabic": "من هو المؤلف للتقديمة التي حصلت على أعلى درجة؟", "db_id": "workshop_paper"}
{"question": "What is the author of the submission with the highest score?", "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1", "arabic": "ابحث عن المؤلف الذي حقق أعلى درجة في تقديمه.", "db_id": "workshop_paper"}
{"question": "Find the author who achieved the highest score in a submission.", "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1", "arabic": "أظهر مختلف الكليات مع عدد المؤلفين للتقديمات من كل كلية.", "db_id": "workshop_paper"}
{"question": "Show different colleges along with the number of authors of submission from each college.", "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College", "arabic": "لكل كلية، أعد اسم الكلية وعدد المؤلفين الذين قدموا التقديمات من تلك الكلية.", "db_id": "workshop_paper"}
{"question": "For each college, return the college name and the count of authors with submissions from that college.", "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College", "arabic": "أظهر الكلية الأكثر شيوعًا بين المؤلفين للتقديمات.", "db_id": "workshop_paper"}
{"question": "Show the most common college of authors of submissions.", "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي كلية لديها أكبر عدد من المؤلفين الذين قدموا التقديمات؟", "db_id": "workshop_paper"}
{"question": "Which college has the most authors with submissions?", "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الكليات التي تحتوي على كل من المؤلفين الذين قدموا تقديماتهم بدرجة أعلى من 90 والمؤلفين الذين قدموا تقديماتهم بدرجة أقل من 80.", "db_id": "workshop_paper"}
{"question": "Show the colleges that have both authors with submission score larger than 90 and authors with submission score smaller than 80.", "query": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80", "arabic": "أي الكليات التي تحتوي على كل من المؤلفين الذين قدموا تقديماتهم بدرجة أعلى من 90 والمؤلفين الذين قدموا تقديماتهم بدرجة أقل من 80؟", "db_id": "workshop_paper"}
{"question": "Which colleges have both authors with submission score above 90 and authors with submission score below 80?", "query": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80", "arabic": "أظهر مؤلفي التقديمات ونتائج قبول تقديماتهم.", "db_id": "workshop_paper"}
{"question": "Show the authors of submissions and the acceptance results of their submissions.", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID", "arabic": "لكل تقديمة، اعثر على مؤلفها ونتيجة قبولها.", "db_id": "workshop_paper"}
{"question": "For each submission, find its author and acceptance result.", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID", "arabic": "أظهر نتيجة التقديمة التي حصلت على أعلى درجة.", "db_id": "workshop_paper"}
{"question": "Show the result of the submission with the highest score.", "query": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1", "arabic": "أي التقديمة التي حصلت على أعلى درجة في نتيجة القبول. عرض النتيجة لي.", "db_id": "workshop_paper"}
{"question": "Which submission received the highest score in acceptance result. Show me the result.", "query": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1", "arabic": "أظهر كل مؤلف وعدد ورش العمل التي قدموا إليها.", "db_id": "workshop_paper"}
{"question": "Show each author and the number of workshops they submitted to.", "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author", "arabic": "كم عدد ورش العمل التي قدم إليها كل مؤلف؟ أرجع اسم المؤلف وعدد ورش العمل.", "db_id": "workshop_paper"}
{"question": "How many workshops did each author submit to? Return the author name and the number of workshops.", "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author", "arabic": "أظهر المؤلفين الذين قدموا تقديمات إلى أكثر من ورشة عمل واحدة.", "db_id": "workshop_paper"}
{"question": "Show the authors who have submissions to more than one workshop.", "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1", "arabic": "أي المؤلفين قدموا تقديمات إلى أكثر من ورشة عمل واحدة؟", "db_id": "workshop_paper"}
{"question": "Which authors have submitted to more than one workshop?", "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1", "arabic": "أظهر تاريخ وموقع كل ورشة عمل بترتيب أبجدي تصاعدي للموقع.", "db_id": "workshop_paper"}
{"question": "Show the date and venue of each workshop in ascending alphabetical order of the venue.", "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue", "arabic": "ارتب كل ورشة عمل بترتيب أبجدي للموقع. أرجع التاريخ والموقع لكل ورشة عمل.", "db_id": "workshop_paper"}
{"question": "Sort the each workshop in alphabetical order of the venue. Return the date and venue of each workshop.", "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue", "arabic": "قائمة المؤلفين الذين لا يملكون تقديمات إلى أي ورشة عمل.", "db_id": "workshop_paper"}
{"question": "List the authors who do not have submission to any workshop.", "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)", "arabic": "أي المؤلفين الذين لم يقدموا إلى أي ورشة عمل؟", "db_id": "workshop_paper"}
{"question": "Which authors did not submit to any workshop?", "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)", "arabic": "ابحث عن عدد المستثمرين بشكل إجمالي.", "db_id": "workshop_paper"}
{"question": "Find the number of investors in total.", "query": "SELECT count(*) FROM INVESTORS", "arabic": "أظهر كل تفاصيل المستثمر.", "db_id": "tracking_share_transactions"}
{"question": "Show all investor details.", "query": "SELECT Investor_details FROM INVESTORS", "arabic": "أظهر كل تفاصيل الكثير المميزة.", "db_id": "tracking_share_transactions"}
{"question": "Show all distinct lot details.", "query": "SELECT DISTINCT lot_details FROM LOTS", "arabic": "أظهر الحد الأقصى لمبلغ المعاملة.", "db_id": "tracking_share_transactions"}
{"question": "Show the maximum amount of transaction.", "query": "SELECT max(amount_of_transaction) FROM TRANSACTIONS", "arabic": "أظهر جميع التواريخ وعدد الأسهم للمعاملات.", "db_id": "tracking_share_transactions"}
{"question": "Show all date and share count of transactions.", "query": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS", "arabic": "ما هو إجمالي حصة المعاملات؟", "db_id": "tracking_share_transactions"}
{"question": "What is the total share of transactions?", "query": "SELECT sum(share_count) FROM TRANSACTIONS", "arabic": "أظهر جميع معرفات المعاملات مع رمز المعاملة 'PUR'.", "db_id": "tracking_share_transactions"}
{"question": "Show all transaction ids with transaction code 'PUR'.", "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'", "arabic": "أظهر جميع التواريخ للمعاملات التي يكون رمز نوعها \"SALE\".", "db_id": "tracking_share_transactions"}
{"question": "Show all dates of transactions whose type code is \"SALE\".", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"", "arabic": "أظهر المبلغ المتوسط للمعاملات برمز نوع \"SALE\".", "db_id": "tracking_share_transactions"}
{"question": "Show the average amount of transactions with type code \"SALE\".", "query": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"", "arabic": "أظهر وصف نوع المعاملة برمز \"PUR\".", "db_id": "tracking_share_transactions"}
{"question": "Show the description of transaction type with code \"PUR\".", "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\"", "arabic": "أظهر الحد الأدنى للمعاملات التي يكون رمز نوعها \"PUR\" وعدد الأسهم أكبر من 50.", "db_id": "tracking_share_transactions"}
{"question": "Show the minimum amount of transactions whose type code is \"PUR\" and whose share count is bigger than 50.", "query": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50", "arabic": "أظهر العدد الأقصى للأسهم في المعاملات حيث يكون المبلغ أقل من 10000.", "db_id": "tracking_share_transactions"}
{"question": "Show the maximum share count of transactions where the amount is smaller than 10000", "query": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000", "arabic": "أظهر التواريخ للمعاملات إذا كان عدد الأسهم أكبر من 100 أو المبلغ أكبر من 1000.", "db_id": "tracking_share_transactions"}
{"question": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000", "arabic": "أظهر وصف أنواع المعاملات والتواريخ إذا كان عدد الأسهم أقل من 10.", "db_id": "tracking_share_transactions"}
{"question": "Show the transaction type descriptions and dates if the share count is smaller than 10.", "query": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10", "arabic": "أظهر تفاصيل جميع المستثمرين إذا قاموا بأي معاملة بعدد أسهم أكبر من 100.", "db_id": "tracking_share_transactions"}
{"question": "Show details of all investors if they make any transaction with share count greater than 100.", "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100", "arabic": "كم نوع من المعاملات المميزة تم استخدامها في المعاملات؟", "db_id": "tracking_share_transactions"}
{"question": "How many distinct transaction types are used in the transactions?", "query": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS", "arabic": "أرجع تفاصيل الكثير ومعرفات المستثمرين.", "db_id": "tracking_share_transactions"}
{"question": "Return the lot details and investor ids.", "query": "SELECT lot_details ,  investor_id FROM LOTS", "arabic": "أرجع تفاصيل الكثير التابعة للمستثمرين الذين يمتلكون التفاصيل \"l\".", "db_id": "tracking_share_transactions"}
{"question": "Return the lot details of lots that belong to investors with details \"l\"?", "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\"", "arabic": "ما هي تفاصيل الشراء للمعاملات بمبلغ أكبر من 10000؟", "db_id": "tracking_share_transactions"}
{"question": "What are the purchase details of transactions with amount bigger than 10000?", "query": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000", "arabic": "ما هي تفاصيل البيع والتواريخ للمعاملات بمبلغ أقل من 3000؟", "db_id": "tracking_share_transactions"}
{"question": "What are the sale details and dates of transactions with amount smaller than 3000?", "query": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000", "arabic": "ما هي تفاصيل الكثير للقطع المرتبطة بالمعاملات التي يكون عدد الأسهم أقل من 50؟", "db_id": "tracking_share_transactions"}
{"question": "What are the lot details of lots associated with transactions with share count smaller than 50?", "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50", "arabic": "ما هي تفاصيل الكثير للقطع المرتبطة بالمعاملات التي يكون عدد الأسهم أكبر من 100 ويكون رمز نوعها \"PUR\"؟", "db_id": "tracking_share_transactions"}
{"question": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?", "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\"", "arabic": "أظهر متوسط ​​مبلغ المعاملة لأنواع المعاملات المختلفة.", "db_id": "tracking_share_transactions"}
{"question": "Show the average transaction amount for different transaction types.", "query": "SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "arabic": "أظهر أقصى وأدنى عدد للأسهم لأنواع المعاملات المختلفة.", "db_id": "tracking_share_transactions"}
{"question": "Show the maximum and minimum share count of different transaction types.", "query": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code", "arabic": "أظهر متوسط ​​عدد الأسهم للمعاملات للمستثمرين المختلفين.", "db_id": "tracking_share_transactions"}
{"question": "Show the average share count of transactions for different investors.", "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id", "arabic": "أظهر متوسط ​​عدد الأسهم للمعاملات لكل مستثمر، مرتبة حسب متوسط ​​عدد الأسهم.", "db_id": "tracking_share_transactions"}
{"question": "Show the average share count of transactions each each investor, ordered by average share count.", "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)", "arabic": "أظهر متوسط ​​مبلغ المعاملات للمستثمرين المختلفين.", "db_id": "tracking_share_transactions"}
{"question": "Show the average amount of transactions for different investors.", "query": "SELECT investor_id ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id", "arabic": "أظهر متوسط ​​مبلغ المعاملات للكثيرين المختلفة.", "db_id": "tracking_share_transactions"}
{"question": "Show the average amount of transactions for different lots.", "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id", "arabic": "أظهر متوسط ​​مبلغ المعاملات للكثيرين المختلفة، مرتبة حسب متوسط ​​مبلغ المعاملات.", "db_id": "tracking_share_transactions"}
{"question": "Show the average amount of transactions for different lots, ordered by average amount of transactions.", "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)", "arabic": "أظهر عدد المعاملات برمز نوع المعاملة \"SALE\" للمستثمرين المختلفين إذا كان أكبر من 0.", "db_id": "tracking_share_transactions"}
{"question": "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0.", "query": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\" GROUP BY investor_id", "arabic": "أظهر عدد المعاملات للمستثمرين المختلفين.", "db_id": "tracking_share_transactions"}
{"question": "Show the number of transactions for different investors.", "query": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id", "arabic": "أظهر رمز نوع المعاملة الذي يحدث أقل عدد من المرات.", "db_id": "tracking_share_transactions"}
{"question": "Show the transaction type code that occurs the fewest times.", "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1", "arabic": "أظهر رمز نوع المعاملة الذي يحدث بشكل متكرر بشكل أكبر.", "db_id": "tracking_share_transactions"}
{"question": "Show the transaction type code that occurs the most frequently.", "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الوصف لنوع المعاملة الذي يحدث بشكل متكرر بشكل أكبر.", "db_id": "tracking_share_transactions"}
{"question": "Show the description of the transaction type that occurs most frequently.", "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر معرف وتفاصيل المستثمر الذي لديه أكبر عدد من المعاملات.", "db_id": "tracking_share_transactions"}
{"question": "Show the id and details of the investor that has the largest number of transactions.", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر معرف وتفاصيل المستثمرين الذين لديهم أعلى 3 أعداد من المعاملات.", "db_id": "tracking_share_transactions"}
{"question": "Show the id and details for the investors who have the top 3 number of transactions.", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "arabic": "أظهر معرفات المستثمرين الذين لديهم ما لا يقل عن معاملتين.", "db_id": "tracking_share_transactions"}
{"question": "Show the ids of the investors who have at least two transactions.", "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2", "arabic": "أظهر معرفات وتفاصيل المستثمرين الذين لديهم ما لا يقل عن معاملتين برمز نوع \"SALE\".", "db_id": "tracking_share_transactions"}
{"question": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\".", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2", "arabic": "ما هي تواريخ المعاملات التي تحتوي على عدد أسهم يصل إلى 100 على الأقل أو مبلغ أكبر من 100؟", "db_id": "tracking_share_transactions"}
{"question": "What are the dates of transactions with at least 100 share count or amount bigger than 100?", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100", "arabic": "ما هي تفاصيل جميع المبيعات والمشتريات؟", "db_id": "tracking_share_transactions"}
{"question": "What are the details of all sales and purchases?", "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases", "arabic": "ما هي تفاصيل الكثير التي لم يتم استخدامها في أي معاملات؟", "db_id": "tracking_share_transactions"}
{"question": "What are the details of the lots which are not used in any transactions?", "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id", "arabic": "كم عدد الفنادق المتاحة بشكل إجمالي؟", "db_id": "tracking_share_transactions"}
{"question": "How many available hotels are there in total?", "query": "SELECT count(*) FROM HOTELS", "arabic": "ابحث عن العدد الإجمالي للفنادق المتاحة.", "db_id": "cre_Theme_park"}
{"question": "Find the total number of available hotels.", "query": "SELECT count(*) FROM HOTELS", "arabic": "ما هي نطاقات الأسعار للفنادق؟", "db_id": "cre_Theme_park"}
{"question": "What are the price ranges of hotels?", "query": "SELECT price_range FROM HOTELS", "arabic": "قل لي نطاقات الأسعار لجميع الفنادق.", "db_id": "cre_Theme_park"}
{"question": "Tell me the price ranges for all the hotels.", "query": "SELECT price_range FROM HOTELS", "arabic": "أظهر جميع أسماء المواقع المميزة.", "db_id": "cre_Theme_park"}
{"question": "Show all distinct location names.", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS", "arabic": "ما هي أسماء المواقع المميزة؟", "db_id": "cre_Theme_park"}
{"question": "What are the distinct location names?", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS", "arabic": "أظهر أسماء وتفاصيل جميع أعضاء الطاقم.", "db_id": "cre_Theme_park"}
{"question": "Show the names and details of all the staff members.", "query": "SELECT Name ,  Other_Details FROM Staff", "arabic": "ما هو اسم وتفاصيل كل عضو في الطاقم؟", "db_id": "cre_Theme_park"}
{"question": "What is the name and detail of each staff member?", "query": "SELECT Name ,  Other_Details FROM Staff", "arabic": "أظهر تفاصيل جميع الزوار.", "db_id": "cre_Theme_park"}
{"question": "Show details of all visitors.", "query": "SELECT Tourist_Details FROM VISITORS", "arabic": "ما هي تفاصيل كل زائر؟", "db_id": "cre_Theme_park"}
{"question": "What is the detail of each visitor?", "query": "SELECT Tourist_Details FROM VISITORS", "arabic": "أظهر نطاقات الأسعار للفنادق ذات التقييمات الخمس نجوم.", "db_id": "cre_Theme_park"}
{"question": "Show the price ranges of hotels with 5 star ratings.", "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"", "arabic": "ما هي نطاقات الأسعار للفنادق ذات التقييم الخمس نجوم؟", "db_id": "cre_Theme_park"}
{"question": "What are the price ranges of five star hotels?", "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"", "arabic": "أظهر متوسط نطاق الأسعار للفنادق التي تحمل تقييمًا بخمس نجوم وتسمح بالحيوانات الأليفة.", "db_id": "cre_Theme_park"}
{"question": "Show the average price range of hotels that have 5 star ratings and allow pets.", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1", "arabic": "ما هو متوسط نطاق الأسعار للفنادق ذات التقييم الخمس نجوم التي تسمح بالحيوانات الأليفة؟", "db_id": "cre_Theme_park"}
{"question": "What is the average price range of five star hotels that allow pets?", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1", "arabic": "ما هو عنوان الموقع \"UK Gallery\"؟", "db_id": "cre_Theme_park"}
{"question": "What is the address of the location \"UK Gallery\"?", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "arabic": "ابحث عن عنوان الموقع المسمى \"UK Gallery\".", "db_id": "cre_Theme_park"}
{"question": "Find the address of the location named \"UK Gallery\".", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "arabic": "ما هي التفاصيل حول الموقع \"UK Gallery\"؟", "db_id": "cre_Theme_park"}
{"question": "What is the detail of the location UK Gallery?", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "arabic": "أرجع تفاصيل الموقع المسمى \"UK Gallery\".", "db_id": "cre_Theme_park"}
{"question": "Return the detail of the location named \"UK Gallery\".", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "arabic": "أي أسماء المواقع تحتوي على كلمة \"film\"؟", "db_id": "cre_Theme_park"}
{"question": "Which location names contain the word \"film\"?", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "arabic": "ابحث عن جميع المواقع التي تحتوي أسماؤها على كلمة \"film\".", "db_id": "cre_Theme_park"}
{"question": "Find all the locations whose names contain the word \"film\".", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "arabic": "كم عدد الأسماء المميزة المرتبطة بجميع الصور؟", "db_id": "cre_Theme_park"}
{"question": "How many distinct names are associated with all the photos?", "query": "SELECT count(DISTINCT Name) FROM PHOTOS", "arabic": "عد عدد الأسماء المميزة المرتبطة بالصور.", "db_id": "cre_Theme_park"}
{"question": "Count the number of distinct names associated with the photos.", "query": "SELECT count(DISTINCT Name) FROM PHOTOS", "arabic": "ما هي تواريخ الزيارة المميزة؟", "db_id": "cre_Theme_park"}
{"question": "What are the distinct visit dates?", "query": "SELECT DISTINCT Visit_Date FROM VISITS", "arabic": "ابحث عن جميع تواريخ الزيارة المميزة.", "db_id": "cre_Theme_park"}
{"question": "Find all the distinct visit dates.", "query": "SELECT DISTINCT Visit_Date FROM VISITS", "arabic": "ما هي أسماء أماكن الجذب السياحي التي يمكن الوصول إليها بواسطة الحافلة؟", "db_id": "cre_Theme_park"}
{"question": "What are the names of the tourist attractions that can be accessed by bus?", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"", "arabic": "ما هي أماكن الجذب السياحي التي يمكننا الوصول إليها بواسطة الحافلة؟ أخبرني عن أسماء الأماكن.", "db_id": "cre_Theme_park"}
{"question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"", "arabic": "ما هي أسماء وساعات الافتتاح لمعالم الجذب السياحي التي يمكن الوصول إليها بالحافلة أو السير؟", "db_id": "cre_Theme_park"}
{"question": "What are the names and opening hours of the tourist attractions that can be accessed by bus or walk?", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "arabic": "ابحث عن أسماء وساعات الافتتاح لمعالم الجذب السياحي التي نصل إليها بالحافلة أو السير.", "db_id": "cre_Theme_park"}
{"question": "Find the names and opening hours of the tourist attractions that we get to by bus or walk.", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "arabic": "ما هي وصف تصنيف النجوم للفنادق التي تكلف أكثر من 10000؟", "db_id": "cre_Theme_park"}
{"question": "What are the star rating descriptions of the hotels with price above 10000?", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "arabic": "أعطني وصف تصنيف النجوم للفنادق التي تكلف أكثر من 10000.", "db_id": "cre_Theme_park"}
{"question": "Give me the star rating descriptions of the hotels that cost more than 10000.", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "arabic": "ما هي التفاصيل وساعات الافتتاح للمتاحف؟", "db_id": "cre_Theme_park"}
{"question": "What are the details and opening hours of the museums?", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "arabic": "أعطني التفاصيل وساعة الافتتاح لكل متحف.", "db_id": "cre_Theme_park"}
{"question": "Give me the detail and opening hour for each museum.", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "arabic": "ما هو اسم معلم الجذب السياحي المرتبط بالصورة \"game1\"؟", "db_id": "cre_Theme_park"}
{"question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "arabic": "أي معلم جذب سياحي مرتبط بالصورة \"game1\"؟ أرجوك قم بإعطاء اسمه.", "db_id": "cre_Theme_park"}
{"question": "Which tourist attraction is associated with the photo \"game1\"? Return its name.", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "arabic": "ما هي أسماء والوصف للصور التي تم التقاطها في معلم الجذب السياحي \"مهرجان الأفلام\"؟", "db_id": "cre_Theme_park"}
{"question": "What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "arabic": "ابحث عن أسماء والوصف للصور التي تم التقاطها في معلم الجذب السياحي المسمى \"مهرجان الأفلام\".", "db_id": "cre_Theme_park"}
{"question": "Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\".", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "arabic": "ما هي التفاصيل والطرق للوصول إلى معالم الجذب السياحي المتعلقة بالعائلة المالكة؟", "db_id": "cre_Theme_park"}
{"question": "What are the details and ways to get to tourist attractions related to royal family?", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "arabic": "أي معالم جذب سياحي متعلقة بالعائلة المالكة؟ أخبرني عن تفاصيلها وكيفية الوصول إليها.", "db_id": "cre_Theme_park"}
{"question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "arabic": "ما هي تفاصيل المتاجر التي يمكن الوصول إليها سيرًا على الأقدام؟", "db_id": "cre_Theme_park"}
{"question": "What are the details of the shops that can be accessed by walk?", "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"", "arabic": "ابحث عن تفاصيل المتاجر التي يمكن الوصول إليها سيرًا على الأقدام.", "db_id": "cre_Theme_park"}
{"question": "What is the name of the staff that is in charge of the attraction named \"US museum\"?", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "arabic": "ما اسم الموظف المسؤول عن معلم الجذب السياحي المسمى \"متحف الولايات المتحدة\"؟", "db_id": "cre_Theme_park"}
{"question": "Tell me the name of the staff in charge of the attraction called \"US museum\".", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "arabic": "ما اسم الموظف المسؤول عن معلم الجذب المسمى \"متحف الولايات المتحدة\"؟", "db_id": "cre_Theme_park"}
{"question": "What are the details of the markets that can be accessed by walk or bus?", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"", "arabic": "ما هي تفاصيل الأسواق التي يمكن الوصول إليها سيرًا على الأقدام أو بالحافلة؟", "db_id": "cre_Theme_park"}
{"question": "Find the details of all the markets that are accessible by walk or bus.", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"", "arabic": "ابحث عن تفاصيل جميع الأسواق التي يمكن الوصول إليها سيرًا على الأقدام أو بالحافلة.", "db_id": "cre_Theme_park"}
{"question": "What are the visit date and details of the visitor whose detail is 'Vincent'?", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"", "arabic": "ما هي تاريخ الزيارة وتفاصيل الزائر الذي تفصيله هو 'فنسنت'؟", "db_id": "cre_Theme_park"}
{"question": "Find the visit date and details of the tourist whose detail is 'Vincent'", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"", "arabic": "ابحث عن تاريخ الزيارة وتفاصيل السائح الذي تفصيله هو 'فنسنت'.", "db_id": "cre_Theme_park"}
{"question": "Which tourist attractions does the visitor with detail 'Vincent' visit?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "arabic": "أي المعالم السياحية يزور الزائر الذي يفصيله هو 'فنسنت'؟", "db_id": "cre_Theme_park"}
{"question": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'.", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "arabic": "اعرض المعالم السياحية التي زارها السائح الذي تفصيله هو 'فنسنت'.", "db_id": "cre_Theme_park"}
{"question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "arabic": "ما أسماء المعالم السياحية والتواريخ عندما زار السياح يدعى فينسنت أو فيفيان هناك؟", "db_id": "cre_Theme_park"}
{"question": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "arabic": "لكل معلم جذب سياحي، أعد إعطاء اسمه والتاريخ الذي زاره السياح يدعى فينسنت أو فيفيان هناك.", "db_id": "cre_Theme_park"}
{"question": "Show the average price of hotels for each star rating code.", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "arabic": "اعرض السعر المتوسط للفنادق لكل رمز تصنيف نجمي.", "db_id": "cre_Theme_park"}
{"question": "What is the average price range of hotels for each each star rating code?", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "arabic": "ما هو المدى السعري المتوسط للفنادق لكل رمز تصنيف نجمي؟", "db_id": "cre_Theme_park"}
{"question": "Show the average price of hotels for different pet policy.", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "arabic": "اعرض السعر المتوسط للفنادق لسياسة الحيوانات الأليفة المختلفة.", "db_id": "cre_Theme_park"}
{"question": "What are the average prices of hotels grouped by their pet policy.", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "arabic": "ما هي الأسعار المتوسطة للفنادق مجمعة حسب سياسة الحيوانات الأليفة؟", "db_id": "cre_Theme_park"}
{"question": "Show the id and star rating of each hotel, ordered by its price from low to high.", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "arabic": "اعرض الهوية وتصنيف النجوم لكل فندق، مرتبة حسب سعرها من الأقل إلى الأعلى.", "db_id": "cre_Theme_park"}
{"question": "Find the id and star rating of each hotel and sort them in increasing order of price.", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "arabic": "ابحث عن الهوية وتصنيف النجوم لكل فندق وقم بفرزها بترتيب تزايدي للسعر.", "db_id": "cre_Theme_park"}
{"question": "Show the details of the top 3 most expensive hotels.", "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3", "arabic": "أظهر تفاصيل أعلى 3 فنادق مكلفة.", "db_id": "cre_Theme_park"}
{"question": "What are the details of the three most expensive hotels?", "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3", "arabic": "ما هي تفاصيل أعلى ثلاثة فنادق مكلفة؟", "db_id": "cre_Theme_park"}
{"question": "Show the details and star ratings of the 3 least expensive hotels.", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "arabic": "أظهر تفاصيل وتصنيفات النجوم لأرخص 3 فنادق.", "db_id": "cre_Theme_park"}
{"question": "What are the details and star ratings of the three hotels with the lowest price ranges?", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "arabic": "ما هي تفاصيل وتصنيفات النجوم لثلاثة فنادق تتمتع بأقل نطاقات سعرية؟", "db_id": "cre_Theme_park"}
{"question": "Show the transportation method most people choose to get to tourist attractions.", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الطريقة النقل التي يختارها معظم الناس للوصول إلى معالم الجذب السياحي.", "db_id": "cre_Theme_park"}
{"question": "Which transportation method is used the most often to get to tourist attractions?", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي طريقة نقل يستخدمها معظم الناس بشكل متكرر للوصول إلى معالم الجذب السياحي؟", "db_id": "cre_Theme_park"}
{"question": "Show the description and code of the attraction type most tourist attractions belong to.", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أي نوع من أنواع الجذب ينتمي إليه معظم معالم الجذب السياحي؟ أخبرني بوصف نوع الجذب والرمز الخاص به.", "db_id": "cre_Theme_park"}
{"question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أظهر الطرق المختلفة للوصول إلى المعالم السياحية وعدد المعالم التي يمكن الوصول إليها بالطريقة المقابلة.", "db_id": "cre_Theme_park"}
{"question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "arabic": "قائمة بجميع الطرق الممكنة للوصول إلى المعالم السياحية، جنبًا إلى جنب مع عدد المعالم التي يمكن الوصول إليها بهذه الطرق.", "db_id": "cre_Theme_park"}
{"question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "arabic": "أظهر أسماء المعالم السياحية المختلفة، والهوية، وعدد الزيارات المقابلة.", "db_id": "cre_Theme_park"}
{"question": "Show different tourist attractions' names, ids, and the corresponding number of visits.", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "arabic": "ما هي الاسم، والهوية، وعدد الزيارات المقابلة لكل معلم جذب سياحي؟", "db_id": "cre_Theme_park"}
{"question": "What are the name, id and the corresponding number of visits for each  tourist attraction?", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "arabic": "أظهر أسماء وهويات المعالم السياحية التي تم زيارتها مرتين على الأقل.", "db_id": "cre_Theme_park"}
{"question": "Show the names and ids of tourist attractions that are visited at least two times.", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "arabic": "أي المعالم السياحية تم زيارتها مرتين على الأقل؟ أعطني أسمائها وهوياتها.", "db_id": "cre_Theme_park"}
{"question": "Which tourist attractions are visited at least twice? Give me their names and ids.", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "arabic": "أظهر أسماء وهويات المعالم السياحية التي تم زيارتها مرة واحدة على الأكثر.", "db_id": "cre_Theme_park"}
{"question": "Show the names and ids of tourist attractions that are visited at most once.", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "arabic": "ما هي أسماء ومعرّفات معالم الجذب السياحي التي يتم زيارتها مرة واحدة على الأكثر؟", "db_id": "cre_Theme_park"}
{"question": "What are the names and ids of the tourist attractions that are visited at most once?", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "arabic": "ما هي أسماء معالم الجذب السياحي التي يمكن الوصول إليها سيرًا على الأقدام أو تقع في العنوان 660 شارع شيا؟", "db_id": "cre_Theme_park"}
{"question": "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"", "arabic": "اعثر على أسماء معالم الجذب السياحي التي يمكن الوصول إليها سيرًا على الأقدام أو تقع في العنوان 660 شارع شيا.", "db_id": "cre_Theme_park"}
{"question": "Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"", "arabic": "ما هي أسماء معالم الجذب السياحي التي تحتوي على مواقف للسيارات أو التسوق كتفاصيل لها؟", "db_id": "cre_Theme_park"}
{"question": "What are the names of the tourist attractions that have parking or shopping as their feature details?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'", "arabic": "ابحث عن معالم الجذب السياحي التي تحتوي على مواقف للسيارات أو التسوق كتفاصيل لها. ما هي أسماء هذه المعالم؟", "db_id": "cre_Theme_park"}
{"question": "Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'", "arabic": "ما هي أسماء معالم الجذب السياحي التي يمكن الوصول إليها بالحافلة أو تقع في العنوان 254 مفترق أوتيلي؟", "db_id": "cre_Theme_park"}
{"question": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "arabic": "ابحث عن أسماء معالم الجذب السياحي التي يمكن الوصول إليها بالحافلة أو تقع في العنوان 254 مفترق أوتيلي.", "db_id": "cre_Theme_park"}
{"question": "Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction.", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "arabic": "ما هي أسماء معالم الجذب السياحي التي قام كل من فينسنت ومارسيل بزيارتها؟", "db_id": "cre_Theme_park"}
{"question": "What are the names of the tourist attractions Vincent and Marcelle visit?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\"", "arabic": "أي معالم جذب سياحي قام السياح فينسنت ومارسيل بزيارتها؟ أخبرني باسماء المعالم.", "db_id": "cre_Theme_park"}
{"question": "Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\"", "arabic": "ما هي أسماء معالم الجذب السياحي التي زارها أليسون ولم تزرها روزاليند؟", "db_id": "cre_Theme_park"}
{"question": "What are the names of tourist attraction that Alison visited but Rosalind did not visit?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"", "arabic": "ابحث عن أسماء معالم الجذب السياحي التي قام السياح أليسون بزيارتها ولم تزرها روزاليند.", "db_id": "cre_Theme_park"}
{"question": "Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"", "arabic": "كم عدد السياح الذين لم يقموا بأي زيارة؟", "db_id": "cre_Theme_park"}
{"question": "How many tourists did not make any visit?", "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )", "arabic": "عد عدد السياح الذين لم يزروا أي مكان.", "db_id": "cre_Theme_park"}
{"question": "Count the number of tourists who did not visit any place.", "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )", "arabic": "كم عدد ألعاب الفيديو الموجودة؟", "db_id": "cre_Theme_park"}
{"question": "How many video games exist?", "query": "SELECT count(*) FROM Video_games", "arabic": "كم عدد ألعاب الفيديو التي لديك؟", "db_id": "game_1"}
{"question": "How many video games do you have?", "query": "SELECT count(*) FROM Video_games", "arabic": "كم عدد أنواع ألعاب الفيديو المتوفرة؟", "db_id": "game_1"}
{"question": "How many video game types exist?", "query": "SELECT count(DISTINCT gtype) FROM Video_games", "arabic": "ما هو عدد أنواع الألعاب المختلفة؟", "db_id": "game_1"}
{"question": "What is the count of different game types?", "query": "SELECT count(DISTINCT gtype) FROM Video_games", "arabic": "اعرض جميع أنواع ألعاب الفيديو.", "db_id": "game_1"}
{"question": "Show all video game types.", "query": "SELECT DISTINCT gtype FROM Video_games", "arabic": "ما هي الأنواع المختلفة لألعاب الفيديو؟", "db_id": "game_1"}
{"question": "What are the different types of video games?", "query": "SELECT DISTINCT gtype FROM Video_games", "arabic": "اعرض جميع ألعاب الفيديو وأنواعها بترتيب أسمائها.", "db_id": "game_1"}
{"question": "Show all video games and their types in the order of their names.", "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname", "arabic": "ما هي أسماء جميع ألعاب الفيديو وأنواعها مرتبة ترتيباً أبجدياً؟", "db_id": "game_1"}
{"question": "What are the names of all the video games and their types in alphabetical order?", "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname", "arabic": "اعرض جميع ألعاب الفيديو من نوع \"Collectible card game\".", "db_id": "game_1"}
{"question": "Show all video games with type Collectible card game.", "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"", "arabic": "ما هي أسماء جميع ألعاب الفيديو التي تعتبر بطاقات جمعية؟", "db_id": "game_1"}
{"question": "What are the names of all video games that are collectible cards?", "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"", "arabic": "ما هو نوع لعبة الفيديو \"Call of Destiny\"؟", "db_id": "game_1"}
{"question": "What is the type of video game Call of Destiny.", "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"", "arabic": "ما نوع اللعبة \"Call of Destiny\"؟", "db_id": "game_1"}
{"question": "What type of game is Call of Destiny?", "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"", "arabic": "كم عدد ألعاب الفيديو التي لها نوع \"Massively multiplayer online game\"؟", "db_id": "game_1"}
{"question": "How many video games have type Massively multiplayer online game?", "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"", "arabic": "عد عدد ألعاب الفيديو التي لها نوع \"Massively multiplayer online game\".", "db_id": "game_1"}
{"question": "Count the number of video games with Massively multiplayer online game type .", "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"", "arabic": "اعرض جميع أنواع ألعاب الفيديو وعدد ألعاب الفيديو في كل نوع.", "db_id": "game_1"}
{"question": "Show all video game types and the number of video games in each type.", "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype", "arabic": "ما هي أنواع ألعاب الفيديو وكمية كل نوع؟", "db_id": "game_1"}
{"question": "What are the types of video games and how many are in each type?", "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype", "arabic": "أي نوع لعبة لديه أكبر عدد من الألعاب؟", "db_id": "game_1"}
{"question": "Which game type has most number of games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع يحتوي على أكبر عدد من الألعاب؟", "db_id": "game_1"}
{"question": "What type has the most games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1", "arabic": "أي نوع لعبة يحتوي على أقل عدد من الألعاب؟", "db_id": "game_1"}
{"question": "Which game type has least number of games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1", "arabic": "ما هو النوع الذي يحتوي على أقل عدد من الألعاب؟", "db_id": "game_1"}
{"question": "What is the type with the fewest games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1", "arabic": "اعرض الهويات لجميع الطلاب الذين يعيشون في CHI.", "db_id": "game_1"}
{"question": "Show ids for all students who live in CHI.", "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"", "arabic": "ما هي الهويات لجميع الطلاب الذين يعيشون في CHI؟", "db_id": "game_1"}
{"question": "What are the ids of all students who live in CHI?", "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"", "arabic": "اعرض الهويات لجميع الطلاب الذين لديهم مستشار 1121.", "db_id": "game_1"}
{"question": "Show ids for all students who have advisor 1121.", "query": "SELECT StuID FROM Student WHERE Advisor  =  1121", "arabic": "ما هي الهويات لجميع الطلاب الذين لديهم رقم مستشار 1121؟", "db_id": "game_1"}
{"question": "What are the ids of all students who have advisor number 1121?", "query": "SELECT StuID FROM Student WHERE Advisor  =  1121", "arabic": "اعرض الاسم الأول لجميع الطلاب الذين يدرسون تخصص 600.", "db_id": "game_1"}
{"question": "Show first name for all students with major 600.", "query": "SELECT Fname FROM Student WHERE Major  =  600", "arabic": "ما هي الأسماء الأولى لجميع الطلاب الذين ينتمون إلى التخصص المرقم 600؟", "db_id": "game_1"}
{"question": "What are the first names for all students who are from the major numbered 600?", "query": "SELECT Fname FROM Student WHERE Major  =  600", "arabic": "اعرض المتوسط والحد الأدنى والحد الأقصى للعمر لكل تخصص مختلف.", "db_id": "game_1"}
{"question": "Show the average, minimum, and maximum age for different majors.", "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major", "arabic": "ما هي المتوسطات والحد الأدنى والحد الأقصى للأعمار لكل من التخصصات المختلفة؟", "db_id": "game_1"}
{"question": "What are the average, minimum, and max ages for each of the different majors?", "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major", "arabic": "اعرض جميع المستشارين الذين لديهم على الأقل طالبين.", "db_id": "game_1"}
{"question": "Show all advisors who have at least two students.", "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2", "arabic": "ما هي الاستشارات؟", "db_id": "game_1"}
{"question": "What are the advisors", "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2", "arabic": "كم رياضة لدينا؟", "db_id": "game_1"}
{"question": "How many sports do we have?", "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo", "arabic": "كم عدد أنواع الرياضات المختلفة التي نقدمها؟", "db_id": "game_1"}
{"question": "How many different types of sports do we offer?", "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo", "arabic": "كم عدد الطلاب الذين يلعبون الرياضة؟", "db_id": "game_1"}
{"question": "How many students play sports?", "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo", "arabic": "كم عدد الطلاب المختلفين الذين يشاركون في ممارسة الرياضة؟", "db_id": "game_1"}
{"question": "How many different students are involved in sports?", "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo", "arabic": "اذكر الهويات (المُعرّفات) لجميع الطلاب الذين يحصلون على منح دراسية.", "db_id": "game_1"}
{"question": "List ids for all student who are on scholarship.", "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'", "arabic": "ما هي المعرّفات (الهويات) لجميع الطلاب الرياضيين الذين يحصلون على منح دراسية؟", "db_id": "game_1"}
{"question": "What are the ids for all sporty students who are on scholarship?", "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'", "arabic": "أظهر الأسماء الأخيرة لجميع الطلاب الذين يحصلون على منح دراسية؟", "db_id": "game_1"}
{"question": "Show last names for all student who are on scholarship.", "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'", "arabic": "ما هي الأسماء الأخيرة لجميع الطلاب الحاصلين على منح دراسية؟", "db_id": "game_1"}
{"question": "What are the last names for all scholarship students?", "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'", "arabic": "كم عدد الألعاب التي يشارك فيها جميع الطلاب؟", "db_id": "game_1"}
{"question": "How many games are played for all students?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo", "arabic": "ما هو إجمالي عدد الألعاب التي تم لعبها؟", "db_id": "game_1"}
{"question": "What is the total number of games played?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo", "arabic": "كم عدد الألعاب التي تم لعبها في جميع مباريات كرة القدم بواسطة الطلاب الحاصلين على منح دراسية؟", "db_id": "game_1"}
{"question": "How many games are played for all football games by students on scholarship?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'", "arabic": "ما هو إجمالي عدد جميع مباريات كرة القدم التي تم لعبها بواسطة الطلاب الحاصلين على منح دراسية؟", "db_id": "game_1"}
{"question": "What is the total number of all football games played by scholarship students?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'", "arabic": "أظهر اسم الرياضة وعدد الطلاب.", "db_id": "game_1"}
{"question": "Show all sport name and the number of students.", "query": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname", "arabic": "كم عدد الطلاب الذين يلعبون كل رياضة؟", "db_id": "game_1"}
{"question": "How many students play each sport?", "query": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname", "arabic": "أظهر جميع هويات الطلاب مع عدد الرياضات وإجمالي عدد الألعاب التي تم لعبها.", "db_id": "game_1"}
{"question": "Show all student IDs with the number of sports and total number of games played", "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID", "arabic": "ما هي هويات جميع الطلاب بالإضافة إلى عدد الرياضات والألعاب التي لعبوها؟", "db_id": "game_1"}
{"question": "What are the ids of all students along with how many sports and games did they play?", "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID", "arabic": "أظهر هويات جميع الطلاب الذين يقضون أكثر من مجموع 10 ساعات في الأسبوع في جميع الرياضات التي يلعبونها.", "db_id": "game_1"}
{"question": "Show all student IDs with more than total 10 hours per week on all sports played.", "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10", "arabic": "ما هي هويات الطلاب الذين عملوا لفترة تزيد عن 10 ساعات في الأسبوع في جميع الرياضات؟", "db_id": "game_1"}
{"question": "What are the student IDs for everybody who worked for more than 10 hours per week on all sports?", "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10", "arabic": "ما هو الاسم الأول والاسم الأخير للطالب الذي لديه أكبر عدد من الرياضات؟", "db_id": "game_1"}
{"question": "What is the first name and last name of the student who have most number of sports?", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو الاسم الأول والاسم الأخير للطالب الذي لعب أكبر عدد من الرياضات؟", "db_id": "game_1"}
{"question": "What is the first and last name of the student who played the most sports?", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "arabic": "أي رياضة تحتوي على أكبر عدد من الطلاب الحاصلين على منح دراسية؟", "db_id": "game_1"}
{"question": "Which sport has most number of students on scholarship?", "query": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هي الرياضة التي بها أكبر عدد من الطلاب الحاصلين على منح دراسية؟", "db_id": "game_1"}
{"question": "What is the sport with the most scholarship students?", "query": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1", "arabic": "أظهر هويات الطلاب الذين ليس لديهم أي رياضة.", "db_id": "game_1"}
{"question": "Show student ids who don't have any sports.", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo", "arabic": "ما هي هويات جميع الطلاب الذين لا يلعبون الرياضة؟", "db_id": "game_1"}
{"question": "What are the ids of all students who don't play sports?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo", "arabic": "أظهر هويات الطلاب الذين يحصلون على منح دراسية ولديهم تخصص برقم 600.", "db_id": "game_1"}
{"question": "Show student ids who are on scholarship and have major 600.", "query": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'", "arabic": "ما هي هويات الطلاب الحاصلين على منح دراسية في تخصص رقم 600؟", "db_id": "game_1"}
{"question": "What are the student ids for those on scholarship in major number 600?", "query": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'", "arabic": "أظهر هويات الطالبات اللاتي يلعبن كرة القدم.", "db_id": "game_1"}
{"question": "Show student ids who are female and play football.", "query": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"", "arabic": "ما هي هويات جميع الطالبات اللاتي يلعبن كرة القدم؟", "db_id": "game_1"}
{"question": "What are the ids of all female students who play football?", "query": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"", "arabic": "أظهر هويات جميع الطلاب الذكور الذين لا يلعبون كرة القدم.", "db_id": "game_1"}
{"question": "Show all male student ids who don't play football.", "query": "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"", "arabic": "ما هي هويات جميع الطلاب الذكور الذين لا يلعبون كرة القدم؟", "db_id": "game_1"}
{"question": "What are the ids of all male students who do not play football?", "query": "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"", "arabic": "أظهر إجمالي الساعات في الأسبوع وعدد الألعاب التي تم لعبها للطالب ديفيد شايبر.", "db_id": "game_1"}
{"question": "Show total hours per week and number of games played for student David Shieber.", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"", "arabic": "ما هو الإجمالي لعدد ساعات العمل في الأسبوع وعدد الألعاب التي تم لعبها بواسطة ديفيد شايبر؟", "db_id": "game_1"}
{"question": "What is the total number of hours per work and number of games played by David Shieber?", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"", "arabic": "أظهر إجمالي عدد الساعات في الأسبوع وعدد الألعاب التي تم لعبها للطلاب الذين تقل أعمارهم عن 20 عامًا.", "db_id": "game_1"}
{"question": "Show total hours per week and number of games played for students under 20.", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20", "arabic": "ما هو الإجمالي لعدد ساعات العمل في الأسبوع وعدد الألعاب التي تم لعبها للطلاب الذين تقل أعمارهم عن 20 عامًا؟", "db_id": "game_1"}
{"question": "What is the total number of hours per week and number of games played by students under 20?", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20", "arabic": "كم عدد الطلاب الذين يلعبون ألعاب الفيديو؟", "db_id": "game_1"}
{"question": "How many students play video games?", "query": "SELECT count(DISTINCT StuID) FROM Plays_games", "arabic": "كم عدد الطلاب المختلفين الذين يلعبون الألعاب؟", "db_id": "game_1"}
{"question": "How many different students play games?", "query": "SELECT count(DISTINCT StuID) FROM Plays_games", "arabic": "أظهر هويات الطلاب الذين لا يلعبون ألعاب الفيديو.", "db_id": "game_1"}
{"question": "Show ids of students who don't play video game.", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games", "arabic": "ما هي هويات جميع الطلاب الذين ليسوا لاعبين في ألعاب الفيديو؟", "db_id": "game_1"}
{"question": "What are the ids of all students who are not video game players?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games", "arabic": "أظهر هويات الطلاب الذين يلعبون ألعاب الفيديو ويشاركون في الرياضة.", "db_id": "game_1"}
{"question": "Show ids of students who play video game and play sports.", "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games", "arabic": "ما هي هويات جميع الطلاب الذين لعبوا ألعاب الفيديو وشاركوا في الرياضة؟", "db_id": "game_1"}
{"question": "What are the ids of all students who played video games and sports?", "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games", "arabic": "أظهر هويات جميع الألعاب وعدد الساعات التي تم لعبها.", "db_id": "game_1"}
{"question": "Show all game ids and the number of hours played.", "query": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid", "arabic": "ما هي هويات الألعاب والعدد الإجمالي لعدد الساعات التي تم لعبها لكل لعبة؟", "db_id": "game_1"}
{"question": "What are ids and total number of hours played for each game?", "query": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid", "arabic": "أظهر هويات جميع الطلاب وعدد الساعات التي تم لعبها.", "db_id": "game_1"}
{"question": "Show all student ids and the number of hours played.", "query": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid", "arabic": "ما هي هويات جميع الطلاب وعدد الساعات التي تم لعبها؟", "db_id": "game_1"}
{"question": "What are the ids of all students and number of hours played?", "query": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid", "arabic": "أظهر اسم اللعبة التي لديها أكبر عدد من الساعات التي تم لعبها.", "db_id": "game_1"}
{"question": "Show the game name that has most number of hours played.", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1", "arabic": "ما هو اسم اللعبة التي تم لعبها الأكثر؟", "db_id": "game_1"}
{"question": "What is the name of the game that has been played the most?", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1", "arabic": "أظهر أسماء جميع الألعاب التي تم لعبها لمدة 1000 ساعة على الأقل.", "db_id": "game_1"}
{"question": "Show all game names played by at least 1000 hours.", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000", "arabic": "ما هي أسماء جميع الألعاب التي تم لعبها لمدة 1000 ساعة على الأقل؟", "db_id": "game_1"}
{"question": "What are the names of all the games that have been played for at least 1000 hours?", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000", "arabic": "أظهر جميع أسماء الألعاب التي لعبتها ليندا سميث.", "db_id": "game_1"}
{"question": "Show all game names played by Linda Smith", "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"", "arabic": "ما هي أسماء جميع الألعاب التي لعبتها ليندا سميث؟", "db_id": "game_1"}
{"question": "What are the names of all games played by Linda Smith?", "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"", "arabic": "العثور على الاسم الأخير والاسم الأول للطلاب الذين يلعبون كرة القدم أو لاكروس.", "db_id": "game_1"}
{"question": "Find the last and first name of students who are playing Football or Lacrosse.", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"", "arabic": "ما هي الاسم الأول والاسم الأخير لجميع الطلاب الذين يلعبون كرة القدم أو لاكروس؟", "db_id": "game_1"}
{"question": "What is the first and last name of all students who play Football or Lacrosse?", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"", "arabic": "ما هو الاسم الأول والعمر للطلاب الذين يلعبون كرة القدم ولكروس؟", "db_id": "game_1"}
{"question": "Find the first name and age of the students who are playing both Football and Lacrosse.", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")", "arabic": "ما هي الأسماء الأولى والأعمار لجميع الطلاب الذين يلعبون كرة القدم ولكروس؟", "db_id": "game_1"}
{"question": "What are the first names and ages of all students who are playing both Football and Lacrosse?", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")", "arabic": "ما هو الاسم الأخير والجنس للطلاب الذين يلعبون لعبتي \"Call of Destiny\" و\"Works of Widenius\"؟", "db_id": "game_1"}
{"question": "Find the last name and gender of the students who are playing both Call of Destiny and Works of Widenius games.", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")", "arabic": "ما هو الاسم الأخير والجنس لجميع الطلاب الذين لعبوا كل من \"Call of Destiny\" و\"Works of Widenius\"؟", "db_id": "game_1"}
{"question": "what is the last name and gender of all students who played both Call of Destiny and Works of Widenius?", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")", "arabic": "ما هي أسماء جميع العملاء؟", "db_id": "game_1"}
{"question": "Find the name of all customers.", "query": "SELECT customer_name FROM customers", "arabic": "ما هي أسماء جميع العملاء؟", "db_id": "customers_and_addresses"}
{"question": "What are the names of all the customers?", "query": "SELECT customer_name FROM customers", "arabic": "كم عدد العملاء؟", "db_id": "customers_and_addresses"}
{"question": "How many customers are there?", "query": "SELECT count(*) FROM customers", "arabic": "ما هو إجمالي عدد العملاء المميزين؟", "db_id": "customers_and_addresses"}
{"question": "Return the total number of distinct customers.", "query": "SELECT count(*) FROM customers", "arabic": "ما هو المبلغ المتوسط للعناصر المطلوبة في كل طلب؟", "db_id": "customers_and_addresses"}
{"question": "What is the average amount of items ordered in each order?", "query": "SELECT avg(order_quantity) FROM order_items", "arabic": "ابحث عن متوسط كمية الطلب لكل طلب.", "db_id": "customers_and_addresses"}
{"question": "Find the average order quantity per order.", "query": "SELECT avg(order_quantity) FROM order_items", "arabic": "ما هي أسماء العملاء الذين يستخدمون طريقة الدفع \"نقدًا\"؟", "db_id": "customers_and_addresses"}
{"question": "What are the names of customers who use payment method \"Cash\"?", "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"", "arabic": "أي العملاء يستخدمون \"نقدًا\" كوسيلة دفع؟ قم بإرجاع أسماء العملاء.", "db_id": "customers_and_addresses"}
{"question": "Which customers use \"Cash\" for payment method? Return the customer names.", "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"", "arabic": "ابحث عن \"تاريخ أصبحوا عملاء\" للعملاء الذين يمتلكون معرفًا بين 10 و20.", "db_id": "customers_and_addresses"}
{"question": "Find the \"date became customers\" of the customers whose ID is between 10 and 20.", "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20", "arabic": "ما هي التواريخ التي أصبح فيها العملاء الذين يمتلكون معرفات بين 10 و 20 عملاء؟", "db_id": "customers_and_addresses"}
{"question": "What are the dates when customers with ids between 10 and 20 became customers?", "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20", "arabic": "أي طريقة دفع يستخدمها معظم العملاء؟", "db_id": "customers_and_addresses"}
{"question": "Which payment method is used by most customers?", "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ابحث عن طريقة الدفع التي يتم استخدامها بشكل أكثر تواترًا.\"", "db_id": "customers_and_addresses"}
{"question": "Find the payment method that is used most frequently.", "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ما هي أسماء العملاء الذين يستخدمون أكثر طريقة دفع شائعة؟\"", "db_id": "customers_and_addresses"}
{"question": "What are the names of customers using the most popular payment method?", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)", "arabic": "\"ابحث عن أسماء العملاء الذين يستخدمون طريقة الدفع الأكثر استخدامًا بتواتر.\"", "db_id": "customers_and_addresses"}
{"question": "Find the name of the customers who use the most frequently used payment method.", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)", "arabic": "\"ما هي جميع طرق الدفع؟\"", "db_id": "customers_and_addresses"}
{"question": "What are all the payment methods?", "query": "SELECT DISTINCT payment_method FROM customers", "arabic": "\"ارجع جميع طرق الدفع المميزة المستخدمة من قبل العملاء.\"", "db_id": "customers_and_addresses"}
{"question": "Return all the distinct payment methods used by customers.", "query": "SELECT DISTINCT payment_method FROM customers", "arabic": "\"ما هي تفاصيل جميع المنتجات؟\"", "db_id": "customers_and_addresses"}
{"question": "What are the details of all products?", "query": "SELECT DISTINCT product_details FROM products", "arabic": "\"ابحث عن أسماء جميع العملاء الذين يحتوي اسمهم على 'Alex'.\"", "db_id": "customers_and_addresses"}
{"question": "Return the the details of all products.", "query": "SELECT DISTINCT product_details FROM products", "arabic": "\"أي عميل يحتوي اسمه على 'Alex'؟ اعثر على الاسم الكامل.\"", "db_id": "customers_and_addresses"}
{"question": "Find the name of all customers whose name contains \"Alex\".", "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"", "arabic": "\"ابحث عن تفاصيل المنتجات التي تحتوي تفاصيلها على كلمة 'Latte' أو كلمة 'Americano'.\"", "db_id": "customers_and_addresses"}
{"question": "Which customer's name contains \"Alex\"? Find the full name.", "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"", "arabic": "\"أي منتج يحتوي تفاصيله على كلمة 'Latte' أو 'Americano'؟ ارجع التفاصيل الكاملة.\"", "db_id": "customers_and_addresses"}
{"question": "Find the detail of products whose detail contains the word \"Latte\" or the word \"Americano\"", "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"", "arabic": "\"ما هو محتوى العنوان للعميل بالاسم 'Maudie Kertzmann'؟\"", "db_id": "customers_and_addresses"}
{"question": "Which product's detail contains the word \"Latte\" or \"Americano\"? Return the full detail.", "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"", "arabic": "\"ارجع محتوى العنوان للعميل الذي يحمل اسم 'Maudie Kertzmann'.\"", "db_id": "customers_and_addresses"}
{"question": "What is the address content of the customer named \"Maudie Kertzmann\"?", "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"", "arabic": "\"كم عدد العملاء الذين يعيشون في مدينة 'Lake Geovannyton'؟\"", "db_id": "customers_and_addresses"}
{"question": "Return the address content for the customer whose name is \"Maudie Kertzmann\".", "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"", "arabic": "\"ابحث عن عدد العملاء الذين يعيشون في مدينة تسمى 'Lake Geovannyton'.\"", "db_id": "customers_and_addresses"}
{"question": "How many customers are living in city \"Lake Geovannyton\"?", "query": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\"", "arabic": "\"ابحث عن أسماء العملاء الذين يعيشون في ولاية كولورادو؟\"", "db_id": "customers_and_addresses"}
{"question": "Find the number of customers who live in the city called Lake Geovannyton.", "query": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\"", "arabic": "\"ما هي أسماء العملاء الذين يعيشون في ولاية كولورادو؟\"", "db_id": "customers_and_addresses"}
{"question": "Find the name of customers who are living in Colorado?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"", "arabic": "\"ابحث عن قائمة المدن التي لا يعيش فيها أي عميل.\"", "db_id": "customers_and_addresses"}
{"question": "What are the names of customers who live in Colorado state?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"", "arabic": "\"ما هي المدن التي لا يعيش فيها أي عميل؟\"", "db_id": "customers_and_addresses"}
{"question": "Find the list of cities that no customer is living in.", "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)", "arabic": "\"أي مدينة بها أكبر عدد من العملاء الذين يعيشون فيها؟\"", "db_id": "customers_and_addresses"}
{"question": "What are the cities no customers live in?", "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)", "arabic": "\"ابحث عن المدينة التي يعيش فيها أكبر عدد من العملاء.\"", "db_id": "customers_and_addresses"}
{"question": "Which city has the most customers living in?", "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1", "arabic": "\"استرجع قائمة جميع المدن.\"", "db_id": "customers_and_addresses"}
{"question": "Find the city where the most customers live.", "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ابحث عن المدينة التي لديها الرمز البريدي 255.\"", "db_id": "customers_and_addresses"}
{"question": "Retrieve the list of all cities.", "query": "SELECT DISTINCT city FROM addresses", "arabic": "\"في أي مدينة يقع الرمز البريدي 255؟\"", "db_id": "customers_and_addresses"}
{"question": "List all the distinct cities", "query": "SELECT DISTINCT city FROM addresses", "arabic": "\"ابحث عن الولاية والبلد لجميع المدن التي تبدأ أرقام رموزها البريدية بالرقم 4.\"", "db_id": "customers_and_addresses"}
{"question": "Find the city with post code 255.", "query": "SELECT city FROM addresses WHERE zip_postcode  =  255", "arabic": "\"ما هي الولاية والبلد لجميع المدن التي لديها رموز بريدية تبدأ بالرقم 4؟\"", "db_id": "customers_and_addresses"}
{"question": "Which city is post code 255 located in?", "query": "SELECT city FROM addresses WHERE zip_postcode  =  255", "arabic": "\"قم بسرد البلدان التي لديها أكثر من 4 عناوين مُدرجة.\"", "db_id": "customers_and_addresses"}
{"question": "Find the state and country of all cities with post code starting with 4.", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"", "arabic": "\"لأي بلدان هناك أكثر من أربع عناوين متميزة مُدرجة؟\"", "db_id": "customers_and_addresses"}
{"question": "What are the state and country of all the cities that have post codes starting with 4.\\", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"", "arabic": "\"قم بسرد جميع رموز قنوات الاتصال التي تم استخدامها أقل من 5 مرات.\"", "db_id": "customers_and_addresses"}
{"question": "List the countries having more than 4 addresses listed.", "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4", "arabic": "\"أي رموز لقنوات الاتصال تم استخدامها أقل من 5 مرات؟\"", "db_id": "customers_and_addresses"}
{"question": "For which countries are there more than four distinct addresses listed?", "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4", "arabic": "\"أي قناة اتصال تم استخدامها من قبل العميل بالاسم 'Tillman Ernser'؟\"", "db_id": "customers_and_addresses"}
{"question": "List all the contact channel codes that were used less than 5 times.", "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5", "arabic": "\"ابحث عن رمز قناة الاتصال الذي تم استخدامه من قبل العميل بالاسم 'Tillman Ernser'.\"", "db_id": "customers_and_addresses"}
{"question": "Which contact channel codes were used less than 5 times?", "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5", "arabic": "\"ما هو 'التاريخ النشط' لأحدث قناة اتصال تم استخدامها بواسطة 'Tillman Ernser'؟\"", "db_id": "customers_and_addresses"}
{"question": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?", "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "arabic": "\"ارجع 'التاريخ النشط' لأحدث قناة اتصال تم استخدامها من قبل العميل بالاسم 'Tillman Ernser'.\"", "db_id": "customers_and_addresses"}
{"question": "Find the contact channel code that was used by the customer named \"Tillman Ernser\".", "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "arabic": "\"ما هو المدى الزمني المتوسط لقنوات الاتصال في قاعدة البيانات؟\"", "db_id": "customers_and_addresses"}
{"question": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?", "query": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "arabic": "\"حساب المدى الزمني المتوسط لنشاط قنوات الاتصال.\"", "db_id": "customers_and_addresses"}
{"question": "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\".", "query": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "arabic": "\"ما هو رمز القناة ورقم الاتصال لقناة الاتصال التي كانت نشطة لأطول فترة للعميل؟\"", "db_id": "customers_and_addresses"}
{"question": "What is the average time span of contact channels in the database?", "query": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels", "arabic": "\"ارجع رمز القناة ورقم الاتصال لقناة الاتصال للعميل التي كانت مدة نشاطها الأطول.\"", "db_id": "customers_and_addresses"}
{"question": "Compute the average active time span of contact channels.", "query": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels", "arabic": "\"ابحث عن اسم وتاريخ النشاط للعميل الذي يستخدم البريد الإلكتروني كقناة اتصال.\"", "db_id": "customers_and_addresses"}
{"question": "What is the channel code and contact number of the customer contact channel that was active for the longest time?", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)", "arabic": "\"ما هي الأسماء وتواريخ النشاط للعملاء الذين رمز قناتهم للاتصال هو البريد الإلكتروني؟\"", "db_id": "customers_and_addresses"}
{"question": "Return the channel code and contact number of the customer contact channel whose active duration was the longest.", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)", "arabic": "\"ما هو اسم العميل الذي قام بالطلب بأكبر كمية؟\"", "db_id": "customers_and_addresses"}
{"question": "Find the name and active date of the customer that use email as the contact channel.", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "arabic": "\"ابحث عن اسم العميل الذي قام بالطلب بأكبر كمية من البضائع؟\"", "db_id": "customers_and_addresses"}
{"question": "What are the name and active date of the customers whose contact channel code is email?", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "arabic": "\"ما هو اسم العميل الذي قام بشراء أكبر عدد من العناصر؟\"", "db_id": "customers_and_addresses"}
{"question": "What is the name of the customer that made the order with the largest quantity?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)", "arabic": "\"أعطني اسم العميل الذي قام بطلب أكبر عدد من العناصر بشكل إجمالي.\"", "db_id": "customers_and_addresses"}
{"question": "Find the name of the customer who made the order of the largest amount of goods.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)", "arabic": "\"ما هو وسيلة الدفع للعميل الذي اشترى أقل كمية من العناصر؟\"", "db_id": "customers_and_addresses"}
{"question": "What is the name of the customer that has purchased the most items?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1", "arabic": "\"أخبرني عن وسيلة الدفع التي استخدمها العميل الذي قام بطلب أقل كمية من السلع بشكل إجمالي؟\"", "db_id": "customers_and_addresses"}
{"question": "Give me the name of the customer who ordered the most items in total.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1", "arabic": "\"كم نوعًا من المنتجات قام Rodrick Heaney بشرائها بشكل إجمالي؟\"", "db_id": "customers_and_addresses"}
{"question": "What is the payment method of the customer that has purchased the least quantity of items?", "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1", "arabic": "\"ابحث عن عدد المنتجات المتميزة التي قام Rodrick Heaney بشرائها حتى الآن؟\"", "db_id": "customers_and_addresses"}
{"question": "Tell me the payment method used by the customer who ordered the least amount of goods in total.", "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1", "arabic": "\"ما هو إجمالي كمية المنتجات التي اشتراها 'Rodrick Heaney'؟\"", "db_id": "customers_and_addresses"}
{"question": "How many types of products have Rodrick Heaney bought in total?", "query": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"", "arabic": "\"قل لي إجمالي كمية المنتجات التي اشتراها العميل بإسم 'Rodrick Heaney'.\"", "db_id": "customers_and_addresses"}
{"question": "Find the number of distinct products Rodrick Heaney has bought so far.", "query": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"", "arabic": "\"كم عدد العملاء الذين لديهم على الأقل طلب واحد بحالة 'تم الإلغاء'؟\"", "db_id": "customers_and_addresses"}
{"question": "What is the total quantity of products purchased by \"Rodrick Heaney\"?", "query": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"", "arabic": "\"أرجوك، أعطني عنوان العدد من العملاء الذين لديهم طلب واحد على الأقل بحالة 'تم الإلغاء'.\"", "db_id": "customers_and_addresses"}
{"question": "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\".", "query": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"", "arabic": "\"كم عدد الطلبات التي تحتوي على التفاصيل 'Second time'؟\"", "db_id": "customers_and_addresses"}
{"question": "How many customers have at least one order with status \"Cancelled\"?", "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"", "arabic": "\"قل لي عدد الطلبات التي تحتوي على 'Second time' كتفاصيل للطلب.\"", "db_id": "customers_and_addresses"}
{"question": "Return the number of customers who have at least one order with \"Cancelled\" status.", "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"", "arabic": "\"ابحث عن اسم العميل وتاريخ الطلبات التي تحمل حالة 'تم التسليم'.\"", "db_id": "customers_and_addresses"}
{"question": "How many orders have detail \"Second time\"?", "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"", "arabic": "\"ما هي أسماء العملاء وتاريخ الطلبات التي حالتها 'تم التسليم'.\"", "db_id": "customers_and_addresses"}
{"question": "Tell me the number of orders with \"Second time\" as order detail.", "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"", "arabic": "\"ما هو إجمالي عدد المنتجات التي تظهر في الطلبات ذات الحالة 'تم الإلغاء'؟\"", "db_id": "customers_and_addresses"}
{"question": "Find the customer name and date of the orders that have the status \"Delivered\".", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"", "arabic": "\"ابحث عن الكمية الإجمالية للمنتجات المرتبطة بالطلبات في حالة 'تم الإلغاء'.\"", "db_id": "customers_and_addresses"}
{"question": "What are the customer name and date of the orders whose status is \"Delivered\".", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"", "arabic": "\"ابحث عن الكمية الإجمالية للمنتجات المطلوبة قبل 2018-03-17 07:13:53.\"", "db_id": "customers_and_addresses"}
{"question": "What is the total number of products that are in orders with status \"Cancelled\"?", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\"", "arabic": "\"ما هو إجمالي كمية المنتجات المشتراة قبل 2018-03-17 07:13:53؟\"", "db_id": "customers_and_addresses"}
{"question": "Find the total quantity of products associated with the orders in the \"Cancelled\" status.", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\"", "arabic": "\"من قام بآخر طلب؟\"", "db_id": "customers_and_addresses"}
{"question": "Find the total amount of products ordered before 2018-03-17 07:13:53.", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"", "arabic": "\"ابحث عن اسم العميل الذي قام بطلب مؤخرًا بشكل أكثر.\"", "db_id": "customers_and_addresses"}
{"question": "What is the total amount of products purchased before 2018-03-17 07:13:53?", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"", "arabic": "\"أي منتج تم طلبه الأكثر عددًا من المرات؟\"", "db_id": "customers_and_addresses"}
{"question": "Who made the latest order?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1", "arabic": "\"ما هو المنتج الذي تم طلبه بشكل متكرر؟ قدم لي تفاصيل المنتج.\"", "db_id": "customers_and_addresses"}
{"question": "Find the name of the customer who made an order most recently.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1", "arabic": "\"ابحث عن اسم ومعرف المنتج الذي يكون إجمالي كمية الطلبات لديه هو الأكبر.\"", "db_id": "customers_and_addresses"}
{"question": "Which product has been ordered most number of times?", "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ما هي الاسم والمعرف الخاصين بالمنتج الذي تم شراؤه بشكل أكبر؟\"", "db_id": "customers_and_addresses"}
{"question": "What is the most frequently ordered product? Tell me the detail of the product", "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ابحث عن جميع العناوين في East Julianaside، Texas أو في Gleasonmouth، Arizona.\"", "db_id": "customers_and_addresses"}
{"question": "Find the name and ID of the product whose total order quantity is the largest.", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1", "arabic": "ما هي جميع العناوين في East Julianaside، Texas أو في Gleasonmouth، Arizona؟", "db_id": "customers_and_addresses"}
{"question": "What are the name and ID of the product bought the most.", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1", "arabic": "ابحث عن أسماء العملاء الذين لم يدفعوا بالنقد.", "db_id": "customers_and_addresses"}
{"question": "Find all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.", "query": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\"", "arabic": "ما هو اسم العملاء الذين لا يستخدمون النقد كطريقة دفع؟", "db_id": "customers_and_addresses"}
{"question": "What are all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.", "query": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\"", "arabic": "\"ابحث عن اسماء العملاء الذين لم يدفعوا بالنقد.\"", "db_id": "customers_and_addresses"}
{"question": "Find the name of customers who did not pay with Cash.", "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'", "arabic": "ما هو اسم العملاء الذين لا يستخدمون النقد كوسيلة دفع؟", "db_id": "customers_and_addresses"}
{"question": "What is the name of customers who do not use Cash as payment method.", "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'", "arabic": "\"ابحث عن أسماء العملاء الذين لم يطلبوا أبدًا المنتج لاتيه.\"", "db_id": "customers_and_addresses"}
{"question": "Find the names of customers who never ordered product Latte.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'", "arabic": "\"ما هي أسماء العملاء الذين لم يطلبوا أبدًا المنتج لاتيه؟\"", "db_id": "customers_and_addresses"}
{"question": "What are names of customers who never ordered product Latte.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'", "arabic": "\"ابحث عن أسماء العملاء الذين لم يقموا بتقديم طلب أبدًا.\"", "db_id": "customers_and_addresses"}
{"question": "Find the names of customers who never placed an order.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id", "arabic": "\"ما هي أسماء العملاء الذين لم يقموا بتقديم طلب أبدًا؟\"", "db_id": "customers_and_addresses"}
{"question": "What are the names of customers who never made an order.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id", "arabic": "\"ابحث عن أسماء العملاء الذين قاموا بطلب كل من المنتجات لاتيه وأمريكانو.\"", "db_id": "customers_and_addresses"}
{"question": "Find the names of customers who ordered both products Latte and Americano.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'", "arabic": "\"ما هي أسماء العملاء الذين قاموا بشراء كل من المنتجات لاتيه وأمريكانو؟\"", "db_id": "customers_and_addresses"}
{"question": "What are the names of customers who have purchased both products Latte and Americano?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'", "arabic": "\"كم عدد الفنانين؟\"", "db_id": "customers_and_addresses"}
{"question": "How many artists are there?", "query": "SELECT count(*) FROM artist", "arabic": "\"عدد الفنانين هو كم؟\"", "db_id": "music_4"}
{"question": "Count the number of artists.", "query": "SELECT count(*) FROM artist", "arabic": "\"قائمة أعمار جميع فناني الموسيقى؟\"", "db_id": "music_4"}
{"question": "List the age of all music artists.", "query": "SELECT Age FROM artist", "arabic": "\"ما هي أعمار جميع فناني الموسيقى؟\"", "db_id": "music_4"}
{"question": "What are the ages of all music artists?", "query": "SELECT Age FROM artist", "arabic": "\"ما هو متوسط أعمار جميع الفنانين؟\"", "db_id": "music_4"}
{"question": "What is the average age of all artists?", "query": "SELECT avg(Age) FROM artist", "arabic": "\"عودة متوسط الأعمار عبر جميع الفنانين.\"", "db_id": "music_4"}
{"question": "Return the average age across all artists.", "query": "SELECT avg(Age) FROM artist", "arabic": "\"ما هي العناوين الشهيرة للفنان 'Triumfall'؟\"", "db_id": "music_4"}
{"question": "What are the famous titles of the artist \"Triumfall\"?", "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"", "arabic": "\"عودة العناوين الشهيرة للفنان المسمى 'Triumfall'.\"", "db_id": "music_4"}
{"question": "Return the famous titles of the artist called \"Triumfall\".", "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"", "arabic": "\"ما هي تواريخ الإصدار الشهيرة المميزة؟\"", "db_id": "music_4"}
{"question": "What are the distinct Famous release dates?", "query": "SELECT distinct(Famous_Release_date) FROM artist", "arabic": "\"قدم تواريخ الإصدار الشهيرة المميزة لجميع الفنانين.\"", "db_id": "music_4"}
{"question": "Give the distinct famous release dates for all artists.", "query": "SELECT distinct(Famous_Release_date) FROM artist", "arabic": "\"عودة تواريخ الحفل والنتائج لجميع مهرجانات الموسيقى.\"", "db_id": "music_4"}
{"question": "Return the dates of ceremony and the results of all music festivals", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival", "arabic": "\"ما هي تواريخ الحفل والنتائج لكل مهرجان موسيقي؟\"", "db_id": "music_4"}
{"question": "What are the dates of ceremony and results for each music festival?", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival", "arabic": "\"ما هي فئة مهرجانات الموسيقى التي حققت نتيجة 'تم منحها'؟\"", "db_id": "music_4"}
{"question": "What are the category of music festivals with result \"Awarded\"?", "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"", "arabic": "\"عودة فئات مهرجانات الموسيقى التي حققت نتيجة 'تم منحها'.\"", "db_id": "music_4"}
{"question": "Return the categories of music festivals that have the result \"Awarded\".", "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"", "arabic": "\"ما هي أقصى وأدنى أسبوع في أعلى جميع الأصوات؟\"", "db_id": "music_4"}
{"question": "What are the maximum and minimum week on top of all volumes?", "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume", "arabic": "\"عطني أقصى وأدنى أسابيع في القمة عبر جميع الأصوات.\"", "db_id": "music_4"}
{"question": "Give the maximum and minimum weeks on top across all volumes.", "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume", "arabic": "\"ما هي الأغاني في الأصوات التي كانت في القمة لأكثر من أسبوع واحد؟\"", "db_id": "music_4"}
{"question": "What are the songs in volumes with more than 1 week on top?", "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1", "arabic": "\"عطني الأغاني المدرجة في الأصوات التي كانت في القمة لأكثر من أسبوع واحد.\"", "db_id": "music_4"}
{"question": "Give the songs included in volumes that have more than 1 week on top.", "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1", "arabic": "\"الرجاء سرد جميع الأغاني في الأصوات بترتيب أبجدي تصاعدي.\"", "db_id": "music_4"}
{"question": "Please list all songs in volumes in ascending alphabetical order.", "query": "SELECT Song FROM volume ORDER BY Song", "arabic": "\"ما هي الأغاني في الأصوات، مدرجة بترتيب تصاعدي؟\"", "db_id": "music_4"}
{"question": "What are the the songs in volumes, listed in ascending order?", "query": "SELECT Song FROM volume ORDER BY Song", "arabic": "\"كم عدد الفنانين المميزين الذين يرتبطون بالأصوات؟\"", "db_id": "music_4"}
{"question": "How many distinct artists do the volumes associate to?", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "arabic": "\"عدد الفنانين المميزين الذين لديهم أصوات هو كم؟\"", "db_id": "music_4"}
{"question": "Count the number of distinct artists who have volumes.", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "arabic": "\"يرجى عرض تاريخ الحفل للأصوات التي استمرت في القمة لأكثر من أسبوعين.\"", "db_id": "music_4"}
{"question": "Please show the date of ceremony of the volumes that last more than 2 weeks on top.", "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2", "arabic": "\"ما هي تواريخ الحفل في مهرجانات الموسيقى المتعلقة بالأصوات التي استمرت في القمة لأكثر من أسبوعين؟\"", "db_id": "music_4"}
{"question": "What are the dates of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?", "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2", "arabic": "\"يرجى عرض الأغاني التي حققت نتيجة 'تم الترشيح' في مهرجانات الموسيقى.\"", "db_id": "music_4"}
{"question": "Please show the songs that have result \"nominated\" at music festivals.", "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"", "arabic": "\"ما هي الأغاني في الأصوات التي أسفرت عن ترشيح في مهرجانات الموسيقى؟\"", "db_id": "music_4"}
{"question": "What are the songs in volumes that have resulted in a nomination at music festivals?", "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"", "arabic": "\"ما هي تواريخ الإصدار للأصوات المرتبطة بالفنان 'Gorgoroth'؟\"", "db_id": "music_4"}
{"question": "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?", "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"", "arabic": "\"عودة تواريخ الإصدار للأصوات التي تعود إلى الفنان المسمى Gorgoroth.\"", "db_id": "music_4"}
{"question": "Return the issue dates of volumes that are by the artist named Gorgoroth.", "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"", "arabic": "\"ما هي الأغاني في الأصوات المرتبطة بالفنان الذي تتجاوز عمره 32 عامًا أو أكثر؟\"", "db_id": "music_4"}
{"question": "What are the songs in volumes associated with the artist aged 32 or older?", "query": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32", "arabic": "\"عودة أسماء الأغاني في الأصوات التي تعود إلى فنانين يبلغ عمرهم على الأقل 32 عامًا.\"", "db_id": "music_4"}
{"question": "Return names of songs in volumes that are by artists that are at least 32 years old.", "query": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32", "arabic": "\"ما هو متوسط عدد الأسابيع في القمة للأصوات المرتبطة بالفنان الذي تبلغ أعماره 25 عامًا أو أقل؟\"", "db_id": "music_4"}
{"question": "What is the average weeks on top of volumes associated with the artist aged 25 or younger?", "query": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25", "arabic": "\"عودة المتوسط ​​لعدد الأسابيع في القمة للأصوات التي تعود إلى الفنانين الذين تبلغ أعمارهم على الأكثر 25 عامًا.\"", "db_id": "music_4"}
{"question": "Return the average number of weeks on top for volumes by artists that are at most 25 years old.", "query": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25", "arabic": "\"ما هي العناوين الشهيرة للفنانين المرتبطين بالأصوات التي كانت في القمة لأكثر من أسبوعين؟\"", "db_id": "music_4"}
{"question": "What are the famous title of the artists associated with volumes with more than 2 weeks on top?", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2", "arabic": "\"عودة العناوين الشهيرة للفنانين الذين لديهم أصوات استمرت في القمة لأكثر من أسبوعين.\"", "db_id": "music_4"}
{"question": "Return the famous titles for artists that have volumes that lasted more than 2 weeks on top.", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2", "arabic": "\"الرجاء سرد العمر والعنوان الشهير للفنانين بترتيب تنازلي حسب العمر.\"", "db_id": "music_4"}
{"question": "Please list the age and famous title of artists in descending order of age.", "query": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC", "arabic": "\"ما هي العناوين الشهيرة والأعمار لكل فنان، مدرجة بترتيب تنازلي حسب العمر؟\"", "db_id": "music_4"}
{"question": "What are the famous titles and ages of each artist, listed in descending order by age?", "query": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC", "arabic": "\"ما هو تاريخ الإصدار الشهير للفنان الذي يمتلك أكبر عمر؟\"", "db_id": "music_4"}
{"question": "What is the famous release date of the artist with the oldest age?", "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1", "arabic": "\"أرجوك أعطني تاريخ الإصدار الشهير لأقدم فنان.\"", "db_id": "music_4"}
{"question": "Return the famous release date for the oldest artist.", "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1", "arabic": "\"يرجى عرض فئات مهرجانات الموسيقى والعدد.\"", "db_id": "music_4"}
{"question": "Please show the categories of the music festivals and the count.", "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category", "arabic": "\"يرجى إعادة عدد مهرجانات الموسيقى لكل فئة.\"", "db_id": "music_4"}
{"question": "Return the number of music festivals of each category.", "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category", "arabic": "ما هو النتيجة الأكثر شيوعاً لمهرجان الموسيقى؟", "db_id": "music_4"}
{"question": "What is the most common result of the music festival?", "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أرجوك اعطني النتيجة التي تكرر أكثر في مهرجانات الموسيقى.", "db_id": "music_4"}
{"question": "Return the result that is most frequent at music festivals.", "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "أرجوك عرض تصنيفات مهرجانات الموسيقى حيث يكون العدد أكثر من 1.", "db_id": "music_4"}
{"question": "Please show the categories of the music festivals with count more than 1.", "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1", "arabic": "ما هي فئات مهرجانات الموسيقى التي كانت هناك أكثر من مهرجان واحد؟", "db_id": "music_4"}
{"question": "What are the categories of music festivals for which there have been more than 1 music festival?", "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1", "arabic": "ما هي الأغنية في الحجم الذي يحتل أعلى مرتبة لأطول فترة؟", "db_id": "music_4"}
{"question": "What is the song in the volume with the maximum weeks on top?", "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1", "arabic": "عرض الأغنية في الحجم الذي قضى أكثر عدد من الأسابيع في الصدارة؟", "db_id": "music_4"}
{"question": "Return the song in the volume that has spent the most weeks on top?", "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1", "arabic": "العثور على العناوين الشهيرة للفنانين الذين لا يمتلكون أي حجم.", "db_id": "music_4"}
{"question": "Find the famous titles of artists that do not have any volume.", "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)", "arabic": "ما هي العناوين الشهيرة للفنانين الذين لا يمتلكون أي ألبومات؟", "db_id": "music_4"}
{"question": "What are the famous titles of artists who do not have any volumes?", "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)", "arabic": "أظهر العناوين الشهيرة للفنانين الذين لديهم كل من الألبومات التي استمرت لأكثر من 2 أسابيع في الصدارة والألبومات التي استمرت لأقل من 2 أسابيع في الصدارة.", "db_id": "music_4"}
{"question": "Show the famous titles of the artists with both volumes that lasted more than 2 weeks on top and volumes that lasted less than 2 weeks on top.", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2", "arabic": "ما هي العناوين الشهيرة للفنانين الذين ليس لديهم فقط ألبومات استمرت لأكثر من 2 أسابيع في الصدارة ولكن أيضًا ألبومات استمرت لأقل من 2 أسابيع في الصدارة؟", "db_id": "music_4"}
{"question": "What are the famous titles of artists who have not only had volumes that spent more than 2 weeks on top but also volumes that spent less than 2 weeks on top?", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2", "arabic": "ما هي تواريخ الحفلات لمهرجانات الموسيقى بتصنيف \"أفضل أغنية\" ونتيجة \"ممنوحة\"؟", "db_id": "music_4"}
{"question": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?", "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"", "arabic": "ما هي تواريخ الحفلات المتعلقة بمهرجانات الموسيقى التي كانت لديها فئة \"أفضل أغنية\" ونتيجة \"ممنوحة\"؟", "db_id": "music_4"}
{"question": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".", "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"", "arabic": "ما هي تاريخ الإصدار للمجلد الذي كان على رأس القوائم لأقل عدد من الأسابيع؟", "db_id": "music_4"}
{"question": "What is the issue date of the volume with the minimum weeks on top?", "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1", "arabic": "ما هو تاريخ الإصدار للمجلد الذي قضى أقل عدد من الأسابيع على رأس القوائم؟", "db_id": "music_4"}
{"question": "Return the issue date of the volume that has spent the fewest weeks on top.", "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1", "arabic": "كم عدد الفنانين المتميزين الذين لديهم مجلدات؟", "db_id": "music_4"}
{"question": "How many distinct artists have volumes?", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "arabic": "عدد الفنانين الذين لديهم مجلدات؟", "db_id": "music_4"}
{"question": "Count the number of artists who have had volumes.", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "arabic": "أظهر نتائج مهرجانات الموسيقى وعدد المهرجانات التي شاركت في كل منها، مرتبة حسب هذا العدد.", "db_id": "music_4"}
{"question": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "arabic": "كم عدد مهرجانات الموسيقى التي حققت كل نوع من النتائج، مرتبة تنازلياً حسب العدد؟", "db_id": "music_4"}
{"question": "How many music festivals have had each kind of result, ordered descending by count?", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "arabic": "ما هي تواريخ الإصدار للمجلدات المرتبطة بالفنان الذي يبلغ من العمر 23 عامًا أو أقل؟", "db_id": "music_4"}
{"question": "What are the issue dates of volumes associated with the artist aged 23 or younger?", "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23", "arabic": "ارجع إلى تواريخ الإصدار للمجلدات التي تم إنشاؤها من قبل الفنانين الذين يكونون في سن 23 عامًا على الأكثر؟", "db_id": "music_4"}
{"question": "Return the issue dates of volumes by artists who are at most 23 years old?", "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23", "arabic": "كم عدد الأفعوانيات؟", "db_id": "music_4"}
{"question": "How many roller coasters are there?", "query": "SELECT count(*) FROM roller_coaster", "arabic": "اذكر أسماء الأفعوانيات بترتيب تصاعدي حسب الطول.", "db_id": "roller_coaster"}
{"question": "List the names of roller coasters by ascending order of length.", "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC", "arabic": "ما هي الأطوال والأرتفاعات للأفعوانيات؟", "db_id": "roller_coaster"}
{"question": "What are the lengths and heights of roller coasters?", "query": "SELECT LENGTH ,  Height FROM roller_coaster", "arabic": "أعرض أسماء البلدان التي لغتها ليست \"الألمانية\".", "db_id": "roller_coaster"}
{"question": "List the names of countries whose language is not \"German\".", "query": "SELECT Name FROM country WHERE Languages != \"German\"", "arabic": "\"أظهر حالات الأفعوانيات التي يزيد طولها عن 3300 أو يزيد ارتفاعها عن 100.\"", "db_id": "roller_coaster"}
{"question": "Show the statuses of roller coasters longer than 3300 or higher than 100.", "query": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100", "arabic": "ما هي سرعات أطول أفعوانية؟", "db_id": "roller_coaster"}
{"question": "What are the speeds of the longest roller coaster?", "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1", "arabic": "ما هي السرعة المتوسطة للأفعوانيات؟", "db_id": "roller_coaster"}
{"question": "What is the average speed of roller coasters?", "query": "SELECT avg(Speed) FROM roller_coaster", "arabic": "أظهر الحالات المختلفة وأعداد الأفعوانيات لكل حالة.", "db_id": "roller_coaster"}
{"question": "Show the different statuses and the numbers of roller coasters for each status.", "query": "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status", "arabic": "من فضلك، أظهر الحالة الأكثر شيوعًا للأفعوانيات.", "db_id": "roller_coaster"}
{"question": "Please show the most common status of roller coasters.", "query": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1", "arabic": "اذكر الحالة المشتركة بين أكثر من اثنين من الأفعوانيات.", "db_id": "roller_coaster"}
{"question": "List the status shared by more than two roller coaster.", "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2", "arabic": "أظهر الحديقة التي تحتوي على أفعوانية بأعلى سرعة.", "db_id": "roller_coaster"}
{"question": "Show the park of the roller coaster with the highest speed.", "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1", "arabic": "أظهر أسماء الأفعوانيات وأسماء البلدان التي يوجدون فيها.", "db_id": "roller_coaster"}
{"question": "Show the names of roller coasters and names of country they are in.", "query": "SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID", "arabic": "أظهر أسماء البلدان التي تحتوي على أكثر من أفعوانية واحدة.", "db_id": "roller_coaster"}
{"question": "Show the names of countries that have more than one roller coaster.", "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "arabic": "أظهر اسم البلد وعدد سكانه الذي يحتوي على أعلى أفعوانية.", "db_id": "roller_coaster"}
{"question": "Show the name and population of the country that has the highest roller coaster.", "query": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1", "arabic": "أظهر أسماء البلدان والسرعة المتوسطة للأفعوانيات من كل بلد.", "db_id": "roller_coaster"}
{"question": "Show the names of countries and the average speed of roller coasters from each country.", "query": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name", "arabic": "كم عدد البلدان التي لا تحتوي على أفعوانية طولها أكثر من 3000؟", "db_id": "roller_coaster"}
{"question": "How many countries do not have an roller coaster longer than 3000?", "query": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )", "arabic": "ما هي أسماء البلدان، المساحة، وعدد السكان التي تحتوي على أفعوانيات بسرعة أعلى؟", "db_id": "roller_coaster"}
{"question": "What are the country names, area and population which has both roller coasters with speed higher", "query": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55", "arabic": "كم عدد الرتب المختلفة للقبطان؟", "db_id": "roller_coaster"}
{"question": "How many different captain ranks are there?", "query": "SELECT count(DISTINCT rank) FROM captain", "arabic": "حساب عدد الرتب المختلفة للقبطان.", "db_id": "ship_1"}
{"question": "Count the number of different ranks of captain.", "query": "SELECT count(DISTINCT rank) FROM captain", "arabic": "كم عدد القباطنة في كل رتبة؟", "db_id": "ship_1"}
{"question": "How many captains are in each rank?", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "arabic": "حساب عدد القباطنة الذين يحملون كل رتبة.", "db_id": "ship_1"}
{"question": "Count the number of captains that have each rank.", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "arabic": "كم عدد القباطنة الذين تقل أعمارهم عن 50 في كل رتبة؟", "db_id": "ship_1"}
{"question": "How many captains with younger than 50 are in each rank?", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "arabic": "حساب عدد القباطنة الذين أعمارهم أقل من 50 في كل رتبة.", "db_id": "ship_1"}
{"question": "Count the number of captains younger than 50 of each rank.", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "arabic": "فرز جميع أسماء القباطنة حسب أعمارهم من الكبار إلى الصغار.", "db_id": "ship_1"}
{"question": "Sort all captain names by their ages from old to young.", "query": "SELECT name FROM captain ORDER BY age DESC", "arabic": "ما هي أسماء القباطنة، مرتبة حسب العمر بترتيب تنازلي؟", "db_id": "ship_1"}
{"question": "What are the names of captains, sorted by age descending?", "query": "SELECT name FROM captain ORDER BY age DESC", "arabic": "العثور على الاسم، الفئة، والرتبة لجميع القباطنة.", "db_id": "ship_1"}
{"question": "Find the name, class and rank of all captains.", "query": "SELECT name ,  CLASS ,  rank FROM captain", "arabic": "ما هي أسماء القباطنة، الفئات، والرتب لجميع القباطنة؟", "db_id": "ship_1"}
{"question": "What are the names, classes, and ranks of all captains?", "query": "SELECT name ,  CLASS ,  rank FROM captain", "arabic": "أي رتبة هي الأكثر شيوعًا بين القباطنة؟", "db_id": "ship_1"}
{"question": "Which rank is the most common among captains?", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "arabic": "أعيدوا الرتبة التي يكون فيها أقل عدد من القباطنة.", "db_id": "ship_1"}
{"question": "Return the rank for which there are the fewest captains.", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "arabic": "أي الفئات تحتوي على أكثر من قبطانين؟", "db_id": "ship_1"}
{"question": "Which classes have more than two captains?", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "arabic": "أعطِ الفئات التي تحتوي على أكثر من قبطانين.", "db_id": "ship_1"}
{"question": "Give the classes that have more than two captains.", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "arabic": "\"ابحث عن أسماء القبطان الذين يحملون رتبة ميدشيبمان أو ملازم.\"", "db_id": "ship_1"}
{"question": "Find the name of captains whose rank are either Midshipman or Lieutenant.", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "arabic": "\"ما هي أسماء القباطنة الذين يحملون إما رتبة ميدشيبمان أو ملازم؟\"", "db_id": "ship_1"}
{"question": "What are the names of captains that have either the rank Midshipman or Lieutenant?", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "arabic": "\"ما هو متوسط وأدنى عمر القباطنة في الفئات المختلفة؟\"", "db_id": "ship_1"}
{"question": "What are the average and minimum age of captains in different class?", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "arabic": "\"ما هو متوسط وأدنى عمر القباطنة في كل فئة؟\"", "db_id": "ship_1"}
{"question": "Return the average and minimum age of captains in each class.", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "arabic": "\"ابحث عن رتبة القبطان التي تحتوي على بعض القباطنة في فئتي القاطر والقاطر المسلح.\"", "db_id": "ship_1"}
{"question": "Find the captain rank that has some captains in both Cutter and Armed schooner classes.", "query": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "arabic": "\"ما هي رتب القباطنة الذين ينتمون إلى فئتي القاطر والقاطر المسلح؟\"", "db_id": "ship_1"}
{"question": "What are the ranks of captains that are both in the Cutter and Armed schooner classes?", "query": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "arabic": "\"ابحث عن رتبة القبطان التي لا يوجد فيها أي قبطان في فئة السفينة من الخط الثالث.\"", "db_id": "ship_1"}
{"question": "Find the captain rank that has no captain in Third-rate ship of the line class.", "query": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'", "arabic": "\"ما هي رتب القباطنة الذين ليس لديهم أي قبطان في فئة السفينة من الخط الثالث؟\"", "db_id": "ship_1"}
{"question": "What are the ranks of captains that have no captain that are in the Third-rate ship of the line class?", "query": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'", "arabic": "\"ما هو اسم أصغر قبطان؟\"", "db_id": "ship_1"}
{"question": "What is the name of the youngest captain?", "query": "SELECT name FROM captain ORDER BY age LIMIT 1", "arabic": "\"ارجع باسم أصغر قبطان.\"", "db_id": "ship_1"}
{"question": "Return the name of the youngest captain.", "query": "SELECT name FROM captain ORDER BY age LIMIT 1", "arabic": "\"كم عدد السفن؟\"", "db_id": "ship_1"}
{"question": "how many ships are there?", "query": "SELECT count(*) FROM ship", "arabic": "\"عدد السفن؟\"", "db_id": "ship_1"}
{"question": "Count the number of ships.", "query": "SELECT count(*) FROM ship", "arabic": "\"ابحث عن اسم السفينة ونوعها وعلمها الذي تم بناؤها في أحدث سنة.\"", "db_id": "ship_1"}
{"question": "Find the name, type, and flag of the ship that is built in the most recent year.", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "arabic": "\"ما هو اسم السفينة ونوعها وعلمها التي تم بناؤها في أحدث سنة؟\"", "db_id": "ship_1"}
{"question": "What is the name, type, and flag of the ship that was built in the most recent year?", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "arabic": "\"قم بتجميع السفن حسب العلم، وأرجع عدد السفن التي تحمل كل علم.\"", "db_id": "ship_1"}
{"question": "Group by ships by flag, and return number of ships that have each flag.", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "arabic": "\"ما هي الأعلام المختلفة للسفن، وكم عدد السفن التي تحمل كل منها؟\"", "db_id": "ship_1"}
{"question": "What are the different ship flags, and how many ships have each?", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "arabic": "\"أي علم يُستخدم على نطاق واسع بين جميع السفن؟\"", "db_id": "ship_1"}
{"question": "Which flag is most widely used among all ships?", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ارجع بالعلم الذي يكون الأكثر شيوعًا بين جميع السفن.\"", "db_id": "ship_1"}
{"question": "Return the flag that is most common among all ships.", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "arabic": "\"أورد جميع أسماء السفن في ترتيب سنة البناء والفئة.\"", "db_id": "ship_1"}
{"question": "List all ship names in the order of built year and class.", "query": "SELECT name FROM ship ORDER BY built_year ,  CLASS", "arabic": "\"ما هي أسماء السفن، مرتبة حسب سنة البناء وفئتها؟\"", "db_id": "ship_1"}
{"question": "What are the names of ships, ordered by year they were built and their class?", "query": "SELECT name FROM ship ORDER BY built_year ,  CLASS", "arabic": "\"ابحث عن نوع السفينة الذي يستخدمه كل من السفن ذات الأعلام البنمية والمالطية.\"", "db_id": "ship_1"}
{"question": "Find the ship type that are used by both ships with Panama and Malta flags.", "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'", "arabic": "\"ما هي أنواع السفن التي تحمل كل من السفن ذات الأعلام البنمية والمالطية؟\"", "db_id": "ship_1"}
{"question": "What types of ships have both ships that have Panama Flags and Malta flags?", "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'", "arabic": "\"في أي سنة تم بناء معظم السفن؟\"", "db_id": "ship_1"}
{"question": "In which year were most of ships built?", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "arabic": "\"في أي سنة تم بناء معظم السفن؟\"", "db_id": "ship_1"}
{"question": "What is the year in which most ships were built?", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ابحث عن أسماء السفن التي تحتوي على أكثر من قبطان واحد.\"", "db_id": "ship_1"}
{"question": "Find the name of the ships that have more than one captain.", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "arabic": "\"ما هي أسماء السفن التي تحتوي على أكثر من قبطان واحد؟\"", "db_id": "ship_1"}
{"question": "What are the names of ships that have more than one captain?", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "arabic": "\"ما هي أسماء وفئات السفن التي لا تملك أي قبطان حتى الآن؟\"", "db_id": "ship_1"}
{"question": "what are the names and classes of the ships that do not have any captain yet?", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "arabic": "\"ارجع باسماء وفئات السفن التي لا تحتوي على قبطان؟\"", "db_id": "ship_1"}
{"question": "Return the names and classes of ships that do not have a captain?", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "arabic": "\"ابحث عن اسم السفينة التي يقودها أصغر قبطان.\"", "db_id": "ship_1"}
{"question": "Find the name of the ship that is steered by the youngest captain.", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "arabic": "\"ما هو اسم السفينة التي يقودها أصغر قبطان؟\"", "db_id": "ship_1"}
{"question": "What is the name of the ship that is commanded by the youngest captain?", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "arabic": "\"ابحث عن أسماء وأعلام السفن التي لا تقودها أي قبطان لديه رتبة ميدشيبمان.\"", "db_id": "ship_1"}
{"question": "Find the name and flag of ships that are not steered by any captain with Midshipman rank.", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "arabic": "\"ما هي أسماء وأعلام السفن التي لا تحتوي على قبطان لديه رتبة ميدشيبمان؟\"", "db_id": "ship_1"}
{"question": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "arabic": "\"ابحث عن أسماء السفن التي يقودها قبطان لديه رتبة ميدشيبمان وقبطان لديه رتبة ملازم.\"", "db_id": "ship_1"}
{"question": "Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "arabic": "\"ما هي أسماء السفن التي تقودها كل من قبطان لديه رتبة ميدشيبمان وقبطان لديه رتبة ملازم؟\"", "db_id": "ship_1"}
{"question": "What are the names of ships that are commanded by both captains with the rank of Midshipman and captains with the rank of Lieutenant?", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'", "arabic": "\"ما هو معرف المدينة التي استضافت الفعاليات في السنة الأحدث؟\"", "db_id": "ship_1"}
{"question": "What is id of the city that hosted events in the most recent year?", "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1", "arabic": "\"ابحث عن المدينة التي استضافت بعض الفعاليات في السنة الأحدث. ما هو معرف هذه المدينة؟\"", "db_id": "city_record"}
{"question": "Find the city that hosted some events in the most recent year. What is the id of this city?", "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1", "arabic": "\"ابحث عن معرفات المباريات للمدن التي استضافت منافسة 'تصفيات كأس العالم لكرة القدم 1994'؟\"", "db_id": "city_record"}
{"question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?", "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"", "arabic": "\"ما هو معرف المباراة للمنافسة المسماة 'تصفيات كأس العالم لكرة القدم 1994'؟\"", "db_id": "city_record"}
{"question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?", "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"", "arabic": "\"ابحث عن المدن التي كانت مضيفة للأحداث بعد عام 2010؟\"", "db_id": "city_record"}
{"question": "Find the cities which were once a host city after 2010?", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010", "arabic": "\"أي مدن كانت مضيفة للأحداث بعد عام 2010؟\"", "db_id": "city_record"}
{"question": "Which cities served as a host city after 2010?", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010", "arabic": "\"أي مدينة استضافت أكبر عدد من الفعاليات؟\"", "db_id": "city_record"}
{"question": "Which city has hosted the most events?", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ابحث عن المدينة التي استضافت أكبر عدد من الفعاليات.\"", "db_id": "city_record"}
{"question": "Find the city that hosted the most events.", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ما هو موقع مسابقة 'تصفيات كأس العالم لكرة القدم 1994' التي استضافتها 'نانجينغ (جيانغسو)'؟\"", "db_id": "city_record"}
{"question": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?", "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"", "arabic": "\"ابحث عن موقع مسابقة 'تصفيات كأس العالم لكرة القدم 1994' التي استضافتها 'نانجينغ (جيانغسو)'.\"\n", "db_id": "city_record"}
{"question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".", "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"", "arabic": "\"ما هي درجة حرارة شانغهاي في يناير؟\"", "db_id": "city_record"}
{"question": "Give me the temperature of Shanghai in January.", "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"", "arabic": "\"ما هي درجة حرارة مدينة 'شانغهاي' في يناير؟\"", "db_id": "city_record"}
{"question": "What is the temperature of \"Shanghai\" city in January?", "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"", "arabic": "\"ما هو عام استضافة مدينة 'تايتشو (تشجيانغ)'؟\"", "db_id": "city_record"}
{"question": "What is the host year of city \"Taizhou ( Zhejiang )\"?", "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"", "arabic": "\"في أي عام خدمت مدينة 'تايتشو (تشجيانغ)' كمدينة مضيفة؟\"", "db_id": "city_record"}
{"question": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?", "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"", "arabic": "\"ما هي الثلاث مدن التي تحتوي على أكبر تعداد سكان إقليمي؟\"", "db_id": "city_record"}
{"question": "Which three cities have the largest regional population?", "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3", "arabic": "\"ما هي أكبر ثلاث مدن من حيث تعداد السكان الإقليمي؟\"", "db_id": "city_record"}
{"question": "What are the three largest cities in terms of regional population?", "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3", "arabic": "\"أي مدينة لديها أدنى الناتج المحلي الإجمالي؟ يرجى سرد اسم المدينة وناتجها المحلي الإجمالي.\"", "db_id": "city_record"}
{"question": "Which city has the lowest GDP? Please list the city name and its GDP.", "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1", "arabic": "\"ما هي المدينة ذات الناتج المحلي الإجمالي الأدنى؟ الرجاء إعادة اسم المدينة وناتجها المحلي الإجمالي.\"", "db_id": "city_record"}
{"question": "What is the city with the smallest GDP? Return the city and its GDP.", "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1", "arabic": "\"أي مدينة لديها أعلى درجة حرارة في شهر فبراير؟\"", "db_id": "city_record"}
{"question": "Which city has the highest temperature in February?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1", "arabic": "\"في شهر فبراير، أي مدينة تسجل أعلى درجة حرارة؟\"", "db_id": "city_record"}
{"question": "In February, which city marks the highest temperature?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1", "arabic": "\"أعطني قائمة بالمدن التي درجة حرارتها في شهر مارس أقل من درجة حرارتها في يوليو أو أعلى من درجة حرارتها في أكتوبر؟\"", "db_id": "city_record"}
{"question": "Give me a list of cities whose temperature in March is lower than that in July or higher than that in Oct?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct", "arabic": "\"ما هي المدن التي درجة حرارتها في شهر مارس أقل من درجة حرارتها في يوليو أو أعلى من درجة حرارتها في أكتوبر؟\"", "db_id": "city_record"}
{"question": "Which cities' temperature in March is lower than that in July or higher than that in Oct?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct", "arabic": "\"أعطني قائمة بالمدن التي درجة حرارتها في مارس أقل من درجة حرارتها في يوليو والتي كانت أيضًا مدنًا مضيفة؟\"", "db_id": "city_record"}
{"question": "Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "arabic": "\"أي مدن تتمتع بدرجة حرارة أقل في شهر مارس منها في يوليو وكانت مدنًا مضيفة في وقت ما؟\"", "db_id": "city_record"}
{"question": "Which cities have lower temperature in March than in July and have been once host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "arabic": "\"أعطني قائمة بالمدن التي تكون درجة حرارتها في مارس أقل من درجتها في ديسمبر والتي لم تكن أبدًا مدنًا مضيفة.\"", "db_id": "city_record"}
{"question": "Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities.", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "arabic": "\"أي المدن تسجل درجات حرارة أقل في مارس منها في ديسمبر ولم تكون مدناً مضيفة أبدًا؟\"", "db_id": "city_record"}
{"question": "Which cities have lower temperature in March than in Dec and have never served as host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "arabic": "\"أعطني قائمة بالمدن التي درجة حرارتها في فبراير أعلى من تلك في يونيو أو المدن التي كانت مضيفة في وقت ما؟\"", "db_id": "city_record"}
{"question": "Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "arabic": "\"ما هي المدن التي تسجل درجات حرارة أعلى في فبراير منها في يونيو أو كانت مضيفة في وقت ما؟\"", "db_id": "city_record"}
{"question": "Which cities have higher temperature in Feb than in Jun or have once served as host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "arabic": "\"من فضلك، قدم لي قائمة بالمدن التي يبلغ تعداد سكانها الإقليمي أكثر من 10000000.\"", "db_id": "city_record"}
{"question": "Please give me a list of cities whose regional population is over 10000000.", "query": "SELECT city FROM city WHERE regional_population  >  10000000", "arabic": "\"ما هي المدن التي تمتلك تعداد سكان إقليمي يتجاوز 10000000؟\"", "db_id": "city_record"}
{"question": "Which cities have regional population above 10000000?", "query": "SELECT city FROM city WHERE regional_population  >  10000000", "arabic": "\"يرجى تقديم قائمة بالمدن التي يتجاوز تعداد سكانها الإقليمي 8000000 أو يقل عن 5000000.\"", "db_id": "city_record"}
{"question": "Please give me a list of cities whose regional population is over 8000000 or under 5000000.", "query": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000", "arabic": "\"ما هي المدن التي تتجاوز تعداد سكانها الإقليمي 8000000 أو تقل عن 5000000؟\"", "db_id": "city_record"}
{"question": "Which cities have regional population above 8000000 or below 5000000?", "query": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000", "arabic": "\"ابحث عن عدد المباريات في مختلف البطولات؟\"", "db_id": "city_record"}
{"question": "Find the number of matches in different competitions.", "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition", "arabic": "\"لكل مسابقة، قم بحساب عدد المباريات؟\"", "db_id": "city_record"}
{"question": "For each competition, count the number of matches.", "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition", "arabic": "\"قم بسرد أماكن جميع المباريات وفقًا لتواريخها ابتداءً من آخرها؟\"", "db_id": "city_record"}
{"question": "List venues of all matches in the order of their dates starting from the most recent one.", "query": "SELECT venue FROM MATCH ORDER BY date DESC", "arabic": "\"ما هي مواقع جميع المباريات؟ قم بفرزها ترتيباً تنازلياً حسب تاريخ المباراة.\"", "db_id": "city_record"}
{"question": "What are the venues of all the matches? Sort them in the descending order of match date.", "query": "SELECT venue FROM MATCH ORDER BY date DESC", "arabic": "\"ما هو الناتج المحلي الإجمالي للمدينة ذات أكبر تعداد سكان؟\"", "db_id": "city_record"}
{"question": "what is the GDP of the city with the largest population.", "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1", "arabic": "\"ابحث عن الناتج المحلي الإجمالي للمدينة ذات أكبر تعداد سكان إقليمي.\"", "db_id": "city_record"}
{"question": "Find the GDP of the city with the largest regional population.", "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1", "arabic": "\"ما هي الناتج المحلي الإجمالي والتعداد السكاني للمدينة التي خدمت بالفعل كمضيفة أكثر من مرة؟\"", "db_id": "city_record"}
{"question": "Which cities have served as host cities more than once? Return me their GDP and population.", "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1", "arabic": "\"اذكر اسم الشخص الأول والاسم الأوسط والاسم الأخير لكل فرد ترتيبها ترتيباً أبجدياً حسب الاسم الأخير.\"", "db_id": "city_record"}
{"question": "List every individual's first name, middle name and last name in alphabetical order by last name.", "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name", "arabic": "ما هي الأسماء الأولى والأوسط والأخيرة لجميع الأفراد، مرتبة حسب الاسم الأخير؟", "db_id": "e_government"}
{"question": "What are the first, middle, and last names of all individuals, ordered by last name?", "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name", "arabic": "ما هي جميع أنواع النماذج؟", "db_id": "e_government"}
{"question": "List all the types of forms.", "query": "SELECT DISTINCT form_type_code FROM forms", "arabic": "ما هي مختلف أنواع النماذج؟", "db_id": "e_government"}
{"question": "What are the different types of forms?", "query": "SELECT DISTINCT form_type_code FROM forms", "arabic": "ابحث عن اسم نموذج الحزب الأكثر شيوعاً.", "db_id": "e_government"}
{"question": "Find the name of the most popular party form.", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ما هو اسم نموذج الحزب الأكثر شيوعاً؟", "db_id": "e_government"}
{"question": "What is the name of the party form that is most common?", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "arabic": "ابحث عن وسيلة الدفع ورقم الهاتف للحزب الذي يحمل عنوان البريد الإلكتروني \"enrico09@example.com\".", "db_id": "e_government"}
{"question": "Find the payment method and phone of the party with email \"enrico09@example.com\".", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "arabic": "ما هو رمز وسيلة الدفع ورقم هاتف الحزب الذي يحمل عنوان البريد الإلكتروني 'enrico09@example.com'؟", "db_id": "e_government"}
{"question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "arabic": "ابحث عن عناوين البريد الإلكتروني للأحزاب التي تمتلك نموذج الحزب الأكثر شيوعًا.", "db_id": "e_government"}
{"question": "Find the emails of parties with the most popular party form.", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)", "arabic": "ما هي عناوين البريد الإلكتروني للأحزاب المرتبطة بنموذج الحزب الأكثر شيوعًا؟", "db_id": "e_government"}
{"question": "What are the party emails associated with parties that used the party form that is the most common?", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)", "arabic": "اذكر أسماء جميع الهيئات مرتبة حسب تاريخ التأسيس.", "db_id": "e_government"}
{"question": "List all the name of organizations in order of the date formed.", "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC", "arabic": "ما هي أسماء الهيئات، مرتبة حسب تاريخ تأسيسها بترتيب تصاعدي؟", "db_id": "e_government"}
{"question": "What are the names of organizations, ordered by the date they were formed, ascending?", "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC", "arabic": "ابحث عن اسم أصغر منظمة.", "db_id": "e_government"}
{"question": "Find the name of the youngest organization.", "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1", "arabic": "ما هو اسم الهيئة التي تم تأسيسها مؤخرًا بشكل أكبر؟", "db_id": "e_government"}
{"question": "What is the name of the organization that was formed most recently?", "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1", "arabic": "ابحث عن اسم العائلة لأحدث فرد اتصال للهيئة \"Labour Party\".", "db_id": "e_government"}
{"question": "Find the last name of the latest contact individual of the organization \"Labour Party\".", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1", "arabic": "ما هو اسم العائلة للشخص الذي تم الاتصال به مؤخرًا من هيئة \"Labour Party\"؟", "db_id": "e_government"}
{"question": "What is the last name of the contact individual from the Labour party organization who was contacted most recently?", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1", "arabic": "ابحث عن اسم العائلة لأول شخص اتصال على الإطلاق للهيئة ذات أعلى رقم ضريبة القيمة المضافة في المملكة المتحدة.", "db_id": "e_government"}
{"question": "Find the last name of the first ever contact person of the organization with the highest UK Vat number.", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1", "arabic": "ما هو اسم العائلة لأول فرد تم الاتصال به من الهيئة ذات أعلى رقم ضريبة القيمة المضافة في المملكة المتحدة بين جميع الهيئات؟", "db_id": "e_government"}
{"question": "What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations?", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1", "arabic": "كم عدد الخدمات؟", "db_id": "e_government"}
{"question": "How many services are there?", "query": "SELECT count(*) FROM services", "arabic": "عدد الخدمات هو كم؟", "db_id": "e_government"}
{"question": "Count the number of services.", "query": "SELECT count(*) FROM services", "arabic": "ابحث عن أسماء الخدمات التي لم يتم استخدامها أبدًا.", "db_id": "e_government"}
{"question": "Find name of the services that has never been used.", "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id", "arabic": "ما هي أسماء الخدمات التي لم يتم استخدامها أبدًا؟", "db_id": "e_government"}
{"question": "What are the names of the services that have never been used?", "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id", "arabic": "ابحث عن أسماء جميع المدن والولايات.", "db_id": "e_government"}
{"question": "Find the name of all the cities and states.", "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses", "arabic": "ما هي أسماء جميع المدن والولايات؟", "db_id": "e_government"}
{"question": "What are the names of all cities and states?", "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses", "arabic": "كم عدد المدن في ولاية \"كولورادو\"؟", "db_id": "e_government"}
{"question": "How many cities are there in state \"Colorado\"?", "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"", "arabic": "عدد المدن في ولاية كولورادو هو كم؟", "db_id": "e_government"}
{"question": "Count the number of cities in the state of Colorado.", "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"", "arabic": "\"البحث عن رمز طريقة الدفع المستخدمة من قبل أكثر من 3 أطراف.\"", "db_id": "e_government"}
{"question": "Find the payment method code used by more than 3 parties.", "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3", "arabic": "ما هي أكواد وسائل الدفع التي تم استخدامها من قبل أكثر من 3 أطراف؟", "db_id": "e_government"}
{"question": "What are the payment method codes that have been used by more than 3 parties?", "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3", "arabic": "\"البحث عن أسماء المؤسسات التي تحتوي على كلمة 'Party'.\"", "db_id": "e_government"}
{"question": "Find the name of organizations whose names contain \"Party\".", "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"", "arabic": "\"ما هي أسماء المؤسسات التي تحتوي على كلمة 'Party'؟\"", "db_id": "e_government"}
{"question": "What are the names of organizations that contain the word \"Party\"?", "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"", "arabic": "\"كم عدد وسائل الدفع المتميزة التي تستخدمها الأطراف؟\"", "db_id": "e_government"}
{"question": "How many distinct payment methods are used by parties?", "query": "SELECT count(DISTINCT payment_method_code) FROM parties", "arabic": "\"عدد أكواد وسائل الدفع المختلفة التي تم استخدامها من قبل الأطراف.\"", "db_id": "e_government"}
{"question": "Count the number of different payment method codes used by parties.", "query": "SELECT count(DISTINCT payment_method_code) FROM parties", "arabic": "\"ما هو البريد الإلكتروني للطرف الذي استخدم الخدمات أكبر عدد من المرات؟\"", "db_id": "e_government"}
{"question": "Which is the email of the party that has used the services the most number of times?", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "arabic": "\"إرجاع بريد الطرف الذي استخدم خدمات الطرف أكبر عدد من المرات.\"", "db_id": "e_government"}
{"question": "Return the party email that has used party services the greatest number of times.", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "arabic": "\"في أي ولاية قد تكون العنوان '6862 Kaitlyn Knolls'؟\"", "db_id": "e_government"}
{"question": "Which state can address \"6862 Kaitlyn Knolls\" possibly be in?", "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"", "arabic": "\"قدم الولاية المقابلة لرقم البناء في الخط '6862 Kaitlyn Knolls'.\"", "db_id": "e_government"}
{"question": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".", "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"", "arabic": "\"ما هو اسم المنظمة التي تحتوي على أكبر عدد من الأفراد الذين يمكن الاتصال بهم؟\"", "db_id": "e_government"}
{"question": "What is the name of organization that has the greatest number of contact individuals?", "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "arabic": "\"إرجاع اسم المنظمة التي تحتوي على أكبر عدد من الأفراد الذين يمكن الاتصال بهم.\"", "db_id": "e_government"}
{"question": "Return the name of the organization which has the most contact individuals.", "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "arabic": "\"البحث عن الأسماء الأخيرة للأفراد الذين كانوا أفراد اتصال لمنظمة ما.\"", "db_id": "e_government"}
{"question": "Find the last name of the individuals that have been contact individuals of an organization.", "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id", "arabic": "\"ما هي أسماء العائلة للأفراد الذين كانوا أفراد اتصال لمنظمة ما؟\"", "db_id": "e_government"}
{"question": "What are the last names of individuals who have been contact individuals for an organization?", "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id", "arabic": "\"كم عدد السائقين؟\"", "db_id": "e_government"}
{"question": "How many drivers are there?", "query": "SELECT count(*) FROM driver", "arabic": "\"أظهر الاسم ومدينة الإقامة والعمر لجميع السائقين.\"", "db_id": "school_bus"}
{"question": "Show the name, home city, and age for all drivers.", "query": "SELECT name ,  home_city ,  age FROM driver", "arabic": "\"أظهر الحزب وعدد السائقين في كل حزب.\"", "db_id": "school_bus"}
{"question": "Show the party and the number of drivers in each party.", "query": "SELECT party ,  count(*) FROM driver GROUP BY party", "arabic": "\"أظهر أسماء السائقين بترتيب تنازلي حسب العمر.\"", "db_id": "school_bus"}
{"question": "Show the name of drivers in descending order of age.", "query": "SELECT name FROM driver ORDER BY age DESC", "arabic": "\"أظهر جميع مدن الإقامة المختلفة.\"", "db_id": "school_bus"}
{"question": "Show all different home cities.", "query": "SELECT DISTINCT home_city FROM driver", "arabic": "\"أظهر مدينة الإقامة التي تحتوي على أكبر عدد من السائقين.\"", "db_id": "school_bus"}
{"question": "Show the home city with the most number of drivers.", "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1", "arabic": "\"أظهر الحزب الذي يحتوي على سائقين من هارتفورد وسائقين أكبر من 40 عامًا.\"", "db_id": "school_bus"}
{"question": "Show the party with drivers from Hartford and drivers older than 40.", "query": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40", "arabic": "\"أظهر مدينة الإقامة حيث يكون على الأقل سائقين اثنين أكبر من 40 عامًا.\"", "db_id": "school_bus"}
{"question": "Show home city where at least two drivers older than 40 are from.", "query": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2", "arabic": "\"أظهر جميع مدن الإقامة باستثناء تلك التي تحتوي على سائق أكبر من 40 عامًا.\"", "db_id": "school_bus"}
{"question": "Show all home cities except for those having a driver older than 40.", "query": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40", "arabic": "\"أظهر أسماء السائقين الذين ليسوا لديهم حافلة مدرسية.\"", "db_id": "school_bus"}
{"question": "Show the names of the drivers without a school bus.", "query": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)", "arabic": "\"أظهر أنواع المدارس التي تحتوي على مدرستين.\"", "db_id": "school_bus"}
{"question": "Show the types of schools that have two schools.", "query": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2", "arabic": "\"أظهر اسم المدرسة واسم السائق لجميع حافلات المدرسة.\"", "db_id": "school_bus"}
{"question": "Show the school name and driver name for all school buses.", "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id", "arabic": "\"ما هو الحد الأقصى والحد الأدنى والمتوسط ​​للسنوات التي قضاها السائقون يعملون على حافلة مدرسية؟\"", "db_id": "school_bus"}
{"question": "What is the maximum, minimum and average years spent working on a school bus?", "query": "SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus", "arabic": "\"أظهر اسم المدرسة ونوعها للمدارس التي لا تحتوي على حافلة مدرسية.\"", "db_id": "school_bus"}
{"question": "Show the school name and type for schools without a school bus.", "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)", "arabic": "\"أظهر نوع المدرسة وعدد الحافلات لكل نوع.\"", "db_id": "school_bus"}
{"question": "Show the type of school and the number of buses for each type.", "query": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type", "arabic": "\"كم عدد السائقين الذين هم من مدينة هارتفورد أو أصغر من 40 عامًا؟\"", "db_id": "school_bus"}
{"question": "How many drivers are from Hartford city or younger than 40?", "query": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40", "arabic": "\"قائمة أسماء السائقين الذين هم من مدينة هارتفورد وأصغر من 40 عامًا.\"", "db_id": "school_bus"}
{"question": "List names for drivers from Hartford city and younger than 40.", "query": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40", "arabic": "\"العثور على اسم السائق الذي يقود حافلة المدرسة ذات أطول تاريخ عمل.\"", "db_id": "school_bus"}
{"question": "find the name of driver who is driving the school bus with the longest working history.", "query": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1", "arabic": "\"كم عدد الرحلات التي لديها سرعة أكبر من 200؟\"", "db_id": "school_bus"}
{"question": "How many flights have a velocity larger than 200?", "query": "SELECT count(*) FROM flight WHERE velocity  >  200", "arabic": "\"قائمة برقم الرحلة للمركبة والتاريخ والطيار لجميع الرحلات، مرتبة حسب الارتفاع.\"", "db_id": "flight_company"}
{"question": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude.", "query": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC", "arabic": "\"قائمة بالمعرف، البلد، المدينة، والاسم للمطارات، مرتبة ترتيباً أبجدياً حسب الاسم.\"", "db_id": "flight_company"}
{"question": "List the id, country, city and name of the airports ordered alphabetically by the name.", "query": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name", "arabic": "\"ما هو الحد الأقصى لحصة حقوق الملكية المشتركة للشركات؟\"", "db_id": "flight_company"}
{"question": "What is maximum group equity shareholding of the companies?", "query": "SELECT max(group_equity_shareholding) FROM operate_company", "arabic": "\"ما هي سرعة الطيار المسمى 'Thompson'؟\"", "db_id": "flight_company"}
{"question": "What is the velocity of the pilot named 'Thompson'?", "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'", "arabic": "\"ما هي أسماء وأنواع الشركات التي قامت بتشغيل رحلة في أي وقت؟\"", "db_id": "flight_company"}
{"question": "What are the names and types of the companies that have ever operated a flight?", "query": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id", "arabic": "\"ما هي أسماء المطارات التي ليست في بلد 'آيسلندا'؟\"", "db_id": "flight_company"}
{"question": "What are the names of the airports which are not in the country 'Iceland'?", "query": "SELECT name FROM airport WHERE country != 'Iceland'", "arabic": "\"ما هي أنواع الشركات المتميزة التي قامت بتشغيل أي رحلات بسرعة أقل من 200؟\"", "db_id": "flight_company"}
{"question": "What are the distinct types of the companies that have operated any flights with velocity less than 200?", "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200", "arabic": "\"ما هي معرفات وأسماء الشركات التي قامت بتشغيل أكثر من رحلة واحدة؟\"", "db_id": "flight_company"}
{"question": "What are the ids and names of the companies that operated more than one flight?", "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1", "arabic": "\"ما هو معرف المطار واسمه ورمز IATA للمطار الذي كان لديه أكبر عدد من الرحلات؟\"", "db_id": "flight_company"}
{"question": "What is the id, name and IATA code of the airport that had most number of flights?", "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ما هي أسماء الطيارين المختلفين الذين قادوا رحلة في بلد 'الولايات المتحدة' أو في المطار المسمى 'مطار بيلوند'؟\"", "db_id": "flight_company"}
{"question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?", "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'", "arabic": "\"ما هو النوع الأكثر شيوعًا للشركة، وكم عددها؟\"", "db_id": "flight_company"}
{"question": "What is the most common company type, and how many are there?", "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "arabic": "\"كم عدد المطارات التي لم يقم الطيار 'تومبسون' بقيادة طائرة فيها؟\"", "db_id": "flight_company"}
{"question": "How many airports haven't the pilot 'Thompson' driven an aircraft?", "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );", "arabic": "\"قائمة باسماء الطيارين الذين قادوا طائرة لكل من الشركة التي تقدم أساسًا خدمات 'الشحن' والشركة التي تقوم بأنشطة 'خدمات التموين'.\"", "db_id": "flight_company"}
{"question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.", "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'", "arabic": "\"أي من أسماء المطارات يحتوي على كلمة 'دولي'؟\"", "db_id": "flight_company"}
{"question": "Which of the airport names contains the word 'international'?", "query": "SELECT name FROM airport WHERE name LIKE '%international%'", "arabic": "\"كم عدد الشركات التي تدير شركات طيران في كل مطار؟\"", "db_id": "flight_company"}
{"question": "How many companies operates airlines in each airport?", "query": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id", "arabic": "\"كم عدد المطارات في كل بلد؟\"", "db_id": "flight_company"}
{"question": "how many airports are there in each country?", "query": "SELECT count(*) ,  country FROM airport GROUP BY country", "arabic": "\"ما هي الدول التي تمتلك أكثر من مطارين؟\"", "db_id": "flight_company"}
{"question": "which countries have more than 2 airports?", "query": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2", "arabic": "\"أي طيّار مسؤول عن أكبر عدد من الرحلات؟\"", "db_id": "flight_company"}
{"question": "which pilot is in charge of the most number of flights?", "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1", "arabic": "\"كم حساب لدينا؟\"", "db_id": "flight_company"}
{"question": "How many accounts do we have?", "query": "SELECT count(*) FROM Accounts", "arabic": "\"عدد الحسابات؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Count the number of accounts.", "query": "SELECT count(*) FROM Accounts", "arabic": "\"عرض جميع معرفات الحساب وتفاصيل الحساب.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Show all account ids and account details.", "query": "SELECT account_id ,  account_details FROM Accounts", "arabic": "\"ما هي معرفات وتفاصيل جميع الحسابات؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "What are the ids and details of all accounts?", "query": "SELECT account_id ,  account_details FROM Accounts", "arabic": "\"كم عدد البيانات التي لدينا؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "How many statements do we have?", "query": "SELECT count(*) FROM Statements", "arabic": "\"عدد البيانات.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Count the number of statements.", "query": "SELECT count(*) FROM Statements", "arabic": "\"استعرض جميع هويات البيانات وتفاصيلها.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "List all statement ids and statement details.", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements", "arabic": "\"ما هي هويات وتفاصيل جميع البيانات؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "What are the ids and details of all statements?", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements", "arabic": "\"عرض هوية البيانات، تفاصيل البيانات، وتفاصيل الحساب للحسابات.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Show statement id, statement detail, account detail for accounts.", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id", "arabic": "\"ما هي هويات البيانات، تفاصيل البيانات، وتفاصيل الحساب لجميع الحسابات؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "What are the statement ids, statement details, and account details, for all accounts?", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id", "arabic": "\"أظهر كل هوية بيان وعدد الحسابات لكل بيان.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Show all statement id and the number of accounts for each statement.", "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID", "arabic": "\"ما هي هويات البيان المختلفة على الحسابات وعدد الحسابات لكل منها؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "What are the different statement ids on accounts, and the number of accounts for each?", "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID", "arabic": "\"عرض هوية البيان وتفاصيل البيان للبيان الذي يحتوي على أكبر عدد من الحسابات.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Show the statement id and the statement detail for the statement with most number of accounts.", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"ما هي هوية البيان وتفصيل البيان للبيان الذي يحتوي على أكبر عدد من الحسابات المقابلة؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1", "arabic": "\"أظهر عدد الوثائق.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Show the number of documents.", "query": "SELECT count(*) FROM Documents", "arabic": "\"عدد الوثائق.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Count the number of documents.", "query": "SELECT count(*) FROM Documents", "arabic": "\"اعرض رمز نوع المستند واسم المستند ووصف المستند للمستند ذو الاسم 'Noel CV' أو الاسم 'King Book'.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'.", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'", "arabic": "\"ما هي رمز نوع المستند، واسم المستند، ووصف المستند الذي يحمل إما اسم 'Noel CV' أو 'King Book'؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'", "arabic": "\"أظهر معرفات وأسماء جميع المستندات؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Show the ids and names of all documents.", "query": "SELECT document_id ,  document_name FROM Documents", "arabic": "\"ما هي معرفات وأسماء كل من المستندات؟\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "What are the ids and names for each of the documents?", "query": "SELECT document_id ,  document_name FROM Documents", "arabic": "\"ابحث عن أسماء ومعرفات جميع المستندات ذات رمز نوع المستند BK.\"", "db_id": "cre_Docs_and_Epenses"}
{"question": "Find names and ids of all documents with document type code BK.", "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"", "arabic": "\"ما هي أسماء ومعرفات المستندات التي تحمل رمز نوع المستند BK؟\"", "db_id": "cre_Docs_and_Epenses"}
